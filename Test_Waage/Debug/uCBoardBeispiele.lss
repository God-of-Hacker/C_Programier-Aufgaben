
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000134  00800200  000010ce  00001162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800334  00800334  00001296  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001296  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00001334  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000244e  00000000  00000000  0000151c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f72  00000000  00000000  0000396a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001493  00000000  00000000  000048dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000724  00000000  00000000  00005d70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ccc  00000000  00000000  00006494  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001caf  00000000  00000000  00007160  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008e0f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	be c4       	rjmp	.+2428   	; 0x9da <__vector_23>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee ec       	ldi	r30, 0xCE	; 206
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 33       	cpi	r26, 0x34	; 52
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a4 e3       	ldi	r26, 0x34	; 52
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 3b       	cpi	r26, 0xB2	; 178
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	02 d0       	rcall	.+4      	; 0x124 <main>
     120:	d4 c7       	rjmp	.+4008   	; 0x10ca <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    uint32_t eingangSpannung_mv = 0;
    uint32_t gewicht=0;
    uint32_t faktor =0;

    //Initialisieren
    initBoard(1);
     124:	81 e0       	ldi	r24, 0x01	; 1
     126:	d6 d2       	rcall	.+1452   	; 0x6d4 <initBoard>
             lcdWriteText(2,0,"Gegenstand: Unbekannt    ");
         }
         
         
        //Ausgabe------------------------------------------------------------------
        lcdWriteText(0,0,"DMS-Waage  V1.0  FR");
     128:	02 e9       	ldi	r16, 0x92	; 146
     12a:	12 e0       	ldi	r17, 0x02	; 2
        lcdWriteText(1,0,"Masse =  %04u g   ", gewicht);
     12c:	c6 ea       	ldi	r28, 0xA6	; 166
     12e:	d2 e0       	ldi	r29, 0x02	; 2
        
        rgbWrite(0,0,0);
        lcdWriteText(3,0,"Eingang: %04u ", eingangSpannung_mv);
     130:	0f 2e       	mov	r0, r31
     132:	f9 eb       	ldi	r31, 0xB9	; 185
     134:	2f 2e       	mov	r2, r31
     136:	f2 e0       	ldi	r31, 0x02	; 2
     138:	3f 2e       	mov	r3, r31
     13a:	f0 2d       	mov	r31, r0
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        eingangSpannung_mv = (uint32_t)adcRead(ADC_00_X4_PORTF_BIT0) * 5000 / 1023 - 450; // Eingang Speisung Extern
     13c:	80 e0       	ldi	r24, 0x00	; 0
     13e:	67 d1       	rcall	.+718    	; 0x40e <adcRead>
     140:	9c 01       	movw	r18, r24
     142:	a8 e8       	ldi	r26, 0x88	; 136
     144:	b3 e1       	ldi	r27, 0x13	; 19
     146:	b7 d4       	rcall	.+2414   	; 0xab6 <__umulhisi3>
     148:	2f ef       	ldi	r18, 0xFF	; 255
     14a:	33 e0       	ldi	r19, 0x03	; 3
     14c:	40 e0       	ldi	r20, 0x00	; 0
     14e:	50 e0       	ldi	r21, 0x00	; 0
     150:	90 d4       	rcall	.+2336   	; 0xa72 <__udivmodsi4>
     152:	49 01       	movw	r8, r18
     154:	5a 01       	movw	r10, r20
     156:	69 01       	movw	r12, r18
     158:	7a 01       	movw	r14, r20
     15a:	22 ec       	ldi	r18, 0xC2	; 194
     15c:	c2 1a       	sub	r12, r18
     15e:	21 e0       	ldi	r18, 0x01	; 1
     160:	d2 0a       	sbc	r13, r18
     162:	e1 08       	sbc	r14, r1
     164:	f1 08       	sbc	r15, r1
        gewicht = eingangSpannung_mv * 353 / 3300;
     166:	a1 e6       	ldi	r26, 0x61	; 97
     168:	b1 e0       	ldi	r27, 0x01	; 1
     16a:	a7 01       	movw	r20, r14
     16c:	96 01       	movw	r18, r12
     16e:	b2 d4       	rcall	.+2404   	; 0xad4 <__muluhisi3>
     170:	24 ee       	ldi	r18, 0xE4	; 228
     172:	3c e0       	ldi	r19, 0x0C	; 12
     174:	40 e0       	ldi	r20, 0x00	; 0
     176:	50 e0       	ldi	r21, 0x00	; 0
     178:	7c d4       	rcall	.+2296   	; 0xa72 <__udivmodsi4>
     17a:	72 2e       	mov	r7, r18
     17c:	63 2e       	mov	r6, r19
     17e:	54 2e       	mov	r5, r20
     180:	45 2e       	mov	r4, r21
        //Verarbeitung-------------------------------------------------------------
        if (eingangSpannung_mv <=START_HI)
     182:	8d e8       	ldi	r24, 0x8D	; 141
     184:	c8 16       	cp	r12, r24
     186:	d1 04       	cpc	r13, r1
     188:	e1 04       	cpc	r14, r1
     18a:	f1 04       	cpc	r15, r1
     18c:	a0 f4       	brcc	.+40     	; 0x1b6 <main+0x92>
        {
            rgbWrite(0,0,0);
     18e:	40 e0       	ldi	r20, 0x00	; 0
     190:	50 e0       	ldi	r21, 0x00	; 0
     192:	60 e0       	ldi	r22, 0x00	; 0
     194:	70 e0       	ldi	r23, 0x00	; 0
     196:	80 e0       	ldi	r24, 0x00	; 0
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	6e d1       	rcall	.+732    	; 0x478 <rgbWrite>
            lcdWriteText(2,0,"Gegenstand: leer     ");
     19c:	88 e0       	ldi	r24, 0x08	; 8
     19e:	92 e0       	ldi	r25, 0x02	; 2
     1a0:	9f 93       	push	r25
     1a2:	8f 93       	push	r24
     1a4:	1f 92       	push	r1
     1a6:	82 e0       	ldi	r24, 0x02	; 2
     1a8:	8f 93       	push	r24
     1aa:	20 d2       	rcall	.+1088   	; 0x5ec <lcdWriteText>
     1ac:	0f 90       	pop	r0
     1ae:	0f 90       	pop	r0
     1b0:	0f 90       	pop	r0
     1b2:	0f 90       	pop	r0
     1b4:	d5 c0       	rjmp	.+426    	; 0x360 <main+0x23c>
        }
        else if (eingangSpannung_mv < START_LO)
     1b6:	94 e6       	ldi	r25, 0x64	; 100
     1b8:	c9 16       	cp	r12, r25
     1ba:	d1 04       	cpc	r13, r1
     1bc:	e1 04       	cpc	r14, r1
     1be:	f1 04       	cpc	r15, r1
        {
            rgbWrite(250,0,0);
     1c0:	a0 f4       	brcc	.+40     	; 0x1ea <main+0xc6>
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	60 e0       	ldi	r22, 0x00	; 0
     1c8:	70 e0       	ldi	r23, 0x00	; 0
     1ca:	8a ef       	ldi	r24, 0xFA	; 250
     1cc:	90 e0       	ldi	r25, 0x00	; 0
            lcdWriteText(2,0,"Gegenstand: Unbekannt    ");
     1ce:	54 d1       	rcall	.+680    	; 0x478 <rgbWrite>
     1d0:	8e e1       	ldi	r24, 0x1E	; 30
     1d2:	92 e0       	ldi	r25, 0x02	; 2
     1d4:	9f 93       	push	r25
     1d6:	8f 93       	push	r24
     1d8:	1f 92       	push	r1
     1da:	82 e0       	ldi	r24, 0x02	; 2
     1dc:	8f 93       	push	r24
     1de:	06 d2       	rcall	.+1036   	; 0x5ec <lcdWriteText>
     1e0:	0f 90       	pop	r0
     1e2:	0f 90       	pop	r0
     1e4:	0f 90       	pop	r0
     1e6:	0f 90       	pop	r0
     1e8:	bb c0       	rjmp	.+374    	; 0x360 <main+0x23c>
        }
        
        else if ((eingangSpannung_mv >= STABILO_LO) && (eingangSpannung_mv <= STABILO_HI))
     1ea:	d5 01       	movw	r26, r10
     1ec:	c4 01       	movw	r24, r8
     1ee:	88 55       	subi	r24, 0x58	; 88
     1f0:	92 40       	sbci	r25, 0x02	; 2
     1f2:	a1 09       	sbc	r26, r1
     1f4:	b1 09       	sbc	r27, r1
     1f6:	84 97       	sbiw	r24, 0x24	; 36
     1f8:	a1 05       	cpc	r26, r1
     1fa:	b1 05       	cpc	r27, r1
        {
            rgbWrite(0,0,250);
     1fc:	a0 f4       	brcc	.+40     	; 0x226 <main+0x102>
     1fe:	4a ef       	ldi	r20, 0xFA	; 250
     200:	50 e0       	ldi	r21, 0x00	; 0
     202:	60 e0       	ldi	r22, 0x00	; 0
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
            lcdWriteText(2,0,"Gegenstand: Stabilo   ");
     20a:	36 d1       	rcall	.+620    	; 0x478 <rgbWrite>
     20c:	88 e3       	ldi	r24, 0x38	; 56
     20e:	92 e0       	ldi	r25, 0x02	; 2
     210:	9f 93       	push	r25
     212:	8f 93       	push	r24
     214:	1f 92       	push	r1
     216:	82 e0       	ldi	r24, 0x02	; 2
     218:	8f 93       	push	r24
     21a:	e8 d1       	rcall	.+976    	; 0x5ec <lcdWriteText>
     21c:	0f 90       	pop	r0
     21e:	0f 90       	pop	r0
     220:	0f 90       	pop	r0
     222:	0f 90       	pop	r0
     224:	9d c0       	rjmp	.+314    	; 0x360 <main+0x23c>
        }
        else if ((eingangSpannung_mv >= UNBEKANNT_LO) && (eingangSpannung_mv <= UNBEKANNT_HI))
     226:	d5 01       	movw	r26, r10
     228:	c4 01       	movw	r24, r8
     22a:	8a 58       	subi	r24, 0x8A	; 138
     22c:	92 40       	sbci	r25, 0x02	; 2
     22e:	a1 09       	sbc	r26, r1
     230:	b1 09       	sbc	r27, r1
     232:	8b 38       	cpi	r24, 0x8B	; 139
     234:	92 40       	sbci	r25, 0x02	; 2
     236:	a1 05       	cpc	r26, r1
     238:	b1 05       	cpc	r27, r1
        {
            rgbWrite(250,0,0);
     23a:	40 f4       	brcc	.+16     	; 0x24c <main+0x128>
     23c:	40 e0       	ldi	r20, 0x00	; 0
     23e:	50 e0       	ldi	r21, 0x00	; 0
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	8a ef       	ldi	r24, 0xFA	; 250
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	17 d1       	rcall	.+558    	; 0x478 <rgbWrite>
     24a:	8a c0       	rjmp	.+276    	; 0x360 <main+0x23c>
        }        
        else if ((eingangSpannung_mv >= MAUS_LO) && (eingangSpannung_mv <= MAUS_HI))
     24c:	d5 01       	movw	r26, r10
     24e:	c4 01       	movw	r24, r8
     250:	88 57       	subi	r24, 0x78	; 120
     252:	95 40       	sbci	r25, 0x05	; 5
     254:	a1 09       	sbc	r26, r1
     256:	b1 09       	sbc	r27, r1
     258:	c3 97       	sbiw	r24, 0x33	; 51
     25a:	a1 05       	cpc	r26, r1
     25c:	b1 05       	cpc	r27, r1
        {
            rgbWrite(0,0,250);
     25e:	a0 f4       	brcc	.+40     	; 0x288 <main+0x164>
     260:	4a ef       	ldi	r20, 0xFA	; 250
     262:	50 e0       	ldi	r21, 0x00	; 0
     264:	60 e0       	ldi	r22, 0x00	; 0
     266:	70 e0       	ldi	r23, 0x00	; 0
     268:	80 e0       	ldi	r24, 0x00	; 0
     26a:	90 e0       	ldi	r25, 0x00	; 0
            lcdWriteText(2,0,"Gegenstand: Maus     ");
     26c:	05 d1       	rcall	.+522    	; 0x478 <rgbWrite>
     26e:	8f e4       	ldi	r24, 0x4F	; 79
     270:	92 e0       	ldi	r25, 0x02	; 2
     272:	9f 93       	push	r25
     274:	8f 93       	push	r24
     276:	1f 92       	push	r1
     278:	82 e0       	ldi	r24, 0x02	; 2
     27a:	8f 93       	push	r24
     27c:	b7 d1       	rcall	.+878    	; 0x5ec <lcdWriteText>
     27e:	0f 90       	pop	r0
     280:	0f 90       	pop	r0
     282:	0f 90       	pop	r0
     284:	0f 90       	pop	r0
     286:	6c c0       	rjmp	.+216    	; 0x360 <main+0x23c>
        }
        else if ((eingangSpannung_mv >= UNBEKANNT_1_LO) && (eingangSpannung_mv <= UNBEKANNT_1_HI))
     288:	d5 01       	movw	r26, r10
     28a:	c4 01       	movw	r24, r8
     28c:	8e 50       	subi	r24, 0x0E	; 14
     28e:	96 40       	sbci	r25, 0x06	; 6
     290:	a1 09       	sbc	r26, r1
     292:	b1 09       	sbc	r27, r1
     294:	81 32       	cpi	r24, 0x21	; 33
     296:	93 40       	sbci	r25, 0x03	; 3
     298:	a1 05       	cpc	r26, r1
     29a:	b1 05       	cpc	r27, r1
        {
            rgbWrite(250,0,0);
     29c:	40 f4       	brcc	.+16     	; 0x2ae <main+0x18a>
     29e:	40 e0       	ldi	r20, 0x00	; 0
     2a0:	50 e0       	ldi	r21, 0x00	; 0
     2a2:	60 e0       	ldi	r22, 0x00	; 0
     2a4:	70 e0       	ldi	r23, 0x00	; 0
     2a6:	8a ef       	ldi	r24, 0xFA	; 250
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	e6 d0       	rcall	.+460    	; 0x478 <rgbWrite>
     2ac:	59 c0       	rjmp	.+178    	; 0x360 <main+0x23c>
        }
        else if ((eingangSpannung_mv >= HANDY_LO) && (eingangSpannung_mv <= HANDY_HI))
     2ae:	d5 01       	movw	r26, r10
     2b0:	c4 01       	movw	r24, r8
     2b2:	8e 5b       	subi	r24, 0xBE	; 190
     2b4:	9a 40       	sbci	r25, 0x0A	; 10
     2b6:	a1 09       	sbc	r26, r1
     2b8:	b1 09       	sbc	r27, r1
     2ba:	8d 3b       	cpi	r24, 0xBD	; 189
     2bc:	92 40       	sbci	r25, 0x02	; 2
     2be:	a1 05       	cpc	r26, r1
        {
            rgbWrite(0,0,250);
     2c0:	b1 05       	cpc	r27, r1
     2c2:	a0 f4       	brcc	.+40     	; 0x2ec <main+0x1c8>
     2c4:	4a ef       	ldi	r20, 0xFA	; 250
     2c6:	50 e0       	ldi	r21, 0x00	; 0
     2c8:	60 e0       	ldi	r22, 0x00	; 0
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	80 e0       	ldi	r24, 0x00	; 0
     2ce:	90 e0       	ldi	r25, 0x00	; 0
            lcdWriteText(2,0,"Gegenstand: Handy    ");
     2d0:	d3 d0       	rcall	.+422    	; 0x478 <rgbWrite>
     2d2:	85 e6       	ldi	r24, 0x65	; 101
     2d4:	92 e0       	ldi	r25, 0x02	; 2
     2d6:	9f 93       	push	r25
     2d8:	8f 93       	push	r24
     2da:	1f 92       	push	r1
     2dc:	82 e0       	ldi	r24, 0x02	; 2
     2de:	8f 93       	push	r24
     2e0:	85 d1       	rcall	.+778    	; 0x5ec <lcdWriteText>
     2e2:	0f 90       	pop	r0
     2e4:	0f 90       	pop	r0
     2e6:	0f 90       	pop	r0
     2e8:	0f 90       	pop	r0
     2ea:	3a c0       	rjmp	.+116    	; 0x360 <main+0x23c>
        }
         else if ((eingangSpannung_mv >= EISEN_LO) && (eingangSpannung_mv <= EISEN_HI))
     2ec:	92 e4       	ldi	r25, 0x42	; 66
     2ee:	89 1a       	sub	r8, r25
     2f0:	9e e0       	ldi	r25, 0x0E	; 14
     2f2:	99 0a       	sbc	r9, r25
     2f4:	a1 08       	sbc	r10, r1
     2f6:	b1 08       	sbc	r11, r1
     2f8:	29 ec       	ldi	r18, 0xC9	; 201
     2fa:	82 16       	cp	r8, r18
     2fc:	91 04       	cpc	r9, r1
     2fe:	a1 04       	cpc	r10, r1
        {
            rgbWrite(0,0,250);            
     300:	b1 04       	cpc	r11, r1
     302:	a0 f4       	brcc	.+40     	; 0x32c <main+0x208>
     304:	4a ef       	ldi	r20, 0xFA	; 250
     306:	50 e0       	ldi	r21, 0x00	; 0
     308:	60 e0       	ldi	r22, 0x00	; 0
     30a:	70 e0       	ldi	r23, 0x00	; 0
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	90 e0       	ldi	r25, 0x00	; 0
            lcdWriteText(2,0,"Gegenstand: Eisen     ");
     310:	b3 d0       	rcall	.+358    	; 0x478 <rgbWrite>
     312:	8b e7       	ldi	r24, 0x7B	; 123
     314:	92 e0       	ldi	r25, 0x02	; 2
     316:	9f 93       	push	r25
     318:	8f 93       	push	r24
     31a:	1f 92       	push	r1
     31c:	82 e0       	ldi	r24, 0x02	; 2
     31e:	8f 93       	push	r24
     320:	65 d1       	rcall	.+714    	; 0x5ec <lcdWriteText>
     322:	0f 90       	pop	r0
     324:	0f 90       	pop	r0
     326:	0f 90       	pop	r0
     328:	0f 90       	pop	r0
        }
         else if (eingangSpannung_mv > UNBEKANNT)
     32a:	1a c0       	rjmp	.+52     	; 0x360 <main+0x23c>
     32c:	9d ea       	ldi	r25, 0xAD	; 173
     32e:	c9 16       	cp	r12, r25
     330:	9d e0       	ldi	r25, 0x0D	; 13
     332:	d9 06       	cpc	r13, r25
     334:	e1 04       	cpc	r14, r1
         {
             rgbWrite(250,0,0);
     336:	f1 04       	cpc	r15, r1
     338:	98 f0       	brcs	.+38     	; 0x360 <main+0x23c>
     33a:	40 e0       	ldi	r20, 0x00	; 0
     33c:	50 e0       	ldi	r21, 0x00	; 0
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	8a ef       	ldi	r24, 0xFA	; 250
             lcdWriteText(2,0,"Gegenstand: Unbekannt    ");
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	98 d0       	rcall	.+304    	; 0x478 <rgbWrite>
     348:	8e e1       	ldi	r24, 0x1E	; 30
     34a:	92 e0       	ldi	r25, 0x02	; 2
     34c:	9f 93       	push	r25
     34e:	8f 93       	push	r24
     350:	1f 92       	push	r1
     352:	82 e0       	ldi	r24, 0x02	; 2
     354:	8f 93       	push	r24
     356:	4a d1       	rcall	.+660    	; 0x5ec <lcdWriteText>
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
         }
         
         
        //Ausgabe------------------------------------------------------------------
        lcdWriteText(0,0,"DMS-Waage  V1.0  FR");
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	1f 93       	push	r17
     362:	0f 93       	push	r16
     364:	1f 92       	push	r1
     366:	1f 92       	push	r1
        lcdWriteText(1,0,"Masse =  %04u g   ", gewicht);
     368:	41 d1       	rcall	.+642    	; 0x5ec <lcdWriteText>
     36a:	4f 92       	push	r4
     36c:	5f 92       	push	r5
     36e:	6f 92       	push	r6
     370:	7f 92       	push	r7
     372:	df 93       	push	r29
     374:	cf 93       	push	r28
     376:	1f 92       	push	r1
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	8f 93       	push	r24
        
        rgbWrite(0,0,0);
     37c:	37 d1       	rcall	.+622    	; 0x5ec <lcdWriteText>
     37e:	40 e0       	ldi	r20, 0x00	; 0
     380:	50 e0       	ldi	r21, 0x00	; 0
     382:	60 e0       	ldi	r22, 0x00	; 0
     384:	70 e0       	ldi	r23, 0x00	; 0
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	76 d0       	rcall	.+236    	; 0x478 <rgbWrite>
        lcdWriteText(3,0,"Eingang: %04u ", eingangSpannung_mv);
     38c:	ff 92       	push	r15
     38e:	ef 92       	push	r14
     390:	df 92       	push	r13
     392:	cf 92       	push	r12
     394:	3f 92       	push	r3
     396:	2f 92       	push	r2
     398:	1f 92       	push	r1
     39a:	83 e0       	ldi	r24, 0x03	; 3
     39c:	8f 93       	push	r24
     39e:	26 d1       	rcall	.+588    	; 0x5ec <lcdWriteText>
     3a0:	8d b7       	in	r24, 0x3d	; 61
    }
     3a2:	9e b7       	in	r25, 0x3e	; 62
     3a4:	44 96       	adiw	r24, 0x14	; 20
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	9e bf       	out	0x3e, r25	; 62
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	8d bf       	out	0x3d, r24	; 61
     3b0:	c5 ce       	rjmp	.-630    	; 0x13c <main+0x18>

000003b2 <ledWriteAll>:
     3b2:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     3b4:	95 b9       	out	0x05, r25	; 5
     3b6:	08 95       	ret

000003b8 <startSystemTimeMs>:
     3b8:	83 e0       	ldi	r24, 0x03	; 3
     3ba:	84 bd       	out	0x24, r24	; 36
     3bc:	8b e0       	ldi	r24, 0x0B	; 11
     3be:	85 bd       	out	0x25, r24	; 37
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     3c6:	89 ef       	ldi	r24, 0xF9	; 249
     3c8:	87 bd       	out	0x27, r24	; 39
     3ca:	08 95       	ret

000003cc <initAdc>:
     3cc:	11 ba       	out	0x11, r1	; 17
     3ce:	10 ba       	out	0x10, r1	; 16
     3d0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     3d4:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     3d8:	80 e4       	ldi	r24, 0x40	; 64
     3da:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     3de:	8f e0       	ldi	r24, 0x0F	; 15
     3e0:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     3e4:	8f ef       	ldi	r24, 0xFF	; 255
     3e6:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     3ea:	ea e7       	ldi	r30, 0x7A	; 122
     3ec:	f0 e0       	ldi	r31, 0x00	; 0
     3ee:	87 ea       	ldi	r24, 0xA7	; 167
     3f0:	80 83       	st	Z, r24
     3f2:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     3f6:	80 81       	ld	r24, Z
     3f8:	80 64       	ori	r24, 0x40	; 64
     3fa:	80 83       	st	Z, r24
     3fc:	80 81       	ld	r24, Z
     3fe:	84 ff       	sbrs	r24, 4
     400:	fd cf       	rjmp	.-6      	; 0x3fc <initAdc+0x30>
     402:	ea e7       	ldi	r30, 0x7A	; 122
     404:	f0 e0       	ldi	r31, 0x00	; 0
     406:	80 81       	ld	r24, Z
     408:	8f 7e       	andi	r24, 0xEF	; 239
     40a:	80 83       	st	Z, r24
     40c:	08 95       	ret

0000040e <adcRead>:
     40e:	90 e4       	ldi	r25, 0x40	; 64
     410:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     414:	88 30       	cpi	r24, 0x08	; 8
     416:	60 f0       	brcs	.+24     	; 0x430 <adcRead+0x22>
     418:	ec e7       	ldi	r30, 0x7C	; 124
     41a:	f0 e0       	ldi	r31, 0x00	; 0
     41c:	90 81       	ld	r25, Z
     41e:	88 50       	subi	r24, 0x08	; 8
     420:	89 2b       	or	r24, r25
     422:	80 83       	st	Z, r24
     424:	eb e7       	ldi	r30, 0x7B	; 123
     426:	f0 e0       	ldi	r31, 0x00	; 0
     428:	80 81       	ld	r24, Z
     42a:	88 61       	ori	r24, 0x18	; 24
     42c:	80 83       	st	Z, r24
     42e:	0a c0       	rjmp	.+20     	; 0x444 <adcRead+0x36>
     430:	ec e7       	ldi	r30, 0x7C	; 124
     432:	f0 e0       	ldi	r31, 0x00	; 0
     434:	90 81       	ld	r25, Z
     436:	89 2b       	or	r24, r25
     438:	80 83       	st	Z, r24
     43a:	eb e7       	ldi	r30, 0x7B	; 123
     43c:	f0 e0       	ldi	r31, 0x00	; 0
     43e:	80 81       	ld	r24, Z
     440:	87 7e       	andi	r24, 0xE7	; 231
     442:	80 83       	st	Z, r24
     444:	ea e7       	ldi	r30, 0x7A	; 122
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	80 81       	ld	r24, Z
     44a:	80 64       	ori	r24, 0x40	; 64
     44c:	80 83       	st	Z, r24
     44e:	80 81       	ld	r24, Z
     450:	84 ff       	sbrs	r24, 4
     452:	fd cf       	rjmp	.-6      	; 0x44e <adcRead+0x40>
     454:	8f ea       	ldi	r24, 0xAF	; 175
     456:	94 e0       	ldi	r25, 0x04	; 4
     458:	01 97       	sbiw	r24, 0x01	; 1
     45a:	f1 f7       	brne	.-4      	; 0x458 <adcRead+0x4a>
     45c:	00 c0       	rjmp	.+0      	; 0x45e <adcRead+0x50>
     45e:	00 00       	nop
     460:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     464:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     468:	ea e7       	ldi	r30, 0x7A	; 122
     46a:	f0 e0       	ldi	r31, 0x00	; 0
     46c:	90 81       	ld	r25, Z
     46e:	9f 7e       	andi	r25, 0xEF	; 239
     470:	90 83       	st	Z, r25
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	92 2b       	or	r25, r18
     476:	08 95       	ret

00000478 <rgbWrite>:
     478:	2f ef       	ldi	r18, 0xFF	; 255
     47a:	33 e0       	ldi	r19, 0x03	; 3
     47c:	f9 01       	movw	r30, r18
     47e:	e8 1b       	sub	r30, r24
     480:	f9 0b       	sbc	r31, r25
     482:	c9 01       	movw	r24, r18
     484:	86 1b       	sub	r24, r22
     486:	97 0b       	sbc	r25, r23
     488:	24 1b       	sub	r18, r20
     48a:	35 0b       	sbc	r19, r21
     48c:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     490:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     494:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     498:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     49c:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     4a0:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     4a4:	08 95       	ret

000004a6 <initRgb>:
     4a6:	8e ef       	ldi	r24, 0xFE	; 254
     4a8:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     4ac:	8b e1       	ldi	r24, 0x1B	; 27
     4ae:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     4b2:	83 e0       	ldi	r24, 0x03	; 3
     4b4:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     4b8:	8f ef       	ldi	r24, 0xFF	; 255
     4ba:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     4be:	40 e0       	ldi	r20, 0x00	; 0
     4c0:	50 e0       	ldi	r21, 0x00	; 0
     4c2:	60 e0       	ldi	r22, 0x00	; 0
     4c4:	70 e0       	ldi	r23, 0x00	; 0
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	d6 cf       	rjmp	.-84     	; 0x478 <rgbWrite>
     4cc:	08 95       	ret

000004ce <lcdSid>:
     4ce:	88 23       	and	r24, r24
     4d0:	11 f0       	breq	.+4      	; 0x4d6 <lcdSid+0x8>
     4d2:	a0 9a       	sbi	0x14, 0	; 20
     4d4:	08 95       	ret
     4d6:	a0 98       	cbi	0x14, 0	; 20
     4d8:	08 95       	ret

000004da <lcdSclk>:
     4da:	88 23       	and	r24, r24
     4dc:	11 f0       	breq	.+4      	; 0x4e2 <lcdSclk+0x8>
     4de:	a1 9a       	sbi	0x14, 1	; 20
     4e0:	08 95       	ret
     4e2:	a1 98       	cbi	0x14, 1	; 20
     4e4:	08 95       	ret

000004e6 <lcdLight>:
     4e6:	81 11       	cpse	r24, r1
     4e8:	04 c0       	rjmp	.+8      	; 0x4f2 <lcdLight+0xc>
     4ea:	84 b5       	in	r24, 0x24	; 36
     4ec:	8f 7d       	andi	r24, 0xDF	; 223
     4ee:	84 bd       	out	0x24, r24	; 36
     4f0:	08 95       	ret
     4f2:	94 b5       	in	r25, 0x24	; 36
     4f4:	90 62       	ori	r25, 0x20	; 32
     4f6:	94 bd       	out	0x24, r25	; 36
     4f8:	88 bd       	out	0x28, r24	; 40
     4fa:	08 95       	ret

000004fc <writeLcdF>:
     4fc:	ef 92       	push	r14
     4fe:	ff 92       	push	r15
     500:	0f 93       	push	r16
     502:	1f 93       	push	r17
     504:	cf 93       	push	r28
     506:	df 93       	push	r29
     508:	7c 01       	movw	r14, r24
     50a:	eb 01       	movw	r28, r22
     50c:	81 e0       	ldi	r24, 0x01	; 1
     50e:	df df       	rcall	.-66     	; 0x4ce <lcdSid>
     510:	05 e0       	ldi	r16, 0x05	; 5
     512:	10 e0       	ldi	r17, 0x00	; 0
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	e1 df       	rcall	.-62     	; 0x4da <lcdSclk>
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	df df       	rcall	.-66     	; 0x4da <lcdSclk>
     51c:	01 50       	subi	r16, 0x01	; 1
     51e:	11 09       	sbc	r17, r1
     520:	c9 f7       	brne	.-14     	; 0x514 <writeLcdF+0x18>
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	d4 df       	rcall	.-88     	; 0x4ce <lcdSid>
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	d8 df       	rcall	.-80     	; 0x4da <lcdSclk>
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	d6 df       	rcall	.-84     	; 0x4da <lcdSclk>
     52e:	83 e4       	ldi	r24, 0x43	; 67
     530:	e8 16       	cp	r14, r24
     532:	f1 04       	cpc	r15, r1
     534:	19 f4       	brne	.+6      	; 0x53c <writeLcdF+0x40>
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	ca df       	rcall	.-108    	; 0x4ce <lcdSid>
     53a:	02 c0       	rjmp	.+4      	; 0x540 <writeLcdF+0x44>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	c7 df       	rcall	.-114    	; 0x4ce <lcdSid>
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	cb df       	rcall	.-106    	; 0x4da <lcdSclk>
     544:	81 e0       	ldi	r24, 0x01	; 1
     546:	c9 df       	rcall	.-110    	; 0x4da <lcdSclk>
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	c1 df       	rcall	.-126    	; 0x4ce <lcdSid>
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	c5 df       	rcall	.-118    	; 0x4da <lcdSclk>
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	c3 df       	rcall	.-122    	; 0x4da <lcdSclk>
     554:	04 e0       	ldi	r16, 0x04	; 4
     556:	10 e0       	ldi	r17, 0x00	; 0
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	bf df       	rcall	.-130    	; 0x4da <lcdSclk>
     55c:	c0 ff       	sbrs	r28, 0
     55e:	03 c0       	rjmp	.+6      	; 0x566 <writeLcdF+0x6a>
     560:	81 e0       	ldi	r24, 0x01	; 1
     562:	b5 df       	rcall	.-150    	; 0x4ce <lcdSid>
     564:	02 c0       	rjmp	.+4      	; 0x56a <writeLcdF+0x6e>
     566:	80 e0       	ldi	r24, 0x00	; 0
     568:	b2 df       	rcall	.-156    	; 0x4ce <lcdSid>
     56a:	d6 95       	lsr	r29
     56c:	c7 95       	ror	r28
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	b4 df       	rcall	.-152    	; 0x4da <lcdSclk>
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	b2 df       	rcall	.-156    	; 0x4da <lcdSclk>
     576:	01 50       	subi	r16, 0x01	; 1
     578:	11 09       	sbc	r17, r1
     57a:	71 f7       	brne	.-36     	; 0x558 <writeLcdF+0x5c>
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	a7 df       	rcall	.-178    	; 0x4ce <lcdSid>
     580:	04 e0       	ldi	r16, 0x04	; 4
     582:	10 e0       	ldi	r17, 0x00	; 0
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	a9 df       	rcall	.-174    	; 0x4da <lcdSclk>
     588:	81 e0       	ldi	r24, 0x01	; 1
     58a:	a7 df       	rcall	.-178    	; 0x4da <lcdSclk>
     58c:	01 50       	subi	r16, 0x01	; 1
     58e:	11 09       	sbc	r17, r1
     590:	c9 f7       	brne	.-14     	; 0x584 <writeLcdF+0x88>
     592:	04 e0       	ldi	r16, 0x04	; 4
     594:	10 e0       	ldi	r17, 0x00	; 0
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	a0 df       	rcall	.-192    	; 0x4da <lcdSclk>
     59a:	c0 ff       	sbrs	r28, 0
     59c:	03 c0       	rjmp	.+6      	; 0x5a4 <writeLcdF+0xa8>
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	96 df       	rcall	.-212    	; 0x4ce <lcdSid>
     5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <writeLcdF+0xac>
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	93 df       	rcall	.-218    	; 0x4ce <lcdSid>
     5a8:	d6 95       	lsr	r29
     5aa:	c7 95       	ror	r28
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	95 df       	rcall	.-214    	; 0x4da <lcdSclk>
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	93 df       	rcall	.-218    	; 0x4da <lcdSclk>
     5b4:	01 50       	subi	r16, 0x01	; 1
     5b6:	11 09       	sbc	r17, r1
     5b8:	71 f7       	brne	.-36     	; 0x596 <writeLcdF+0x9a>
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	88 df       	rcall	.-240    	; 0x4ce <lcdSid>
     5be:	c4 e0       	ldi	r28, 0x04	; 4
     5c0:	d0 e0       	ldi	r29, 0x00	; 0
     5c2:	80 e0       	ldi	r24, 0x00	; 0
     5c4:	8a df       	rcall	.-236    	; 0x4da <lcdSclk>
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	88 df       	rcall	.-240    	; 0x4da <lcdSclk>
     5ca:	21 97       	sbiw	r28, 0x01	; 1
     5cc:	d1 f7       	brne	.-12     	; 0x5c2 <writeLcdF+0xc6>
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	7e df       	rcall	.-260    	; 0x4ce <lcdSid>
     5d2:	87 ec       	ldi	r24, 0xC7	; 199
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	01 97       	sbiw	r24, 0x01	; 1
     5d8:	f1 f7       	brne	.-4      	; 0x5d6 <writeLcdF+0xda>
     5da:	00 c0       	rjmp	.+0      	; 0x5dc <writeLcdF+0xe0>
     5dc:	00 00       	nop
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	1f 91       	pop	r17
     5e4:	0f 91       	pop	r16
     5e6:	ff 90       	pop	r15
     5e8:	ef 90       	pop	r14
     5ea:	08 95       	ret

000005ec <lcdWriteText>:
     5ec:	1f 93       	push	r17
     5ee:	cf 93       	push	r28
     5f0:	df 93       	push	r29
     5f2:	cd b7       	in	r28, 0x3d	; 61
     5f4:	de b7       	in	r29, 0x3e	; 62
     5f6:	65 97       	sbiw	r28, 0x15	; 21
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	f8 94       	cli
     5fc:	de bf       	out	0x3e, r29	; 62
     5fe:	0f be       	out	0x3f, r0	; 63
     600:	cd bf       	out	0x3d, r28	; 61
     602:	9e 01       	movw	r18, r28
     604:	20 5e       	subi	r18, 0xE0	; 224
     606:	3f 4f       	sbci	r19, 0xFF	; 255
     608:	4e 8d       	ldd	r20, Y+30	; 0x1e
     60a:	5f 8d       	ldd	r21, Y+31	; 0x1f
     60c:	65 e1       	ldi	r22, 0x15	; 21
     60e:	70 e0       	ldi	r23, 0x00	; 0
     610:	ce 01       	movw	r24, r28
     612:	01 96       	adiw	r24, 0x01	; 1
     614:	75 d2       	rcall	.+1258   	; 0xb00 <vsnprintf>
     616:	6d 8d       	ldd	r22, Y+29	; 0x1d
     618:	8c 8d       	ldd	r24, Y+28	; 0x1c
     61a:	90 e2       	ldi	r25, 0x20	; 32
     61c:	89 9f       	mul	r24, r25
     61e:	60 0d       	add	r22, r0
     620:	11 24       	eor	r1, r1
     622:	60 68       	ori	r22, 0x80	; 128
     624:	70 e0       	ldi	r23, 0x00	; 0
     626:	83 e4       	ldi	r24, 0x43	; 67
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	68 df       	rcall	.-304    	; 0x4fc <writeLcdF>
     62c:	69 81       	ldd	r22, Y+1	; 0x01
     62e:	66 23       	and	r22, r22
     630:	79 f0       	breq	.+30     	; 0x650 <lcdWriteText+0x64>
     632:	10 e0       	ldi	r17, 0x00	; 0
     634:	1f 5f       	subi	r17, 0xFF	; 255
     636:	70 e0       	ldi	r23, 0x00	; 0
     638:	84 e4       	ldi	r24, 0x44	; 68
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	5f df       	rcall	.-322    	; 0x4fc <writeLcdF>
     63e:	e1 e0       	ldi	r30, 0x01	; 1
     640:	f0 e0       	ldi	r31, 0x00	; 0
     642:	ec 0f       	add	r30, r28
     644:	fd 1f       	adc	r31, r29
     646:	e1 0f       	add	r30, r17
     648:	f1 1d       	adc	r31, r1
     64a:	60 81       	ld	r22, Z
     64c:	61 11       	cpse	r22, r1
     64e:	f2 cf       	rjmp	.-28     	; 0x634 <lcdWriteText+0x48>
     650:	65 96       	adiw	r28, 0x15	; 21
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	f8 94       	cli
     656:	de bf       	out	0x3e, r29	; 62
     658:	0f be       	out	0x3f, r0	; 63
     65a:	cd bf       	out	0x3d, r28	; 61
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	1f 91       	pop	r17
     662:	08 95       	ret

00000664 <lcdClear>:
     664:	61 e0       	ldi	r22, 0x01	; 1
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	83 e4       	ldi	r24, 0x43	; 67
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	47 df       	rcall	.-370    	; 0x4fc <writeLcdF>
     66e:	8f e3       	ldi	r24, 0x3F	; 63
     670:	9f e1       	ldi	r25, 0x1F	; 31
     672:	01 97       	sbiw	r24, 0x01	; 1
     674:	f1 f7       	brne	.-4      	; 0x672 <lcdClear+0xe>
     676:	00 c0       	rjmp	.+0      	; 0x678 <lcdClear+0x14>
     678:	00 00       	nop
     67a:	80 ef       	ldi	r24, 0xF0	; 240
     67c:	92 e0       	ldi	r25, 0x02	; 2
     67e:	9f 93       	push	r25
     680:	8f 93       	push	r24
     682:	1f 92       	push	r1
     684:	1f 92       	push	r1
     686:	b2 df       	rcall	.-156    	; 0x5ec <lcdWriteText>
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	0f 90       	pop	r0
     68e:	0f 90       	pop	r0
     690:	08 95       	ret

00000692 <initLcd>:
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	22 df       	rcall	.-444    	; 0x4da <lcdSclk>
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	1a df       	rcall	.-460    	; 0x4ce <lcdSid>
     69a:	64 e3       	ldi	r22, 0x34	; 52
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	83 e4       	ldi	r24, 0x43	; 67
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	2c df       	rcall	.-424    	; 0x4fc <writeLcdF>
     6a4:	69 e0       	ldi	r22, 0x09	; 9
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	83 e4       	ldi	r24, 0x43	; 67
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	27 df       	rcall	.-434    	; 0x4fc <writeLcdF>
     6ae:	60 e3       	ldi	r22, 0x30	; 48
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	83 e4       	ldi	r24, 0x43	; 67
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	22 df       	rcall	.-444    	; 0x4fc <writeLcdF>
     6b8:	6c e0       	ldi	r22, 0x0C	; 12
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	83 e4       	ldi	r24, 0x43	; 67
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	1d df       	rcall	.-454    	; 0x4fc <writeLcdF>
     6c2:	d0 df       	rcall	.-96     	; 0x664 <lcdClear>
     6c4:	67 e0       	ldi	r22, 0x07	; 7
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	83 e4       	ldi	r24, 0x43	; 67
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	17 df       	rcall	.-466    	; 0x4fc <writeLcdF>
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	0a cf       	rjmp	.-492    	; 0x4e6 <lcdLight>
     6d2:	08 95       	ret

000006d4 <initBoard>:
     6d4:	4f 92       	push	r4
     6d6:	5f 92       	push	r5
     6d8:	6f 92       	push	r6
     6da:	7f 92       	push	r7
     6dc:	8f 92       	push	r8
     6de:	9f 92       	push	r9
     6e0:	af 92       	push	r10
     6e2:	bf 92       	push	r11
     6e4:	cf 92       	push	r12
     6e6:	df 92       	push	r13
     6e8:	ef 92       	push	r14
     6ea:	ff 92       	push	r15
     6ec:	0f 93       	push	r16
     6ee:	1f 93       	push	r17
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	c8 2f       	mov	r28, r24
     6f6:	85 b7       	in	r24, 0x35	; 53
     6f8:	85 bf       	out	0x35, r24	; 53
     6fa:	12 b8       	out	0x02, r1	; 2
     6fc:	8f ef       	ldi	r24, 0xFF	; 255
     6fe:	81 b9       	out	0x01, r24	; 1
     700:	15 b8       	out	0x05, r1	; 5
     702:	84 b9       	out	0x04, r24	; 4
     704:	88 b9       	out	0x08, r24	; 8
     706:	17 b8       	out	0x07, r1	; 7
     708:	8b b9       	out	0x0b, r24	; 11
     70a:	1a b8       	out	0x0a, r1	; 10
     70c:	8e b9       	out	0x0e, r24	; 14
     70e:	1d b8       	out	0x0d, r1	; 13
     710:	72 98       	cbi	0x0e, 2	; 14
     712:	11 ba       	out	0x11, r1	; 17
     714:	10 ba       	out	0x10, r1	; 16
     716:	94 e0       	ldi	r25, 0x04	; 4
     718:	94 bb       	out	0x14, r25	; 20
     71a:	93 b3       	in	r25, 0x13	; 19
     71c:	93 60       	ori	r25, 0x03	; 3
     71e:	93 bb       	out	0x13, r25	; 19
     720:	9d 9a       	sbi	0x13, 5	; 19
     722:	97 ec       	ldi	r25, 0xC7	; 199
     724:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     728:	98 e3       	ldi	r25, 0x38	; 56
     72a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     72e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     732:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     736:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     73a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     73e:	8c e3       	ldi	r24, 0x3C	; 60
     740:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     744:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     748:	78 94       	sei
     74a:	36 de       	rcall	.-916    	; 0x3b8 <startSystemTimeMs>
     74c:	a2 df       	rcall	.-188    	; 0x692 <initLcd>
     74e:	3e de       	rcall	.-900    	; 0x3cc <initAdc>
     750:	aa de       	rcall	.-684    	; 0x4a6 <initRgb>
     752:	cc 23       	and	r28, r28
     754:	09 f4       	brne	.+2      	; 0x758 <initBoard+0x84>
     756:	b8 c0       	rjmp	.+368    	; 0x8c8 <initBoard+0x1f4>
     758:	8f ef       	ldi	r24, 0xFF	; 255
     75a:	c5 de       	rcall	.-630    	; 0x4e6 <lcdLight>
     75c:	40 e0       	ldi	r20, 0x00	; 0
     75e:	50 e0       	ldi	r21, 0x00	; 0
     760:	6f ef       	ldi	r22, 0xFF	; 255
     762:	73 e0       	ldi	r23, 0x03	; 3
     764:	80 e0       	ldi	r24, 0x00	; 0
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	87 de       	rcall	.-754    	; 0x478 <rgbWrite>
     76a:	8d ed       	ldi	r24, 0xDD	; 221
     76c:	92 e0       	ldi	r25, 0x02	; 2
     76e:	9f 93       	push	r25
     770:	8f 93       	push	r24
     772:	1f 92       	push	r1
     774:	1f 92       	push	r1
     776:	3a df       	rcall	.-396    	; 0x5ec <lcdWriteText>
     778:	82 ef       	ldi	r24, 0xF2	; 242
     77a:	92 e0       	ldi	r25, 0x02	; 2
     77c:	9f 93       	push	r25
     77e:	8f 93       	push	r24
     780:	1f 92       	push	r1
     782:	81 e0       	ldi	r24, 0x01	; 1
     784:	8f 93       	push	r24
     786:	32 df       	rcall	.-412    	; 0x5ec <lcdWriteText>
     788:	88 ec       	ldi	r24, 0xC8	; 200
     78a:	92 e0       	ldi	r25, 0x02	; 2
     78c:	9f 93       	push	r25
     78e:	8f 93       	push	r24
     790:	1f 92       	push	r1
     792:	82 e0       	ldi	r24, 0x02	; 2
     794:	8f 93       	push	r24
     796:	2a df       	rcall	.-428    	; 0x5ec <lcdWriteText>
     798:	87 e0       	ldi	r24, 0x07	; 7
     79a:	93 e0       	ldi	r25, 0x03	; 3
     79c:	9f 93       	push	r25
     79e:	8f 93       	push	r24
     7a0:	1f 92       	push	r1
     7a2:	83 e0       	ldi	r24, 0x03	; 3
     7a4:	8f 93       	push	r24
     7a6:	22 df       	rcall	.-444    	; 0x5ec <lcdWriteText>
     7a8:	8d b7       	in	r24, 0x3d	; 61
     7aa:	9e b7       	in	r25, 0x3e	; 62
     7ac:	40 96       	adiw	r24, 0x10	; 16
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	f8 94       	cli
     7b2:	9e bf       	out	0x3e, r25	; 62
     7b4:	0f be       	out	0x3f, r0	; 63
     7b6:	8d bf       	out	0x3d, r24	; 61
     7b8:	88 24       	eor	r8, r8
     7ba:	83 94       	inc	r8
     7bc:	c0 e0       	ldi	r28, 0x00	; 0
     7be:	71 2c       	mov	r7, r1
     7c0:	99 24       	eor	r9, r9
     7c2:	93 94       	inc	r9
     7c4:	d0 e0       	ldi	r29, 0x00	; 0
     7c6:	cc 24       	eor	r12, r12
     7c8:	c3 94       	inc	r12
     7ca:	d1 2c       	mov	r13, r1
     7cc:	e1 2c       	mov	r14, r1
     7ce:	68 94       	set
     7d0:	ff 24       	eor	r15, r15
     7d2:	f7 f8       	bld	r15, 7
     7d4:	66 24       	eor	r6, r6
     7d6:	63 94       	inc	r6
     7d8:	51 2c       	mov	r5, r1
     7da:	09 e0       	ldi	r16, 0x09	; 9
     7dc:	11 e0       	ldi	r17, 0x01	; 1
     7de:	0f 2e       	mov	r0, r31
     7e0:	fc e1       	ldi	r31, 0x1C	; 28
     7e2:	af 2e       	mov	r10, r31
     7e4:	f3 e0       	ldi	r31, 0x03	; 3
     7e6:	bf 2e       	mov	r11, r31
     7e8:	f0 2d       	mov	r31, r0
     7ea:	0f 2e       	mov	r0, r31
     7ec:	f3 e0       	ldi	r31, 0x03	; 3
     7ee:	4f 2e       	mov	r4, r31
     7f0:	f0 2d       	mov	r31, r0
     7f2:	99 20       	and	r9, r9
     7f4:	49 f0       	breq	.+18     	; 0x808 <initBoard+0x134>
     7f6:	c7 01       	movw	r24, r14
     7f8:	0d 2e       	mov	r0, r29
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <initBoard+0x12c>
     7fc:	96 95       	lsr	r25
     7fe:	87 95       	ror	r24
     800:	0a 94       	dec	r0
     802:	e2 f7       	brpl	.-8      	; 0x7fc <initBoard+0x128>
     804:	d6 dd       	rcall	.-1108   	; 0x3b2 <ledWriteAll>
     806:	08 c0       	rjmp	.+16     	; 0x818 <initBoard+0x144>
     808:	c6 01       	movw	r24, r12
     80a:	0d 2e       	mov	r0, r29
     80c:	02 c0       	rjmp	.+4      	; 0x812 <initBoard+0x13e>
     80e:	88 0f       	add	r24, r24
     810:	99 1f       	adc	r25, r25
     812:	0a 94       	dec	r0
     814:	e2 f7       	brpl	.-8      	; 0x80e <initBoard+0x13a>
     816:	cd dd       	rcall	.-1126   	; 0x3b2 <ledWriteAll>
     818:	df 5f       	subi	r29, 0xFF	; 255
     81a:	d1 31       	cpi	r29, 0x11	; 17
     81c:	28 f0       	brcs	.+10     	; 0x828 <initBoard+0x154>
     81e:	86 2d       	mov	r24, r6
     820:	91 10       	cpse	r9, r1
     822:	85 2d       	mov	r24, r5
     824:	98 2e       	mov	r9, r24
     826:	d0 e0       	ldi	r29, 0x00	; 0
     828:	88 20       	and	r8, r8
     82a:	11 f0       	breq	.+4      	; 0x830 <initBoard+0x15c>
     82c:	ce 5f       	subi	r28, 0xFE	; 254
     82e:	01 c0       	rjmp	.+2      	; 0x832 <initBoard+0x15e>
     830:	c2 50       	subi	r28, 0x02	; 2
     832:	8c 2f       	mov	r24, r28
     834:	58 de       	rcall	.-848    	; 0x4e6 <lcdLight>
     836:	ce 3f       	cpi	r28, 0xFE	; 254
     838:	21 f0       	breq	.+8      	; 0x842 <initBoard+0x16e>
     83a:	c8 37       	cpi	r28, 0x78	; 120
     83c:	19 f4       	brne	.+6      	; 0x844 <initBoard+0x170>
     83e:	86 2c       	mov	r8, r6
     840:	01 c0       	rjmp	.+2      	; 0x844 <initBoard+0x170>
     842:	85 2c       	mov	r8, r5
     844:	71 10       	cpse	r7, r1
     846:	3b c0       	rjmp	.+118    	; 0x8be <initBoard+0x1ea>
     848:	f8 01       	movw	r30, r16
     84a:	80 81       	ld	r24, Z
     84c:	83 7c       	andi	r24, 0xC3	; 195
     84e:	91 f0       	breq	.+36     	; 0x874 <initBoard+0x1a0>
     850:	40 e0       	ldi	r20, 0x00	; 0
     852:	50 e0       	ldi	r21, 0x00	; 0
     854:	66 e2       	ldi	r22, 0x26	; 38
     856:	72 e0       	ldi	r23, 0x02	; 2
     858:	8f ef       	ldi	r24, 0xFF	; 255
     85a:	93 e0       	ldi	r25, 0x03	; 3
     85c:	0d de       	rcall	.-998    	; 0x478 <rgbWrite>
     85e:	bf 92       	push	r11
     860:	af 92       	push	r10
     862:	1f 92       	push	r1
     864:	4f 92       	push	r4
     866:	c2 de       	rcall	.-636    	; 0x5ec <lcdWriteText>
     868:	0f 90       	pop	r0
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	0f 90       	pop	r0
     870:	76 2c       	mov	r7, r6
     872:	25 c0       	rjmp	.+74     	; 0x8be <initBoard+0x1ea>
     874:	8f ef       	ldi	r24, 0xFF	; 255
     876:	9c e7       	ldi	r25, 0x7C	; 124
     878:	01 97       	sbiw	r24, 0x01	; 1
     87a:	f1 f7       	brne	.-4      	; 0x878 <initBoard+0x1a4>
     87c:	00 c0       	rjmp	.+0      	; 0x87e <initBoard+0x1aa>
     87e:	00 00       	nop
     880:	b8 cf       	rjmp	.-144    	; 0x7f2 <initBoard+0x11e>
     882:	f0 de       	rcall	.-544    	; 0x664 <lcdClear>
     884:	80 e0       	ldi	r24, 0x00	; 0
     886:	2f de       	rcall	.-930    	; 0x4e6 <lcdLight>
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	92 dd       	rcall	.-1244   	; 0x3b2 <ledWriteAll>
     88e:	40 e0       	ldi	r20, 0x00	; 0
     890:	50 e0       	ldi	r21, 0x00	; 0
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	70 e0       	ldi	r23, 0x00	; 0
     896:	80 e0       	ldi	r24, 0x00	; 0
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	ee dd       	rcall	.-1060   	; 0x478 <rgbWrite>
     89c:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <systemTimeMs>
     8a0:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <systemTimeMs+0x1>
     8a4:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <systemTimeMs+0x2>
     8a8:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <systemTimeMs+0x3>
     8ac:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <systemTimeMs+0x4>
     8b0:	10 92 3e 03 	sts	0x033E, r1	; 0x80033e <systemTimeMs+0x5>
     8b4:	10 92 3f 03 	sts	0x033F, r1	; 0x80033f <systemTimeMs+0x6>
     8b8:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <systemTimeMs+0x7>
     8bc:	05 c0       	rjmp	.+10     	; 0x8c8 <initBoard+0x1f4>
     8be:	f8 01       	movw	r30, r16
     8c0:	80 81       	ld	r24, Z
     8c2:	83 7c       	andi	r24, 0xC3	; 195
     8c4:	b9 f6       	brne	.-82     	; 0x874 <initBoard+0x1a0>
     8c6:	dd cf       	rjmp	.-70     	; 0x882 <initBoard+0x1ae>
     8c8:	df 91       	pop	r29
     8ca:	cf 91       	pop	r28
     8cc:	1f 91       	pop	r17
     8ce:	0f 91       	pop	r16
     8d0:	ff 90       	pop	r15
     8d2:	ef 90       	pop	r14
     8d4:	df 90       	pop	r13
     8d6:	cf 90       	pop	r12
     8d8:	bf 90       	pop	r11
     8da:	af 90       	pop	r10
     8dc:	9f 90       	pop	r9
     8de:	8f 90       	pop	r8
     8e0:	7f 90       	pop	r7
     8e2:	6f 90       	pop	r6
     8e4:	5f 90       	pop	r5
     8e6:	4f 90       	pop	r4
     8e8:	08 95       	ret

000008ea <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	cd b7       	in	r28, 0x3d	; 61
     8f0:	de b7       	in	r29, 0x3e	; 62
     8f2:	28 97       	sbiw	r28, 0x08	; 8
     8f4:	0f b6       	in	r0, 0x3f	; 63
     8f6:	f8 94       	cli
     8f8:	de bf       	out	0x3e, r29	; 62
     8fa:	0f be       	out	0x3f, r0	; 63
     8fc:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     8fe:	88 e0       	ldi	r24, 0x08	; 8
     900:	e0 e0       	ldi	r30, 0x00	; 0
     902:	f2 e0       	ldi	r31, 0x02	; 2
     904:	de 01       	movw	r26, r28
     906:	11 96       	adiw	r26, 0x01	; 1
     908:	01 90       	ld	r0, Z+
     90a:	0d 92       	st	X+, r0
     90c:	8a 95       	dec	r24
     90e:	e1 f7       	brne	.-8      	; 0x908 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     910:	e5 e0       	ldi	r30, 0x05	; 5
     912:	f1 e0       	ldi	r31, 0x01	; 1
     914:	80 81       	ld	r24, Z
     916:	8f 7b       	andi	r24, 0xBF	; 191
     918:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     91a:	e0 91 36 03 	lds	r30, 0x0336	; 0x800336 <Zeilen_Nr.2731>
     91e:	f0 91 37 03 	lds	r31, 0x0337	; 0x800337 <Zeilen_Nr.2731+0x1>
     922:	81 e0       	ldi	r24, 0x01	; 1
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	8c 0f       	add	r24, r28
     928:	9d 1f       	adc	r25, r29
     92a:	e8 0f       	add	r30, r24
     92c:	f9 1f       	adc	r31, r25
     92e:	80 81       	ld	r24, Z
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	90 93 35 03 	sts	0x0335, r25	; 0x800335 <__data_end+0x1>
     936:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <__data_end>
     93a:	a2 eb       	ldi	r26, 0xB2	; 178
     93c:	b3 e0       	ldi	r27, 0x03	; 3
     93e:	22 e4       	ldi	r18, 0x42	; 66
     940:	33 e0       	ldi	r19, 0x03	; 3
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     942:	e5 e0       	ldi	r30, 0x05	; 5
     944:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     946:	5e 91       	ld	r21, -X
     948:	4e 91       	ld	r20, -X
     94a:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <__data_end>
     94e:	90 91 35 03 	lds	r25, 0x0335	; 0x800335 <__data_end+0x1>
     952:	84 23       	and	r24, r20
     954:	95 23       	and	r25, r21
     956:	89 2b       	or	r24, r25
     958:	21 f0       	breq	.+8      	; 0x962 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     95a:	80 81       	ld	r24, Z
     95c:	80 62       	ori	r24, 0x20	; 32
     95e:	80 83       	st	Z, r24
     960:	03 c0       	rjmp	.+6      	; 0x968 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     962:	80 81       	ld	r24, Z
     964:	8f 7d       	andi	r24, 0xDF	; 223
     966:	80 83       	st	Z, r24
        }
        CLOCK_1;
     968:	80 81       	ld	r24, Z
     96a:	80 61       	ori	r24, 0x10	; 16
     96c:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     96e:	80 81       	ld	r24, Z
     970:	8f 7e       	andi	r24, 0xEF	; 239
     972:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     974:	a2 17       	cp	r26, r18
     976:	b3 07       	cpc	r27, r19
     978:	31 f7       	brne	.-52     	; 0x946 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     97a:	e5 e0       	ldi	r30, 0x05	; 5
     97c:	f1 e0       	ldi	r31, 0x01	; 1
     97e:	80 81       	ld	r24, Z
     980:	87 7f       	andi	r24, 0xF7	; 247
     982:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     984:	80 81       	ld	r24, Z
     986:	88 7f       	andi	r24, 0xF8	; 248
     988:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     98a:	90 81       	ld	r25, Z
     98c:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <Zeilen_Nr.2731>
     990:	89 2b       	or	r24, r25
     992:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     994:	80 81       	ld	r24, Z
     996:	80 64       	ori	r24, 0x40	; 64
     998:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     99a:	80 81       	ld	r24, Z
     99c:	88 60       	ori	r24, 0x08	; 8
     99e:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     9a0:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <Zeilen_Nr.2731>
     9a4:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <Zeilen_Nr.2731+0x1>
     9a8:	87 30       	cpi	r24, 0x07	; 7
     9aa:	91 05       	cpc	r25, r1
     9ac:	30 f4       	brcc	.+12     	; 0x9ba <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     9ae:	01 96       	adiw	r24, 0x01	; 1
     9b0:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <Zeilen_Nr.2731+0x1>
     9b4:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <Zeilen_Nr.2731>
     9b8:	07 c0       	rjmp	.+14     	; 0x9c8 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     9ba:	10 92 37 03 	sts	0x0337, r1	; 0x800337 <Zeilen_Nr.2731+0x1>
     9be:	10 92 36 03 	sts	0x0336, r1	; 0x800336 <Zeilen_Nr.2731>
        writeTextFinished = 1;
     9c2:	81 e0       	ldi	r24, 0x01	; 1
     9c4:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <writeTextFinished>
    }
    
     9c8:	28 96       	adiw	r28, 0x08	; 8
     9ca:	0f b6       	in	r0, 0x3f	; 63
     9cc:	f8 94       	cli
     9ce:	de bf       	out	0x3e, r29	; 62
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	cd bf       	out	0x3d, r28	; 61
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	08 95       	ret

000009da <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     9da:	1f 92       	push	r1
     9dc:	0f 92       	push	r0
     9de:	0f b6       	in	r0, 0x3f	; 63
     9e0:	0f 92       	push	r0
     9e2:	11 24       	eor	r1, r1
     9e4:	0b b6       	in	r0, 0x3b	; 59
     9e6:	0f 92       	push	r0
     9e8:	2f 93       	push	r18
     9ea:	3f 93       	push	r19
     9ec:	4f 93       	push	r20
     9ee:	5f 93       	push	r21
     9f0:	6f 93       	push	r22
     9f2:	7f 93       	push	r23
     9f4:	8f 93       	push	r24
     9f6:	9f 93       	push	r25
     9f8:	af 93       	push	r26
     9fa:	bf 93       	push	r27
     9fc:	ef 93       	push	r30
     9fe:	ff 93       	push	r31
    systemTimeMs += 1;
     a00:	20 91 39 03 	lds	r18, 0x0339	; 0x800339 <systemTimeMs>
     a04:	30 91 3a 03 	lds	r19, 0x033A	; 0x80033a <systemTimeMs+0x1>
     a08:	40 91 3b 03 	lds	r20, 0x033B	; 0x80033b <systemTimeMs+0x2>
     a0c:	50 91 3c 03 	lds	r21, 0x033C	; 0x80033c <systemTimeMs+0x3>
     a10:	60 91 3d 03 	lds	r22, 0x033D	; 0x80033d <systemTimeMs+0x4>
     a14:	70 91 3e 03 	lds	r23, 0x033E	; 0x80033e <systemTimeMs+0x5>
     a18:	80 91 3f 03 	lds	r24, 0x033F	; 0x80033f <systemTimeMs+0x6>
     a1c:	90 91 40 03 	lds	r25, 0x0340	; 0x800340 <systemTimeMs+0x7>
     a20:	a1 e0       	ldi	r26, 0x01	; 1
     a22:	62 d0       	rcall	.+196    	; 0xae8 <__adddi3_s8>
     a24:	20 93 39 03 	sts	0x0339, r18	; 0x800339 <systemTimeMs>
     a28:	30 93 3a 03 	sts	0x033A, r19	; 0x80033a <systemTimeMs+0x1>
     a2c:	40 93 3b 03 	sts	0x033B, r20	; 0x80033b <systemTimeMs+0x2>
     a30:	50 93 3c 03 	sts	0x033C, r21	; 0x80033c <systemTimeMs+0x3>
     a34:	60 93 3d 03 	sts	0x033D, r22	; 0x80033d <systemTimeMs+0x4>
     a38:	70 93 3e 03 	sts	0x033E, r23	; 0x80033e <systemTimeMs+0x5>
     a3c:	80 93 3f 03 	sts	0x033F, r24	; 0x80033f <systemTimeMs+0x6>
     a40:	90 93 40 03 	sts	0x0340, r25	; 0x800340 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     a44:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <matrixRunning>
     a48:	81 11       	cpse	r24, r1
     a4a:	4f df       	rcall	.-354    	; 0x8ea <matrixWriteNextLine>
}
     a4c:	ff 91       	pop	r31
     a4e:	ef 91       	pop	r30
     a50:	bf 91       	pop	r27
     a52:	af 91       	pop	r26
     a54:	9f 91       	pop	r25
     a56:	8f 91       	pop	r24
     a58:	7f 91       	pop	r23
     a5a:	6f 91       	pop	r22
     a5c:	5f 91       	pop	r21
     a5e:	4f 91       	pop	r20
     a60:	3f 91       	pop	r19
     a62:	2f 91       	pop	r18
     a64:	0f 90       	pop	r0
     a66:	0b be       	out	0x3b, r0	; 59
     a68:	0f 90       	pop	r0
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	0f 90       	pop	r0
     a6e:	1f 90       	pop	r1
     a70:	18 95       	reti

00000a72 <__udivmodsi4>:
     a72:	a1 e2       	ldi	r26, 0x21	; 33
     a74:	1a 2e       	mov	r1, r26
     a76:	aa 1b       	sub	r26, r26
     a78:	bb 1b       	sub	r27, r27
     a7a:	fd 01       	movw	r30, r26
     a7c:	0d c0       	rjmp	.+26     	; 0xa98 <__udivmodsi4_ep>

00000a7e <__udivmodsi4_loop>:
     a7e:	aa 1f       	adc	r26, r26
     a80:	bb 1f       	adc	r27, r27
     a82:	ee 1f       	adc	r30, r30
     a84:	ff 1f       	adc	r31, r31
     a86:	a2 17       	cp	r26, r18
     a88:	b3 07       	cpc	r27, r19
     a8a:	e4 07       	cpc	r30, r20
     a8c:	f5 07       	cpc	r31, r21
     a8e:	20 f0       	brcs	.+8      	; 0xa98 <__udivmodsi4_ep>
     a90:	a2 1b       	sub	r26, r18
     a92:	b3 0b       	sbc	r27, r19
     a94:	e4 0b       	sbc	r30, r20
     a96:	f5 0b       	sbc	r31, r21

00000a98 <__udivmodsi4_ep>:
     a98:	66 1f       	adc	r22, r22
     a9a:	77 1f       	adc	r23, r23
     a9c:	88 1f       	adc	r24, r24
     a9e:	99 1f       	adc	r25, r25
     aa0:	1a 94       	dec	r1
     aa2:	69 f7       	brne	.-38     	; 0xa7e <__udivmodsi4_loop>
     aa4:	60 95       	com	r22
     aa6:	70 95       	com	r23
     aa8:	80 95       	com	r24
     aaa:	90 95       	com	r25
     aac:	9b 01       	movw	r18, r22
     aae:	ac 01       	movw	r20, r24
     ab0:	bd 01       	movw	r22, r26
     ab2:	cf 01       	movw	r24, r30
     ab4:	08 95       	ret

00000ab6 <__umulhisi3>:
     ab6:	a2 9f       	mul	r26, r18
     ab8:	b0 01       	movw	r22, r0
     aba:	b3 9f       	mul	r27, r19
     abc:	c0 01       	movw	r24, r0
     abe:	a3 9f       	mul	r26, r19
     ac0:	70 0d       	add	r23, r0
     ac2:	81 1d       	adc	r24, r1
     ac4:	11 24       	eor	r1, r1
     ac6:	91 1d       	adc	r25, r1
     ac8:	b2 9f       	mul	r27, r18
     aca:	70 0d       	add	r23, r0
     acc:	81 1d       	adc	r24, r1
     ace:	11 24       	eor	r1, r1
     ad0:	91 1d       	adc	r25, r1
     ad2:	08 95       	ret

00000ad4 <__muluhisi3>:
     ad4:	f0 df       	rcall	.-32     	; 0xab6 <__umulhisi3>
     ad6:	a5 9f       	mul	r26, r21
     ad8:	90 0d       	add	r25, r0
     ada:	b4 9f       	mul	r27, r20
     adc:	90 0d       	add	r25, r0
     ade:	a4 9f       	mul	r26, r20
     ae0:	80 0d       	add	r24, r0
     ae2:	91 1d       	adc	r25, r1
     ae4:	11 24       	eor	r1, r1
     ae6:	08 95       	ret

00000ae8 <__adddi3_s8>:
     ae8:	00 24       	eor	r0, r0
     aea:	a7 fd       	sbrc	r26, 7
     aec:	00 94       	com	r0
     aee:	2a 0f       	add	r18, r26
     af0:	30 1d       	adc	r19, r0
     af2:	40 1d       	adc	r20, r0
     af4:	50 1d       	adc	r21, r0
     af6:	60 1d       	adc	r22, r0
     af8:	70 1d       	adc	r23, r0
     afa:	80 1d       	adc	r24, r0
     afc:	90 1d       	adc	r25, r0
     afe:	08 95       	ret

00000b00 <vsnprintf>:
     b00:	0f 93       	push	r16
     b02:	1f 93       	push	r17
     b04:	cf 93       	push	r28
     b06:	df 93       	push	r29
     b08:	cd b7       	in	r28, 0x3d	; 61
     b0a:	de b7       	in	r29, 0x3e	; 62
     b0c:	2e 97       	sbiw	r28, 0x0e	; 14
     b0e:	0f b6       	in	r0, 0x3f	; 63
     b10:	f8 94       	cli
     b12:	de bf       	out	0x3e, r29	; 62
     b14:	0f be       	out	0x3f, r0	; 63
     b16:	cd bf       	out	0x3d, r28	; 61
     b18:	8c 01       	movw	r16, r24
     b1a:	fa 01       	movw	r30, r20
     b1c:	86 e0       	ldi	r24, 0x06	; 6
     b1e:	8c 83       	std	Y+4, r24	; 0x04
     b20:	1a 83       	std	Y+2, r17	; 0x02
     b22:	09 83       	std	Y+1, r16	; 0x01
     b24:	77 ff       	sbrs	r23, 7
     b26:	02 c0       	rjmp	.+4      	; 0xb2c <vsnprintf+0x2c>
     b28:	60 e0       	ldi	r22, 0x00	; 0
     b2a:	70 e8       	ldi	r23, 0x80	; 128
     b2c:	cb 01       	movw	r24, r22
     b2e:	01 97       	sbiw	r24, 0x01	; 1
     b30:	9e 83       	std	Y+6, r25	; 0x06
     b32:	8d 83       	std	Y+5, r24	; 0x05
     b34:	a9 01       	movw	r20, r18
     b36:	bf 01       	movw	r22, r30
     b38:	ce 01       	movw	r24, r28
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	19 d0       	rcall	.+50     	; 0xb70 <vfprintf>
     b3e:	4d 81       	ldd	r20, Y+5	; 0x05
     b40:	5e 81       	ldd	r21, Y+6	; 0x06
     b42:	57 fd       	sbrc	r21, 7
     b44:	0a c0       	rjmp	.+20     	; 0xb5a <vsnprintf+0x5a>
     b46:	2f 81       	ldd	r18, Y+7	; 0x07
     b48:	38 85       	ldd	r19, Y+8	; 0x08
     b4a:	42 17       	cp	r20, r18
     b4c:	53 07       	cpc	r21, r19
     b4e:	0c f4       	brge	.+2      	; 0xb52 <vsnprintf+0x52>
     b50:	9a 01       	movw	r18, r20
     b52:	f8 01       	movw	r30, r16
     b54:	e2 0f       	add	r30, r18
     b56:	f3 1f       	adc	r31, r19
     b58:	10 82       	st	Z, r1
     b5a:	2e 96       	adiw	r28, 0x0e	; 14
     b5c:	0f b6       	in	r0, 0x3f	; 63
     b5e:	f8 94       	cli
     b60:	de bf       	out	0x3e, r29	; 62
     b62:	0f be       	out	0x3f, r0	; 63
     b64:	cd bf       	out	0x3d, r28	; 61
     b66:	df 91       	pop	r29
     b68:	cf 91       	pop	r28
     b6a:	1f 91       	pop	r17
     b6c:	0f 91       	pop	r16
     b6e:	08 95       	ret

00000b70 <vfprintf>:
     b70:	2f 92       	push	r2
     b72:	3f 92       	push	r3
     b74:	4f 92       	push	r4
     b76:	5f 92       	push	r5
     b78:	6f 92       	push	r6
     b7a:	7f 92       	push	r7
     b7c:	8f 92       	push	r8
     b7e:	9f 92       	push	r9
     b80:	af 92       	push	r10
     b82:	bf 92       	push	r11
     b84:	cf 92       	push	r12
     b86:	df 92       	push	r13
     b88:	ef 92       	push	r14
     b8a:	ff 92       	push	r15
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	2b 97       	sbiw	r28, 0x0b	; 11
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	f8 94       	cli
     b9e:	de bf       	out	0x3e, r29	; 62
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	cd bf       	out	0x3d, r28	; 61
     ba4:	6c 01       	movw	r12, r24
     ba6:	7b 01       	movw	r14, r22
     ba8:	8a 01       	movw	r16, r20
     baa:	fc 01       	movw	r30, r24
     bac:	17 82       	std	Z+7, r1	; 0x07
     bae:	16 82       	std	Z+6, r1	; 0x06
     bb0:	83 81       	ldd	r24, Z+3	; 0x03
     bb2:	81 ff       	sbrs	r24, 1
     bb4:	bf c1       	rjmp	.+894    	; 0xf34 <vfprintf+0x3c4>
     bb6:	ce 01       	movw	r24, r28
     bb8:	01 96       	adiw	r24, 0x01	; 1
     bba:	3c 01       	movw	r6, r24
     bbc:	f6 01       	movw	r30, r12
     bbe:	93 81       	ldd	r25, Z+3	; 0x03
     bc0:	f7 01       	movw	r30, r14
     bc2:	93 fd       	sbrc	r25, 3
     bc4:	85 91       	lpm	r24, Z+
     bc6:	93 ff       	sbrs	r25, 3
     bc8:	81 91       	ld	r24, Z+
     bca:	7f 01       	movw	r14, r30
     bcc:	88 23       	and	r24, r24
     bce:	09 f4       	brne	.+2      	; 0xbd2 <vfprintf+0x62>
     bd0:	ad c1       	rjmp	.+858    	; 0xf2c <vfprintf+0x3bc>
     bd2:	85 32       	cpi	r24, 0x25	; 37
     bd4:	39 f4       	brne	.+14     	; 0xbe4 <vfprintf+0x74>
     bd6:	93 fd       	sbrc	r25, 3
     bd8:	85 91       	lpm	r24, Z+
     bda:	93 ff       	sbrs	r25, 3
     bdc:	81 91       	ld	r24, Z+
     bde:	7f 01       	movw	r14, r30
     be0:	85 32       	cpi	r24, 0x25	; 37
     be2:	21 f4       	brne	.+8      	; 0xbec <vfprintf+0x7c>
     be4:	b6 01       	movw	r22, r12
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	d6 d1       	rcall	.+940    	; 0xf96 <fputc>
     bea:	e8 cf       	rjmp	.-48     	; 0xbbc <vfprintf+0x4c>
     bec:	91 2c       	mov	r9, r1
     bee:	21 2c       	mov	r2, r1
     bf0:	31 2c       	mov	r3, r1
     bf2:	ff e1       	ldi	r31, 0x1F	; 31
     bf4:	f3 15       	cp	r31, r3
     bf6:	d8 f0       	brcs	.+54     	; 0xc2e <vfprintf+0xbe>
     bf8:	8b 32       	cpi	r24, 0x2B	; 43
     bfa:	79 f0       	breq	.+30     	; 0xc1a <vfprintf+0xaa>
     bfc:	38 f4       	brcc	.+14     	; 0xc0c <vfprintf+0x9c>
     bfe:	80 32       	cpi	r24, 0x20	; 32
     c00:	79 f0       	breq	.+30     	; 0xc20 <vfprintf+0xb0>
     c02:	83 32       	cpi	r24, 0x23	; 35
     c04:	a1 f4       	brne	.+40     	; 0xc2e <vfprintf+0xbe>
     c06:	23 2d       	mov	r18, r3
     c08:	20 61       	ori	r18, 0x10	; 16
     c0a:	1d c0       	rjmp	.+58     	; 0xc46 <vfprintf+0xd6>
     c0c:	8d 32       	cpi	r24, 0x2D	; 45
     c0e:	61 f0       	breq	.+24     	; 0xc28 <vfprintf+0xb8>
     c10:	80 33       	cpi	r24, 0x30	; 48
     c12:	69 f4       	brne	.+26     	; 0xc2e <vfprintf+0xbe>
     c14:	23 2d       	mov	r18, r3
     c16:	21 60       	ori	r18, 0x01	; 1
     c18:	16 c0       	rjmp	.+44     	; 0xc46 <vfprintf+0xd6>
     c1a:	83 2d       	mov	r24, r3
     c1c:	82 60       	ori	r24, 0x02	; 2
     c1e:	38 2e       	mov	r3, r24
     c20:	e3 2d       	mov	r30, r3
     c22:	e4 60       	ori	r30, 0x04	; 4
     c24:	3e 2e       	mov	r3, r30
     c26:	2a c0       	rjmp	.+84     	; 0xc7c <vfprintf+0x10c>
     c28:	f3 2d       	mov	r31, r3
     c2a:	f8 60       	ori	r31, 0x08	; 8
     c2c:	1d c0       	rjmp	.+58     	; 0xc68 <vfprintf+0xf8>
     c2e:	37 fc       	sbrc	r3, 7
     c30:	2d c0       	rjmp	.+90     	; 0xc8c <vfprintf+0x11c>
     c32:	20 ed       	ldi	r18, 0xD0	; 208
     c34:	28 0f       	add	r18, r24
     c36:	2a 30       	cpi	r18, 0x0A	; 10
     c38:	40 f0       	brcs	.+16     	; 0xc4a <vfprintf+0xda>
     c3a:	8e 32       	cpi	r24, 0x2E	; 46
     c3c:	b9 f4       	brne	.+46     	; 0xc6c <vfprintf+0xfc>
     c3e:	36 fc       	sbrc	r3, 6
     c40:	75 c1       	rjmp	.+746    	; 0xf2c <vfprintf+0x3bc>
     c42:	23 2d       	mov	r18, r3
     c44:	20 64       	ori	r18, 0x40	; 64
     c46:	32 2e       	mov	r3, r18
     c48:	19 c0       	rjmp	.+50     	; 0xc7c <vfprintf+0x10c>
     c4a:	36 fe       	sbrs	r3, 6
     c4c:	06 c0       	rjmp	.+12     	; 0xc5a <vfprintf+0xea>
     c4e:	8a e0       	ldi	r24, 0x0A	; 10
     c50:	98 9e       	mul	r9, r24
     c52:	20 0d       	add	r18, r0
     c54:	11 24       	eor	r1, r1
     c56:	92 2e       	mov	r9, r18
     c58:	11 c0       	rjmp	.+34     	; 0xc7c <vfprintf+0x10c>
     c5a:	ea e0       	ldi	r30, 0x0A	; 10
     c5c:	2e 9e       	mul	r2, r30
     c5e:	20 0d       	add	r18, r0
     c60:	11 24       	eor	r1, r1
     c62:	22 2e       	mov	r2, r18
     c64:	f3 2d       	mov	r31, r3
     c66:	f0 62       	ori	r31, 0x20	; 32
     c68:	3f 2e       	mov	r3, r31
     c6a:	08 c0       	rjmp	.+16     	; 0xc7c <vfprintf+0x10c>
     c6c:	8c 36       	cpi	r24, 0x6C	; 108
     c6e:	21 f4       	brne	.+8      	; 0xc78 <vfprintf+0x108>
     c70:	83 2d       	mov	r24, r3
     c72:	80 68       	ori	r24, 0x80	; 128
     c74:	38 2e       	mov	r3, r24
     c76:	02 c0       	rjmp	.+4      	; 0xc7c <vfprintf+0x10c>
     c78:	88 36       	cpi	r24, 0x68	; 104
     c7a:	41 f4       	brne	.+16     	; 0xc8c <vfprintf+0x11c>
     c7c:	f7 01       	movw	r30, r14
     c7e:	93 fd       	sbrc	r25, 3
     c80:	85 91       	lpm	r24, Z+
     c82:	93 ff       	sbrs	r25, 3
     c84:	81 91       	ld	r24, Z+
     c86:	7f 01       	movw	r14, r30
     c88:	81 11       	cpse	r24, r1
     c8a:	b3 cf       	rjmp	.-154    	; 0xbf2 <vfprintf+0x82>
     c8c:	98 2f       	mov	r25, r24
     c8e:	9f 7d       	andi	r25, 0xDF	; 223
     c90:	95 54       	subi	r25, 0x45	; 69
     c92:	93 30       	cpi	r25, 0x03	; 3
     c94:	28 f4       	brcc	.+10     	; 0xca0 <vfprintf+0x130>
     c96:	0c 5f       	subi	r16, 0xFC	; 252
     c98:	1f 4f       	sbci	r17, 0xFF	; 255
     c9a:	9f e3       	ldi	r25, 0x3F	; 63
     c9c:	99 83       	std	Y+1, r25	; 0x01
     c9e:	0d c0       	rjmp	.+26     	; 0xcba <vfprintf+0x14a>
     ca0:	83 36       	cpi	r24, 0x63	; 99
     ca2:	31 f0       	breq	.+12     	; 0xcb0 <vfprintf+0x140>
     ca4:	83 37       	cpi	r24, 0x73	; 115
     ca6:	71 f0       	breq	.+28     	; 0xcc4 <vfprintf+0x154>
     ca8:	83 35       	cpi	r24, 0x53	; 83
     caa:	09 f0       	breq	.+2      	; 0xcae <vfprintf+0x13e>
     cac:	55 c0       	rjmp	.+170    	; 0xd58 <vfprintf+0x1e8>
     cae:	20 c0       	rjmp	.+64     	; 0xcf0 <vfprintf+0x180>
     cb0:	f8 01       	movw	r30, r16
     cb2:	80 81       	ld	r24, Z
     cb4:	89 83       	std	Y+1, r24	; 0x01
     cb6:	0e 5f       	subi	r16, 0xFE	; 254
     cb8:	1f 4f       	sbci	r17, 0xFF	; 255
     cba:	88 24       	eor	r8, r8
     cbc:	83 94       	inc	r8
     cbe:	91 2c       	mov	r9, r1
     cc0:	53 01       	movw	r10, r6
     cc2:	12 c0       	rjmp	.+36     	; 0xce8 <vfprintf+0x178>
     cc4:	28 01       	movw	r4, r16
     cc6:	f2 e0       	ldi	r31, 0x02	; 2
     cc8:	4f 0e       	add	r4, r31
     cca:	51 1c       	adc	r5, r1
     ccc:	f8 01       	movw	r30, r16
     cce:	a0 80       	ld	r10, Z
     cd0:	b1 80       	ldd	r11, Z+1	; 0x01
     cd2:	36 fe       	sbrs	r3, 6
     cd4:	03 c0       	rjmp	.+6      	; 0xcdc <vfprintf+0x16c>
     cd6:	69 2d       	mov	r22, r9
     cd8:	70 e0       	ldi	r23, 0x00	; 0
     cda:	02 c0       	rjmp	.+4      	; 0xce0 <vfprintf+0x170>
     cdc:	6f ef       	ldi	r22, 0xFF	; 255
     cde:	7f ef       	ldi	r23, 0xFF	; 255
     ce0:	c5 01       	movw	r24, r10
     ce2:	4e d1       	rcall	.+668    	; 0xf80 <strnlen>
     ce4:	4c 01       	movw	r8, r24
     ce6:	82 01       	movw	r16, r4
     ce8:	f3 2d       	mov	r31, r3
     cea:	ff 77       	andi	r31, 0x7F	; 127
     cec:	3f 2e       	mov	r3, r31
     cee:	15 c0       	rjmp	.+42     	; 0xd1a <vfprintf+0x1aa>
     cf0:	28 01       	movw	r4, r16
     cf2:	22 e0       	ldi	r18, 0x02	; 2
     cf4:	42 0e       	add	r4, r18
     cf6:	51 1c       	adc	r5, r1
     cf8:	f8 01       	movw	r30, r16
     cfa:	a0 80       	ld	r10, Z
     cfc:	b1 80       	ldd	r11, Z+1	; 0x01
     cfe:	36 fe       	sbrs	r3, 6
     d00:	03 c0       	rjmp	.+6      	; 0xd08 <vfprintf+0x198>
     d02:	69 2d       	mov	r22, r9
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <vfprintf+0x19c>
     d08:	6f ef       	ldi	r22, 0xFF	; 255
     d0a:	7f ef       	ldi	r23, 0xFF	; 255
     d0c:	c5 01       	movw	r24, r10
     d0e:	2d d1       	rcall	.+602    	; 0xf6a <strnlen_P>
     d10:	4c 01       	movw	r8, r24
     d12:	f3 2d       	mov	r31, r3
     d14:	f0 68       	ori	r31, 0x80	; 128
     d16:	3f 2e       	mov	r3, r31
     d18:	82 01       	movw	r16, r4
     d1a:	33 fc       	sbrc	r3, 3
     d1c:	19 c0       	rjmp	.+50     	; 0xd50 <vfprintf+0x1e0>
     d1e:	82 2d       	mov	r24, r2
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	88 16       	cp	r8, r24
     d24:	99 06       	cpc	r9, r25
     d26:	a0 f4       	brcc	.+40     	; 0xd50 <vfprintf+0x1e0>
     d28:	b6 01       	movw	r22, r12
     d2a:	80 e2       	ldi	r24, 0x20	; 32
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	33 d1       	rcall	.+614    	; 0xf96 <fputc>
     d30:	2a 94       	dec	r2
     d32:	f5 cf       	rjmp	.-22     	; 0xd1e <vfprintf+0x1ae>
     d34:	f5 01       	movw	r30, r10
     d36:	37 fc       	sbrc	r3, 7
     d38:	85 91       	lpm	r24, Z+
     d3a:	37 fe       	sbrs	r3, 7
     d3c:	81 91       	ld	r24, Z+
     d3e:	5f 01       	movw	r10, r30
     d40:	b6 01       	movw	r22, r12
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	28 d1       	rcall	.+592    	; 0xf96 <fputc>
     d46:	21 10       	cpse	r2, r1
     d48:	2a 94       	dec	r2
     d4a:	21 e0       	ldi	r18, 0x01	; 1
     d4c:	82 1a       	sub	r8, r18
     d4e:	91 08       	sbc	r9, r1
     d50:	81 14       	cp	r8, r1
     d52:	91 04       	cpc	r9, r1
     d54:	79 f7       	brne	.-34     	; 0xd34 <vfprintf+0x1c4>
     d56:	e1 c0       	rjmp	.+450    	; 0xf1a <vfprintf+0x3aa>
     d58:	84 36       	cpi	r24, 0x64	; 100
     d5a:	11 f0       	breq	.+4      	; 0xd60 <vfprintf+0x1f0>
     d5c:	89 36       	cpi	r24, 0x69	; 105
     d5e:	39 f5       	brne	.+78     	; 0xdae <vfprintf+0x23e>
     d60:	f8 01       	movw	r30, r16
     d62:	37 fe       	sbrs	r3, 7
     d64:	07 c0       	rjmp	.+14     	; 0xd74 <vfprintf+0x204>
     d66:	60 81       	ld	r22, Z
     d68:	71 81       	ldd	r23, Z+1	; 0x01
     d6a:	82 81       	ldd	r24, Z+2	; 0x02
     d6c:	93 81       	ldd	r25, Z+3	; 0x03
     d6e:	0c 5f       	subi	r16, 0xFC	; 252
     d70:	1f 4f       	sbci	r17, 0xFF	; 255
     d72:	08 c0       	rjmp	.+16     	; 0xd84 <vfprintf+0x214>
     d74:	60 81       	ld	r22, Z
     d76:	71 81       	ldd	r23, Z+1	; 0x01
     d78:	07 2e       	mov	r0, r23
     d7a:	00 0c       	add	r0, r0
     d7c:	88 0b       	sbc	r24, r24
     d7e:	99 0b       	sbc	r25, r25
     d80:	0e 5f       	subi	r16, 0xFE	; 254
     d82:	1f 4f       	sbci	r17, 0xFF	; 255
     d84:	f3 2d       	mov	r31, r3
     d86:	ff 76       	andi	r31, 0x6F	; 111
     d88:	3f 2e       	mov	r3, r31
     d8a:	97 ff       	sbrs	r25, 7
     d8c:	09 c0       	rjmp	.+18     	; 0xda0 <vfprintf+0x230>
     d8e:	90 95       	com	r25
     d90:	80 95       	com	r24
     d92:	70 95       	com	r23
     d94:	61 95       	neg	r22
     d96:	7f 4f       	sbci	r23, 0xFF	; 255
     d98:	8f 4f       	sbci	r24, 0xFF	; 255
     d9a:	9f 4f       	sbci	r25, 0xFF	; 255
     d9c:	f0 68       	ori	r31, 0x80	; 128
     d9e:	3f 2e       	mov	r3, r31
     da0:	2a e0       	ldi	r18, 0x0A	; 10
     da2:	30 e0       	ldi	r19, 0x00	; 0
     da4:	a3 01       	movw	r20, r6
     da6:	33 d1       	rcall	.+614    	; 0x100e <__ultoa_invert>
     da8:	88 2e       	mov	r8, r24
     daa:	86 18       	sub	r8, r6
     dac:	44 c0       	rjmp	.+136    	; 0xe36 <vfprintf+0x2c6>
     dae:	85 37       	cpi	r24, 0x75	; 117
     db0:	31 f4       	brne	.+12     	; 0xdbe <vfprintf+0x24e>
     db2:	23 2d       	mov	r18, r3
     db4:	2f 7e       	andi	r18, 0xEF	; 239
     db6:	b2 2e       	mov	r11, r18
     db8:	2a e0       	ldi	r18, 0x0A	; 10
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	25 c0       	rjmp	.+74     	; 0xe08 <vfprintf+0x298>
     dbe:	93 2d       	mov	r25, r3
     dc0:	99 7f       	andi	r25, 0xF9	; 249
     dc2:	b9 2e       	mov	r11, r25
     dc4:	8f 36       	cpi	r24, 0x6F	; 111
     dc6:	c1 f0       	breq	.+48     	; 0xdf8 <vfprintf+0x288>
     dc8:	18 f4       	brcc	.+6      	; 0xdd0 <vfprintf+0x260>
     dca:	88 35       	cpi	r24, 0x58	; 88
     dcc:	79 f0       	breq	.+30     	; 0xdec <vfprintf+0x27c>
     dce:	ae c0       	rjmp	.+348    	; 0xf2c <vfprintf+0x3bc>
     dd0:	80 37       	cpi	r24, 0x70	; 112
     dd2:	19 f0       	breq	.+6      	; 0xdda <vfprintf+0x26a>
     dd4:	88 37       	cpi	r24, 0x78	; 120
     dd6:	21 f0       	breq	.+8      	; 0xde0 <vfprintf+0x270>
     dd8:	a9 c0       	rjmp	.+338    	; 0xf2c <vfprintf+0x3bc>
     dda:	e9 2f       	mov	r30, r25
     ddc:	e0 61       	ori	r30, 0x10	; 16
     dde:	be 2e       	mov	r11, r30
     de0:	b4 fe       	sbrs	r11, 4
     de2:	0d c0       	rjmp	.+26     	; 0xdfe <vfprintf+0x28e>
     de4:	fb 2d       	mov	r31, r11
     de6:	f4 60       	ori	r31, 0x04	; 4
     de8:	bf 2e       	mov	r11, r31
     dea:	09 c0       	rjmp	.+18     	; 0xdfe <vfprintf+0x28e>
     dec:	34 fe       	sbrs	r3, 4
     dee:	0a c0       	rjmp	.+20     	; 0xe04 <vfprintf+0x294>
     df0:	29 2f       	mov	r18, r25
     df2:	26 60       	ori	r18, 0x06	; 6
     df4:	b2 2e       	mov	r11, r18
     df6:	06 c0       	rjmp	.+12     	; 0xe04 <vfprintf+0x294>
     df8:	28 e0       	ldi	r18, 0x08	; 8
     dfa:	30 e0       	ldi	r19, 0x00	; 0
     dfc:	05 c0       	rjmp	.+10     	; 0xe08 <vfprintf+0x298>
     dfe:	20 e1       	ldi	r18, 0x10	; 16
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <vfprintf+0x298>
     e04:	20 e1       	ldi	r18, 0x10	; 16
     e06:	32 e0       	ldi	r19, 0x02	; 2
     e08:	f8 01       	movw	r30, r16
     e0a:	b7 fe       	sbrs	r11, 7
     e0c:	07 c0       	rjmp	.+14     	; 0xe1c <vfprintf+0x2ac>
     e0e:	60 81       	ld	r22, Z
     e10:	71 81       	ldd	r23, Z+1	; 0x01
     e12:	82 81       	ldd	r24, Z+2	; 0x02
     e14:	93 81       	ldd	r25, Z+3	; 0x03
     e16:	0c 5f       	subi	r16, 0xFC	; 252
     e18:	1f 4f       	sbci	r17, 0xFF	; 255
     e1a:	06 c0       	rjmp	.+12     	; 0xe28 <vfprintf+0x2b8>
     e1c:	60 81       	ld	r22, Z
     e1e:	71 81       	ldd	r23, Z+1	; 0x01
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	0e 5f       	subi	r16, 0xFE	; 254
     e26:	1f 4f       	sbci	r17, 0xFF	; 255
     e28:	a3 01       	movw	r20, r6
     e2a:	f1 d0       	rcall	.+482    	; 0x100e <__ultoa_invert>
     e2c:	88 2e       	mov	r8, r24
     e2e:	86 18       	sub	r8, r6
     e30:	fb 2d       	mov	r31, r11
     e32:	ff 77       	andi	r31, 0x7F	; 127
     e34:	3f 2e       	mov	r3, r31
     e36:	36 fe       	sbrs	r3, 6
     e38:	0d c0       	rjmp	.+26     	; 0xe54 <vfprintf+0x2e4>
     e3a:	23 2d       	mov	r18, r3
     e3c:	2e 7f       	andi	r18, 0xFE	; 254
     e3e:	a2 2e       	mov	r10, r18
     e40:	89 14       	cp	r8, r9
     e42:	58 f4       	brcc	.+22     	; 0xe5a <vfprintf+0x2ea>
     e44:	34 fe       	sbrs	r3, 4
     e46:	0b c0       	rjmp	.+22     	; 0xe5e <vfprintf+0x2ee>
     e48:	32 fc       	sbrc	r3, 2
     e4a:	09 c0       	rjmp	.+18     	; 0xe5e <vfprintf+0x2ee>
     e4c:	83 2d       	mov	r24, r3
     e4e:	8e 7e       	andi	r24, 0xEE	; 238
     e50:	a8 2e       	mov	r10, r24
     e52:	05 c0       	rjmp	.+10     	; 0xe5e <vfprintf+0x2ee>
     e54:	b8 2c       	mov	r11, r8
     e56:	a3 2c       	mov	r10, r3
     e58:	03 c0       	rjmp	.+6      	; 0xe60 <vfprintf+0x2f0>
     e5a:	b8 2c       	mov	r11, r8
     e5c:	01 c0       	rjmp	.+2      	; 0xe60 <vfprintf+0x2f0>
     e5e:	b9 2c       	mov	r11, r9
     e60:	a4 fe       	sbrs	r10, 4
     e62:	0f c0       	rjmp	.+30     	; 0xe82 <vfprintf+0x312>
     e64:	fe 01       	movw	r30, r28
     e66:	e8 0d       	add	r30, r8
     e68:	f1 1d       	adc	r31, r1
     e6a:	80 81       	ld	r24, Z
     e6c:	80 33       	cpi	r24, 0x30	; 48
     e6e:	21 f4       	brne	.+8      	; 0xe78 <vfprintf+0x308>
     e70:	9a 2d       	mov	r25, r10
     e72:	99 7e       	andi	r25, 0xE9	; 233
     e74:	a9 2e       	mov	r10, r25
     e76:	09 c0       	rjmp	.+18     	; 0xe8a <vfprintf+0x31a>
     e78:	a2 fe       	sbrs	r10, 2
     e7a:	06 c0       	rjmp	.+12     	; 0xe88 <vfprintf+0x318>
     e7c:	b3 94       	inc	r11
     e7e:	b3 94       	inc	r11
     e80:	04 c0       	rjmp	.+8      	; 0xe8a <vfprintf+0x31a>
     e82:	8a 2d       	mov	r24, r10
     e84:	86 78       	andi	r24, 0x86	; 134
     e86:	09 f0       	breq	.+2      	; 0xe8a <vfprintf+0x31a>
     e88:	b3 94       	inc	r11
     e8a:	a3 fc       	sbrc	r10, 3
     e8c:	10 c0       	rjmp	.+32     	; 0xeae <vfprintf+0x33e>
     e8e:	a0 fe       	sbrs	r10, 0
     e90:	06 c0       	rjmp	.+12     	; 0xe9e <vfprintf+0x32e>
     e92:	b2 14       	cp	r11, r2
     e94:	80 f4       	brcc	.+32     	; 0xeb6 <vfprintf+0x346>
     e96:	28 0c       	add	r2, r8
     e98:	92 2c       	mov	r9, r2
     e9a:	9b 18       	sub	r9, r11
     e9c:	0d c0       	rjmp	.+26     	; 0xeb8 <vfprintf+0x348>
     e9e:	b2 14       	cp	r11, r2
     ea0:	58 f4       	brcc	.+22     	; 0xeb8 <vfprintf+0x348>
     ea2:	b6 01       	movw	r22, r12
     ea4:	80 e2       	ldi	r24, 0x20	; 32
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	76 d0       	rcall	.+236    	; 0xf96 <fputc>
     eaa:	b3 94       	inc	r11
     eac:	f8 cf       	rjmp	.-16     	; 0xe9e <vfprintf+0x32e>
     eae:	b2 14       	cp	r11, r2
     eb0:	18 f4       	brcc	.+6      	; 0xeb8 <vfprintf+0x348>
     eb2:	2b 18       	sub	r2, r11
     eb4:	02 c0       	rjmp	.+4      	; 0xeba <vfprintf+0x34a>
     eb6:	98 2c       	mov	r9, r8
     eb8:	21 2c       	mov	r2, r1
     eba:	a4 fe       	sbrs	r10, 4
     ebc:	0f c0       	rjmp	.+30     	; 0xedc <vfprintf+0x36c>
     ebe:	b6 01       	movw	r22, r12
     ec0:	80 e3       	ldi	r24, 0x30	; 48
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	68 d0       	rcall	.+208    	; 0xf96 <fputc>
     ec6:	a2 fe       	sbrs	r10, 2
     ec8:	16 c0       	rjmp	.+44     	; 0xef6 <vfprintf+0x386>
     eca:	a1 fc       	sbrc	r10, 1
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <vfprintf+0x364>
     ece:	88 e7       	ldi	r24, 0x78	; 120
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <vfprintf+0x368>
     ed4:	88 e5       	ldi	r24, 0x58	; 88
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	b6 01       	movw	r22, r12
     eda:	0c c0       	rjmp	.+24     	; 0xef4 <vfprintf+0x384>
     edc:	8a 2d       	mov	r24, r10
     ede:	86 78       	andi	r24, 0x86	; 134
     ee0:	51 f0       	breq	.+20     	; 0xef6 <vfprintf+0x386>
     ee2:	a1 fe       	sbrs	r10, 1
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x37a>
     ee6:	8b e2       	ldi	r24, 0x2B	; 43
     ee8:	01 c0       	rjmp	.+2      	; 0xeec <vfprintf+0x37c>
     eea:	80 e2       	ldi	r24, 0x20	; 32
     eec:	a7 fc       	sbrc	r10, 7
     eee:	8d e2       	ldi	r24, 0x2D	; 45
     ef0:	b6 01       	movw	r22, r12
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	50 d0       	rcall	.+160    	; 0xf96 <fputc>
     ef6:	89 14       	cp	r8, r9
     ef8:	30 f4       	brcc	.+12     	; 0xf06 <vfprintf+0x396>
     efa:	b6 01       	movw	r22, r12
     efc:	80 e3       	ldi	r24, 0x30	; 48
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	4a d0       	rcall	.+148    	; 0xf96 <fputc>
     f02:	9a 94       	dec	r9
     f04:	f8 cf       	rjmp	.-16     	; 0xef6 <vfprintf+0x386>
     f06:	8a 94       	dec	r8
     f08:	f3 01       	movw	r30, r6
     f0a:	e8 0d       	add	r30, r8
     f0c:	f1 1d       	adc	r31, r1
     f0e:	80 81       	ld	r24, Z
     f10:	b6 01       	movw	r22, r12
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	40 d0       	rcall	.+128    	; 0xf96 <fputc>
     f16:	81 10       	cpse	r8, r1
     f18:	f6 cf       	rjmp	.-20     	; 0xf06 <vfprintf+0x396>
     f1a:	22 20       	and	r2, r2
     f1c:	09 f4       	brne	.+2      	; 0xf20 <vfprintf+0x3b0>
     f1e:	4e ce       	rjmp	.-868    	; 0xbbc <vfprintf+0x4c>
     f20:	b6 01       	movw	r22, r12
     f22:	80 e2       	ldi	r24, 0x20	; 32
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	37 d0       	rcall	.+110    	; 0xf96 <fputc>
     f28:	2a 94       	dec	r2
     f2a:	f7 cf       	rjmp	.-18     	; 0xf1a <vfprintf+0x3aa>
     f2c:	f6 01       	movw	r30, r12
     f2e:	86 81       	ldd	r24, Z+6	; 0x06
     f30:	97 81       	ldd	r25, Z+7	; 0x07
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <vfprintf+0x3c8>
     f34:	8f ef       	ldi	r24, 0xFF	; 255
     f36:	9f ef       	ldi	r25, 0xFF	; 255
     f38:	2b 96       	adiw	r28, 0x0b	; 11
     f3a:	0f b6       	in	r0, 0x3f	; 63
     f3c:	f8 94       	cli
     f3e:	de bf       	out	0x3e, r29	; 62
     f40:	0f be       	out	0x3f, r0	; 63
     f42:	cd bf       	out	0x3d, r28	; 61
     f44:	df 91       	pop	r29
     f46:	cf 91       	pop	r28
     f48:	1f 91       	pop	r17
     f4a:	0f 91       	pop	r16
     f4c:	ff 90       	pop	r15
     f4e:	ef 90       	pop	r14
     f50:	df 90       	pop	r13
     f52:	cf 90       	pop	r12
     f54:	bf 90       	pop	r11
     f56:	af 90       	pop	r10
     f58:	9f 90       	pop	r9
     f5a:	8f 90       	pop	r8
     f5c:	7f 90       	pop	r7
     f5e:	6f 90       	pop	r6
     f60:	5f 90       	pop	r5
     f62:	4f 90       	pop	r4
     f64:	3f 90       	pop	r3
     f66:	2f 90       	pop	r2
     f68:	08 95       	ret

00000f6a <strnlen_P>:
     f6a:	fc 01       	movw	r30, r24
     f6c:	05 90       	lpm	r0, Z+
     f6e:	61 50       	subi	r22, 0x01	; 1
     f70:	70 40       	sbci	r23, 0x00	; 0
     f72:	01 10       	cpse	r0, r1
     f74:	d8 f7       	brcc	.-10     	; 0xf6c <strnlen_P+0x2>
     f76:	80 95       	com	r24
     f78:	90 95       	com	r25
     f7a:	8e 0f       	add	r24, r30
     f7c:	9f 1f       	adc	r25, r31
     f7e:	08 95       	ret

00000f80 <strnlen>:
     f80:	fc 01       	movw	r30, r24
     f82:	61 50       	subi	r22, 0x01	; 1
     f84:	70 40       	sbci	r23, 0x00	; 0
     f86:	01 90       	ld	r0, Z+
     f88:	01 10       	cpse	r0, r1
     f8a:	d8 f7       	brcc	.-10     	; 0xf82 <strnlen+0x2>
     f8c:	80 95       	com	r24
     f8e:	90 95       	com	r25
     f90:	8e 0f       	add	r24, r30
     f92:	9f 1f       	adc	r25, r31
     f94:	08 95       	ret

00000f96 <fputc>:
     f96:	0f 93       	push	r16
     f98:	1f 93       	push	r17
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	fb 01       	movw	r30, r22
     fa0:	23 81       	ldd	r18, Z+3	; 0x03
     fa2:	21 fd       	sbrc	r18, 1
     fa4:	03 c0       	rjmp	.+6      	; 0xfac <fputc+0x16>
     fa6:	8f ef       	ldi	r24, 0xFF	; 255
     fa8:	9f ef       	ldi	r25, 0xFF	; 255
     faa:	2c c0       	rjmp	.+88     	; 0x1004 <fputc+0x6e>
     fac:	22 ff       	sbrs	r18, 2
     fae:	16 c0       	rjmp	.+44     	; 0xfdc <fputc+0x46>
     fb0:	46 81       	ldd	r20, Z+6	; 0x06
     fb2:	57 81       	ldd	r21, Z+7	; 0x07
     fb4:	24 81       	ldd	r18, Z+4	; 0x04
     fb6:	35 81       	ldd	r19, Z+5	; 0x05
     fb8:	42 17       	cp	r20, r18
     fba:	53 07       	cpc	r21, r19
     fbc:	44 f4       	brge	.+16     	; 0xfce <fputc+0x38>
     fbe:	a0 81       	ld	r26, Z
     fc0:	b1 81       	ldd	r27, Z+1	; 0x01
     fc2:	9d 01       	movw	r18, r26
     fc4:	2f 5f       	subi	r18, 0xFF	; 255
     fc6:	3f 4f       	sbci	r19, 0xFF	; 255
     fc8:	31 83       	std	Z+1, r19	; 0x01
     fca:	20 83       	st	Z, r18
     fcc:	8c 93       	st	X, r24
     fce:	26 81       	ldd	r18, Z+6	; 0x06
     fd0:	37 81       	ldd	r19, Z+7	; 0x07
     fd2:	2f 5f       	subi	r18, 0xFF	; 255
     fd4:	3f 4f       	sbci	r19, 0xFF	; 255
     fd6:	37 83       	std	Z+7, r19	; 0x07
     fd8:	26 83       	std	Z+6, r18	; 0x06
     fda:	14 c0       	rjmp	.+40     	; 0x1004 <fputc+0x6e>
     fdc:	8b 01       	movw	r16, r22
     fde:	ec 01       	movw	r28, r24
     fe0:	fb 01       	movw	r30, r22
     fe2:	00 84       	ldd	r0, Z+8	; 0x08
     fe4:	f1 85       	ldd	r31, Z+9	; 0x09
     fe6:	e0 2d       	mov	r30, r0
     fe8:	19 95       	eicall
     fea:	89 2b       	or	r24, r25
     fec:	e1 f6       	brne	.-72     	; 0xfa6 <fputc+0x10>
     fee:	d8 01       	movw	r26, r16
     ff0:	16 96       	adiw	r26, 0x06	; 6
     ff2:	8d 91       	ld	r24, X+
     ff4:	9c 91       	ld	r25, X
     ff6:	17 97       	sbiw	r26, 0x07	; 7
     ff8:	01 96       	adiw	r24, 0x01	; 1
     ffa:	17 96       	adiw	r26, 0x07	; 7
     ffc:	9c 93       	st	X, r25
     ffe:	8e 93       	st	-X, r24
    1000:	16 97       	sbiw	r26, 0x06	; 6
    1002:	ce 01       	movw	r24, r28
    1004:	df 91       	pop	r29
    1006:	cf 91       	pop	r28
    1008:	1f 91       	pop	r17
    100a:	0f 91       	pop	r16
    100c:	08 95       	ret

0000100e <__ultoa_invert>:
    100e:	fa 01       	movw	r30, r20
    1010:	aa 27       	eor	r26, r26
    1012:	28 30       	cpi	r18, 0x08	; 8
    1014:	51 f1       	breq	.+84     	; 0x106a <__ultoa_invert+0x5c>
    1016:	20 31       	cpi	r18, 0x10	; 16
    1018:	81 f1       	breq	.+96     	; 0x107a <__ultoa_invert+0x6c>
    101a:	e8 94       	clt
    101c:	6f 93       	push	r22
    101e:	6e 7f       	andi	r22, 0xFE	; 254
    1020:	6e 5f       	subi	r22, 0xFE	; 254
    1022:	7f 4f       	sbci	r23, 0xFF	; 255
    1024:	8f 4f       	sbci	r24, 0xFF	; 255
    1026:	9f 4f       	sbci	r25, 0xFF	; 255
    1028:	af 4f       	sbci	r26, 0xFF	; 255
    102a:	b1 e0       	ldi	r27, 0x01	; 1
    102c:	3e d0       	rcall	.+124    	; 0x10aa <__ultoa_invert+0x9c>
    102e:	b4 e0       	ldi	r27, 0x04	; 4
    1030:	3c d0       	rcall	.+120    	; 0x10aa <__ultoa_invert+0x9c>
    1032:	67 0f       	add	r22, r23
    1034:	78 1f       	adc	r23, r24
    1036:	89 1f       	adc	r24, r25
    1038:	9a 1f       	adc	r25, r26
    103a:	a1 1d       	adc	r26, r1
    103c:	68 0f       	add	r22, r24
    103e:	79 1f       	adc	r23, r25
    1040:	8a 1f       	adc	r24, r26
    1042:	91 1d       	adc	r25, r1
    1044:	a1 1d       	adc	r26, r1
    1046:	6a 0f       	add	r22, r26
    1048:	71 1d       	adc	r23, r1
    104a:	81 1d       	adc	r24, r1
    104c:	91 1d       	adc	r25, r1
    104e:	a1 1d       	adc	r26, r1
    1050:	20 d0       	rcall	.+64     	; 0x1092 <__ultoa_invert+0x84>
    1052:	09 f4       	brne	.+2      	; 0x1056 <__ultoa_invert+0x48>
    1054:	68 94       	set
    1056:	3f 91       	pop	r19
    1058:	2a e0       	ldi	r18, 0x0A	; 10
    105a:	26 9f       	mul	r18, r22
    105c:	11 24       	eor	r1, r1
    105e:	30 19       	sub	r19, r0
    1060:	30 5d       	subi	r19, 0xD0	; 208
    1062:	31 93       	st	Z+, r19
    1064:	de f6       	brtc	.-74     	; 0x101c <__ultoa_invert+0xe>
    1066:	cf 01       	movw	r24, r30
    1068:	08 95       	ret
    106a:	46 2f       	mov	r20, r22
    106c:	47 70       	andi	r20, 0x07	; 7
    106e:	40 5d       	subi	r20, 0xD0	; 208
    1070:	41 93       	st	Z+, r20
    1072:	b3 e0       	ldi	r27, 0x03	; 3
    1074:	0f d0       	rcall	.+30     	; 0x1094 <__ultoa_invert+0x86>
    1076:	c9 f7       	brne	.-14     	; 0x106a <__ultoa_invert+0x5c>
    1078:	f6 cf       	rjmp	.-20     	; 0x1066 <__ultoa_invert+0x58>
    107a:	46 2f       	mov	r20, r22
    107c:	4f 70       	andi	r20, 0x0F	; 15
    107e:	40 5d       	subi	r20, 0xD0	; 208
    1080:	4a 33       	cpi	r20, 0x3A	; 58
    1082:	18 f0       	brcs	.+6      	; 0x108a <__ultoa_invert+0x7c>
    1084:	49 5d       	subi	r20, 0xD9	; 217
    1086:	31 fd       	sbrc	r19, 1
    1088:	40 52       	subi	r20, 0x20	; 32
    108a:	41 93       	st	Z+, r20
    108c:	02 d0       	rcall	.+4      	; 0x1092 <__ultoa_invert+0x84>
    108e:	a9 f7       	brne	.-22     	; 0x107a <__ultoa_invert+0x6c>
    1090:	ea cf       	rjmp	.-44     	; 0x1066 <__ultoa_invert+0x58>
    1092:	b4 e0       	ldi	r27, 0x04	; 4
    1094:	a6 95       	lsr	r26
    1096:	97 95       	ror	r25
    1098:	87 95       	ror	r24
    109a:	77 95       	ror	r23
    109c:	67 95       	ror	r22
    109e:	ba 95       	dec	r27
    10a0:	c9 f7       	brne	.-14     	; 0x1094 <__ultoa_invert+0x86>
    10a2:	00 97       	sbiw	r24, 0x00	; 0
    10a4:	61 05       	cpc	r22, r1
    10a6:	71 05       	cpc	r23, r1
    10a8:	08 95       	ret
    10aa:	9b 01       	movw	r18, r22
    10ac:	ac 01       	movw	r20, r24
    10ae:	0a 2e       	mov	r0, r26
    10b0:	06 94       	lsr	r0
    10b2:	57 95       	ror	r21
    10b4:	47 95       	ror	r20
    10b6:	37 95       	ror	r19
    10b8:	27 95       	ror	r18
    10ba:	ba 95       	dec	r27
    10bc:	c9 f7       	brne	.-14     	; 0x10b0 <__ultoa_invert+0xa2>
    10be:	62 0f       	add	r22, r18
    10c0:	73 1f       	adc	r23, r19
    10c2:	84 1f       	adc	r24, r20
    10c4:	95 1f       	adc	r25, r21
    10c6:	a0 1d       	adc	r26, r0
    10c8:	08 95       	ret

000010ca <_exit>:
    10ca:	f8 94       	cli

000010cc <__stop_program>:
    10cc:	ff cf       	rjmp	.-2      	; 0x10cc <__stop_program>
