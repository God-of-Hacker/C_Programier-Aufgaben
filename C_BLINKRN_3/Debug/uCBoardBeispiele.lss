
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000f62  00000ff6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f62  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  0000106a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000106a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00001108  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024ee  00000000  00000000  000012e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ff6  00000000  00000000  000037d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014e6  00000000  00000000  000047cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000678  00000000  00000000  00005cb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cf9  00000000  00000000  0000632c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e3c  00000000  00000000  00007025  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  00008e61  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	43 c4       	rjmp	.+2182   	; 0x8e4 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e6       	ldi	r30, 0x62	; 98
  fc:	ff e0       	ldi	r31, 0x0F	; 15
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	1e c7       	rjmp	.+3644   	; 0xf5e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#define ON_TIME_STOP           400
#define OFF_TIME_STOP          100
#define PERIOD_STOP             (ON_TIME_STOP+OFF_TIME_STOP)
//Hauptprogramm
int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	00 d0       	rcall	.+0      	; 0x12a <main+0x6>
 12a:	1f 92       	push	r1
 12c:	1f 92       	push	r1
 12e:	cd b7       	in	r28, 0x3d	; 61
 130:	de b7       	in	r29, 0x3e	; 62
    uint64_t timerBlink_Pause_ms = 0;
    uint8_t blink_Stop = 0;
    uint64_t timerBlink_Stop_ms = 0;
    
    //Initialisieren
    initBoard(0);
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	54 d2       	rcall	.+1192   	; 0x5de <initBoard>
    uint16_t outLeds_Pause = 0;
    uint16_t outLeds_Stop = 0;
    uint8_t blink_Pause = 0;
    uint64_t timerBlink_Pause_ms = 0;
    uint8_t blink_Stop = 0;
    uint64_t timerBlink_Stop_ms = 0;
 136:	71 2c       	mov	r7, r1
 138:	81 2c       	mov	r8, r1
 13a:	91 2c       	mov	r9, r1
 13c:	a1 2c       	mov	r10, r1
 13e:	b1 2c       	mov	r11, r1
 140:	c1 2c       	mov	r12, r1
 142:	31 2c       	mov	r3, r1
 144:	41 2c       	mov	r4, r1
    uint8_t inPower_Pause = 0;
    uint8_t inPower_Stop = 0;
    uint16_t outLeds_Pause = 0;
    uint16_t outLeds_Stop = 0;
    uint8_t blink_Pause = 0;
    uint64_t timerBlink_Pause_ms = 0;
 146:	d1 2c       	mov	r13, r1
 148:	e1 2c       	mov	r14, r1
 14a:	f1 2c       	mov	r15, r1
 14c:	00 e0       	ldi	r16, 0x00	; 0
 14e:	10 e0       	ldi	r17, 0x00	; 0
 150:	1d 82       	std	Y+5, r1	; 0x05
 152:	51 2c       	mov	r5, r1
 154:	61 2c       	mov	r6, r1
{
    //Variablen
    uint8_t inPower_Pause = 0;
    uint8_t inPower_Stop = 0;
    uint16_t outLeds_Pause = 0;
    uint16_t outLeds_Stop = 0;
 156:	1c 82       	std	Y+4, r1	; 0x04
 158:	1b 82       	std	Y+3, r1	; 0x03
int main(void)
{
    //Variablen
    uint8_t inPower_Pause = 0;
    uint8_t inPower_Stop = 0;
    uint16_t outLeds_Pause = 0;
 15a:	1a 82       	std	Y+2, r1	; 0x02
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        inPower_Pause = switchReadAll() & IN_MASK_Pause;
 15c:	19 82       	std	Y+1, r1	; 0x01
 15e:	e4 d0       	rcall	.+456    	; 0x328 <switchReadAll>
        inPower_Stop = switchReadAll() & IN_MASK_STOP;
 160:	28 2e       	mov	r2, r24
 162:	e2 d0       	rcall	.+452    	; 0x328 <switchReadAll>
 164:	82 70       	andi	r24, 0x02	; 2
        //Verarbeitung-------------------------------------------------------------
        if (inPower_Pause)
 166:	20 fc       	sbrc	r2, 0
 168:	d8 c0       	rjmp	.+432    	; 0x31a <main+0x1f6>
 16a:	d2 c0       	rjmp	.+420    	; 0x310 <main+0x1ec>
        {
            blink_Stop = 1;
        }
        else
        {
            blink_Stop = 0;
 16c:	e0 e0       	ldi	r30, 0x00	; 0
            outLeds_Stop = OFF;
 16e:	1b 82       	std	Y+3, r1	; 0x03
 170:	1c 82       	std	Y+4, r1	; 0x04
 172:	01 c0       	rjmp	.+2      	; 0x176 <main+0x52>
            blink_Pause = 0;
            outLeds_Pause = OFF;
        }
        if (inPower_Stop)
        {
            blink_Stop = 1;
 174:	e1 e0       	ldi	r30, 0x01	; 1
        
        
        //Ausgabe------------------------------------------------------------------
        if (blink_Pause)
        {
            if (timerBlink_Pause_ms >= ON_TIME_Pause)
 176:	2d 2d       	mov	r18, r13
 178:	3e 2d       	mov	r19, r14
 17a:	4f 2d       	mov	r20, r15
 17c:	50 2f       	mov	r21, r16
 17e:	61 2f       	mov	r22, r17
 180:	7d 81       	ldd	r23, Y+5	; 0x05
 182:	85 2d       	mov	r24, r5
 184:	96 2d       	mov	r25, r6
 186:	27 3c       	cpi	r18, 0xC7	; 199
 188:	31 05       	cpc	r19, r1
 18a:	41 05       	cpc	r20, r1
 18c:	51 05       	cpc	r21, r1
 18e:	61 05       	cpc	r22, r1
 190:	71 05       	cpc	r23, r1
 192:	81 05       	cpc	r24, r1
 194:	91 05       	cpc	r25, r1
 196:	19 f0       	breq	.+6      	; 0x19e <main+0x7a>
 198:	10 f0       	brcs	.+4      	; 0x19e <main+0x7a>
            {
                outLeds_Pause = OFF;
 19a:	19 82       	std	Y+1, r1	; 0x01
 19c:	1a 82       	std	Y+2, r1	; 0x02
            }
            if (timerBlink_Pause_ms >= PERIOD)
 19e:	2d 2d       	mov	r18, r13
 1a0:	3e 2d       	mov	r19, r14
 1a2:	4f 2d       	mov	r20, r15
 1a4:	50 2f       	mov	r21, r16
 1a6:	61 2f       	mov	r22, r17
 1a8:	7d 81       	ldd	r23, Y+5	; 0x05
 1aa:	85 2d       	mov	r24, r5
 1ac:	96 2d       	mov	r25, r6
 1ae:	29 3f       	cpi	r18, 0xF9	; 249
 1b0:	31 05       	cpc	r19, r1
 1b2:	41 05       	cpc	r20, r1
 1b4:	51 05       	cpc	r21, r1
 1b6:	61 05       	cpc	r22, r1
 1b8:	71 05       	cpc	r23, r1
 1ba:	81 05       	cpc	r24, r1
 1bc:	91 05       	cpc	r25, r1
 1be:	61 f0       	breq	.+24     	; 0x1d8 <main+0xb4>
 1c0:	58 f0       	brcs	.+22     	; 0x1d8 <main+0xb4>
            {
                outLeds_Pause = ON_PAUSE;
                timerBlink_Pause_ms = 0;
 1c2:	d1 2c       	mov	r13, r1
 1c4:	e1 2c       	mov	r14, r1
 1c6:	f1 2c       	mov	r15, r1
 1c8:	00 e0       	ldi	r16, 0x00	; 0
 1ca:	10 e0       	ldi	r17, 0x00	; 0
 1cc:	1d 82       	std	Y+5, r1	; 0x05
 1ce:	51 2c       	mov	r5, r1
 1d0:	61 2c       	mov	r6, r1
            {
                outLeds_Pause = OFF;
            }
            if (timerBlink_Pause_ms >= PERIOD)
            {
                outLeds_Pause = ON_PAUSE;
 1d2:	2f ef       	ldi	r18, 0xFF	; 255
 1d4:	29 83       	std	Y+1, r18	; 0x01
 1d6:	1a 82       	std	Y+2, r1	; 0x02
        else
        {
            timerBlink_Pause_ms = PERIOD;
        }
        
        if (blink_Stop)
 1d8:	ee 23       	and	r30, r30
 1da:	09 f4       	brne	.+2      	; 0x1de <main+0xba>
 1dc:	40 c0       	rjmp	.+128    	; 0x25e <main+0x13a>
 1de:	0d c0       	rjmp	.+26     	; 0x1fa <main+0xd6>
                timerBlink_Pause_ms = 0;
            }
        }
        else
        {
            timerBlink_Pause_ms = PERIOD;
 1e0:	0f 2e       	mov	r0, r31
 1e2:	fa ef       	ldi	r31, 0xFA	; 250
 1e4:	df 2e       	mov	r13, r31
 1e6:	f0 2d       	mov	r31, r0
 1e8:	e1 2c       	mov	r14, r1
 1ea:	f1 2c       	mov	r15, r1
 1ec:	00 e0       	ldi	r16, 0x00	; 0
 1ee:	10 e0       	ldi	r17, 0x00	; 0
 1f0:	1d 82       	std	Y+5, r1	; 0x05
 1f2:	51 2c       	mov	r5, r1
 1f4:	61 2c       	mov	r6, r1
            blink_Pause = 1;
        }
        else
        {
            blink_Pause = 0;
            outLeds_Pause = OFF;
 1f6:	19 82       	std	Y+1, r1	; 0x01
 1f8:	1a 82       	std	Y+2, r1	; 0x02
            timerBlink_Pause_ms = PERIOD;
        }
        
        if (blink_Stop)
        {
            if (timerBlink_Stop_ms >= ON_TIME_STOP)
 1fa:	27 2d       	mov	r18, r7
 1fc:	38 2d       	mov	r19, r8
 1fe:	49 2d       	mov	r20, r9
 200:	5a 2d       	mov	r21, r10
 202:	6b 2d       	mov	r22, r11
 204:	7c 2d       	mov	r23, r12
 206:	83 2d       	mov	r24, r3
 208:	94 2d       	mov	r25, r4
 20a:	2f 38       	cpi	r18, 0x8F	; 143
 20c:	31 40       	sbci	r19, 0x01	; 1
 20e:	41 05       	cpc	r20, r1
 210:	51 05       	cpc	r21, r1
 212:	61 05       	cpc	r22, r1
 214:	71 05       	cpc	r23, r1
 216:	81 05       	cpc	r24, r1
 218:	91 05       	cpc	r25, r1
 21a:	19 f0       	breq	.+6      	; 0x222 <main+0xfe>
 21c:	10 f0       	brcs	.+4      	; 0x222 <main+0xfe>
            {
                outLeds_Stop = OFF;
 21e:	1b 82       	std	Y+3, r1	; 0x03
 220:	1c 82       	std	Y+4, r1	; 0x04
            }
            if (timerBlink_Stop_ms >= PERIOD_STOP)
 222:	27 2d       	mov	r18, r7
 224:	38 2d       	mov	r19, r8
 226:	49 2d       	mov	r20, r9
 228:	5a 2d       	mov	r21, r10
 22a:	6b 2d       	mov	r22, r11
 22c:	7c 2d       	mov	r23, r12
 22e:	83 2d       	mov	r24, r3
 230:	94 2d       	mov	r25, r4
 232:	23 3f       	cpi	r18, 0xF3	; 243
 234:	31 40       	sbci	r19, 0x01	; 1
 236:	41 05       	cpc	r20, r1
 238:	51 05       	cpc	r21, r1
 23a:	61 05       	cpc	r22, r1
 23c:	71 05       	cpc	r23, r1
 23e:	81 05       	cpc	r24, r1
 240:	91 05       	cpc	r25, r1
 242:	c9 f0       	breq	.+50     	; 0x276 <main+0x152>
 244:	c0 f0       	brcs	.+48     	; 0x276 <main+0x152>
            {
                outLeds_Stop = ON_STOP;
                timerBlink_Stop_ms = 0;
 246:	71 2c       	mov	r7, r1
 248:	81 2c       	mov	r8, r1
 24a:	91 2c       	mov	r9, r1
 24c:	a1 2c       	mov	r10, r1
 24e:	b1 2c       	mov	r11, r1
 250:	c1 2c       	mov	r12, r1
 252:	31 2c       	mov	r3, r1
 254:	41 2c       	mov	r4, r1
            {
                outLeds_Stop = OFF;
            }
            if (timerBlink_Stop_ms >= PERIOD_STOP)
            {
                outLeds_Stop = ON_STOP;
 256:	1b 82       	std	Y+3, r1	; 0x03
 258:	2f ef       	ldi	r18, 0xFF	; 255
 25a:	2c 83       	std	Y+4, r18	; 0x04
 25c:	0c c0       	rjmp	.+24     	; 0x276 <main+0x152>
                timerBlink_Stop_ms = 0;
            }
        }
        else
        {
            timerBlink_Stop_ms = PERIOD_STOP;
 25e:	0f 2e       	mov	r0, r31
 260:	f4 ef       	ldi	r31, 0xF4	; 244
 262:	7f 2e       	mov	r7, r31
 264:	f0 2d       	mov	r31, r0
 266:	88 24       	eor	r8, r8
 268:	83 94       	inc	r8
 26a:	91 2c       	mov	r9, r1
 26c:	a1 2c       	mov	r10, r1
 26e:	b1 2c       	mov	r11, r1
 270:	c1 2c       	mov	r12, r1
 272:	31 2c       	mov	r3, r1
 274:	41 2c       	mov	r4, r1
        }
        
        
        ledWriteAll(outLeds_Pause | outLeds_Stop);
 276:	8b 81       	ldd	r24, Y+3	; 0x03
 278:	9c 81       	ldd	r25, Y+4	; 0x04
 27a:	e9 81       	ldd	r30, Y+1	; 0x01
 27c:	fa 81       	ldd	r31, Y+2	; 0x02
 27e:	8e 2b       	or	r24, r30
 280:	9f 2b       	or	r25, r31
 282:	4f d0       	rcall	.+158    	; 0x322 <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 284:	8f e3       	ldi	r24, 0x3F	; 63
 286:	9c e9       	ldi	r25, 0x9C	; 156
 288:	01 97       	sbiw	r24, 0x01	; 1
 28a:	f1 f7       	brne	.-4      	; 0x288 <main+0x164>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x16a>
 28e:	00 00       	nop
       
        
        //Warten-------------------------------------------------------------------
        _delay_ms(SYSTEM_TICK_MS);
        timerBlink_Pause_ms = timerBlink_Pause_ms + SYSTEM_TICK_MS;
 290:	2d 2d       	mov	r18, r13
 292:	3e 2d       	mov	r19, r14
 294:	4f 2d       	mov	r20, r15
 296:	50 2f       	mov	r21, r16
 298:	61 2f       	mov	r22, r17
 29a:	7d 81       	ldd	r23, Y+5	; 0x05
 29c:	85 2d       	mov	r24, r5
 29e:	96 2d       	mov	r25, r6
 2a0:	aa e0       	ldi	r26, 0x0A	; 10
 2a2:	6c d3       	rcall	.+1752   	; 0x97c <__adddi3_s8>
 2a4:	d2 2e       	mov	r13, r18
 2a6:	e3 2e       	mov	r14, r19
 2a8:	f4 2e       	mov	r15, r20
 2aa:	05 2f       	mov	r16, r21
 2ac:	16 2f       	mov	r17, r22
 2ae:	7d 83       	std	Y+5, r23	; 0x05
 2b0:	58 2e       	mov	r5, r24
 2b2:	69 2e       	mov	r6, r25
        timerBlink_Stop_ms = timerBlink_Stop_ms + SYSTEM_TICK_MS;
 2b4:	27 2d       	mov	r18, r7
 2b6:	38 2d       	mov	r19, r8
 2b8:	49 2d       	mov	r20, r9
 2ba:	5a 2d       	mov	r21, r10
 2bc:	6b 2d       	mov	r22, r11
 2be:	7c 2d       	mov	r23, r12
 2c0:	83 2d       	mov	r24, r3
 2c2:	94 2d       	mov	r25, r4
 2c4:	5b d3       	rcall	.+1718   	; 0x97c <__adddi3_s8>
 2c6:	72 2e       	mov	r7, r18
 2c8:	83 2e       	mov	r8, r19
 2ca:	94 2e       	mov	r9, r20
 2cc:	a5 2e       	mov	r10, r21
 2ce:	b6 2e       	mov	r11, r22
 2d0:	c7 2e       	mov	r12, r23
 2d2:	38 2e       	mov	r3, r24
 2d4:	49 2e       	mov	r4, r25
    }
 2d6:	43 cf       	rjmp	.-378    	; 0x15e <main+0x3a>
            outLeds_Stop = OFF;
        }
        
        
        //Ausgabe------------------------------------------------------------------
        if (blink_Pause)
 2d8:	81 11       	cpse	r24, r1
 2da:	48 cf       	rjmp	.-368    	; 0x16c <main+0x48>
                timerBlink_Pause_ms = 0;
            }
        }
        else
        {
            timerBlink_Pause_ms = PERIOD;
 2dc:	0f 2e       	mov	r0, r31
 2de:	fa ef       	ldi	r31, 0xFA	; 250
 2e0:	df 2e       	mov	r13, r31
 2e2:	f0 2d       	mov	r31, r0
 2e4:	e1 2c       	mov	r14, r1
 2e6:	f1 2c       	mov	r15, r1
 2e8:	00 e0       	ldi	r16, 0x00	; 0
 2ea:	10 e0       	ldi	r17, 0x00	; 0
 2ec:	1d 82       	std	Y+5, r1	; 0x05
 2ee:	51 2c       	mov	r5, r1
 2f0:	61 2c       	mov	r6, r1
                timerBlink_Stop_ms = 0;
            }
        }
        else
        {
            timerBlink_Stop_ms = PERIOD_STOP;
 2f2:	0f 2e       	mov	r0, r31
 2f4:	f4 ef       	ldi	r31, 0xF4	; 244
 2f6:	7f 2e       	mov	r7, r31
 2f8:	f0 2d       	mov	r31, r0
 2fa:	88 24       	eor	r8, r8
 2fc:	83 94       	inc	r8
 2fe:	91 2c       	mov	r9, r1
 300:	a1 2c       	mov	r10, r1
 302:	b1 2c       	mov	r11, r1
 304:	c1 2c       	mov	r12, r1
 306:	31 2c       	mov	r3, r1
 308:	41 2c       	mov	r4, r1
            blink_Stop = 1;
        }
        else
        {
            blink_Stop = 0;
            outLeds_Stop = OFF;
 30a:	1b 82       	std	Y+3, r1	; 0x03
 30c:	1c 82       	std	Y+4, r1	; 0x04
 30e:	b3 cf       	rjmp	.-154    	; 0x276 <main+0x152>
        else
        {
            blink_Pause = 0;
            outLeds_Pause = OFF;
        }
        if (inPower_Stop)
 310:	81 11       	cpse	r24, r1
 312:	66 cf       	rjmp	.-308    	; 0x1e0 <main+0xbc>
            blink_Pause = 1;
        }
        else
        {
            blink_Pause = 0;
            outLeds_Pause = OFF;
 314:	19 82       	std	Y+1, r1	; 0x01
 316:	1a 82       	std	Y+2, r1	; 0x02
 318:	df cf       	rjmp	.-66     	; 0x2d8 <main+0x1b4>
        }
        if (inPower_Stop)
 31a:	81 11       	cpse	r24, r1
 31c:	2b cf       	rjmp	.-426    	; 0x174 <main+0x50>
        inPower_Pause = switchReadAll() & IN_MASK_Pause;
        inPower_Stop = switchReadAll() & IN_MASK_STOP;
        //Verarbeitung-------------------------------------------------------------
        if (inPower_Pause)
        {
            blink_Pause = 1;
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	db cf       	rjmp	.-74     	; 0x2d8 <main+0x1b4>

00000322 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 322:	82 b9       	out	0x02, r24	; 2
 324:	95 b9       	out	0x05, r25	; 5
 326:	08 95       	ret

00000328 <switchReadAll>:
 328:	86 b1       	in	r24, 0x06	; 6
 32a:	08 95       	ret

0000032c <startSystemTimeMs>:
 32c:	83 e0       	ldi	r24, 0x03	; 3
 32e:	84 bd       	out	0x24, r24	; 36
 330:	8b e0       	ldi	r24, 0x0B	; 11
 332:	85 bd       	out	0x25, r24	; 37
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 33a:	89 ef       	ldi	r24, 0xF9	; 249
 33c:	87 bd       	out	0x27, r24	; 39
 33e:	08 95       	ret

00000340 <initAdc>:
 340:	11 ba       	out	0x11, r1	; 17
 342:	10 ba       	out	0x10, r1	; 16
 344:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 348:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 34c:	80 e4       	ldi	r24, 0x40	; 64
 34e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 352:	8f e0       	ldi	r24, 0x0F	; 15
 354:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 358:	8f ef       	ldi	r24, 0xFF	; 255
 35a:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 35e:	ea e7       	ldi	r30, 0x7A	; 122
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	87 ea       	ldi	r24, 0xA7	; 167
 364:	80 83       	st	Z, r24
 366:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 36a:	80 81       	ld	r24, Z
 36c:	80 64       	ori	r24, 0x40	; 64
 36e:	80 83       	st	Z, r24
 370:	80 81       	ld	r24, Z
 372:	84 ff       	sbrs	r24, 4
 374:	fd cf       	rjmp	.-6      	; 0x370 <initAdc+0x30>
 376:	ea e7       	ldi	r30, 0x7A	; 122
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	8f 7e       	andi	r24, 0xEF	; 239
 37e:	80 83       	st	Z, r24
 380:	08 95       	ret

00000382 <rgbWrite>:
 382:	2f ef       	ldi	r18, 0xFF	; 255
 384:	33 e0       	ldi	r19, 0x03	; 3
 386:	f9 01       	movw	r30, r18
 388:	e8 1b       	sub	r30, r24
 38a:	f9 0b       	sbc	r31, r25
 38c:	c9 01       	movw	r24, r18
 38e:	86 1b       	sub	r24, r22
 390:	97 0b       	sbc	r25, r23
 392:	24 1b       	sub	r18, r20
 394:	35 0b       	sbc	r19, r21
 396:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 39a:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 39e:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 3a2:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 3a6:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 3aa:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 3ae:	08 95       	ret

000003b0 <initRgb>:
 3b0:	8e ef       	ldi	r24, 0xFE	; 254
 3b2:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 3b6:	8b e1       	ldi	r24, 0x1B	; 27
 3b8:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 3bc:	83 e0       	ldi	r24, 0x03	; 3
 3be:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 3c2:	8f ef       	ldi	r24, 0xFF	; 255
 3c4:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 3c8:	40 e0       	ldi	r20, 0x00	; 0
 3ca:	50 e0       	ldi	r21, 0x00	; 0
 3cc:	60 e0       	ldi	r22, 0x00	; 0
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	d6 cf       	rjmp	.-84     	; 0x382 <rgbWrite>
 3d6:	08 95       	ret

000003d8 <lcdSid>:
 3d8:	88 23       	and	r24, r24
 3da:	11 f0       	breq	.+4      	; 0x3e0 <lcdSid+0x8>
 3dc:	a0 9a       	sbi	0x14, 0	; 20
 3de:	08 95       	ret
 3e0:	a0 98       	cbi	0x14, 0	; 20
 3e2:	08 95       	ret

000003e4 <lcdSclk>:
 3e4:	88 23       	and	r24, r24
 3e6:	11 f0       	breq	.+4      	; 0x3ec <lcdSclk+0x8>
 3e8:	a1 9a       	sbi	0x14, 1	; 20
 3ea:	08 95       	ret
 3ec:	a1 98       	cbi	0x14, 1	; 20
 3ee:	08 95       	ret

000003f0 <lcdLight>:
 3f0:	81 11       	cpse	r24, r1
 3f2:	04 c0       	rjmp	.+8      	; 0x3fc <lcdLight+0xc>
 3f4:	84 b5       	in	r24, 0x24	; 36
 3f6:	8f 7d       	andi	r24, 0xDF	; 223
 3f8:	84 bd       	out	0x24, r24	; 36
 3fa:	08 95       	ret
 3fc:	94 b5       	in	r25, 0x24	; 36
 3fe:	90 62       	ori	r25, 0x20	; 32
 400:	94 bd       	out	0x24, r25	; 36
 402:	88 bd       	out	0x28, r24	; 40
 404:	08 95       	ret

00000406 <writeLcdF>:
 406:	ef 92       	push	r14
 408:	ff 92       	push	r15
 40a:	0f 93       	push	r16
 40c:	1f 93       	push	r17
 40e:	cf 93       	push	r28
 410:	df 93       	push	r29
 412:	7c 01       	movw	r14, r24
 414:	eb 01       	movw	r28, r22
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	df df       	rcall	.-66     	; 0x3d8 <lcdSid>
 41a:	05 e0       	ldi	r16, 0x05	; 5
 41c:	10 e0       	ldi	r17, 0x00	; 0
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	e1 df       	rcall	.-62     	; 0x3e4 <lcdSclk>
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	df df       	rcall	.-66     	; 0x3e4 <lcdSclk>
 426:	01 50       	subi	r16, 0x01	; 1
 428:	11 09       	sbc	r17, r1
 42a:	c9 f7       	brne	.-14     	; 0x41e <writeLcdF+0x18>
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	d4 df       	rcall	.-88     	; 0x3d8 <lcdSid>
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	d8 df       	rcall	.-80     	; 0x3e4 <lcdSclk>
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	d6 df       	rcall	.-84     	; 0x3e4 <lcdSclk>
 438:	83 e4       	ldi	r24, 0x43	; 67
 43a:	e8 16       	cp	r14, r24
 43c:	f1 04       	cpc	r15, r1
 43e:	19 f4       	brne	.+6      	; 0x446 <writeLcdF+0x40>
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	ca df       	rcall	.-108    	; 0x3d8 <lcdSid>
 444:	02 c0       	rjmp	.+4      	; 0x44a <writeLcdF+0x44>
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	c7 df       	rcall	.-114    	; 0x3d8 <lcdSid>
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	cb df       	rcall	.-106    	; 0x3e4 <lcdSclk>
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	c9 df       	rcall	.-110    	; 0x3e4 <lcdSclk>
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	c1 df       	rcall	.-126    	; 0x3d8 <lcdSid>
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	c5 df       	rcall	.-118    	; 0x3e4 <lcdSclk>
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	c3 df       	rcall	.-122    	; 0x3e4 <lcdSclk>
 45e:	04 e0       	ldi	r16, 0x04	; 4
 460:	10 e0       	ldi	r17, 0x00	; 0
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	bf df       	rcall	.-130    	; 0x3e4 <lcdSclk>
 466:	c0 ff       	sbrs	r28, 0
 468:	03 c0       	rjmp	.+6      	; 0x470 <writeLcdF+0x6a>
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	b5 df       	rcall	.-150    	; 0x3d8 <lcdSid>
 46e:	02 c0       	rjmp	.+4      	; 0x474 <writeLcdF+0x6e>
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	b2 df       	rcall	.-156    	; 0x3d8 <lcdSid>
 474:	d6 95       	lsr	r29
 476:	c7 95       	ror	r28
 478:	80 e0       	ldi	r24, 0x00	; 0
 47a:	b4 df       	rcall	.-152    	; 0x3e4 <lcdSclk>
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	b2 df       	rcall	.-156    	; 0x3e4 <lcdSclk>
 480:	01 50       	subi	r16, 0x01	; 1
 482:	11 09       	sbc	r17, r1
 484:	71 f7       	brne	.-36     	; 0x462 <writeLcdF+0x5c>
 486:	80 e0       	ldi	r24, 0x00	; 0
 488:	a7 df       	rcall	.-178    	; 0x3d8 <lcdSid>
 48a:	04 e0       	ldi	r16, 0x04	; 4
 48c:	10 e0       	ldi	r17, 0x00	; 0
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	a9 df       	rcall	.-174    	; 0x3e4 <lcdSclk>
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	a7 df       	rcall	.-178    	; 0x3e4 <lcdSclk>
 496:	01 50       	subi	r16, 0x01	; 1
 498:	11 09       	sbc	r17, r1
 49a:	c9 f7       	brne	.-14     	; 0x48e <writeLcdF+0x88>
 49c:	04 e0       	ldi	r16, 0x04	; 4
 49e:	10 e0       	ldi	r17, 0x00	; 0
 4a0:	80 e0       	ldi	r24, 0x00	; 0
 4a2:	a0 df       	rcall	.-192    	; 0x3e4 <lcdSclk>
 4a4:	c0 ff       	sbrs	r28, 0
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <writeLcdF+0xa8>
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	96 df       	rcall	.-212    	; 0x3d8 <lcdSid>
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <writeLcdF+0xac>
 4ae:	80 e0       	ldi	r24, 0x00	; 0
 4b0:	93 df       	rcall	.-218    	; 0x3d8 <lcdSid>
 4b2:	d6 95       	lsr	r29
 4b4:	c7 95       	ror	r28
 4b6:	80 e0       	ldi	r24, 0x00	; 0
 4b8:	95 df       	rcall	.-214    	; 0x3e4 <lcdSclk>
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	93 df       	rcall	.-218    	; 0x3e4 <lcdSclk>
 4be:	01 50       	subi	r16, 0x01	; 1
 4c0:	11 09       	sbc	r17, r1
 4c2:	71 f7       	brne	.-36     	; 0x4a0 <writeLcdF+0x9a>
 4c4:	80 e0       	ldi	r24, 0x00	; 0
 4c6:	88 df       	rcall	.-240    	; 0x3d8 <lcdSid>
 4c8:	c4 e0       	ldi	r28, 0x04	; 4
 4ca:	d0 e0       	ldi	r29, 0x00	; 0
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	8a df       	rcall	.-236    	; 0x3e4 <lcdSclk>
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	88 df       	rcall	.-240    	; 0x3e4 <lcdSclk>
 4d4:	21 97       	sbiw	r28, 0x01	; 1
 4d6:	d1 f7       	brne	.-12     	; 0x4cc <writeLcdF+0xc6>
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	7e df       	rcall	.-260    	; 0x3d8 <lcdSid>
 4dc:	87 ec       	ldi	r24, 0xC7	; 199
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	01 97       	sbiw	r24, 0x01	; 1
 4e2:	f1 f7       	brne	.-4      	; 0x4e0 <writeLcdF+0xda>
 4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <writeLcdF+0xe0>
 4e6:	00 00       	nop
 4e8:	df 91       	pop	r29
 4ea:	cf 91       	pop	r28
 4ec:	1f 91       	pop	r17
 4ee:	0f 91       	pop	r16
 4f0:	ff 90       	pop	r15
 4f2:	ef 90       	pop	r14
 4f4:	08 95       	ret

000004f6 <lcdWriteText>:
 4f6:	1f 93       	push	r17
 4f8:	cf 93       	push	r28
 4fa:	df 93       	push	r29
 4fc:	cd b7       	in	r28, 0x3d	; 61
 4fe:	de b7       	in	r29, 0x3e	; 62
 500:	65 97       	sbiw	r28, 0x15	; 21
 502:	0f b6       	in	r0, 0x3f	; 63
 504:	f8 94       	cli
 506:	de bf       	out	0x3e, r29	; 62
 508:	0f be       	out	0x3f, r0	; 63
 50a:	cd bf       	out	0x3d, r28	; 61
 50c:	9e 01       	movw	r18, r28
 50e:	20 5e       	subi	r18, 0xE0	; 224
 510:	3f 4f       	sbci	r19, 0xFF	; 255
 512:	4e 8d       	ldd	r20, Y+30	; 0x1e
 514:	5f 8d       	ldd	r21, Y+31	; 0x1f
 516:	65 e1       	ldi	r22, 0x15	; 21
 518:	70 e0       	ldi	r23, 0x00	; 0
 51a:	ce 01       	movw	r24, r28
 51c:	01 96       	adiw	r24, 0x01	; 1
 51e:	3a d2       	rcall	.+1140   	; 0x994 <vsnprintf>
 520:	6d 8d       	ldd	r22, Y+29	; 0x1d
 522:	8c 8d       	ldd	r24, Y+28	; 0x1c
 524:	90 e2       	ldi	r25, 0x20	; 32
 526:	89 9f       	mul	r24, r25
 528:	60 0d       	add	r22, r0
 52a:	11 24       	eor	r1, r1
 52c:	60 68       	ori	r22, 0x80	; 128
 52e:	70 e0       	ldi	r23, 0x00	; 0
 530:	83 e4       	ldi	r24, 0x43	; 67
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	68 df       	rcall	.-304    	; 0x406 <writeLcdF>
 536:	69 81       	ldd	r22, Y+1	; 0x01
 538:	66 23       	and	r22, r22
 53a:	79 f0       	breq	.+30     	; 0x55a <lcdWriteText+0x64>
 53c:	10 e0       	ldi	r17, 0x00	; 0
 53e:	1f 5f       	subi	r17, 0xFF	; 255
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	84 e4       	ldi	r24, 0x44	; 68
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	5f df       	rcall	.-322    	; 0x406 <writeLcdF>
 548:	e1 e0       	ldi	r30, 0x01	; 1
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	ec 0f       	add	r30, r28
 54e:	fd 1f       	adc	r31, r29
 550:	e1 0f       	add	r30, r17
 552:	f1 1d       	adc	r31, r1
 554:	60 81       	ld	r22, Z
 556:	61 11       	cpse	r22, r1
 558:	f2 cf       	rjmp	.-28     	; 0x53e <lcdWriteText+0x48>
 55a:	65 96       	adiw	r28, 0x15	; 21
 55c:	0f b6       	in	r0, 0x3f	; 63
 55e:	f8 94       	cli
 560:	de bf       	out	0x3e, r29	; 62
 562:	0f be       	out	0x3f, r0	; 63
 564:	cd bf       	out	0x3d, r28	; 61
 566:	df 91       	pop	r29
 568:	cf 91       	pop	r28
 56a:	1f 91       	pop	r17
 56c:	08 95       	ret

0000056e <lcdClear>:
 56e:	61 e0       	ldi	r22, 0x01	; 1
 570:	70 e0       	ldi	r23, 0x00	; 0
 572:	83 e4       	ldi	r24, 0x43	; 67
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	47 df       	rcall	.-370    	; 0x406 <writeLcdF>
 578:	8f e3       	ldi	r24, 0x3F	; 63
 57a:	9f e1       	ldi	r25, 0x1F	; 31
 57c:	01 97       	sbiw	r24, 0x01	; 1
 57e:	f1 f7       	brne	.-4      	; 0x57c <lcdClear+0xe>
 580:	00 c0       	rjmp	.+0      	; 0x582 <lcdClear+0x14>
 582:	00 00       	nop
 584:	80 e3       	ldi	r24, 0x30	; 48
 586:	92 e0       	ldi	r25, 0x02	; 2
 588:	9f 93       	push	r25
 58a:	8f 93       	push	r24
 58c:	1f 92       	push	r1
 58e:	1f 92       	push	r1
 590:	b2 df       	rcall	.-156    	; 0x4f6 <lcdWriteText>
 592:	0f 90       	pop	r0
 594:	0f 90       	pop	r0
 596:	0f 90       	pop	r0
 598:	0f 90       	pop	r0
 59a:	08 95       	ret

0000059c <initLcd>:
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	22 df       	rcall	.-444    	; 0x3e4 <lcdSclk>
 5a0:	80 e0       	ldi	r24, 0x00	; 0
 5a2:	1a df       	rcall	.-460    	; 0x3d8 <lcdSid>
 5a4:	64 e3       	ldi	r22, 0x34	; 52
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	83 e4       	ldi	r24, 0x43	; 67
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	2c df       	rcall	.-424    	; 0x406 <writeLcdF>
 5ae:	69 e0       	ldi	r22, 0x09	; 9
 5b0:	70 e0       	ldi	r23, 0x00	; 0
 5b2:	83 e4       	ldi	r24, 0x43	; 67
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	27 df       	rcall	.-434    	; 0x406 <writeLcdF>
 5b8:	60 e3       	ldi	r22, 0x30	; 48
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	83 e4       	ldi	r24, 0x43	; 67
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	22 df       	rcall	.-444    	; 0x406 <writeLcdF>
 5c2:	6c e0       	ldi	r22, 0x0C	; 12
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	83 e4       	ldi	r24, 0x43	; 67
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	1d df       	rcall	.-454    	; 0x406 <writeLcdF>
 5cc:	d0 df       	rcall	.-96     	; 0x56e <lcdClear>
 5ce:	67 e0       	ldi	r22, 0x07	; 7
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	83 e4       	ldi	r24, 0x43	; 67
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	17 df       	rcall	.-466    	; 0x406 <writeLcdF>
 5d8:	80 e0       	ldi	r24, 0x00	; 0
 5da:	0a cf       	rjmp	.-492    	; 0x3f0 <lcdLight>
 5dc:	08 95       	ret

000005de <initBoard>:
 5de:	4f 92       	push	r4
 5e0:	5f 92       	push	r5
 5e2:	6f 92       	push	r6
 5e4:	7f 92       	push	r7
 5e6:	8f 92       	push	r8
 5e8:	9f 92       	push	r9
 5ea:	af 92       	push	r10
 5ec:	bf 92       	push	r11
 5ee:	cf 92       	push	r12
 5f0:	df 92       	push	r13
 5f2:	ef 92       	push	r14
 5f4:	ff 92       	push	r15
 5f6:	0f 93       	push	r16
 5f8:	1f 93       	push	r17
 5fa:	cf 93       	push	r28
 5fc:	df 93       	push	r29
 5fe:	c8 2f       	mov	r28, r24
 600:	85 b7       	in	r24, 0x35	; 53
 602:	85 bf       	out	0x35, r24	; 53
 604:	12 b8       	out	0x02, r1	; 2
 606:	8f ef       	ldi	r24, 0xFF	; 255
 608:	81 b9       	out	0x01, r24	; 1
 60a:	15 b8       	out	0x05, r1	; 5
 60c:	84 b9       	out	0x04, r24	; 4
 60e:	88 b9       	out	0x08, r24	; 8
 610:	17 b8       	out	0x07, r1	; 7
 612:	8b b9       	out	0x0b, r24	; 11
 614:	1a b8       	out	0x0a, r1	; 10
 616:	8e b9       	out	0x0e, r24	; 14
 618:	1d b8       	out	0x0d, r1	; 13
 61a:	72 98       	cbi	0x0e, 2	; 14
 61c:	11 ba       	out	0x11, r1	; 17
 61e:	10 ba       	out	0x10, r1	; 16
 620:	94 e0       	ldi	r25, 0x04	; 4
 622:	94 bb       	out	0x14, r25	; 20
 624:	93 b3       	in	r25, 0x13	; 19
 626:	93 60       	ori	r25, 0x03	; 3
 628:	93 bb       	out	0x13, r25	; 19
 62a:	9d 9a       	sbi	0x13, 5	; 19
 62c:	97 ec       	ldi	r25, 0xC7	; 199
 62e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 632:	98 e3       	ldi	r25, 0x38	; 56
 634:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 638:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 63c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 640:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 644:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 648:	8c e3       	ldi	r24, 0x3C	; 60
 64a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 64e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 652:	78 94       	sei
 654:	6b de       	rcall	.-810    	; 0x32c <startSystemTimeMs>
 656:	a2 df       	rcall	.-188    	; 0x59c <initLcd>
 658:	73 de       	rcall	.-794    	; 0x340 <initAdc>
 65a:	aa de       	rcall	.-684    	; 0x3b0 <initRgb>
 65c:	cc 23       	and	r28, r28
 65e:	09 f4       	brne	.+2      	; 0x662 <initBoard+0x84>
 660:	b8 c0       	rjmp	.+368    	; 0x7d2 <initBoard+0x1f4>
 662:	8f ef       	ldi	r24, 0xFF	; 255
 664:	c5 de       	rcall	.-630    	; 0x3f0 <lcdLight>
 666:	40 e0       	ldi	r20, 0x00	; 0
 668:	50 e0       	ldi	r21, 0x00	; 0
 66a:	6f ef       	ldi	r22, 0xFF	; 255
 66c:	73 e0       	ldi	r23, 0x03	; 3
 66e:	80 e0       	ldi	r24, 0x00	; 0
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	87 de       	rcall	.-754    	; 0x382 <rgbWrite>
 674:	8d e1       	ldi	r24, 0x1D	; 29
 676:	92 e0       	ldi	r25, 0x02	; 2
 678:	9f 93       	push	r25
 67a:	8f 93       	push	r24
 67c:	1f 92       	push	r1
 67e:	1f 92       	push	r1
 680:	3a df       	rcall	.-396    	; 0x4f6 <lcdWriteText>
 682:	82 e3       	ldi	r24, 0x32	; 50
 684:	92 e0       	ldi	r25, 0x02	; 2
 686:	9f 93       	push	r25
 688:	8f 93       	push	r24
 68a:	1f 92       	push	r1
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	8f 93       	push	r24
 690:	32 df       	rcall	.-412    	; 0x4f6 <lcdWriteText>
 692:	88 e0       	ldi	r24, 0x08	; 8
 694:	92 e0       	ldi	r25, 0x02	; 2
 696:	9f 93       	push	r25
 698:	8f 93       	push	r24
 69a:	1f 92       	push	r1
 69c:	82 e0       	ldi	r24, 0x02	; 2
 69e:	8f 93       	push	r24
 6a0:	2a df       	rcall	.-428    	; 0x4f6 <lcdWriteText>
 6a2:	87 e4       	ldi	r24, 0x47	; 71
 6a4:	92 e0       	ldi	r25, 0x02	; 2
 6a6:	9f 93       	push	r25
 6a8:	8f 93       	push	r24
 6aa:	1f 92       	push	r1
 6ac:	83 e0       	ldi	r24, 0x03	; 3
 6ae:	8f 93       	push	r24
 6b0:	22 df       	rcall	.-444    	; 0x4f6 <lcdWriteText>
 6b2:	8d b7       	in	r24, 0x3d	; 61
 6b4:	9e b7       	in	r25, 0x3e	; 62
 6b6:	40 96       	adiw	r24, 0x10	; 16
 6b8:	0f b6       	in	r0, 0x3f	; 63
 6ba:	f8 94       	cli
 6bc:	9e bf       	out	0x3e, r25	; 62
 6be:	0f be       	out	0x3f, r0	; 63
 6c0:	8d bf       	out	0x3d, r24	; 61
 6c2:	88 24       	eor	r8, r8
 6c4:	83 94       	inc	r8
 6c6:	c0 e0       	ldi	r28, 0x00	; 0
 6c8:	71 2c       	mov	r7, r1
 6ca:	99 24       	eor	r9, r9
 6cc:	93 94       	inc	r9
 6ce:	d0 e0       	ldi	r29, 0x00	; 0
 6d0:	cc 24       	eor	r12, r12
 6d2:	c3 94       	inc	r12
 6d4:	d1 2c       	mov	r13, r1
 6d6:	e1 2c       	mov	r14, r1
 6d8:	68 94       	set
 6da:	ff 24       	eor	r15, r15
 6dc:	f7 f8       	bld	r15, 7
 6de:	66 24       	eor	r6, r6
 6e0:	63 94       	inc	r6
 6e2:	51 2c       	mov	r5, r1
 6e4:	09 e0       	ldi	r16, 0x09	; 9
 6e6:	11 e0       	ldi	r17, 0x01	; 1
 6e8:	0f 2e       	mov	r0, r31
 6ea:	fc e5       	ldi	r31, 0x5C	; 92
 6ec:	af 2e       	mov	r10, r31
 6ee:	f2 e0       	ldi	r31, 0x02	; 2
 6f0:	bf 2e       	mov	r11, r31
 6f2:	f0 2d       	mov	r31, r0
 6f4:	0f 2e       	mov	r0, r31
 6f6:	f3 e0       	ldi	r31, 0x03	; 3
 6f8:	4f 2e       	mov	r4, r31
 6fa:	f0 2d       	mov	r31, r0
 6fc:	99 20       	and	r9, r9
 6fe:	49 f0       	breq	.+18     	; 0x712 <initBoard+0x134>
 700:	c7 01       	movw	r24, r14
 702:	0d 2e       	mov	r0, r29
 704:	02 c0       	rjmp	.+4      	; 0x70a <initBoard+0x12c>
 706:	96 95       	lsr	r25
 708:	87 95       	ror	r24
 70a:	0a 94       	dec	r0
 70c:	e2 f7       	brpl	.-8      	; 0x706 <initBoard+0x128>
 70e:	09 de       	rcall	.-1006   	; 0x322 <ledWriteAll>
 710:	08 c0       	rjmp	.+16     	; 0x722 <initBoard+0x144>
 712:	c6 01       	movw	r24, r12
 714:	0d 2e       	mov	r0, r29
 716:	02 c0       	rjmp	.+4      	; 0x71c <initBoard+0x13e>
 718:	88 0f       	add	r24, r24
 71a:	99 1f       	adc	r25, r25
 71c:	0a 94       	dec	r0
 71e:	e2 f7       	brpl	.-8      	; 0x718 <initBoard+0x13a>
 720:	00 de       	rcall	.-1024   	; 0x322 <ledWriteAll>
 722:	df 5f       	subi	r29, 0xFF	; 255
 724:	d1 31       	cpi	r29, 0x11	; 17
 726:	28 f0       	brcs	.+10     	; 0x732 <initBoard+0x154>
 728:	86 2d       	mov	r24, r6
 72a:	91 10       	cpse	r9, r1
 72c:	85 2d       	mov	r24, r5
 72e:	98 2e       	mov	r9, r24
 730:	d0 e0       	ldi	r29, 0x00	; 0
 732:	88 20       	and	r8, r8
 734:	11 f0       	breq	.+4      	; 0x73a <initBoard+0x15c>
 736:	ce 5f       	subi	r28, 0xFE	; 254
 738:	01 c0       	rjmp	.+2      	; 0x73c <initBoard+0x15e>
 73a:	c2 50       	subi	r28, 0x02	; 2
 73c:	8c 2f       	mov	r24, r28
 73e:	58 de       	rcall	.-848    	; 0x3f0 <lcdLight>
 740:	ce 3f       	cpi	r28, 0xFE	; 254
 742:	21 f0       	breq	.+8      	; 0x74c <initBoard+0x16e>
 744:	c8 37       	cpi	r28, 0x78	; 120
 746:	19 f4       	brne	.+6      	; 0x74e <initBoard+0x170>
 748:	86 2c       	mov	r8, r6
 74a:	01 c0       	rjmp	.+2      	; 0x74e <initBoard+0x170>
 74c:	85 2c       	mov	r8, r5
 74e:	71 10       	cpse	r7, r1
 750:	3b c0       	rjmp	.+118    	; 0x7c8 <initBoard+0x1ea>
 752:	f8 01       	movw	r30, r16
 754:	80 81       	ld	r24, Z
 756:	83 7c       	andi	r24, 0xC3	; 195
 758:	91 f0       	breq	.+36     	; 0x77e <initBoard+0x1a0>
 75a:	40 e0       	ldi	r20, 0x00	; 0
 75c:	50 e0       	ldi	r21, 0x00	; 0
 75e:	66 e2       	ldi	r22, 0x26	; 38
 760:	72 e0       	ldi	r23, 0x02	; 2
 762:	8f ef       	ldi	r24, 0xFF	; 255
 764:	93 e0       	ldi	r25, 0x03	; 3
 766:	0d de       	rcall	.-998    	; 0x382 <rgbWrite>
 768:	bf 92       	push	r11
 76a:	af 92       	push	r10
 76c:	1f 92       	push	r1
 76e:	4f 92       	push	r4
 770:	c2 de       	rcall	.-636    	; 0x4f6 <lcdWriteText>
 772:	0f 90       	pop	r0
 774:	0f 90       	pop	r0
 776:	0f 90       	pop	r0
 778:	0f 90       	pop	r0
 77a:	76 2c       	mov	r7, r6
 77c:	25 c0       	rjmp	.+74     	; 0x7c8 <initBoard+0x1ea>
 77e:	8f ef       	ldi	r24, 0xFF	; 255
 780:	9c e7       	ldi	r25, 0x7C	; 124
 782:	01 97       	sbiw	r24, 0x01	; 1
 784:	f1 f7       	brne	.-4      	; 0x782 <initBoard+0x1a4>
 786:	00 c0       	rjmp	.+0      	; 0x788 <initBoard+0x1aa>
 788:	00 00       	nop
 78a:	b8 cf       	rjmp	.-144    	; 0x6fc <initBoard+0x11e>
 78c:	f0 de       	rcall	.-544    	; 0x56e <lcdClear>
 78e:	80 e0       	ldi	r24, 0x00	; 0
 790:	2f de       	rcall	.-930    	; 0x3f0 <lcdLight>
 792:	80 e0       	ldi	r24, 0x00	; 0
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	c5 dd       	rcall	.-1142   	; 0x322 <ledWriteAll>
 798:	40 e0       	ldi	r20, 0x00	; 0
 79a:	50 e0       	ldi	r21, 0x00	; 0
 79c:	60 e0       	ldi	r22, 0x00	; 0
 79e:	70 e0       	ldi	r23, 0x00	; 0
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	ee dd       	rcall	.-1060   	; 0x382 <rgbWrite>
 7a6:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 7aa:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 7ae:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 7b2:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 7b6:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 7ba:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 7be:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 7c2:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 7c6:	05 c0       	rjmp	.+10     	; 0x7d2 <initBoard+0x1f4>
 7c8:	f8 01       	movw	r30, r16
 7ca:	80 81       	ld	r24, Z
 7cc:	83 7c       	andi	r24, 0xC3	; 195
 7ce:	b9 f6       	brne	.-82     	; 0x77e <initBoard+0x1a0>
 7d0:	dd cf       	rjmp	.-70     	; 0x78c <initBoard+0x1ae>
 7d2:	df 91       	pop	r29
 7d4:	cf 91       	pop	r28
 7d6:	1f 91       	pop	r17
 7d8:	0f 91       	pop	r16
 7da:	ff 90       	pop	r15
 7dc:	ef 90       	pop	r14
 7de:	df 90       	pop	r13
 7e0:	cf 90       	pop	r12
 7e2:	bf 90       	pop	r11
 7e4:	af 90       	pop	r10
 7e6:	9f 90       	pop	r9
 7e8:	8f 90       	pop	r8
 7ea:	7f 90       	pop	r7
 7ec:	6f 90       	pop	r6
 7ee:	5f 90       	pop	r5
 7f0:	4f 90       	pop	r4
 7f2:	08 95       	ret

000007f4 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	cd b7       	in	r28, 0x3d	; 61
 7fa:	de b7       	in	r29, 0x3e	; 62
 7fc:	28 97       	sbiw	r28, 0x08	; 8
 7fe:	0f b6       	in	r0, 0x3f	; 63
 800:	f8 94       	cli
 802:	de bf       	out	0x3e, r29	; 62
 804:	0f be       	out	0x3f, r0	; 63
 806:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 808:	88 e0       	ldi	r24, 0x08	; 8
 80a:	e0 e0       	ldi	r30, 0x00	; 0
 80c:	f2 e0       	ldi	r31, 0x02	; 2
 80e:	de 01       	movw	r26, r28
 810:	11 96       	adiw	r26, 0x01	; 1
 812:	01 90       	ld	r0, Z+
 814:	0d 92       	st	X+, r0
 816:	8a 95       	dec	r24
 818:	e1 f7       	brne	.-8      	; 0x812 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 81a:	e5 e0       	ldi	r30, 0x05	; 5
 81c:	f1 e0       	ldi	r31, 0x01	; 1
 81e:	80 81       	ld	r24, Z
 820:	8f 7b       	andi	r24, 0xBF	; 191
 822:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 824:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 828:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 82c:	81 e0       	ldi	r24, 0x01	; 1
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	8c 0f       	add	r24, r28
 832:	9d 1f       	adc	r25, r29
 834:	e8 0f       	add	r30, r24
 836:	f9 1f       	adc	r31, r25
 838:	80 81       	ld	r24, Z
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 840:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 844:	a2 ef       	ldi	r26, 0xF2	; 242
 846:	b2 e0       	ldi	r27, 0x02	; 2
 848:	22 e8       	ldi	r18, 0x82	; 130
 84a:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 84c:	e5 e0       	ldi	r30, 0x05	; 5
 84e:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 850:	5e 91       	ld	r21, -X
 852:	4e 91       	ld	r20, -X
 854:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 858:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 85c:	84 23       	and	r24, r20
 85e:	95 23       	and	r25, r21
 860:	89 2b       	or	r24, r25
 862:	21 f0       	breq	.+8      	; 0x86c <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 864:	80 81       	ld	r24, Z
 866:	80 62       	ori	r24, 0x20	; 32
 868:	80 83       	st	Z, r24
 86a:	03 c0       	rjmp	.+6      	; 0x872 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 86c:	80 81       	ld	r24, Z
 86e:	8f 7d       	andi	r24, 0xDF	; 223
 870:	80 83       	st	Z, r24
        }
        CLOCK_1;
 872:	80 81       	ld	r24, Z
 874:	80 61       	ori	r24, 0x10	; 16
 876:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 878:	80 81       	ld	r24, Z
 87a:	8f 7e       	andi	r24, 0xEF	; 239
 87c:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 87e:	a2 17       	cp	r26, r18
 880:	b3 07       	cpc	r27, r19
 882:	31 f7       	brne	.-52     	; 0x850 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 884:	e5 e0       	ldi	r30, 0x05	; 5
 886:	f1 e0       	ldi	r31, 0x01	; 1
 888:	80 81       	ld	r24, Z
 88a:	87 7f       	andi	r24, 0xF7	; 247
 88c:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 88e:	80 81       	ld	r24, Z
 890:	88 7f       	andi	r24, 0xF8	; 248
 892:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 894:	90 81       	ld	r25, Z
 896:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 89a:	89 2b       	or	r24, r25
 89c:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 89e:	80 81       	ld	r24, Z
 8a0:	80 64       	ori	r24, 0x40	; 64
 8a2:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 8a4:	80 81       	ld	r24, Z
 8a6:	88 60       	ori	r24, 0x08	; 8
 8a8:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 8aa:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 8ae:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 8b2:	87 30       	cpi	r24, 0x07	; 7
 8b4:	91 05       	cpc	r25, r1
 8b6:	30 f4       	brcc	.+12     	; 0x8c4 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 8b8:	01 96       	adiw	r24, 0x01	; 1
 8ba:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2725+0x1>
 8be:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2725>
 8c2:	07 c0       	rjmp	.+14     	; 0x8d2 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 8c4:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2725+0x1>
 8c8:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2725>
        writeTextFinished = 1;
 8cc:	81 e0       	ldi	r24, 0x01	; 1
 8ce:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 8d2:	28 96       	adiw	r28, 0x08	; 8
 8d4:	0f b6       	in	r0, 0x3f	; 63
 8d6:	f8 94       	cli
 8d8:	de bf       	out	0x3e, r29	; 62
 8da:	0f be       	out	0x3f, r0	; 63
 8dc:	cd bf       	out	0x3d, r28	; 61
 8de:	df 91       	pop	r29
 8e0:	cf 91       	pop	r28
 8e2:	08 95       	ret

000008e4 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 8e4:	1f 92       	push	r1
 8e6:	0f 92       	push	r0
 8e8:	0f b6       	in	r0, 0x3f	; 63
 8ea:	0f 92       	push	r0
 8ec:	11 24       	eor	r1, r1
 8ee:	0b b6       	in	r0, 0x3b	; 59
 8f0:	0f 92       	push	r0
 8f2:	2f 93       	push	r18
 8f4:	3f 93       	push	r19
 8f6:	4f 93       	push	r20
 8f8:	5f 93       	push	r21
 8fa:	6f 93       	push	r22
 8fc:	7f 93       	push	r23
 8fe:	8f 93       	push	r24
 900:	9f 93       	push	r25
 902:	af 93       	push	r26
 904:	bf 93       	push	r27
 906:	ef 93       	push	r30
 908:	ff 93       	push	r31
    systemTimeMs += 1;
 90a:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 90e:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 912:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 916:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 91a:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 91e:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 922:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 926:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 92a:	a1 e0       	ldi	r26, 0x01	; 1
 92c:	27 d0       	rcall	.+78     	; 0x97c <__adddi3_s8>
 92e:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 932:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 936:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 93a:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 93e:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 942:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 946:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 94a:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 94e:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 952:	81 11       	cpse	r24, r1
 954:	4f df       	rcall	.-354    	; 0x7f4 <matrixWriteNextLine>
}
 956:	ff 91       	pop	r31
 958:	ef 91       	pop	r30
 95a:	bf 91       	pop	r27
 95c:	af 91       	pop	r26
 95e:	9f 91       	pop	r25
 960:	8f 91       	pop	r24
 962:	7f 91       	pop	r23
 964:	6f 91       	pop	r22
 966:	5f 91       	pop	r21
 968:	4f 91       	pop	r20
 96a:	3f 91       	pop	r19
 96c:	2f 91       	pop	r18
 96e:	0f 90       	pop	r0
 970:	0b be       	out	0x3b, r0	; 59
 972:	0f 90       	pop	r0
 974:	0f be       	out	0x3f, r0	; 63
 976:	0f 90       	pop	r0
 978:	1f 90       	pop	r1
 97a:	18 95       	reti

0000097c <__adddi3_s8>:
 97c:	00 24       	eor	r0, r0
 97e:	a7 fd       	sbrc	r26, 7
 980:	00 94       	com	r0
 982:	2a 0f       	add	r18, r26
 984:	30 1d       	adc	r19, r0
 986:	40 1d       	adc	r20, r0
 988:	50 1d       	adc	r21, r0
 98a:	60 1d       	adc	r22, r0
 98c:	70 1d       	adc	r23, r0
 98e:	80 1d       	adc	r24, r0
 990:	90 1d       	adc	r25, r0
 992:	08 95       	ret

00000994 <vsnprintf>:
 994:	0f 93       	push	r16
 996:	1f 93       	push	r17
 998:	cf 93       	push	r28
 99a:	df 93       	push	r29
 99c:	cd b7       	in	r28, 0x3d	; 61
 99e:	de b7       	in	r29, 0x3e	; 62
 9a0:	2e 97       	sbiw	r28, 0x0e	; 14
 9a2:	0f b6       	in	r0, 0x3f	; 63
 9a4:	f8 94       	cli
 9a6:	de bf       	out	0x3e, r29	; 62
 9a8:	0f be       	out	0x3f, r0	; 63
 9aa:	cd bf       	out	0x3d, r28	; 61
 9ac:	8c 01       	movw	r16, r24
 9ae:	fa 01       	movw	r30, r20
 9b0:	86 e0       	ldi	r24, 0x06	; 6
 9b2:	8c 83       	std	Y+4, r24	; 0x04
 9b4:	1a 83       	std	Y+2, r17	; 0x02
 9b6:	09 83       	std	Y+1, r16	; 0x01
 9b8:	77 ff       	sbrs	r23, 7
 9ba:	02 c0       	rjmp	.+4      	; 0x9c0 <vsnprintf+0x2c>
 9bc:	60 e0       	ldi	r22, 0x00	; 0
 9be:	70 e8       	ldi	r23, 0x80	; 128
 9c0:	cb 01       	movw	r24, r22
 9c2:	01 97       	sbiw	r24, 0x01	; 1
 9c4:	9e 83       	std	Y+6, r25	; 0x06
 9c6:	8d 83       	std	Y+5, r24	; 0x05
 9c8:	a9 01       	movw	r20, r18
 9ca:	bf 01       	movw	r22, r30
 9cc:	ce 01       	movw	r24, r28
 9ce:	01 96       	adiw	r24, 0x01	; 1
 9d0:	19 d0       	rcall	.+50     	; 0xa04 <vfprintf>
 9d2:	4d 81       	ldd	r20, Y+5	; 0x05
 9d4:	5e 81       	ldd	r21, Y+6	; 0x06
 9d6:	57 fd       	sbrc	r21, 7
 9d8:	0a c0       	rjmp	.+20     	; 0x9ee <vsnprintf+0x5a>
 9da:	2f 81       	ldd	r18, Y+7	; 0x07
 9dc:	38 85       	ldd	r19, Y+8	; 0x08
 9de:	42 17       	cp	r20, r18
 9e0:	53 07       	cpc	r21, r19
 9e2:	0c f4       	brge	.+2      	; 0x9e6 <vsnprintf+0x52>
 9e4:	9a 01       	movw	r18, r20
 9e6:	f8 01       	movw	r30, r16
 9e8:	e2 0f       	add	r30, r18
 9ea:	f3 1f       	adc	r31, r19
 9ec:	10 82       	st	Z, r1
 9ee:	2e 96       	adiw	r28, 0x0e	; 14
 9f0:	0f b6       	in	r0, 0x3f	; 63
 9f2:	f8 94       	cli
 9f4:	de bf       	out	0x3e, r29	; 62
 9f6:	0f be       	out	0x3f, r0	; 63
 9f8:	cd bf       	out	0x3d, r28	; 61
 9fa:	df 91       	pop	r29
 9fc:	cf 91       	pop	r28
 9fe:	1f 91       	pop	r17
 a00:	0f 91       	pop	r16
 a02:	08 95       	ret

00000a04 <vfprintf>:
 a04:	2f 92       	push	r2
 a06:	3f 92       	push	r3
 a08:	4f 92       	push	r4
 a0a:	5f 92       	push	r5
 a0c:	6f 92       	push	r6
 a0e:	7f 92       	push	r7
 a10:	8f 92       	push	r8
 a12:	9f 92       	push	r9
 a14:	af 92       	push	r10
 a16:	bf 92       	push	r11
 a18:	cf 92       	push	r12
 a1a:	df 92       	push	r13
 a1c:	ef 92       	push	r14
 a1e:	ff 92       	push	r15
 a20:	0f 93       	push	r16
 a22:	1f 93       	push	r17
 a24:	cf 93       	push	r28
 a26:	df 93       	push	r29
 a28:	cd b7       	in	r28, 0x3d	; 61
 a2a:	de b7       	in	r29, 0x3e	; 62
 a2c:	2b 97       	sbiw	r28, 0x0b	; 11
 a2e:	0f b6       	in	r0, 0x3f	; 63
 a30:	f8 94       	cli
 a32:	de bf       	out	0x3e, r29	; 62
 a34:	0f be       	out	0x3f, r0	; 63
 a36:	cd bf       	out	0x3d, r28	; 61
 a38:	6c 01       	movw	r12, r24
 a3a:	7b 01       	movw	r14, r22
 a3c:	8a 01       	movw	r16, r20
 a3e:	fc 01       	movw	r30, r24
 a40:	17 82       	std	Z+7, r1	; 0x07
 a42:	16 82       	std	Z+6, r1	; 0x06
 a44:	83 81       	ldd	r24, Z+3	; 0x03
 a46:	81 ff       	sbrs	r24, 1
 a48:	bf c1       	rjmp	.+894    	; 0xdc8 <vfprintf+0x3c4>
 a4a:	ce 01       	movw	r24, r28
 a4c:	01 96       	adiw	r24, 0x01	; 1
 a4e:	3c 01       	movw	r6, r24
 a50:	f6 01       	movw	r30, r12
 a52:	93 81       	ldd	r25, Z+3	; 0x03
 a54:	f7 01       	movw	r30, r14
 a56:	93 fd       	sbrc	r25, 3
 a58:	85 91       	lpm	r24, Z+
 a5a:	93 ff       	sbrs	r25, 3
 a5c:	81 91       	ld	r24, Z+
 a5e:	7f 01       	movw	r14, r30
 a60:	88 23       	and	r24, r24
 a62:	09 f4       	brne	.+2      	; 0xa66 <vfprintf+0x62>
 a64:	ad c1       	rjmp	.+858    	; 0xdc0 <vfprintf+0x3bc>
 a66:	85 32       	cpi	r24, 0x25	; 37
 a68:	39 f4       	brne	.+14     	; 0xa78 <vfprintf+0x74>
 a6a:	93 fd       	sbrc	r25, 3
 a6c:	85 91       	lpm	r24, Z+
 a6e:	93 ff       	sbrs	r25, 3
 a70:	81 91       	ld	r24, Z+
 a72:	7f 01       	movw	r14, r30
 a74:	85 32       	cpi	r24, 0x25	; 37
 a76:	21 f4       	brne	.+8      	; 0xa80 <vfprintf+0x7c>
 a78:	b6 01       	movw	r22, r12
 a7a:	90 e0       	ldi	r25, 0x00	; 0
 a7c:	d6 d1       	rcall	.+940    	; 0xe2a <fputc>
 a7e:	e8 cf       	rjmp	.-48     	; 0xa50 <vfprintf+0x4c>
 a80:	91 2c       	mov	r9, r1
 a82:	21 2c       	mov	r2, r1
 a84:	31 2c       	mov	r3, r1
 a86:	ff e1       	ldi	r31, 0x1F	; 31
 a88:	f3 15       	cp	r31, r3
 a8a:	d8 f0       	brcs	.+54     	; 0xac2 <vfprintf+0xbe>
 a8c:	8b 32       	cpi	r24, 0x2B	; 43
 a8e:	79 f0       	breq	.+30     	; 0xaae <vfprintf+0xaa>
 a90:	38 f4       	brcc	.+14     	; 0xaa0 <vfprintf+0x9c>
 a92:	80 32       	cpi	r24, 0x20	; 32
 a94:	79 f0       	breq	.+30     	; 0xab4 <vfprintf+0xb0>
 a96:	83 32       	cpi	r24, 0x23	; 35
 a98:	a1 f4       	brne	.+40     	; 0xac2 <vfprintf+0xbe>
 a9a:	23 2d       	mov	r18, r3
 a9c:	20 61       	ori	r18, 0x10	; 16
 a9e:	1d c0       	rjmp	.+58     	; 0xada <vfprintf+0xd6>
 aa0:	8d 32       	cpi	r24, 0x2D	; 45
 aa2:	61 f0       	breq	.+24     	; 0xabc <vfprintf+0xb8>
 aa4:	80 33       	cpi	r24, 0x30	; 48
 aa6:	69 f4       	brne	.+26     	; 0xac2 <vfprintf+0xbe>
 aa8:	23 2d       	mov	r18, r3
 aaa:	21 60       	ori	r18, 0x01	; 1
 aac:	16 c0       	rjmp	.+44     	; 0xada <vfprintf+0xd6>
 aae:	83 2d       	mov	r24, r3
 ab0:	82 60       	ori	r24, 0x02	; 2
 ab2:	38 2e       	mov	r3, r24
 ab4:	e3 2d       	mov	r30, r3
 ab6:	e4 60       	ori	r30, 0x04	; 4
 ab8:	3e 2e       	mov	r3, r30
 aba:	2a c0       	rjmp	.+84     	; 0xb10 <vfprintf+0x10c>
 abc:	f3 2d       	mov	r31, r3
 abe:	f8 60       	ori	r31, 0x08	; 8
 ac0:	1d c0       	rjmp	.+58     	; 0xafc <vfprintf+0xf8>
 ac2:	37 fc       	sbrc	r3, 7
 ac4:	2d c0       	rjmp	.+90     	; 0xb20 <vfprintf+0x11c>
 ac6:	20 ed       	ldi	r18, 0xD0	; 208
 ac8:	28 0f       	add	r18, r24
 aca:	2a 30       	cpi	r18, 0x0A	; 10
 acc:	40 f0       	brcs	.+16     	; 0xade <vfprintf+0xda>
 ace:	8e 32       	cpi	r24, 0x2E	; 46
 ad0:	b9 f4       	brne	.+46     	; 0xb00 <vfprintf+0xfc>
 ad2:	36 fc       	sbrc	r3, 6
 ad4:	75 c1       	rjmp	.+746    	; 0xdc0 <vfprintf+0x3bc>
 ad6:	23 2d       	mov	r18, r3
 ad8:	20 64       	ori	r18, 0x40	; 64
 ada:	32 2e       	mov	r3, r18
 adc:	19 c0       	rjmp	.+50     	; 0xb10 <vfprintf+0x10c>
 ade:	36 fe       	sbrs	r3, 6
 ae0:	06 c0       	rjmp	.+12     	; 0xaee <vfprintf+0xea>
 ae2:	8a e0       	ldi	r24, 0x0A	; 10
 ae4:	98 9e       	mul	r9, r24
 ae6:	20 0d       	add	r18, r0
 ae8:	11 24       	eor	r1, r1
 aea:	92 2e       	mov	r9, r18
 aec:	11 c0       	rjmp	.+34     	; 0xb10 <vfprintf+0x10c>
 aee:	ea e0       	ldi	r30, 0x0A	; 10
 af0:	2e 9e       	mul	r2, r30
 af2:	20 0d       	add	r18, r0
 af4:	11 24       	eor	r1, r1
 af6:	22 2e       	mov	r2, r18
 af8:	f3 2d       	mov	r31, r3
 afa:	f0 62       	ori	r31, 0x20	; 32
 afc:	3f 2e       	mov	r3, r31
 afe:	08 c0       	rjmp	.+16     	; 0xb10 <vfprintf+0x10c>
 b00:	8c 36       	cpi	r24, 0x6C	; 108
 b02:	21 f4       	brne	.+8      	; 0xb0c <vfprintf+0x108>
 b04:	83 2d       	mov	r24, r3
 b06:	80 68       	ori	r24, 0x80	; 128
 b08:	38 2e       	mov	r3, r24
 b0a:	02 c0       	rjmp	.+4      	; 0xb10 <vfprintf+0x10c>
 b0c:	88 36       	cpi	r24, 0x68	; 104
 b0e:	41 f4       	brne	.+16     	; 0xb20 <vfprintf+0x11c>
 b10:	f7 01       	movw	r30, r14
 b12:	93 fd       	sbrc	r25, 3
 b14:	85 91       	lpm	r24, Z+
 b16:	93 ff       	sbrs	r25, 3
 b18:	81 91       	ld	r24, Z+
 b1a:	7f 01       	movw	r14, r30
 b1c:	81 11       	cpse	r24, r1
 b1e:	b3 cf       	rjmp	.-154    	; 0xa86 <vfprintf+0x82>
 b20:	98 2f       	mov	r25, r24
 b22:	9f 7d       	andi	r25, 0xDF	; 223
 b24:	95 54       	subi	r25, 0x45	; 69
 b26:	93 30       	cpi	r25, 0x03	; 3
 b28:	28 f4       	brcc	.+10     	; 0xb34 <vfprintf+0x130>
 b2a:	0c 5f       	subi	r16, 0xFC	; 252
 b2c:	1f 4f       	sbci	r17, 0xFF	; 255
 b2e:	9f e3       	ldi	r25, 0x3F	; 63
 b30:	99 83       	std	Y+1, r25	; 0x01
 b32:	0d c0       	rjmp	.+26     	; 0xb4e <vfprintf+0x14a>
 b34:	83 36       	cpi	r24, 0x63	; 99
 b36:	31 f0       	breq	.+12     	; 0xb44 <vfprintf+0x140>
 b38:	83 37       	cpi	r24, 0x73	; 115
 b3a:	71 f0       	breq	.+28     	; 0xb58 <vfprintf+0x154>
 b3c:	83 35       	cpi	r24, 0x53	; 83
 b3e:	09 f0       	breq	.+2      	; 0xb42 <vfprintf+0x13e>
 b40:	55 c0       	rjmp	.+170    	; 0xbec <vfprintf+0x1e8>
 b42:	20 c0       	rjmp	.+64     	; 0xb84 <vfprintf+0x180>
 b44:	f8 01       	movw	r30, r16
 b46:	80 81       	ld	r24, Z
 b48:	89 83       	std	Y+1, r24	; 0x01
 b4a:	0e 5f       	subi	r16, 0xFE	; 254
 b4c:	1f 4f       	sbci	r17, 0xFF	; 255
 b4e:	88 24       	eor	r8, r8
 b50:	83 94       	inc	r8
 b52:	91 2c       	mov	r9, r1
 b54:	53 01       	movw	r10, r6
 b56:	12 c0       	rjmp	.+36     	; 0xb7c <vfprintf+0x178>
 b58:	28 01       	movw	r4, r16
 b5a:	f2 e0       	ldi	r31, 0x02	; 2
 b5c:	4f 0e       	add	r4, r31
 b5e:	51 1c       	adc	r5, r1
 b60:	f8 01       	movw	r30, r16
 b62:	a0 80       	ld	r10, Z
 b64:	b1 80       	ldd	r11, Z+1	; 0x01
 b66:	36 fe       	sbrs	r3, 6
 b68:	03 c0       	rjmp	.+6      	; 0xb70 <vfprintf+0x16c>
 b6a:	69 2d       	mov	r22, r9
 b6c:	70 e0       	ldi	r23, 0x00	; 0
 b6e:	02 c0       	rjmp	.+4      	; 0xb74 <vfprintf+0x170>
 b70:	6f ef       	ldi	r22, 0xFF	; 255
 b72:	7f ef       	ldi	r23, 0xFF	; 255
 b74:	c5 01       	movw	r24, r10
 b76:	4e d1       	rcall	.+668    	; 0xe14 <strnlen>
 b78:	4c 01       	movw	r8, r24
 b7a:	82 01       	movw	r16, r4
 b7c:	f3 2d       	mov	r31, r3
 b7e:	ff 77       	andi	r31, 0x7F	; 127
 b80:	3f 2e       	mov	r3, r31
 b82:	15 c0       	rjmp	.+42     	; 0xbae <vfprintf+0x1aa>
 b84:	28 01       	movw	r4, r16
 b86:	22 e0       	ldi	r18, 0x02	; 2
 b88:	42 0e       	add	r4, r18
 b8a:	51 1c       	adc	r5, r1
 b8c:	f8 01       	movw	r30, r16
 b8e:	a0 80       	ld	r10, Z
 b90:	b1 80       	ldd	r11, Z+1	; 0x01
 b92:	36 fe       	sbrs	r3, 6
 b94:	03 c0       	rjmp	.+6      	; 0xb9c <vfprintf+0x198>
 b96:	69 2d       	mov	r22, r9
 b98:	70 e0       	ldi	r23, 0x00	; 0
 b9a:	02 c0       	rjmp	.+4      	; 0xba0 <vfprintf+0x19c>
 b9c:	6f ef       	ldi	r22, 0xFF	; 255
 b9e:	7f ef       	ldi	r23, 0xFF	; 255
 ba0:	c5 01       	movw	r24, r10
 ba2:	2d d1       	rcall	.+602    	; 0xdfe <strnlen_P>
 ba4:	4c 01       	movw	r8, r24
 ba6:	f3 2d       	mov	r31, r3
 ba8:	f0 68       	ori	r31, 0x80	; 128
 baa:	3f 2e       	mov	r3, r31
 bac:	82 01       	movw	r16, r4
 bae:	33 fc       	sbrc	r3, 3
 bb0:	19 c0       	rjmp	.+50     	; 0xbe4 <vfprintf+0x1e0>
 bb2:	82 2d       	mov	r24, r2
 bb4:	90 e0       	ldi	r25, 0x00	; 0
 bb6:	88 16       	cp	r8, r24
 bb8:	99 06       	cpc	r9, r25
 bba:	a0 f4       	brcc	.+40     	; 0xbe4 <vfprintf+0x1e0>
 bbc:	b6 01       	movw	r22, r12
 bbe:	80 e2       	ldi	r24, 0x20	; 32
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	33 d1       	rcall	.+614    	; 0xe2a <fputc>
 bc4:	2a 94       	dec	r2
 bc6:	f5 cf       	rjmp	.-22     	; 0xbb2 <vfprintf+0x1ae>
 bc8:	f5 01       	movw	r30, r10
 bca:	37 fc       	sbrc	r3, 7
 bcc:	85 91       	lpm	r24, Z+
 bce:	37 fe       	sbrs	r3, 7
 bd0:	81 91       	ld	r24, Z+
 bd2:	5f 01       	movw	r10, r30
 bd4:	b6 01       	movw	r22, r12
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	28 d1       	rcall	.+592    	; 0xe2a <fputc>
 bda:	21 10       	cpse	r2, r1
 bdc:	2a 94       	dec	r2
 bde:	21 e0       	ldi	r18, 0x01	; 1
 be0:	82 1a       	sub	r8, r18
 be2:	91 08       	sbc	r9, r1
 be4:	81 14       	cp	r8, r1
 be6:	91 04       	cpc	r9, r1
 be8:	79 f7       	brne	.-34     	; 0xbc8 <vfprintf+0x1c4>
 bea:	e1 c0       	rjmp	.+450    	; 0xdae <vfprintf+0x3aa>
 bec:	84 36       	cpi	r24, 0x64	; 100
 bee:	11 f0       	breq	.+4      	; 0xbf4 <vfprintf+0x1f0>
 bf0:	89 36       	cpi	r24, 0x69	; 105
 bf2:	39 f5       	brne	.+78     	; 0xc42 <vfprintf+0x23e>
 bf4:	f8 01       	movw	r30, r16
 bf6:	37 fe       	sbrs	r3, 7
 bf8:	07 c0       	rjmp	.+14     	; 0xc08 <vfprintf+0x204>
 bfa:	60 81       	ld	r22, Z
 bfc:	71 81       	ldd	r23, Z+1	; 0x01
 bfe:	82 81       	ldd	r24, Z+2	; 0x02
 c00:	93 81       	ldd	r25, Z+3	; 0x03
 c02:	0c 5f       	subi	r16, 0xFC	; 252
 c04:	1f 4f       	sbci	r17, 0xFF	; 255
 c06:	08 c0       	rjmp	.+16     	; 0xc18 <vfprintf+0x214>
 c08:	60 81       	ld	r22, Z
 c0a:	71 81       	ldd	r23, Z+1	; 0x01
 c0c:	07 2e       	mov	r0, r23
 c0e:	00 0c       	add	r0, r0
 c10:	88 0b       	sbc	r24, r24
 c12:	99 0b       	sbc	r25, r25
 c14:	0e 5f       	subi	r16, 0xFE	; 254
 c16:	1f 4f       	sbci	r17, 0xFF	; 255
 c18:	f3 2d       	mov	r31, r3
 c1a:	ff 76       	andi	r31, 0x6F	; 111
 c1c:	3f 2e       	mov	r3, r31
 c1e:	97 ff       	sbrs	r25, 7
 c20:	09 c0       	rjmp	.+18     	; 0xc34 <vfprintf+0x230>
 c22:	90 95       	com	r25
 c24:	80 95       	com	r24
 c26:	70 95       	com	r23
 c28:	61 95       	neg	r22
 c2a:	7f 4f       	sbci	r23, 0xFF	; 255
 c2c:	8f 4f       	sbci	r24, 0xFF	; 255
 c2e:	9f 4f       	sbci	r25, 0xFF	; 255
 c30:	f0 68       	ori	r31, 0x80	; 128
 c32:	3f 2e       	mov	r3, r31
 c34:	2a e0       	ldi	r18, 0x0A	; 10
 c36:	30 e0       	ldi	r19, 0x00	; 0
 c38:	a3 01       	movw	r20, r6
 c3a:	33 d1       	rcall	.+614    	; 0xea2 <__ultoa_invert>
 c3c:	88 2e       	mov	r8, r24
 c3e:	86 18       	sub	r8, r6
 c40:	44 c0       	rjmp	.+136    	; 0xcca <vfprintf+0x2c6>
 c42:	85 37       	cpi	r24, 0x75	; 117
 c44:	31 f4       	brne	.+12     	; 0xc52 <vfprintf+0x24e>
 c46:	23 2d       	mov	r18, r3
 c48:	2f 7e       	andi	r18, 0xEF	; 239
 c4a:	b2 2e       	mov	r11, r18
 c4c:	2a e0       	ldi	r18, 0x0A	; 10
 c4e:	30 e0       	ldi	r19, 0x00	; 0
 c50:	25 c0       	rjmp	.+74     	; 0xc9c <vfprintf+0x298>
 c52:	93 2d       	mov	r25, r3
 c54:	99 7f       	andi	r25, 0xF9	; 249
 c56:	b9 2e       	mov	r11, r25
 c58:	8f 36       	cpi	r24, 0x6F	; 111
 c5a:	c1 f0       	breq	.+48     	; 0xc8c <vfprintf+0x288>
 c5c:	18 f4       	brcc	.+6      	; 0xc64 <vfprintf+0x260>
 c5e:	88 35       	cpi	r24, 0x58	; 88
 c60:	79 f0       	breq	.+30     	; 0xc80 <vfprintf+0x27c>
 c62:	ae c0       	rjmp	.+348    	; 0xdc0 <vfprintf+0x3bc>
 c64:	80 37       	cpi	r24, 0x70	; 112
 c66:	19 f0       	breq	.+6      	; 0xc6e <vfprintf+0x26a>
 c68:	88 37       	cpi	r24, 0x78	; 120
 c6a:	21 f0       	breq	.+8      	; 0xc74 <vfprintf+0x270>
 c6c:	a9 c0       	rjmp	.+338    	; 0xdc0 <vfprintf+0x3bc>
 c6e:	e9 2f       	mov	r30, r25
 c70:	e0 61       	ori	r30, 0x10	; 16
 c72:	be 2e       	mov	r11, r30
 c74:	b4 fe       	sbrs	r11, 4
 c76:	0d c0       	rjmp	.+26     	; 0xc92 <vfprintf+0x28e>
 c78:	fb 2d       	mov	r31, r11
 c7a:	f4 60       	ori	r31, 0x04	; 4
 c7c:	bf 2e       	mov	r11, r31
 c7e:	09 c0       	rjmp	.+18     	; 0xc92 <vfprintf+0x28e>
 c80:	34 fe       	sbrs	r3, 4
 c82:	0a c0       	rjmp	.+20     	; 0xc98 <vfprintf+0x294>
 c84:	29 2f       	mov	r18, r25
 c86:	26 60       	ori	r18, 0x06	; 6
 c88:	b2 2e       	mov	r11, r18
 c8a:	06 c0       	rjmp	.+12     	; 0xc98 <vfprintf+0x294>
 c8c:	28 e0       	ldi	r18, 0x08	; 8
 c8e:	30 e0       	ldi	r19, 0x00	; 0
 c90:	05 c0       	rjmp	.+10     	; 0xc9c <vfprintf+0x298>
 c92:	20 e1       	ldi	r18, 0x10	; 16
 c94:	30 e0       	ldi	r19, 0x00	; 0
 c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x298>
 c98:	20 e1       	ldi	r18, 0x10	; 16
 c9a:	32 e0       	ldi	r19, 0x02	; 2
 c9c:	f8 01       	movw	r30, r16
 c9e:	b7 fe       	sbrs	r11, 7
 ca0:	07 c0       	rjmp	.+14     	; 0xcb0 <vfprintf+0x2ac>
 ca2:	60 81       	ld	r22, Z
 ca4:	71 81       	ldd	r23, Z+1	; 0x01
 ca6:	82 81       	ldd	r24, Z+2	; 0x02
 ca8:	93 81       	ldd	r25, Z+3	; 0x03
 caa:	0c 5f       	subi	r16, 0xFC	; 252
 cac:	1f 4f       	sbci	r17, 0xFF	; 255
 cae:	06 c0       	rjmp	.+12     	; 0xcbc <vfprintf+0x2b8>
 cb0:	60 81       	ld	r22, Z
 cb2:	71 81       	ldd	r23, Z+1	; 0x01
 cb4:	80 e0       	ldi	r24, 0x00	; 0
 cb6:	90 e0       	ldi	r25, 0x00	; 0
 cb8:	0e 5f       	subi	r16, 0xFE	; 254
 cba:	1f 4f       	sbci	r17, 0xFF	; 255
 cbc:	a3 01       	movw	r20, r6
 cbe:	f1 d0       	rcall	.+482    	; 0xea2 <__ultoa_invert>
 cc0:	88 2e       	mov	r8, r24
 cc2:	86 18       	sub	r8, r6
 cc4:	fb 2d       	mov	r31, r11
 cc6:	ff 77       	andi	r31, 0x7F	; 127
 cc8:	3f 2e       	mov	r3, r31
 cca:	36 fe       	sbrs	r3, 6
 ccc:	0d c0       	rjmp	.+26     	; 0xce8 <vfprintf+0x2e4>
 cce:	23 2d       	mov	r18, r3
 cd0:	2e 7f       	andi	r18, 0xFE	; 254
 cd2:	a2 2e       	mov	r10, r18
 cd4:	89 14       	cp	r8, r9
 cd6:	58 f4       	brcc	.+22     	; 0xcee <vfprintf+0x2ea>
 cd8:	34 fe       	sbrs	r3, 4
 cda:	0b c0       	rjmp	.+22     	; 0xcf2 <vfprintf+0x2ee>
 cdc:	32 fc       	sbrc	r3, 2
 cde:	09 c0       	rjmp	.+18     	; 0xcf2 <vfprintf+0x2ee>
 ce0:	83 2d       	mov	r24, r3
 ce2:	8e 7e       	andi	r24, 0xEE	; 238
 ce4:	a8 2e       	mov	r10, r24
 ce6:	05 c0       	rjmp	.+10     	; 0xcf2 <vfprintf+0x2ee>
 ce8:	b8 2c       	mov	r11, r8
 cea:	a3 2c       	mov	r10, r3
 cec:	03 c0       	rjmp	.+6      	; 0xcf4 <vfprintf+0x2f0>
 cee:	b8 2c       	mov	r11, r8
 cf0:	01 c0       	rjmp	.+2      	; 0xcf4 <vfprintf+0x2f0>
 cf2:	b9 2c       	mov	r11, r9
 cf4:	a4 fe       	sbrs	r10, 4
 cf6:	0f c0       	rjmp	.+30     	; 0xd16 <vfprintf+0x312>
 cf8:	fe 01       	movw	r30, r28
 cfa:	e8 0d       	add	r30, r8
 cfc:	f1 1d       	adc	r31, r1
 cfe:	80 81       	ld	r24, Z
 d00:	80 33       	cpi	r24, 0x30	; 48
 d02:	21 f4       	brne	.+8      	; 0xd0c <vfprintf+0x308>
 d04:	9a 2d       	mov	r25, r10
 d06:	99 7e       	andi	r25, 0xE9	; 233
 d08:	a9 2e       	mov	r10, r25
 d0a:	09 c0       	rjmp	.+18     	; 0xd1e <vfprintf+0x31a>
 d0c:	a2 fe       	sbrs	r10, 2
 d0e:	06 c0       	rjmp	.+12     	; 0xd1c <vfprintf+0x318>
 d10:	b3 94       	inc	r11
 d12:	b3 94       	inc	r11
 d14:	04 c0       	rjmp	.+8      	; 0xd1e <vfprintf+0x31a>
 d16:	8a 2d       	mov	r24, r10
 d18:	86 78       	andi	r24, 0x86	; 134
 d1a:	09 f0       	breq	.+2      	; 0xd1e <vfprintf+0x31a>
 d1c:	b3 94       	inc	r11
 d1e:	a3 fc       	sbrc	r10, 3
 d20:	10 c0       	rjmp	.+32     	; 0xd42 <vfprintf+0x33e>
 d22:	a0 fe       	sbrs	r10, 0
 d24:	06 c0       	rjmp	.+12     	; 0xd32 <vfprintf+0x32e>
 d26:	b2 14       	cp	r11, r2
 d28:	80 f4       	brcc	.+32     	; 0xd4a <vfprintf+0x346>
 d2a:	28 0c       	add	r2, r8
 d2c:	92 2c       	mov	r9, r2
 d2e:	9b 18       	sub	r9, r11
 d30:	0d c0       	rjmp	.+26     	; 0xd4c <vfprintf+0x348>
 d32:	b2 14       	cp	r11, r2
 d34:	58 f4       	brcc	.+22     	; 0xd4c <vfprintf+0x348>
 d36:	b6 01       	movw	r22, r12
 d38:	80 e2       	ldi	r24, 0x20	; 32
 d3a:	90 e0       	ldi	r25, 0x00	; 0
 d3c:	76 d0       	rcall	.+236    	; 0xe2a <fputc>
 d3e:	b3 94       	inc	r11
 d40:	f8 cf       	rjmp	.-16     	; 0xd32 <vfprintf+0x32e>
 d42:	b2 14       	cp	r11, r2
 d44:	18 f4       	brcc	.+6      	; 0xd4c <vfprintf+0x348>
 d46:	2b 18       	sub	r2, r11
 d48:	02 c0       	rjmp	.+4      	; 0xd4e <vfprintf+0x34a>
 d4a:	98 2c       	mov	r9, r8
 d4c:	21 2c       	mov	r2, r1
 d4e:	a4 fe       	sbrs	r10, 4
 d50:	0f c0       	rjmp	.+30     	; 0xd70 <vfprintf+0x36c>
 d52:	b6 01       	movw	r22, r12
 d54:	80 e3       	ldi	r24, 0x30	; 48
 d56:	90 e0       	ldi	r25, 0x00	; 0
 d58:	68 d0       	rcall	.+208    	; 0xe2a <fputc>
 d5a:	a2 fe       	sbrs	r10, 2
 d5c:	16 c0       	rjmp	.+44     	; 0xd8a <vfprintf+0x386>
 d5e:	a1 fc       	sbrc	r10, 1
 d60:	03 c0       	rjmp	.+6      	; 0xd68 <vfprintf+0x364>
 d62:	88 e7       	ldi	r24, 0x78	; 120
 d64:	90 e0       	ldi	r25, 0x00	; 0
 d66:	02 c0       	rjmp	.+4      	; 0xd6c <vfprintf+0x368>
 d68:	88 e5       	ldi	r24, 0x58	; 88
 d6a:	90 e0       	ldi	r25, 0x00	; 0
 d6c:	b6 01       	movw	r22, r12
 d6e:	0c c0       	rjmp	.+24     	; 0xd88 <vfprintf+0x384>
 d70:	8a 2d       	mov	r24, r10
 d72:	86 78       	andi	r24, 0x86	; 134
 d74:	51 f0       	breq	.+20     	; 0xd8a <vfprintf+0x386>
 d76:	a1 fe       	sbrs	r10, 1
 d78:	02 c0       	rjmp	.+4      	; 0xd7e <vfprintf+0x37a>
 d7a:	8b e2       	ldi	r24, 0x2B	; 43
 d7c:	01 c0       	rjmp	.+2      	; 0xd80 <vfprintf+0x37c>
 d7e:	80 e2       	ldi	r24, 0x20	; 32
 d80:	a7 fc       	sbrc	r10, 7
 d82:	8d e2       	ldi	r24, 0x2D	; 45
 d84:	b6 01       	movw	r22, r12
 d86:	90 e0       	ldi	r25, 0x00	; 0
 d88:	50 d0       	rcall	.+160    	; 0xe2a <fputc>
 d8a:	89 14       	cp	r8, r9
 d8c:	30 f4       	brcc	.+12     	; 0xd9a <vfprintf+0x396>
 d8e:	b6 01       	movw	r22, r12
 d90:	80 e3       	ldi	r24, 0x30	; 48
 d92:	90 e0       	ldi	r25, 0x00	; 0
 d94:	4a d0       	rcall	.+148    	; 0xe2a <fputc>
 d96:	9a 94       	dec	r9
 d98:	f8 cf       	rjmp	.-16     	; 0xd8a <vfprintf+0x386>
 d9a:	8a 94       	dec	r8
 d9c:	f3 01       	movw	r30, r6
 d9e:	e8 0d       	add	r30, r8
 da0:	f1 1d       	adc	r31, r1
 da2:	80 81       	ld	r24, Z
 da4:	b6 01       	movw	r22, r12
 da6:	90 e0       	ldi	r25, 0x00	; 0
 da8:	40 d0       	rcall	.+128    	; 0xe2a <fputc>
 daa:	81 10       	cpse	r8, r1
 dac:	f6 cf       	rjmp	.-20     	; 0xd9a <vfprintf+0x396>
 dae:	22 20       	and	r2, r2
 db0:	09 f4       	brne	.+2      	; 0xdb4 <vfprintf+0x3b0>
 db2:	4e ce       	rjmp	.-868    	; 0xa50 <vfprintf+0x4c>
 db4:	b6 01       	movw	r22, r12
 db6:	80 e2       	ldi	r24, 0x20	; 32
 db8:	90 e0       	ldi	r25, 0x00	; 0
 dba:	37 d0       	rcall	.+110    	; 0xe2a <fputc>
 dbc:	2a 94       	dec	r2
 dbe:	f7 cf       	rjmp	.-18     	; 0xdae <vfprintf+0x3aa>
 dc0:	f6 01       	movw	r30, r12
 dc2:	86 81       	ldd	r24, Z+6	; 0x06
 dc4:	97 81       	ldd	r25, Z+7	; 0x07
 dc6:	02 c0       	rjmp	.+4      	; 0xdcc <vfprintf+0x3c8>
 dc8:	8f ef       	ldi	r24, 0xFF	; 255
 dca:	9f ef       	ldi	r25, 0xFF	; 255
 dcc:	2b 96       	adiw	r28, 0x0b	; 11
 dce:	0f b6       	in	r0, 0x3f	; 63
 dd0:	f8 94       	cli
 dd2:	de bf       	out	0x3e, r29	; 62
 dd4:	0f be       	out	0x3f, r0	; 63
 dd6:	cd bf       	out	0x3d, r28	; 61
 dd8:	df 91       	pop	r29
 dda:	cf 91       	pop	r28
 ddc:	1f 91       	pop	r17
 dde:	0f 91       	pop	r16
 de0:	ff 90       	pop	r15
 de2:	ef 90       	pop	r14
 de4:	df 90       	pop	r13
 de6:	cf 90       	pop	r12
 de8:	bf 90       	pop	r11
 dea:	af 90       	pop	r10
 dec:	9f 90       	pop	r9
 dee:	8f 90       	pop	r8
 df0:	7f 90       	pop	r7
 df2:	6f 90       	pop	r6
 df4:	5f 90       	pop	r5
 df6:	4f 90       	pop	r4
 df8:	3f 90       	pop	r3
 dfa:	2f 90       	pop	r2
 dfc:	08 95       	ret

00000dfe <strnlen_P>:
 dfe:	fc 01       	movw	r30, r24
 e00:	05 90       	lpm	r0, Z+
 e02:	61 50       	subi	r22, 0x01	; 1
 e04:	70 40       	sbci	r23, 0x00	; 0
 e06:	01 10       	cpse	r0, r1
 e08:	d8 f7       	brcc	.-10     	; 0xe00 <strnlen_P+0x2>
 e0a:	80 95       	com	r24
 e0c:	90 95       	com	r25
 e0e:	8e 0f       	add	r24, r30
 e10:	9f 1f       	adc	r25, r31
 e12:	08 95       	ret

00000e14 <strnlen>:
 e14:	fc 01       	movw	r30, r24
 e16:	61 50       	subi	r22, 0x01	; 1
 e18:	70 40       	sbci	r23, 0x00	; 0
 e1a:	01 90       	ld	r0, Z+
 e1c:	01 10       	cpse	r0, r1
 e1e:	d8 f7       	brcc	.-10     	; 0xe16 <strnlen+0x2>
 e20:	80 95       	com	r24
 e22:	90 95       	com	r25
 e24:	8e 0f       	add	r24, r30
 e26:	9f 1f       	adc	r25, r31
 e28:	08 95       	ret

00000e2a <fputc>:
 e2a:	0f 93       	push	r16
 e2c:	1f 93       	push	r17
 e2e:	cf 93       	push	r28
 e30:	df 93       	push	r29
 e32:	fb 01       	movw	r30, r22
 e34:	23 81       	ldd	r18, Z+3	; 0x03
 e36:	21 fd       	sbrc	r18, 1
 e38:	03 c0       	rjmp	.+6      	; 0xe40 <fputc+0x16>
 e3a:	8f ef       	ldi	r24, 0xFF	; 255
 e3c:	9f ef       	ldi	r25, 0xFF	; 255
 e3e:	2c c0       	rjmp	.+88     	; 0xe98 <fputc+0x6e>
 e40:	22 ff       	sbrs	r18, 2
 e42:	16 c0       	rjmp	.+44     	; 0xe70 <fputc+0x46>
 e44:	46 81       	ldd	r20, Z+6	; 0x06
 e46:	57 81       	ldd	r21, Z+7	; 0x07
 e48:	24 81       	ldd	r18, Z+4	; 0x04
 e4a:	35 81       	ldd	r19, Z+5	; 0x05
 e4c:	42 17       	cp	r20, r18
 e4e:	53 07       	cpc	r21, r19
 e50:	44 f4       	brge	.+16     	; 0xe62 <fputc+0x38>
 e52:	a0 81       	ld	r26, Z
 e54:	b1 81       	ldd	r27, Z+1	; 0x01
 e56:	9d 01       	movw	r18, r26
 e58:	2f 5f       	subi	r18, 0xFF	; 255
 e5a:	3f 4f       	sbci	r19, 0xFF	; 255
 e5c:	31 83       	std	Z+1, r19	; 0x01
 e5e:	20 83       	st	Z, r18
 e60:	8c 93       	st	X, r24
 e62:	26 81       	ldd	r18, Z+6	; 0x06
 e64:	37 81       	ldd	r19, Z+7	; 0x07
 e66:	2f 5f       	subi	r18, 0xFF	; 255
 e68:	3f 4f       	sbci	r19, 0xFF	; 255
 e6a:	37 83       	std	Z+7, r19	; 0x07
 e6c:	26 83       	std	Z+6, r18	; 0x06
 e6e:	14 c0       	rjmp	.+40     	; 0xe98 <fputc+0x6e>
 e70:	8b 01       	movw	r16, r22
 e72:	ec 01       	movw	r28, r24
 e74:	fb 01       	movw	r30, r22
 e76:	00 84       	ldd	r0, Z+8	; 0x08
 e78:	f1 85       	ldd	r31, Z+9	; 0x09
 e7a:	e0 2d       	mov	r30, r0
 e7c:	19 95       	eicall
 e7e:	89 2b       	or	r24, r25
 e80:	e1 f6       	brne	.-72     	; 0xe3a <fputc+0x10>
 e82:	d8 01       	movw	r26, r16
 e84:	16 96       	adiw	r26, 0x06	; 6
 e86:	8d 91       	ld	r24, X+
 e88:	9c 91       	ld	r25, X
 e8a:	17 97       	sbiw	r26, 0x07	; 7
 e8c:	01 96       	adiw	r24, 0x01	; 1
 e8e:	17 96       	adiw	r26, 0x07	; 7
 e90:	9c 93       	st	X, r25
 e92:	8e 93       	st	-X, r24
 e94:	16 97       	sbiw	r26, 0x06	; 6
 e96:	ce 01       	movw	r24, r28
 e98:	df 91       	pop	r29
 e9a:	cf 91       	pop	r28
 e9c:	1f 91       	pop	r17
 e9e:	0f 91       	pop	r16
 ea0:	08 95       	ret

00000ea2 <__ultoa_invert>:
 ea2:	fa 01       	movw	r30, r20
 ea4:	aa 27       	eor	r26, r26
 ea6:	28 30       	cpi	r18, 0x08	; 8
 ea8:	51 f1       	breq	.+84     	; 0xefe <__ultoa_invert+0x5c>
 eaa:	20 31       	cpi	r18, 0x10	; 16
 eac:	81 f1       	breq	.+96     	; 0xf0e <__ultoa_invert+0x6c>
 eae:	e8 94       	clt
 eb0:	6f 93       	push	r22
 eb2:	6e 7f       	andi	r22, 0xFE	; 254
 eb4:	6e 5f       	subi	r22, 0xFE	; 254
 eb6:	7f 4f       	sbci	r23, 0xFF	; 255
 eb8:	8f 4f       	sbci	r24, 0xFF	; 255
 eba:	9f 4f       	sbci	r25, 0xFF	; 255
 ebc:	af 4f       	sbci	r26, 0xFF	; 255
 ebe:	b1 e0       	ldi	r27, 0x01	; 1
 ec0:	3e d0       	rcall	.+124    	; 0xf3e <__ultoa_invert+0x9c>
 ec2:	b4 e0       	ldi	r27, 0x04	; 4
 ec4:	3c d0       	rcall	.+120    	; 0xf3e <__ultoa_invert+0x9c>
 ec6:	67 0f       	add	r22, r23
 ec8:	78 1f       	adc	r23, r24
 eca:	89 1f       	adc	r24, r25
 ecc:	9a 1f       	adc	r25, r26
 ece:	a1 1d       	adc	r26, r1
 ed0:	68 0f       	add	r22, r24
 ed2:	79 1f       	adc	r23, r25
 ed4:	8a 1f       	adc	r24, r26
 ed6:	91 1d       	adc	r25, r1
 ed8:	a1 1d       	adc	r26, r1
 eda:	6a 0f       	add	r22, r26
 edc:	71 1d       	adc	r23, r1
 ede:	81 1d       	adc	r24, r1
 ee0:	91 1d       	adc	r25, r1
 ee2:	a1 1d       	adc	r26, r1
 ee4:	20 d0       	rcall	.+64     	; 0xf26 <__ultoa_invert+0x84>
 ee6:	09 f4       	brne	.+2      	; 0xeea <__ultoa_invert+0x48>
 ee8:	68 94       	set
 eea:	3f 91       	pop	r19
 eec:	2a e0       	ldi	r18, 0x0A	; 10
 eee:	26 9f       	mul	r18, r22
 ef0:	11 24       	eor	r1, r1
 ef2:	30 19       	sub	r19, r0
 ef4:	30 5d       	subi	r19, 0xD0	; 208
 ef6:	31 93       	st	Z+, r19
 ef8:	de f6       	brtc	.-74     	; 0xeb0 <__ultoa_invert+0xe>
 efa:	cf 01       	movw	r24, r30
 efc:	08 95       	ret
 efe:	46 2f       	mov	r20, r22
 f00:	47 70       	andi	r20, 0x07	; 7
 f02:	40 5d       	subi	r20, 0xD0	; 208
 f04:	41 93       	st	Z+, r20
 f06:	b3 e0       	ldi	r27, 0x03	; 3
 f08:	0f d0       	rcall	.+30     	; 0xf28 <__ultoa_invert+0x86>
 f0a:	c9 f7       	brne	.-14     	; 0xefe <__ultoa_invert+0x5c>
 f0c:	f6 cf       	rjmp	.-20     	; 0xefa <__ultoa_invert+0x58>
 f0e:	46 2f       	mov	r20, r22
 f10:	4f 70       	andi	r20, 0x0F	; 15
 f12:	40 5d       	subi	r20, 0xD0	; 208
 f14:	4a 33       	cpi	r20, 0x3A	; 58
 f16:	18 f0       	brcs	.+6      	; 0xf1e <__ultoa_invert+0x7c>
 f18:	49 5d       	subi	r20, 0xD9	; 217
 f1a:	31 fd       	sbrc	r19, 1
 f1c:	40 52       	subi	r20, 0x20	; 32
 f1e:	41 93       	st	Z+, r20
 f20:	02 d0       	rcall	.+4      	; 0xf26 <__ultoa_invert+0x84>
 f22:	a9 f7       	brne	.-22     	; 0xf0e <__ultoa_invert+0x6c>
 f24:	ea cf       	rjmp	.-44     	; 0xefa <__ultoa_invert+0x58>
 f26:	b4 e0       	ldi	r27, 0x04	; 4
 f28:	a6 95       	lsr	r26
 f2a:	97 95       	ror	r25
 f2c:	87 95       	ror	r24
 f2e:	77 95       	ror	r23
 f30:	67 95       	ror	r22
 f32:	ba 95       	dec	r27
 f34:	c9 f7       	brne	.-14     	; 0xf28 <__ultoa_invert+0x86>
 f36:	00 97       	sbiw	r24, 0x00	; 0
 f38:	61 05       	cpc	r22, r1
 f3a:	71 05       	cpc	r23, r1
 f3c:	08 95       	ret
 f3e:	9b 01       	movw	r18, r22
 f40:	ac 01       	movw	r20, r24
 f42:	0a 2e       	mov	r0, r26
 f44:	06 94       	lsr	r0
 f46:	57 95       	ror	r21
 f48:	47 95       	ror	r20
 f4a:	37 95       	ror	r19
 f4c:	27 95       	ror	r18
 f4e:	ba 95       	dec	r27
 f50:	c9 f7       	brne	.-14     	; 0xf44 <__ultoa_invert+0xa2>
 f52:	62 0f       	add	r22, r18
 f54:	73 1f       	adc	r23, r19
 f56:	84 1f       	adc	r24, r20
 f58:	95 1f       	adc	r25, r21
 f5a:	a0 1d       	adc	r26, r0
 f5c:	08 95       	ret

00000f5e <_exit>:
 f5e:	f8 94       	cli

00000f60 <__stop_program>:
 f60:	ff cf       	rjmp	.-2      	; 0xf60 <__stop_program>
