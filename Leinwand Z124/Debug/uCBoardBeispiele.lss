
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800200  00001416  000014aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001416  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c8  0080029e  0080029e  00001548  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001548  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000025f0  00000000  00000000  000017cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001020  00000000  00000000  00003dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015f0  00000000  00000000  00004ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006a8  00000000  00000000  000063cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d8a  00000000  00000000  00006a74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d82  00000000  00000000  000077fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00009580  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c6       	rjmp	.+3180   	; 0xcca <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 e1       	ldi	r30, 0x16	; 22
      fc:	f4 e1       	ldi	r31, 0x14	; 20
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 39       	cpi	r26, 0x9E	; 158
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	ae e9       	ldi	r26, 0x9E	; 158
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a6 36       	cpi	r26, 0x66	; 102
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:
    uint8_t posFlankeStop=0;
    
    zustand_t state = UNTEN;
    
    //Initialisieren
    initBoard(1);
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	1f d3       	rcall	.+1598   	; 0x768 <initBoard>
    uint8_t posFlanken=0;
    uint8_t posFlankeUnten=0;
    uint8_t posFlankeOben=0;
    uint8_t posFlankeStop=0;
    
    zustand_t state = UNTEN;
     12a:	d0 e0       	ldi	r29, 0x00	; 0
    uint8_t inTaster=0;
    uint8_t inTasterAlt=0;

    uint16_t outRot=0;
    uint16_t outGruen=0;
    uint16_t outBlau=0;
     12c:	b1 2c       	mov	r11, r1
     12e:	c1 2c       	mov	r12, r1
    //Variablen
    uint8_t inTaster=0;
    uint8_t inTasterAlt=0;

    uint16_t outRot=0;
    uint16_t outGruen=0;
     130:	d1 2c       	mov	r13, r1
     132:	e1 2c       	mov	r14, r1
{
    //Variablen
    uint8_t inTaster=0;
    uint8_t inTasterAlt=0;

    uint16_t outRot=0;
     134:	f1 2c       	mov	r15, r1
     136:	a1 2c       	mov	r10, r1

//Hauptprogramm
int main(void)
{
    //Variablen
    uint8_t inTaster=0;
     138:	c0 e0       	ldi	r28, 0x00	; 0
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
            outGruen= 0;
            outBlau = 0;
     13a:	71 2c       	mov	r7, r1
     13c:	81 2c       	mov	r8, r1
            
            break;
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
     13e:	33 24       	eor	r3, r3
     140:	3a 94       	dec	r3
     142:	0f 2e       	mov	r0, r31
     144:	f3 e0       	ldi	r31, 0x03	; 3
     146:	4f 2e       	mov	r4, r31
     148:	f0 2d       	mov	r31, r0
            {
                state = STOP;
            }
             if (posFlankeStop)
             {
                 state = STOP;
     14a:	68 94       	set
     14c:	22 24       	eor	r2, r2
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        inTasterAlt = inTaster;
        inTaster = buttonReadAllPL();
     14e:	21 f8       	bld	r2, 1
     150:	b7 d0       	rcall	.+366    	; 0x2c0 <buttonReadAllPL>
     152:	18 2f       	mov	r17, r24
        posFlanken = (inTaster ^ inTasterAlt) & inTaster;
     154:	8c 2f       	mov	r24, r28
     156:	80 95       	com	r24
     158:	81 23       	and	r24, r17
        posFlankeUnten = posFlanken & IN_MASKE_UNTEN;
     15a:	28 2f       	mov	r18, r24
     15c:	22 70       	andi	r18, 0x02	; 2
     15e:	92 2e       	mov	r9, r18
        posFlankeOben = posFlanken & IN_MASKE_OBEN;
     160:	08 2f       	mov	r16, r24
     162:	01 70       	andi	r16, 0x01	; 1
        posFlankeStop = posFlanken & IN_MASKE_STOP;
     164:	c8 2f       	mov	r28, r24
        schalterSensorUnten = switchReadAll() & IN_MASKE_SCHALER_SENSOR_UNTEN;
     166:	c0 74       	andi	r28, 0x40	; 64
     168:	a9 d0       	rcall	.+338    	; 0x2bc <switchReadAll>
        schalterSensorOben = switchReadAll() & IN_MASKE_SCHALER_SENSOR_OBEN;
     16a:	68 2e       	mov	r6, r24
     16c:	a7 d0       	rcall	.+334    	; 0x2bc <switchReadAll>
     16e:	58 2e       	mov	r5, r24
        schalterKeinSensor = switchReadAll() & IN_MASKE_SCHALTER_KEIN_SENSOR;
     170:	a5 d0       	rcall	.+330    	; 0x2bc <switchReadAll>
     172:	d2 30       	cpi	r29, 0x02	; 2
        
        //Verarbeitung-------------------------------------------------------------
        switch (state)
     174:	89 f1       	breq	.+98     	; 0x1d8 <main+0xb2>
     176:	28 f4       	brcc	.+10     	; 0x182 <main+0x5c>
     178:	dd 23       	and	r29, r29
     17a:	51 f0       	breq	.+20     	; 0x190 <main+0x6a>
     17c:	d1 30       	cpi	r29, 0x01	; 1
     17e:	d1 f0       	breq	.+52     	; 0x1b4 <main+0x8e>
     180:	8b c0       	rjmp	.+278    	; 0x298 <main+0x172>
     182:	d3 30       	cpi	r29, 0x03	; 3
     184:	09 f4       	brne	.+2      	; 0x188 <main+0x62>
     186:	3c c0       	rjmp	.+120    	; 0x200 <main+0xda>
     188:	d4 30       	cpi	r29, 0x04	; 4
     18a:	09 f4       	brne	.+2      	; 0x18e <main+0x68>
     18c:	4e c0       	rjmp	.+156    	; 0x22a <main+0x104>
     18e:	84 c0       	rjmp	.+264    	; 0x298 <main+0x172>
        {
            case UNTEN:
            lcdLog("Unten");
     190:	8a e0       	ldi	r24, 0x0A	; 10
     192:	92 e0       	ldi	r25, 0x02	; 2
     194:	9f 93       	push	r25
     196:	8f 93       	push	r24
     198:	f2 d3       	rcall	.+2020   	; 0x97e <lcdLog>
     19a:	0f 90       	pop	r0
            outRot = 0;
            outGruen= 0;
            outBlau = 0 ;
            if (posFlankeOben)
     19c:	0f 90       	pop	r0
     19e:	00 23       	and	r16, r16
     1a0:	09 f4       	brne	.+2      	; 0x1a4 <main+0x7e>
     1a2:	58 c0       	rjmp	.+176    	; 0x254 <main+0x12e>
     1a4:	d3 e0       	ldi	r29, 0x03	; 3
            {
                state = OBENFAHREN;
     1a6:	b7 2c       	mov	r11, r7
        {
            case UNTEN:
            lcdLog("Unten");
            outRot = 0;
            outGruen= 0;
            outBlau = 0 ;
     1a8:	c8 2c       	mov	r12, r8
     1aa:	d7 2c       	mov	r13, r7
        switch (state)
        {
            case UNTEN:
            lcdLog("Unten");
            outRot = 0;
            outGruen= 0;
     1ac:	e8 2c       	mov	r14, r8
     1ae:	f7 2c       	mov	r15, r7
        //Verarbeitung-------------------------------------------------------------
        switch (state)
        {
            case UNTEN:
            lcdLog("Unten");
            outRot = 0;
     1b0:	a8 2c       	mov	r10, r8
     1b2:	72 c0       	rjmp	.+228    	; 0x298 <main+0x172>
           
            
            break;
            
            case OBEN:
            lcdLog("Oben");
     1b4:	80 e1       	ldi	r24, 0x10	; 16
     1b6:	92 e0       	ldi	r25, 0x02	; 2
     1b8:	9f 93       	push	r25
     1ba:	8f 93       	push	r24
     1bc:	e0 d3       	rcall	.+1984   	; 0x97e <lcdLog>
     1be:	0f 90       	pop	r0
            outRot = 1023;
            outGruen= 1023;
            outBlau = 1023;
            if (posFlankeUnten)
     1c0:	0f 90       	pop	r0
     1c2:	99 20       	and	r9, r9
     1c4:	09 f4       	brne	.+2      	; 0x1c8 <main+0xa2>
     1c6:	4d c0       	rjmp	.+154    	; 0x262 <main+0x13c>
     1c8:	d4 e0       	ldi	r29, 0x04	; 4
            {
                state = UNTENFAHREN;
     1ca:	b3 2c       	mov	r11, r3
            
            case OBEN:
            lcdLog("Oben");
            outRot = 1023;
            outGruen= 1023;
            outBlau = 1023;
     1cc:	c4 2c       	mov	r12, r4
     1ce:	d3 2c       	mov	r13, r3
            break;
            
            case OBEN:
            lcdLog("Oben");
            outRot = 1023;
            outGruen= 1023;
     1d0:	e4 2c       	mov	r14, r4
     1d2:	f3 2c       	mov	r15, r3
            
            break;
            
            case OBEN:
            lcdLog("Oben");
            outRot = 1023;
     1d4:	a4 2c       	mov	r10, r4
     1d6:	60 c0       	rjmp	.+192    	; 0x298 <main+0x172>
            }
            
            break;
            
            case STOP:
            lcdLog("Stop");
     1d8:	85 e1       	ldi	r24, 0x15	; 21
     1da:	92 e0       	ldi	r25, 0x02	; 2
     1dc:	9f 93       	push	r25
     1de:	8f 93       	push	r24
     1e0:	ce d3       	rcall	.+1948   	; 0x97e <lcdLog>
     1e2:	0f 90       	pop	r0
            outRot = 1023;
            outGruen= 0;
            outBlau = 0;
            if (posFlankeOben)
     1e4:	0f 90       	pop	r0
     1e6:	01 11       	cpse	r16, r1
     1e8:	d3 e0       	ldi	r29, 0x03	; 3
            {
                state = OBENFAHREN;
     1ea:	99 20       	and	r9, r9
            }
            if (posFlankeUnten)
     1ec:	09 f4       	brne	.+2      	; 0x1f0 <main+0xca>
     1ee:	40 c0       	rjmp	.+128    	; 0x270 <main+0x14a>
     1f0:	d4 e0       	ldi	r29, 0x04	; 4
            {
                state = UNTENFAHREN;
     1f2:	b7 2c       	mov	r11, r7
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
            outGruen= 0;
            outBlau = 0;
     1f4:	c8 2c       	mov	r12, r8
     1f6:	d7 2c       	mov	r13, r7
            break;
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
            outGruen= 0;
     1f8:	e8 2c       	mov	r14, r8
            
            break;
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
     1fa:	f3 2c       	mov	r15, r3
     1fc:	a4 2c       	mov	r10, r4
     1fe:	4c c0       	rjmp	.+152    	; 0x298 <main+0x172>
                state = UNTENFAHREN;
            }
            break;
            
            case OBENFAHREN:
            lcdLog("Oben fahren");
     200:	8a e1       	ldi	r24, 0x1A	; 26
     202:	92 e0       	ldi	r25, 0x02	; 2
     204:	9f 93       	push	r25
     206:	8f 93       	push	r24
     208:	ba d3       	rcall	.+1908   	; 0x97e <lcdLog>
     20a:	0f 90       	pop	r0
            outRot = 0;
            outGruen= 0;
            outBlau = 1023;
            if (schalterSensorOben)
     20c:	0f 90       	pop	r0
     20e:	50 fc       	sbrc	r5, 0
     210:	d1 e0       	ldi	r29, 0x01	; 1
            {
                state = OBEN;
     212:	91 10       	cpse	r9, r1
            }
            if (posFlankeUnten)
     214:	d2 2d       	mov	r29, r2
            {
                state = STOP;
     216:	cc 23       	and	r28, r28
            }
             if (posFlankeStop)
     218:	91 f1       	breq	.+100    	; 0x27e <main+0x158>
     21a:	d2 2d       	mov	r29, r2
             {
                 state = STOP;
     21c:	b3 2c       	mov	r11, r3
            
            case OBENFAHREN:
            lcdLog("Oben fahren");
            outRot = 0;
            outGruen= 0;
            outBlau = 1023;
     21e:	c4 2c       	mov	r12, r4
     220:	d7 2c       	mov	r13, r7
            break;
            
            case OBENFAHREN:
            lcdLog("Oben fahren");
            outRot = 0;
            outGruen= 0;
     222:	e8 2c       	mov	r14, r8
            }
            break;
            
            case OBENFAHREN:
            lcdLog("Oben fahren");
            outRot = 0;
     224:	f7 2c       	mov	r15, r7
     226:	a8 2c       	mov	r10, r8
     228:	37 c0       	rjmp	.+110    	; 0x298 <main+0x172>
                 state = STOP;
             }
            break;
            
            case UNTENFAHREN:
            lcdLog("Unten fahren");
     22a:	86 e2       	ldi	r24, 0x26	; 38
     22c:	92 e0       	ldi	r25, 0x02	; 2
     22e:	9f 93       	push	r25
     230:	8f 93       	push	r24
     232:	a5 d3       	rcall	.+1866   	; 0x97e <lcdLog>
     234:	0f 90       	pop	r0
            outRot = 0;
            outGruen= 1023;
            outBlau =0 ;
            if (schalterSensorUnten)
     236:	0f 90       	pop	r0
     238:	61 fc       	sbrc	r6, 1
     23a:	d0 e0       	ldi	r29, 0x00	; 0
            {
                state = UNTEN;
     23c:	01 11       	cpse	r16, r1
            }
            if (posFlankeOben)
     23e:	d2 2d       	mov	r29, r2
            {
                state = STOP;
     240:	cc 23       	and	r28, r28
            }
            if (posFlankeStop)
     242:	21 f1       	breq	.+72     	; 0x28c <main+0x166>
     244:	d2 2d       	mov	r29, r2
            {
                state = STOP;
     246:	b7 2c       	mov	r11, r7
            
            case UNTENFAHREN:
            lcdLog("Unten fahren");
            outRot = 0;
            outGruen= 1023;
            outBlau =0 ;
     248:	c8 2c       	mov	r12, r8
     24a:	d3 2c       	mov	r13, r3
            break;
            
            case UNTENFAHREN:
            lcdLog("Unten fahren");
            outRot = 0;
            outGruen= 1023;
     24c:	e4 2c       	mov	r14, r4
     24e:	f7 2c       	mov	r15, r7
             }
            break;
            
            case UNTENFAHREN:
            lcdLog("Unten fahren");
            outRot = 0;
     250:	a8 2c       	mov	r10, r8
     252:	22 c0       	rjmp	.+68     	; 0x298 <main+0x172>
     254:	b7 2c       	mov	r11, r7
        {
            case UNTEN:
            lcdLog("Unten");
            outRot = 0;
            outGruen= 0;
            outBlau = 0 ;
     256:	c8 2c       	mov	r12, r8
     258:	d7 2c       	mov	r13, r7
        switch (state)
        {
            case UNTEN:
            lcdLog("Unten");
            outRot = 0;
            outGruen= 0;
     25a:	e8 2c       	mov	r14, r8
     25c:	f7 2c       	mov	r15, r7
        //Verarbeitung-------------------------------------------------------------
        switch (state)
        {
            case UNTEN:
            lcdLog("Unten");
            outRot = 0;
     25e:	a8 2c       	mov	r10, r8
     260:	1b c0       	rjmp	.+54     	; 0x298 <main+0x172>
     262:	b3 2c       	mov	r11, r3
            
            case OBEN:
            lcdLog("Oben");
            outRot = 1023;
            outGruen= 1023;
            outBlau = 1023;
     264:	c4 2c       	mov	r12, r4
     266:	d3 2c       	mov	r13, r3
            break;
            
            case OBEN:
            lcdLog("Oben");
            outRot = 1023;
            outGruen= 1023;
     268:	e4 2c       	mov	r14, r4
     26a:	f3 2c       	mov	r15, r3
            
            break;
            
            case OBEN:
            lcdLog("Oben");
            outRot = 1023;
     26c:	a4 2c       	mov	r10, r4
     26e:	14 c0       	rjmp	.+40     	; 0x298 <main+0x172>
     270:	b7 2c       	mov	r11, r7
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
            outGruen= 0;
            outBlau = 0;
     272:	c8 2c       	mov	r12, r8
     274:	d7 2c       	mov	r13, r7
            break;
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
            outGruen= 0;
     276:	e8 2c       	mov	r14, r8
     278:	f3 2c       	mov	r15, r3
            
            break;
            
            case STOP:
            lcdLog("Stop");
            outRot = 1023;
     27a:	a4 2c       	mov	r10, r4
     27c:	0d c0       	rjmp	.+26     	; 0x298 <main+0x172>
     27e:	b3 2c       	mov	r11, r3
            
            case OBENFAHREN:
            lcdLog("Oben fahren");
            outRot = 0;
            outGruen= 0;
            outBlau = 1023;
     280:	c4 2c       	mov	r12, r4
     282:	d7 2c       	mov	r13, r7
            break;
            
            case OBENFAHREN:
            lcdLog("Oben fahren");
            outRot = 0;
            outGruen= 0;
     284:	e8 2c       	mov	r14, r8
     286:	f7 2c       	mov	r15, r7
            }
            break;
            
            case OBENFAHREN:
            lcdLog("Oben fahren");
            outRot = 0;
     288:	a8 2c       	mov	r10, r8
     28a:	06 c0       	rjmp	.+12     	; 0x298 <main+0x172>
     28c:	b7 2c       	mov	r11, r7
            
            case UNTENFAHREN:
            lcdLog("Unten fahren");
            outRot = 0;
            outGruen= 1023;
            outBlau =0 ;
     28e:	c8 2c       	mov	r12, r8
     290:	d3 2c       	mov	r13, r3
            break;
            
            case UNTENFAHREN:
            lcdLog("Unten fahren");
            outRot = 0;
            outGruen= 1023;
     292:	e4 2c       	mov	r14, r4
             }
            break;
            
            case UNTENFAHREN:
            lcdLog("Unten fahren");
            outRot = 0;
     294:	f7 2c       	mov	r15, r7
     296:	a8 2c       	mov	r10, r8
            //Wird nicht erreicht
            break;
        }
        
        //Ausgabe------------------------------------------------------------------
        rgbWrite(outRot,outGruen,outBlau);
     298:	4b 2d       	mov	r20, r11
     29a:	5c 2d       	mov	r21, r12
     29c:	6d 2d       	mov	r22, r13
     29e:	7e 2d       	mov	r23, r14
     2a0:	8f 2d       	mov	r24, r15
     2a2:	9a 2d       	mov	r25, r10
     2a4:	3b d0       	rcall	.+118    	; 0x31c <rgbWrite>
     2a6:	8f e3       	ldi	r24, 0x3F	; 63
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2a8:	9c e9       	ldi	r25, 0x9C	; 156
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <main+0x184>
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x18a>
     2b0:	00 00       	nop
     2b2:	c1 2f       	mov	r28, r17
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        inTasterAlt = inTaster;
        inTaster = buttonReadAllPL();
     2b4:	4d cf       	rjmp	.-358    	; 0x150 <main+0x2a>

000002b6 <ledWriteAll>:
     2b6:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     2b8:	95 b9       	out	0x05, r25	; 5
     2ba:	08 95       	ret

000002bc <switchReadAll>:
     2bc:	86 b1       	in	r24, 0x06	; 6
     2be:	08 95       	ret

000002c0 <buttonReadAllPL>:
     2c0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>
     2c4:	08 95       	ret

000002c6 <startSystemTimeMs>:
     2c6:	83 e0       	ldi	r24, 0x03	; 3
     2c8:	84 bd       	out	0x24, r24	; 36
     2ca:	8b e0       	ldi	r24, 0x0B	; 11
     2cc:	85 bd       	out	0x25, r24	; 37
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     2d4:	89 ef       	ldi	r24, 0xF9	; 249
     2d6:	87 bd       	out	0x27, r24	; 39
     2d8:	08 95       	ret

000002da <initAdc>:
     2da:	11 ba       	out	0x11, r1	; 17
     2dc:	10 ba       	out	0x10, r1	; 16
     2de:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     2e2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     2e6:	80 e4       	ldi	r24, 0x40	; 64
     2e8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     2ec:	8f e0       	ldi	r24, 0x0F	; 15
     2ee:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     2f2:	8f ef       	ldi	r24, 0xFF	; 255
     2f4:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     2f8:	ea e7       	ldi	r30, 0x7A	; 122
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	87 ea       	ldi	r24, 0xA7	; 167
     2fe:	80 83       	st	Z, r24
     300:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     304:	80 81       	ld	r24, Z
     306:	80 64       	ori	r24, 0x40	; 64
     308:	80 83       	st	Z, r24
     30a:	80 81       	ld	r24, Z
     30c:	84 ff       	sbrs	r24, 4
     30e:	fd cf       	rjmp	.-6      	; 0x30a <initAdc+0x30>
     310:	ea e7       	ldi	r30, 0x7A	; 122
     312:	f0 e0       	ldi	r31, 0x00	; 0
     314:	80 81       	ld	r24, Z
     316:	8f 7e       	andi	r24, 0xEF	; 239
     318:	80 83       	st	Z, r24
     31a:	08 95       	ret

0000031c <rgbWrite>:
     31c:	2f ef       	ldi	r18, 0xFF	; 255
     31e:	33 e0       	ldi	r19, 0x03	; 3
     320:	f9 01       	movw	r30, r18
     322:	e8 1b       	sub	r30, r24
     324:	f9 0b       	sbc	r31, r25
     326:	c9 01       	movw	r24, r18
     328:	86 1b       	sub	r24, r22
     32a:	97 0b       	sbc	r25, r23
     32c:	24 1b       	sub	r18, r20
     32e:	35 0b       	sbc	r19, r21
     330:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     334:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     338:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     33c:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     340:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     344:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     348:	08 95       	ret

0000034a <initRgb>:
     34a:	8e ef       	ldi	r24, 0xFE	; 254
     34c:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     350:	8b e1       	ldi	r24, 0x1B	; 27
     352:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     356:	83 e0       	ldi	r24, 0x03	; 3
     358:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     35c:	8f ef       	ldi	r24, 0xFF	; 255
     35e:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     362:	40 e0       	ldi	r20, 0x00	; 0
     364:	50 e0       	ldi	r21, 0x00	; 0
     366:	60 e0       	ldi	r22, 0x00	; 0
     368:	70 e0       	ldi	r23, 0x00	; 0
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	d6 cf       	rjmp	.-84     	; 0x31c <rgbWrite>
     370:	08 95       	ret

00000372 <lcdSid>:
     372:	88 23       	and	r24, r24
     374:	11 f0       	breq	.+4      	; 0x37a <lcdSid+0x8>
     376:	a0 9a       	sbi	0x14, 0	; 20
     378:	08 95       	ret
     37a:	a0 98       	cbi	0x14, 0	; 20
     37c:	08 95       	ret

0000037e <lcdSclk>:
     37e:	88 23       	and	r24, r24
     380:	11 f0       	breq	.+4      	; 0x386 <lcdSclk+0x8>
     382:	a1 9a       	sbi	0x14, 1	; 20
     384:	08 95       	ret
     386:	a1 98       	cbi	0x14, 1	; 20
     388:	08 95       	ret

0000038a <lcdLight>:
     38a:	81 11       	cpse	r24, r1
     38c:	04 c0       	rjmp	.+8      	; 0x396 <lcdLight+0xc>
     38e:	84 b5       	in	r24, 0x24	; 36
     390:	8f 7d       	andi	r24, 0xDF	; 223
     392:	84 bd       	out	0x24, r24	; 36
     394:	08 95       	ret
     396:	94 b5       	in	r25, 0x24	; 36
     398:	90 62       	ori	r25, 0x20	; 32
     39a:	94 bd       	out	0x24, r25	; 36
     39c:	88 bd       	out	0x28, r24	; 40
     39e:	08 95       	ret

000003a0 <writeLcdF>:
     3a0:	ef 92       	push	r14
     3a2:	ff 92       	push	r15
     3a4:	0f 93       	push	r16
     3a6:	1f 93       	push	r17
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	7c 01       	movw	r14, r24
     3ae:	eb 01       	movw	r28, r22
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	df df       	rcall	.-66     	; 0x372 <lcdSid>
     3b4:	05 e0       	ldi	r16, 0x05	; 5
     3b6:	10 e0       	ldi	r17, 0x00	; 0
     3b8:	80 e0       	ldi	r24, 0x00	; 0
     3ba:	e1 df       	rcall	.-62     	; 0x37e <lcdSclk>
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	df df       	rcall	.-66     	; 0x37e <lcdSclk>
     3c0:	01 50       	subi	r16, 0x01	; 1
     3c2:	11 09       	sbc	r17, r1
     3c4:	c9 f7       	brne	.-14     	; 0x3b8 <writeLcdF+0x18>
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	d4 df       	rcall	.-88     	; 0x372 <lcdSid>
     3ca:	80 e0       	ldi	r24, 0x00	; 0
     3cc:	d8 df       	rcall	.-80     	; 0x37e <lcdSclk>
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	d6 df       	rcall	.-84     	; 0x37e <lcdSclk>
     3d2:	83 e4       	ldi	r24, 0x43	; 67
     3d4:	e8 16       	cp	r14, r24
     3d6:	f1 04       	cpc	r15, r1
     3d8:	19 f4       	brne	.+6      	; 0x3e0 <writeLcdF+0x40>
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	ca df       	rcall	.-108    	; 0x372 <lcdSid>
     3de:	02 c0       	rjmp	.+4      	; 0x3e4 <writeLcdF+0x44>
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	c7 df       	rcall	.-114    	; 0x372 <lcdSid>
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	cb df       	rcall	.-106    	; 0x37e <lcdSclk>
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	c9 df       	rcall	.-110    	; 0x37e <lcdSclk>
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	c1 df       	rcall	.-126    	; 0x372 <lcdSid>
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	c5 df       	rcall	.-118    	; 0x37e <lcdSclk>
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	c3 df       	rcall	.-122    	; 0x37e <lcdSclk>
     3f8:	04 e0       	ldi	r16, 0x04	; 4
     3fa:	10 e0       	ldi	r17, 0x00	; 0
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	bf df       	rcall	.-130    	; 0x37e <lcdSclk>
     400:	c0 ff       	sbrs	r28, 0
     402:	03 c0       	rjmp	.+6      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	b5 df       	rcall	.-150    	; 0x372 <lcdSid>
     408:	02 c0       	rjmp	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	b2 df       	rcall	.-156    	; 0x372 <lcdSid>
     40e:	d6 95       	lsr	r29
     410:	c7 95       	ror	r28
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	b4 df       	rcall	.-152    	; 0x37e <lcdSclk>
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	b2 df       	rcall	.-156    	; 0x37e <lcdSclk>
     41a:	01 50       	subi	r16, 0x01	; 1
     41c:	11 09       	sbc	r17, r1
     41e:	71 f7       	brne	.-36     	; 0x3fc <writeLcdF+0x5c>
     420:	80 e0       	ldi	r24, 0x00	; 0
     422:	a7 df       	rcall	.-178    	; 0x372 <lcdSid>
     424:	04 e0       	ldi	r16, 0x04	; 4
     426:	10 e0       	ldi	r17, 0x00	; 0
     428:	80 e0       	ldi	r24, 0x00	; 0
     42a:	a9 df       	rcall	.-174    	; 0x37e <lcdSclk>
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	a7 df       	rcall	.-178    	; 0x37e <lcdSclk>
     430:	01 50       	subi	r16, 0x01	; 1
     432:	11 09       	sbc	r17, r1
     434:	c9 f7       	brne	.-14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     436:	04 e0       	ldi	r16, 0x04	; 4
     438:	10 e0       	ldi	r17, 0x00	; 0
     43a:	80 e0       	ldi	r24, 0x00	; 0
     43c:	a0 df       	rcall	.-192    	; 0x37e <lcdSclk>
     43e:	c0 ff       	sbrs	r28, 0
     440:	03 c0       	rjmp	.+6      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     442:	81 e0       	ldi	r24, 0x01	; 1
     444:	96 df       	rcall	.-212    	; 0x372 <lcdSid>
     446:	02 c0       	rjmp	.+4      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	93 df       	rcall	.-218    	; 0x372 <lcdSid>
     44c:	d6 95       	lsr	r29
     44e:	c7 95       	ror	r28
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	95 df       	rcall	.-214    	; 0x37e <lcdSclk>
     454:	81 e0       	ldi	r24, 0x01	; 1
     456:	93 df       	rcall	.-218    	; 0x37e <lcdSclk>
     458:	01 50       	subi	r16, 0x01	; 1
     45a:	11 09       	sbc	r17, r1
     45c:	71 f7       	brne	.-36     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	88 df       	rcall	.-240    	; 0x372 <lcdSid>
     462:	c4 e0       	ldi	r28, 0x04	; 4
     464:	d0 e0       	ldi	r29, 0x00	; 0
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	8a df       	rcall	.-236    	; 0x37e <lcdSclk>
     46a:	81 e0       	ldi	r24, 0x01	; 1
     46c:	88 df       	rcall	.-240    	; 0x37e <lcdSclk>
     46e:	21 97       	sbiw	r28, 0x01	; 1
     470:	d1 f7       	brne	.-12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	7e df       	rcall	.-260    	; 0x372 <lcdSid>
     476:	87 ec       	ldi	r24, 0xC7	; 199
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	01 97       	sbiw	r24, 0x01	; 1
     47c:	f1 f7       	brne	.-4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     47e:	00 c0       	rjmp	.+0      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     480:	00 00       	nop
     482:	df 91       	pop	r29
     484:	cf 91       	pop	r28
     486:	1f 91       	pop	r17
     488:	0f 91       	pop	r16
     48a:	ff 90       	pop	r15
     48c:	ef 90       	pop	r14
     48e:	08 95       	ret

00000490 <lcdWriteText>:
     490:	1f 93       	push	r17
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	cd b7       	in	r28, 0x3d	; 61
     498:	de b7       	in	r29, 0x3e	; 62
     49a:	65 97       	sbiw	r28, 0x15	; 21
     49c:	0f b6       	in	r0, 0x3f	; 63
     49e:	f8 94       	cli
     4a0:	de bf       	out	0x3e, r29	; 62
     4a2:	0f be       	out	0x3f, r0	; 63
     4a4:	cd bf       	out	0x3d, r28	; 61
     4a6:	9e 01       	movw	r18, r28
     4a8:	20 5e       	subi	r18, 0xE0	; 224
     4aa:	3f 4f       	sbci	r19, 0xFF	; 255
     4ac:	4e 8d       	ldd	r20, Y+30	; 0x1e
     4ae:	5f 8d       	ldd	r21, Y+31	; 0x1f
     4b0:	65 e1       	ldi	r22, 0x15	; 21
     4b2:	70 e0       	ldi	r23, 0x00	; 0
     4b4:	ce 01       	movw	r24, r28
     4b6:	01 96       	adiw	r24, 0x01	; 1
     4b8:	c7 d4       	rcall	.+2446   	; 0xe48 <vsnprintf>
     4ba:	6d 8d       	ldd	r22, Y+29	; 0x1d
     4bc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     4be:	90 e2       	ldi	r25, 0x20	; 32
     4c0:	89 9f       	mul	r24, r25
     4c2:	60 0d       	add	r22, r0
     4c4:	11 24       	eor	r1, r1
     4c6:	60 68       	ori	r22, 0x80	; 128
     4c8:	70 e0       	ldi	r23, 0x00	; 0
     4ca:	83 e4       	ldi	r24, 0x43	; 67
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	68 df       	rcall	.-304    	; 0x3a0 <writeLcdF>
     4d0:	69 81       	ldd	r22, Y+1	; 0x01
     4d2:	66 23       	and	r22, r22
     4d4:	79 f0       	breq	.+30     	; 0x4f4 <lcdWriteText+0x64>
     4d6:	10 e0       	ldi	r17, 0x00	; 0
     4d8:	1f 5f       	subi	r17, 0xFF	; 255
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	84 e4       	ldi	r24, 0x44	; 68
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	5f df       	rcall	.-322    	; 0x3a0 <writeLcdF>
     4e2:	e1 e0       	ldi	r30, 0x01	; 1
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	ec 0f       	add	r30, r28
     4e8:	fd 1f       	adc	r31, r29
     4ea:	e1 0f       	add	r30, r17
     4ec:	f1 1d       	adc	r31, r1
     4ee:	60 81       	ld	r22, Z
     4f0:	61 11       	cpse	r22, r1
     4f2:	f2 cf       	rjmp	.-28     	; 0x4d8 <lcdWriteText+0x48>
     4f4:	65 96       	adiw	r28, 0x15	; 21
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	df 91       	pop	r29
     502:	cf 91       	pop	r28
     504:	1f 91       	pop	r17
     506:	08 95       	ret

00000508 <lcdWriteZahl>:
     508:	2f 92       	push	r2
     50a:	3f 92       	push	r3
     50c:	4f 92       	push	r4
     50e:	5f 92       	push	r5
     510:	6f 92       	push	r6
     512:	7f 92       	push	r7
     514:	8f 92       	push	r8
     516:	9f 92       	push	r9
     518:	af 92       	push	r10
     51a:	bf 92       	push	r11
     51c:	cf 92       	push	r12
     51e:	df 92       	push	r13
     520:	ef 92       	push	r14
     522:	ff 92       	push	r15
     524:	0f 93       	push	r16
     526:	1f 93       	push	r17
     528:	cf 93       	push	r28
     52a:	df 93       	push	r29
     52c:	cd b7       	in	r28, 0x3d	; 61
     52e:	de b7       	in	r29, 0x3e	; 62
     530:	e3 97       	sbiw	r28, 0x33	; 51
     532:	0f b6       	in	r0, 0x3f	; 63
     534:	f8 94       	cli
     536:	de bf       	out	0x3e, r29	; 62
     538:	0f be       	out	0x3f, r0	; 63
     53a:	cd bf       	out	0x3d, r28	; 61
     53c:	8a ab       	std	Y+50, r24	; 0x32
     53e:	6b ab       	std	Y+51, r22	; 0x33
     540:	ed a6       	std	Y+45, r14	; 0x2d
     542:	fe a6       	std	Y+46, r15	; 0x2e
     544:	70 2e       	mov	r7, r16
     546:	61 2e       	mov	r6, r17
     548:	52 2e       	mov	r5, r18
     54a:	43 2e       	mov	r4, r19
     54c:	cf a6       	std	Y+47, r12	; 0x2f
     54e:	a8 aa       	std	Y+48, r10	; 0x30
     550:	8c 2d       	mov	r24, r12
     552:	8a 0d       	add	r24, r10
     554:	89 ab       	std	Y+49, r24	; 0x31
     556:	85 31       	cpi	r24, 0x15	; 21
     558:	70 f0       	brcs	.+28     	; 0x576 <lcdWriteZahl+0x6e>
     55a:	83 e3       	ldi	r24, 0x33	; 51
     55c:	92 e0       	ldi	r25, 0x02	; 2
     55e:	9f 93       	push	r25
     560:	8f 93       	push	r24
     562:	9b a9       	ldd	r25, Y+51	; 0x33
     564:	9f 93       	push	r25
     566:	ea a9       	ldd	r30, Y+50	; 0x32
     568:	ef 93       	push	r30
     56a:	92 df       	rcall	.-220    	; 0x490 <lcdWriteText>
     56c:	0f 90       	pop	r0
     56e:	0f 90       	pop	r0
     570:	0f 90       	pop	r0
     572:	0f 90       	pop	r0
     574:	a8 c0       	rjmp	.+336    	; 0x6c6 <lcdWriteZahl+0x1be>
     576:	4e 01       	movw	r8, r28
     578:	f5 e1       	ldi	r31, 0x15	; 21
     57a:	8f 0e       	add	r8, r31
     57c:	91 1c       	adc	r9, r1
     57e:	ce 01       	movw	r24, r28
     580:	01 96       	adiw	r24, 0x01	; 1
     582:	9c a7       	std	Y+44, r25	; 0x2c
     584:	8b a7       	std	Y+43, r24	; 0x2b
     586:	24 2e       	mov	r2, r20
     588:	35 2e       	mov	r3, r21
     58a:	0f 2e       	mov	r0, r31
     58c:	fa e0       	ldi	r31, 0x0A	; 10
     58e:	af 2e       	mov	r10, r31
     590:	f0 2d       	mov	r31, r0
     592:	b1 2c       	mov	r11, r1
     594:	c1 2c       	mov	r12, r1
     596:	d1 2c       	mov	r13, r1
     598:	e1 2c       	mov	r14, r1
     59a:	f1 2c       	mov	r15, r1
     59c:	00 e0       	ldi	r16, 0x00	; 0
     59e:	10 e0       	ldi	r17, 0x00	; 0
     5a0:	2d a5       	ldd	r18, Y+45	; 0x2d
     5a2:	3e a5       	ldd	r19, Y+46	; 0x2e
     5a4:	47 2d       	mov	r20, r7
     5a6:	56 2d       	mov	r21, r6
     5a8:	65 2d       	mov	r22, r5
     5aa:	74 2d       	mov	r23, r4
     5ac:	82 2d       	mov	r24, r2
     5ae:	93 2d       	mov	r25, r3
     5b0:	d8 d3       	rcall	.+1968   	; 0xd62 <__umoddi3>
     5b2:	20 5d       	subi	r18, 0xD0	; 208
     5b4:	f4 01       	movw	r30, r8
     5b6:	22 93       	st	-Z, r18
     5b8:	4f 01       	movw	r8, r30
     5ba:	2d a5       	ldd	r18, Y+45	; 0x2d
     5bc:	3e a5       	ldd	r19, Y+46	; 0x2e
     5be:	47 2d       	mov	r20, r7
     5c0:	56 2d       	mov	r21, r6
     5c2:	65 2d       	mov	r22, r5
     5c4:	74 2d       	mov	r23, r4
     5c6:	82 2d       	mov	r24, r2
     5c8:	93 2d       	mov	r25, r3
     5ca:	cd d3       	rcall	.+1946   	; 0xd66 <__udivdi3>
     5cc:	2d a7       	std	Y+45, r18	; 0x2d
     5ce:	3e a7       	std	Y+46, r19	; 0x2e
     5d0:	74 2e       	mov	r7, r20
     5d2:	65 2e       	mov	r6, r21
     5d4:	56 2e       	mov	r5, r22
     5d6:	47 2e       	mov	r4, r23
     5d8:	28 2e       	mov	r2, r24
     5da:	39 2e       	mov	r3, r25
     5dc:	8b a5       	ldd	r24, Y+43	; 0x2b
     5de:	9c a5       	ldd	r25, Y+44	; 0x2c
     5e0:	88 15       	cp	r24, r8
     5e2:	99 05       	cpc	r25, r9
     5e4:	91 f6       	brne	.-92     	; 0x58a <lcdWriteZahl+0x82>
     5e6:	84 e1       	ldi	r24, 0x14	; 20
     5e8:	99 a9       	ldd	r25, Y+49	; 0x31
     5ea:	89 1b       	sub	r24, r25
     5ec:	ef a5       	ldd	r30, Y+47	; 0x2f
     5ee:	ee 23       	and	r30, r30
     5f0:	89 f0       	breq	.+34     	; 0x614 <lcdWriteZahl+0x10c>
     5f2:	fe 01       	movw	r30, r28
     5f4:	75 96       	adiw	r30, 0x15	; 21
     5f6:	2f a5       	ldd	r18, Y+47	; 0x2f
     5f8:	28 0f       	add	r18, r24
     5fa:	a1 e0       	ldi	r26, 0x01	; 1
     5fc:	b0 e0       	ldi	r27, 0x00	; 0
     5fe:	ac 0f       	add	r26, r28
     600:	bd 1f       	adc	r27, r29
     602:	a8 0f       	add	r26, r24
     604:	b1 1d       	adc	r27, r1
     606:	9c 91       	ld	r25, X
     608:	91 93       	st	Z+, r25
     60a:	8f 5f       	subi	r24, 0xFF	; 255
     60c:	82 13       	cpse	r24, r18
     60e:	f5 cf       	rjmp	.-22     	; 0x5fa <lcdWriteZahl+0xf2>
     610:	3f a5       	ldd	r19, Y+47	; 0x2f
     612:	02 c0       	rjmp	.+4      	; 0x618 <lcdWriteZahl+0x110>
     614:	28 2f       	mov	r18, r24
     616:	3f a5       	ldd	r19, Y+47	; 0x2f
     618:	f8 a9       	ldd	r31, Y+48	; 0x30
     61a:	ff 23       	and	r31, r31
     61c:	f1 f0       	breq	.+60     	; 0x65a <lcdWriteZahl+0x152>
     61e:	fe 01       	movw	r30, r28
     620:	e3 0f       	add	r30, r19
     622:	f1 1d       	adc	r31, r1
     624:	8e e2       	ldi	r24, 0x2E	; 46
     626:	85 8b       	std	Z+21, r24	; 0x15
     628:	91 e0       	ldi	r25, 0x01	; 1
     62a:	93 0f       	add	r25, r19
     62c:	38 a9       	ldd	r19, Y+48	; 0x30
     62e:	39 0f       	add	r19, r25
     630:	89 2f       	mov	r24, r25
     632:	29 1b       	sub	r18, r25
     634:	e5 e1       	ldi	r30, 0x15	; 21
     636:	f0 e0       	ldi	r31, 0x00	; 0
     638:	ec 0f       	add	r30, r28
     63a:	fd 1f       	adc	r31, r29
     63c:	e8 0f       	add	r30, r24
     63e:	f1 1d       	adc	r31, r1
     640:	92 2f       	mov	r25, r18
     642:	98 0f       	add	r25, r24
     644:	a1 e0       	ldi	r26, 0x01	; 1
     646:	b0 e0       	ldi	r27, 0x00	; 0
     648:	ac 0f       	add	r26, r28
     64a:	bd 1f       	adc	r27, r29
     64c:	a9 0f       	add	r26, r25
     64e:	b1 1d       	adc	r27, r1
     650:	9c 91       	ld	r25, X
     652:	90 83       	st	Z, r25
     654:	8f 5f       	subi	r24, 0xFF	; 255
     656:	38 13       	cpse	r19, r24
     658:	ed cf       	rjmp	.-38     	; 0x634 <lcdWriteZahl+0x12c>
     65a:	fe 01       	movw	r30, r28
     65c:	e3 0f       	add	r30, r19
     65e:	f1 1d       	adc	r31, r1
     660:	15 8a       	std	Z+21, r1	; 0x15
     662:	8d 89       	ldd	r24, Y+21	; 0x15
     664:	80 33       	cpi	r24, 0x30	; 48
     666:	11 f5       	brne	.+68     	; 0x6ac <lcdWriteZahl+0x1a4>
     668:	8f a5       	ldd	r24, Y+47	; 0x2f
     66a:	48 2f       	mov	r20, r24
     66c:	50 e0       	ldi	r21, 0x00	; 0
     66e:	41 50       	subi	r20, 0x01	; 1
     670:	51 09       	sbc	r21, r1
     672:	14 16       	cp	r1, r20
     674:	15 06       	cpc	r1, r21
     676:	d4 f4       	brge	.+52     	; 0x6ac <lcdWriteZahl+0x1a4>
     678:	80 e0       	ldi	r24, 0x00	; 0
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	60 e2       	ldi	r22, 0x20	; 32
     680:	2f 5f       	subi	r18, 0xFF	; 255
     682:	e5 e1       	ldi	r30, 0x15	; 21
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	ec 0f       	add	r30, r28
     688:	fd 1f       	adc	r31, r29
     68a:	e8 0f       	add	r30, r24
     68c:	f9 1f       	adc	r31, r25
     68e:	60 83       	st	Z, r22
     690:	82 2f       	mov	r24, r18
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	e5 e1       	ldi	r30, 0x15	; 21
     696:	f0 e0       	ldi	r31, 0x00	; 0
     698:	ec 0f       	add	r30, r28
     69a:	fd 1f       	adc	r31, r29
     69c:	e8 0f       	add	r30, r24
     69e:	f9 1f       	adc	r31, r25
     6a0:	30 81       	ld	r19, Z
     6a2:	30 33       	cpi	r19, 0x30	; 48
     6a4:	19 f4       	brne	.+6      	; 0x6ac <lcdWriteZahl+0x1a4>
     6a6:	84 17       	cp	r24, r20
     6a8:	95 07       	cpc	r25, r21
     6aa:	54 f3       	brlt	.-44     	; 0x680 <lcdWriteZahl+0x178>
     6ac:	ce 01       	movw	r24, r28
     6ae:	45 96       	adiw	r24, 0x15	; 21
     6b0:	9f 93       	push	r25
     6b2:	8f 93       	push	r24
     6b4:	9b a9       	ldd	r25, Y+51	; 0x33
     6b6:	9f 93       	push	r25
     6b8:	ea a9       	ldd	r30, Y+50	; 0x32
     6ba:	ef 93       	push	r30
     6bc:	e9 de       	rcall	.-558    	; 0x490 <lcdWriteText>
     6be:	0f 90       	pop	r0
     6c0:	0f 90       	pop	r0
     6c2:	0f 90       	pop	r0
     6c4:	0f 90       	pop	r0
     6c6:	e3 96       	adiw	r28, 0x33	; 51
     6c8:	0f b6       	in	r0, 0x3f	; 63
     6ca:	f8 94       	cli
     6cc:	de bf       	out	0x3e, r29	; 62
     6ce:	0f be       	out	0x3f, r0	; 63
     6d0:	cd bf       	out	0x3d, r28	; 61
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	1f 91       	pop	r17
     6d8:	0f 91       	pop	r16
     6da:	ff 90       	pop	r15
     6dc:	ef 90       	pop	r14
     6de:	df 90       	pop	r13
     6e0:	cf 90       	pop	r12
     6e2:	bf 90       	pop	r11
     6e4:	af 90       	pop	r10
     6e6:	9f 90       	pop	r9
     6e8:	8f 90       	pop	r8
     6ea:	7f 90       	pop	r7
     6ec:	6f 90       	pop	r6
     6ee:	5f 90       	pop	r5
     6f0:	4f 90       	pop	r4
     6f2:	3f 90       	pop	r3
     6f4:	2f 90       	pop	r2
     6f6:	08 95       	ret

000006f8 <lcdClear>:
     6f8:	61 e0       	ldi	r22, 0x01	; 1
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	83 e4       	ldi	r24, 0x43	; 67
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	4f de       	rcall	.-866    	; 0x3a0 <writeLcdF>
     702:	8f e3       	ldi	r24, 0x3F	; 63
     704:	9f e1       	ldi	r25, 0x1F	; 31
     706:	01 97       	sbiw	r24, 0x01	; 1
     708:	f1 f7       	brne	.-4      	; 0x706 <lcdClear+0xe>
     70a:	00 c0       	rjmp	.+0      	; 0x70c <lcdClear+0x14>
     70c:	00 00       	nop
     70e:	8b e5       	ldi	r24, 0x5B	; 91
     710:	92 e0       	ldi	r25, 0x02	; 2
     712:	9f 93       	push	r25
     714:	8f 93       	push	r24
     716:	1f 92       	push	r1
     718:	1f 92       	push	r1
     71a:	ba de       	rcall	.-652    	; 0x490 <lcdWriteText>
     71c:	0f 90       	pop	r0
     71e:	0f 90       	pop	r0
     720:	0f 90       	pop	r0
     722:	0f 90       	pop	r0
     724:	08 95       	ret

00000726 <initLcd>:
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	2a de       	rcall	.-940    	; 0x37e <lcdSclk>
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	22 de       	rcall	.-956    	; 0x372 <lcdSid>
     72e:	64 e3       	ldi	r22, 0x34	; 52
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	83 e4       	ldi	r24, 0x43	; 67
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	34 de       	rcall	.-920    	; 0x3a0 <writeLcdF>
     738:	69 e0       	ldi	r22, 0x09	; 9
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	83 e4       	ldi	r24, 0x43	; 67
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	2f de       	rcall	.-930    	; 0x3a0 <writeLcdF>
     742:	60 e3       	ldi	r22, 0x30	; 48
     744:	70 e0       	ldi	r23, 0x00	; 0
     746:	83 e4       	ldi	r24, 0x43	; 67
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	2a de       	rcall	.-940    	; 0x3a0 <writeLcdF>
     74c:	6c e0       	ldi	r22, 0x0C	; 12
     74e:	70 e0       	ldi	r23, 0x00	; 0
     750:	83 e4       	ldi	r24, 0x43	; 67
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	25 de       	rcall	.-950    	; 0x3a0 <writeLcdF>
     756:	d0 df       	rcall	.-96     	; 0x6f8 <lcdClear>
     758:	67 e0       	ldi	r22, 0x07	; 7
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	83 e4       	ldi	r24, 0x43	; 67
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	1f de       	rcall	.-962    	; 0x3a0 <writeLcdF>
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	12 ce       	rjmp	.-988    	; 0x38a <lcdLight>
     766:	08 95       	ret

00000768 <initBoard>:
     768:	4f 92       	push	r4
     76a:	5f 92       	push	r5
     76c:	6f 92       	push	r6
     76e:	7f 92       	push	r7
     770:	8f 92       	push	r8
     772:	9f 92       	push	r9
     774:	af 92       	push	r10
     776:	bf 92       	push	r11
     778:	cf 92       	push	r12
     77a:	df 92       	push	r13
     77c:	ef 92       	push	r14
     77e:	ff 92       	push	r15
     780:	0f 93       	push	r16
     782:	1f 93       	push	r17
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	c8 2f       	mov	r28, r24
     78a:	85 b7       	in	r24, 0x35	; 53
     78c:	85 bf       	out	0x35, r24	; 53
     78e:	12 b8       	out	0x02, r1	; 2
     790:	8f ef       	ldi	r24, 0xFF	; 255
     792:	81 b9       	out	0x01, r24	; 1
     794:	15 b8       	out	0x05, r1	; 5
     796:	84 b9       	out	0x04, r24	; 4
     798:	88 b9       	out	0x08, r24	; 8
     79a:	17 b8       	out	0x07, r1	; 7
     79c:	8b b9       	out	0x0b, r24	; 11
     79e:	1a b8       	out	0x0a, r1	; 10
     7a0:	8e b9       	out	0x0e, r24	; 14
     7a2:	1d b8       	out	0x0d, r1	; 13
     7a4:	72 98       	cbi	0x0e, 2	; 14
     7a6:	11 ba       	out	0x11, r1	; 17
     7a8:	10 ba       	out	0x10, r1	; 16
     7aa:	94 e0       	ldi	r25, 0x04	; 4
     7ac:	94 bb       	out	0x14, r25	; 20
     7ae:	93 b3       	in	r25, 0x13	; 19
     7b0:	93 60       	ori	r25, 0x03	; 3
     7b2:	93 bb       	out	0x13, r25	; 19
     7b4:	9d 9a       	sbi	0x13, 5	; 19
     7b6:	97 ec       	ldi	r25, 0xC7	; 199
     7b8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     7bc:	98 e3       	ldi	r25, 0x38	; 56
     7be:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     7c2:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     7c6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     7ca:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     7ce:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     7d2:	8c e3       	ldi	r24, 0x3C	; 60
     7d4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     7d8:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     7dc:	78 94       	sei
     7de:	73 dd       	rcall	.-1306   	; 0x2c6 <startSystemTimeMs>
     7e0:	a2 df       	rcall	.-188    	; 0x726 <initLcd>
     7e2:	7b dd       	rcall	.-1290   	; 0x2da <initAdc>
     7e4:	b2 dd       	rcall	.-1180   	; 0x34a <initRgb>
     7e6:	cc 23       	and	r28, r28
     7e8:	09 f4       	brne	.+2      	; 0x7ec <initBoard+0x84>
     7ea:	b8 c0       	rjmp	.+368    	; 0x95c <initBoard+0x1f4>
     7ec:	8f ef       	ldi	r24, 0xFF	; 255
     7ee:	cd dd       	rcall	.-1126   	; 0x38a <lcdLight>
     7f0:	40 e0       	ldi	r20, 0x00	; 0
     7f2:	50 e0       	ldi	r21, 0x00	; 0
     7f4:	6f ef       	ldi	r22, 0xFF	; 255
     7f6:	73 e0       	ldi	r23, 0x03	; 3
     7f8:	80 e0       	ldi	r24, 0x00	; 0
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	8f dd       	rcall	.-1250   	; 0x31c <rgbWrite>
     7fe:	88 e4       	ldi	r24, 0x48	; 72
     800:	92 e0       	ldi	r25, 0x02	; 2
     802:	9f 93       	push	r25
     804:	8f 93       	push	r24
     806:	1f 92       	push	r1
     808:	1f 92       	push	r1
     80a:	42 de       	rcall	.-892    	; 0x490 <lcdWriteText>
     80c:	8d e5       	ldi	r24, 0x5D	; 93
     80e:	92 e0       	ldi	r25, 0x02	; 2
     810:	9f 93       	push	r25
     812:	8f 93       	push	r24
     814:	1f 92       	push	r1
     816:	81 e0       	ldi	r24, 0x01	; 1
     818:	8f 93       	push	r24
     81a:	3a de       	rcall	.-908    	; 0x490 <lcdWriteText>
     81c:	83 e3       	ldi	r24, 0x33	; 51
     81e:	92 e0       	ldi	r25, 0x02	; 2
     820:	9f 93       	push	r25
     822:	8f 93       	push	r24
     824:	1f 92       	push	r1
     826:	82 e0       	ldi	r24, 0x02	; 2
     828:	8f 93       	push	r24
     82a:	32 de       	rcall	.-924    	; 0x490 <lcdWriteText>
     82c:	82 e7       	ldi	r24, 0x72	; 114
     82e:	92 e0       	ldi	r25, 0x02	; 2
     830:	9f 93       	push	r25
     832:	8f 93       	push	r24
     834:	1f 92       	push	r1
     836:	83 e0       	ldi	r24, 0x03	; 3
     838:	8f 93       	push	r24
     83a:	2a de       	rcall	.-940    	; 0x490 <lcdWriteText>
     83c:	8d b7       	in	r24, 0x3d	; 61
     83e:	9e b7       	in	r25, 0x3e	; 62
     840:	40 96       	adiw	r24, 0x10	; 16
     842:	0f b6       	in	r0, 0x3f	; 63
     844:	f8 94       	cli
     846:	9e bf       	out	0x3e, r25	; 62
     848:	0f be       	out	0x3f, r0	; 63
     84a:	8d bf       	out	0x3d, r24	; 61
     84c:	88 24       	eor	r8, r8
     84e:	83 94       	inc	r8
     850:	c0 e0       	ldi	r28, 0x00	; 0
     852:	71 2c       	mov	r7, r1
     854:	99 24       	eor	r9, r9
     856:	93 94       	inc	r9
     858:	d0 e0       	ldi	r29, 0x00	; 0
     85a:	cc 24       	eor	r12, r12
     85c:	c3 94       	inc	r12
     85e:	d1 2c       	mov	r13, r1
     860:	e1 2c       	mov	r14, r1
     862:	68 94       	set
     864:	ff 24       	eor	r15, r15
     866:	f7 f8       	bld	r15, 7
     868:	66 24       	eor	r6, r6
     86a:	63 94       	inc	r6
     86c:	51 2c       	mov	r5, r1
     86e:	09 e0       	ldi	r16, 0x09	; 9
     870:	11 e0       	ldi	r17, 0x01	; 1
     872:	0f 2e       	mov	r0, r31
     874:	f7 e8       	ldi	r31, 0x87	; 135
     876:	af 2e       	mov	r10, r31
     878:	f2 e0       	ldi	r31, 0x02	; 2
     87a:	bf 2e       	mov	r11, r31
     87c:	f0 2d       	mov	r31, r0
     87e:	0f 2e       	mov	r0, r31
     880:	f3 e0       	ldi	r31, 0x03	; 3
     882:	4f 2e       	mov	r4, r31
     884:	f0 2d       	mov	r31, r0
     886:	99 20       	and	r9, r9
     888:	49 f0       	breq	.+18     	; 0x89c <initBoard+0x134>
     88a:	c7 01       	movw	r24, r14
     88c:	0d 2e       	mov	r0, r29
     88e:	02 c0       	rjmp	.+4      	; 0x894 <initBoard+0x12c>
     890:	96 95       	lsr	r25
     892:	87 95       	ror	r24
     894:	0a 94       	dec	r0
     896:	e2 f7       	brpl	.-8      	; 0x890 <initBoard+0x128>
     898:	0e dd       	rcall	.-1508   	; 0x2b6 <ledWriteAll>
     89a:	08 c0       	rjmp	.+16     	; 0x8ac <initBoard+0x144>
     89c:	c6 01       	movw	r24, r12
     89e:	0d 2e       	mov	r0, r29
     8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <initBoard+0x13e>
     8a2:	88 0f       	add	r24, r24
     8a4:	99 1f       	adc	r25, r25
     8a6:	0a 94       	dec	r0
     8a8:	e2 f7       	brpl	.-8      	; 0x8a2 <initBoard+0x13a>
     8aa:	05 dd       	rcall	.-1526   	; 0x2b6 <ledWriteAll>
     8ac:	df 5f       	subi	r29, 0xFF	; 255
     8ae:	d1 31       	cpi	r29, 0x11	; 17
     8b0:	28 f0       	brcs	.+10     	; 0x8bc <initBoard+0x154>
     8b2:	86 2d       	mov	r24, r6
     8b4:	91 10       	cpse	r9, r1
     8b6:	85 2d       	mov	r24, r5
     8b8:	98 2e       	mov	r9, r24
     8ba:	d0 e0       	ldi	r29, 0x00	; 0
     8bc:	88 20       	and	r8, r8
     8be:	11 f0       	breq	.+4      	; 0x8c4 <initBoard+0x15c>
     8c0:	ce 5f       	subi	r28, 0xFE	; 254
     8c2:	01 c0       	rjmp	.+2      	; 0x8c6 <initBoard+0x15e>
     8c4:	c2 50       	subi	r28, 0x02	; 2
     8c6:	8c 2f       	mov	r24, r28
     8c8:	60 dd       	rcall	.-1344   	; 0x38a <lcdLight>
     8ca:	ce 3f       	cpi	r28, 0xFE	; 254
     8cc:	21 f0       	breq	.+8      	; 0x8d6 <initBoard+0x16e>
     8ce:	c8 37       	cpi	r28, 0x78	; 120
     8d0:	19 f4       	brne	.+6      	; 0x8d8 <initBoard+0x170>
     8d2:	86 2c       	mov	r8, r6
     8d4:	01 c0       	rjmp	.+2      	; 0x8d8 <initBoard+0x170>
     8d6:	85 2c       	mov	r8, r5
     8d8:	71 10       	cpse	r7, r1
     8da:	3b c0       	rjmp	.+118    	; 0x952 <initBoard+0x1ea>
     8dc:	f8 01       	movw	r30, r16
     8de:	80 81       	ld	r24, Z
     8e0:	83 7c       	andi	r24, 0xC3	; 195
     8e2:	91 f0       	breq	.+36     	; 0x908 <initBoard+0x1a0>
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	66 e2       	ldi	r22, 0x26	; 38
     8ea:	72 e0       	ldi	r23, 0x02	; 2
     8ec:	8f ef       	ldi	r24, 0xFF	; 255
     8ee:	93 e0       	ldi	r25, 0x03	; 3
     8f0:	15 dd       	rcall	.-1494   	; 0x31c <rgbWrite>
     8f2:	bf 92       	push	r11
     8f4:	af 92       	push	r10
     8f6:	1f 92       	push	r1
     8f8:	4f 92       	push	r4
     8fa:	ca dd       	rcall	.-1132   	; 0x490 <lcdWriteText>
     8fc:	0f 90       	pop	r0
     8fe:	0f 90       	pop	r0
     900:	0f 90       	pop	r0
     902:	0f 90       	pop	r0
     904:	76 2c       	mov	r7, r6
     906:	25 c0       	rjmp	.+74     	; 0x952 <initBoard+0x1ea>
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	9c e7       	ldi	r25, 0x7C	; 124
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <initBoard+0x1a4>
     910:	00 c0       	rjmp	.+0      	; 0x912 <initBoard+0x1aa>
     912:	00 00       	nop
     914:	b8 cf       	rjmp	.-144    	; 0x886 <initBoard+0x11e>
     916:	f0 de       	rcall	.-544    	; 0x6f8 <lcdClear>
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	37 dd       	rcall	.-1426   	; 0x38a <lcdLight>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	ca dc       	rcall	.-1644   	; 0x2b6 <ledWriteAll>
     922:	40 e0       	ldi	r20, 0x00	; 0
     924:	50 e0       	ldi	r21, 0x00	; 0
     926:	60 e0       	ldi	r22, 0x00	; 0
     928:	70 e0       	ldi	r23, 0x00	; 0
     92a:	80 e0       	ldi	r24, 0x00	; 0
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	f6 dc       	rcall	.-1556   	; 0x31c <rgbWrite>
     930:	10 92 ed 02 	sts	0x02ED, r1	; 0x8002ed <systemTimeMs>
     934:	10 92 ee 02 	sts	0x02EE, r1	; 0x8002ee <systemTimeMs+0x1>
     938:	10 92 ef 02 	sts	0x02EF, r1	; 0x8002ef <systemTimeMs+0x2>
     93c:	10 92 f0 02 	sts	0x02F0, r1	; 0x8002f0 <systemTimeMs+0x3>
     940:	10 92 f1 02 	sts	0x02F1, r1	; 0x8002f1 <systemTimeMs+0x4>
     944:	10 92 f2 02 	sts	0x02F2, r1	; 0x8002f2 <systemTimeMs+0x5>
     948:	10 92 f3 02 	sts	0x02F3, r1	; 0x8002f3 <systemTimeMs+0x6>
     94c:	10 92 f4 02 	sts	0x02F4, r1	; 0x8002f4 <systemTimeMs+0x7>
     950:	05 c0       	rjmp	.+10     	; 0x95c <initBoard+0x1f4>
     952:	f8 01       	movw	r30, r16
     954:	80 81       	ld	r24, Z
     956:	83 7c       	andi	r24, 0xC3	; 195
     958:	b9 f6       	brne	.-82     	; 0x908 <initBoard+0x1a0>
     95a:	dd cf       	rjmp	.-70     	; 0x916 <initBoard+0x1ae>
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	1f 91       	pop	r17
     962:	0f 91       	pop	r16
     964:	ff 90       	pop	r15
     966:	ef 90       	pop	r14
     968:	df 90       	pop	r13
     96a:	cf 90       	pop	r12
     96c:	bf 90       	pop	r11
     96e:	af 90       	pop	r10
     970:	9f 90       	pop	r9
     972:	8f 90       	pop	r8
     974:	7f 90       	pop	r7
     976:	6f 90       	pop	r6
     978:	5f 90       	pop	r5
     97a:	4f 90       	pop	r4
     97c:	08 95       	ret

0000097e <lcdLog>:
     97e:	6f 92       	push	r6
     980:	7f 92       	push	r7
     982:	8f 92       	push	r8
     984:	9f 92       	push	r9
     986:	af 92       	push	r10
     988:	bf 92       	push	r11
     98a:	cf 92       	push	r12
     98c:	df 92       	push	r13
     98e:	ef 92       	push	r14
     990:	ff 92       	push	r15
     992:	0f 93       	push	r16
     994:	1f 93       	push	r17
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	cd b7       	in	r28, 0x3d	; 61
     99c:	de b7       	in	r29, 0x3e	; 62
     99e:	60 97       	sbiw	r28, 0x10	; 16
     9a0:	0f b6       	in	r0, 0x3f	; 63
     9a2:	f8 94       	cli
     9a4:	de bf       	out	0x3e, r29	; 62
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	cd bf       	out	0x3d, r28	; 61
     9aa:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     9ae:	88 23       	and	r24, r24
     9b0:	b1 f1       	breq	.+108    	; 0xa1e <lcdLog+0xa0>
     9b2:	a2 de       	rcall	.-700    	; 0x6f8 <lcdClear>
     9b4:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
     9b8:	10 92 eb 02 	sts	0x02EB, r1	; 0x8002eb <nummer.2616+0x1>
     9bc:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <nummer.2616>
     9c0:	0f 2e       	mov	r0, r31
     9c2:	f2 ee       	ldi	r31, 0xE2	; 226
     9c4:	8f 2e       	mov	r8, r31
     9c6:	f2 e0       	ldi	r31, 0x02	; 2
     9c8:	9f 2e       	mov	r9, r31
     9ca:	f0 2d       	mov	r31, r0
     9cc:	02 ea       	ldi	r16, 0xA2	; 162
     9ce:	12 e0       	ldi	r17, 0x02	; 2
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	40 e2       	ldi	r20, 0x20	; 32
     9d6:	bd 01       	movw	r22, r26
     9d8:	f4 01       	movw	r30, r8
     9da:	11 92       	st	Z+, r1
     9dc:	11 92       	st	Z+, r1
     9de:	4f 01       	movw	r8, r30
     9e0:	f8 01       	movw	r30, r16
     9e2:	41 93       	st	Z+, r20
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	13 c0       	rjmp	.+38     	; 0xa10 <lcdLog+0x92>
     9ea:	62 95       	swap	r22
     9ec:	72 95       	swap	r23
     9ee:	70 7f       	andi	r23, 0xF0	; 240
     9f0:	76 27       	eor	r23, r22
     9f2:	60 7f       	andi	r22, 0xF0	; 240
     9f4:	76 27       	eor	r23, r22
     9f6:	6e 55       	subi	r22, 0x5E	; 94
     9f8:	7d 4f       	sbci	r23, 0xFD	; 253
     9fa:	fb 01       	movw	r30, r22
     9fc:	e2 0f       	add	r30, r18
     9fe:	f3 1f       	adc	r31, r19
     a00:	10 82       	st	Z, r1
     a02:	11 96       	adiw	r26, 0x01	; 1
     a04:	00 5f       	subi	r16, 0xF0	; 240
     a06:	1f 4f       	sbci	r17, 0xFF	; 255
     a08:	a4 30       	cpi	r26, 0x04	; 4
     a0a:	b1 05       	cpc	r27, r1
     a0c:	21 f7       	brne	.-56     	; 0x9d6 <lcdLog+0x58>
     a0e:	07 c0       	rjmp	.+14     	; 0xa1e <lcdLog+0xa0>
     a10:	9c 01       	movw	r18, r24
     a12:	41 93       	st	Z+, r20
     a14:	01 96       	adiw	r24, 0x01	; 1
     a16:	80 31       	cpi	r24, 0x10	; 16
     a18:	91 05       	cpc	r25, r1
     a1a:	d1 f7       	brne	.-12     	; 0xa10 <lcdLog+0x92>
     a1c:	e6 cf       	rjmp	.-52     	; 0x9ea <lcdLog+0x6c>
     a1e:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <nummer.2616>
     a22:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <nummer.2616+0x1>
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	90 93 eb 02 	sts	0x02EB, r25	; 0x8002eb <nummer.2616+0x1>
     a2c:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <nummer.2616>
     a30:	9e 01       	movw	r18, r28
     a32:	2c 5d       	subi	r18, 0xDC	; 220
     a34:	3f 4f       	sbci	r19, 0xFF	; 255
     a36:	4a a1       	ldd	r20, Y+34	; 0x22
     a38:	5b a1       	ldd	r21, Y+35	; 0x23
     a3a:	60 e1       	ldi	r22, 0x10	; 16
     a3c:	70 e0       	ldi	r23, 0x00	; 0
     a3e:	ce 01       	movw	r24, r28
     a40:	01 96       	adiw	r24, 0x01	; 1
     a42:	02 d2       	rcall	.+1028   	; 0xe48 <vsnprintf>
     a44:	8e 01       	movw	r16, r28
     a46:	0f 5f       	subi	r16, 0xFF	; 255
     a48:	1f 4f       	sbci	r17, 0xFF	; 255
     a4a:	4e 01       	movw	r8, r28
     a4c:	f1 e1       	ldi	r31, 0x11	; 17
     a4e:	8f 0e       	add	r8, r31
     a50:	91 1c       	adc	r9, r1
     a52:	f8 01       	movw	r30, r16
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	30 e2       	ldi	r19, 0x20	; 32
     a58:	21 e0       	ldi	r18, 0x01	; 1
     a5a:	df 01       	movw	r26, r30
     a5c:	80 81       	ld	r24, Z
     a5e:	88 23       	and	r24, r24
     a60:	19 f0       	breq	.+6      	; 0xa68 <lcdLog+0xea>
     a62:	99 23       	and	r25, r25
     a64:	19 f0       	breq	.+6      	; 0xa6c <lcdLog+0xee>
     a66:	01 c0       	rjmp	.+2      	; 0xa6a <lcdLog+0xec>
     a68:	92 2f       	mov	r25, r18
     a6a:	3c 93       	st	X, r19
     a6c:	31 96       	adiw	r30, 0x01	; 1
     a6e:	e8 15       	cp	r30, r8
     a70:	f9 05       	cpc	r31, r9
     a72:	99 f7       	brne	.-26     	; 0xa5a <lcdLog+0xdc>
     a74:	18 8a       	std	Y+16, r1	; 0x10
     a76:	62 ea       	ldi	r22, 0xA2	; 162
     a78:	72 e0       	ldi	r23, 0x02	; 2
     a7a:	ce 01       	movw	r24, r28
     a7c:	01 96       	adiw	r24, 0x01	; 1
     a7e:	db d1       	rcall	.+950    	; 0xe36 <strcmp>
     a80:	88 23       	and	r24, r24
     a82:	09 f4       	brne	.+2      	; 0xa86 <lcdLog+0x108>
     a84:	7e c0       	rjmp	.+252    	; 0xb82 <lcdLog+0x204>
     a86:	0f 2e       	mov	r0, r31
     a88:	f8 ee       	ldi	r31, 0xE8	; 232
     a8a:	6f 2e       	mov	r6, r31
     a8c:	f2 e0       	ldi	r31, 0x02	; 2
     a8e:	7f 2e       	mov	r7, r31
     a90:	f0 2d       	mov	r31, r0
     a92:	62 ed       	ldi	r22, 0xD2	; 210
     a94:	72 e0       	ldi	r23, 0x02	; 2
     a96:	42 ea       	ldi	r20, 0xA2	; 162
     a98:	52 e0       	ldi	r21, 0x02	; 2
     a9a:	f3 01       	movw	r30, r6
     a9c:	92 91       	ld	r25, -Z
     a9e:	82 91       	ld	r24, -Z
     aa0:	3f 01       	movw	r6, r30
     aa2:	93 83       	std	Z+3, r25	; 0x03
     aa4:	82 83       	std	Z+2, r24	; 0x02
     aa6:	db 01       	movw	r26, r22
     aa8:	50 97       	sbiw	r26, 0x10	; 16
     aaa:	9b 01       	movw	r18, r22
     aac:	20 5f       	subi	r18, 0xF0	; 240
     aae:	3f 4f       	sbci	r19, 0xFF	; 255
     ab0:	fb 01       	movw	r30, r22
     ab2:	8d 91       	ld	r24, X+
     ab4:	81 93       	st	Z+, r24
     ab6:	e2 17       	cp	r30, r18
     ab8:	f3 07       	cpc	r31, r19
     aba:	d9 f7       	brne	.-10     	; 0xab2 <lcdLog+0x134>
     abc:	60 51       	subi	r22, 0x10	; 16
     abe:	71 09       	sbc	r23, r1
     ac0:	64 17       	cp	r22, r20
     ac2:	75 07       	cpc	r23, r21
     ac4:	51 f7       	brne	.-44     	; 0xa9a <lcdLog+0x11c>
     ac6:	f8 01       	movw	r30, r16
     ac8:	81 91       	ld	r24, Z+
     aca:	8f 01       	movw	r16, r30
     acc:	fa 01       	movw	r30, r20
     ace:	81 93       	st	Z+, r24
     ad0:	af 01       	movw	r20, r30
     ad2:	08 15       	cp	r16, r8
     ad4:	19 05       	cpc	r17, r9
     ad6:	b9 f7       	brne	.-18     	; 0xac6 <lcdLog+0x148>
     ad8:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <nummer.2616>
     adc:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <nummer.2616+0x1>
     ae0:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <lcdPrintNr.2614+0x1>
     ae4:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <lcdPrintNr.2614>
     ae8:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <lcdLogZeilen>
     aec:	94 e0       	ldi	r25, 0x04	; 4
     aee:	d9 2e       	mov	r13, r25
     af0:	d8 1a       	sub	r13, r24
     af2:	f3 e0       	ldi	r31, 0x03	; 3
     af4:	fd 15       	cp	r31, r13
     af6:	08 f4       	brcc	.+2      	; 0xafa <lcdLog+0x17c>
     af8:	5b c0       	rjmp	.+182    	; 0xbb0 <lcdLog+0x232>
     afa:	83 e0       	ldi	r24, 0x03	; 3
     afc:	b8 2e       	mov	r11, r24
     afe:	bd 18       	sub	r11, r13
     b00:	0f 2e       	mov	r0, r31
     b02:	f5 e0       	ldi	r31, 0x05	; 5
     b04:	6f 2e       	mov	r6, r31
     b06:	f0 2d       	mov	r31, r0
     b08:	0f 2e       	mov	r0, r31
     b0a:	fc e9       	ldi	r31, 0x9C	; 156
     b0c:	8f 2e       	mov	r8, r31
     b0e:	f2 e0       	ldi	r31, 0x02	; 2
     b10:	9f 2e       	mov	r9, r31
     b12:	f0 2d       	mov	r31, r0
     b14:	68 94       	set
     b16:	77 24       	eor	r7, r7
     b18:	72 f8       	bld	r7, 2
     b1a:	0b 2d       	mov	r16, r11
     b1c:	10 e0       	ldi	r17, 0x00	; 0
     b1e:	c8 01       	movw	r24, r16
     b20:	82 95       	swap	r24
     b22:	92 95       	swap	r25
     b24:	90 7f       	andi	r25, 0xF0	; 240
     b26:	98 27       	eor	r25, r24
     b28:	80 7f       	andi	r24, 0xF0	; 240
     b2a:	98 27       	eor	r25, r24
     b2c:	8e 55       	subi	r24, 0x5E	; 94
     b2e:	9d 4f       	sbci	r25, 0xFD	; 253
     b30:	9f 93       	push	r25
     b32:	8f 93       	push	r24
     b34:	6f 92       	push	r6
     b36:	df 92       	push	r13
     b38:	ab dc       	rcall	.-1706   	; 0x490 <lcdWriteText>
     b3a:	9f 92       	push	r9
     b3c:	8f 92       	push	r8
     b3e:	7f 92       	push	r7
     b40:	df 92       	push	r13
     b42:	a6 dc       	rcall	.-1716   	; 0x490 <lcdWriteText>
     b44:	00 0f       	add	r16, r16
     b46:	11 1f       	adc	r17, r17
     b48:	f8 01       	movw	r30, r16
     b4a:	ee 51       	subi	r30, 0x1E	; 30
     b4c:	fd 4f       	sbci	r31, 0xFD	; 253
     b4e:	00 81       	ld	r16, Z
     b50:	11 81       	ldd	r17, Z+1	; 0x01
     b52:	a1 2c       	mov	r10, r1
     b54:	c7 2c       	mov	r12, r7
     b56:	e0 2e       	mov	r14, r16
     b58:	f1 2e       	mov	r15, r17
     b5a:	00 e0       	ldi	r16, 0x00	; 0
     b5c:	10 e0       	ldi	r17, 0x00	; 0
     b5e:	20 e0       	ldi	r18, 0x00	; 0
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	40 e0       	ldi	r20, 0x00	; 0
     b64:	50 e0       	ldi	r21, 0x00	; 0
     b66:	60 e0       	ldi	r22, 0x00	; 0
     b68:	8d 2d       	mov	r24, r13
     b6a:	ce dc       	rcall	.-1636   	; 0x508 <lcdWriteZahl>
     b6c:	d3 94       	inc	r13
     b6e:	ba 94       	dec	r11
     b70:	0f b6       	in	r0, 0x3f	; 63
     b72:	f8 94       	cli
     b74:	de bf       	out	0x3e, r29	; 62
     b76:	0f be       	out	0x3f, r0	; 63
     b78:	cd bf       	out	0x3d, r28	; 61
     b7a:	94 e0       	ldi	r25, 0x04	; 4
     b7c:	d9 12       	cpse	r13, r25
     b7e:	cd cf       	rjmp	.-102    	; 0xb1a <lcdLog+0x19c>
     b80:	17 c0       	rjmp	.+46     	; 0xbb0 <lcdLog+0x232>
     b82:	00 91 ea 02 	lds	r16, 0x02EA	; 0x8002ea <nummer.2616>
     b86:	10 91 eb 02 	lds	r17, 0x02EB	; 0x8002eb <nummer.2616+0x1>
     b8a:	10 93 e3 02 	sts	0x02E3, r17	; 0x8002e3 <lcdPrintNr.2614+0x1>
     b8e:	00 93 e2 02 	sts	0x02E2, r16	; 0x8002e2 <lcdPrintNr.2614>
     b92:	a1 2c       	mov	r10, r1
     b94:	68 94       	set
     b96:	cc 24       	eor	r12, r12
     b98:	c2 f8       	bld	r12, 2
     b9a:	e0 2e       	mov	r14, r16
     b9c:	f1 2e       	mov	r15, r17
     b9e:	00 e0       	ldi	r16, 0x00	; 0
     ba0:	10 e0       	ldi	r17, 0x00	; 0
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	40 e0       	ldi	r20, 0x00	; 0
     ba8:	50 e0       	ldi	r21, 0x00	; 0
     baa:	60 e0       	ldi	r22, 0x00	; 0
     bac:	83 e0       	ldi	r24, 0x03	; 3
     bae:	ac dc       	rcall	.-1704   	; 0x508 <lcdWriteZahl>
     bb0:	60 96       	adiw	r28, 0x10	; 16
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	f8 94       	cli
     bb6:	de bf       	out	0x3e, r29	; 62
     bb8:	0f be       	out	0x3f, r0	; 63
     bba:	cd bf       	out	0x3d, r28	; 61
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	cf 90       	pop	r12
     bcc:	bf 90       	pop	r11
     bce:	af 90       	pop	r10
     bd0:	9f 90       	pop	r9
     bd2:	8f 90       	pop	r8
     bd4:	7f 90       	pop	r7
     bd6:	6f 90       	pop	r6
     bd8:	08 95       	ret

00000bda <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     bda:	cf 93       	push	r28
     bdc:	df 93       	push	r29
     bde:	cd b7       	in	r28, 0x3d	; 61
     be0:	de b7       	in	r29, 0x3e	; 62
     be2:	28 97       	sbiw	r28, 0x08	; 8
     be4:	0f b6       	in	r0, 0x3f	; 63
     be6:	f8 94       	cli
     be8:	de bf       	out	0x3e, r29	; 62
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     bee:	88 e0       	ldi	r24, 0x08	; 8
     bf0:	e2 e0       	ldi	r30, 0x02	; 2
     bf2:	f2 e0       	ldi	r31, 0x02	; 2
     bf4:	de 01       	movw	r26, r28
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	01 90       	ld	r0, Z+
     bfa:	0d 92       	st	X+, r0
     bfc:	8a 95       	dec	r24
     bfe:	e1 f7       	brne	.-8      	; 0xbf8 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     c00:	e5 e0       	ldi	r30, 0x05	; 5
     c02:	f1 e0       	ldi	r31, 0x01	; 1
     c04:	80 81       	ld	r24, Z
     c06:	8f 7b       	andi	r24, 0xBF	; 191
     c08:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     c0a:	e0 91 a0 02 	lds	r30, 0x02A0	; 0x8002a0 <Zeilen_Nr.2731>
     c0e:	f0 91 a1 02 	lds	r31, 0x02A1	; 0x8002a1 <Zeilen_Nr.2731+0x1>
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	8c 0f       	add	r24, r28
     c18:	9d 1f       	adc	r25, r29
     c1a:	e8 0f       	add	r30, r24
     c1c:	f9 1f       	adc	r31, r25
     c1e:	80 81       	ld	r24, Z
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <__data_end+0x1>
     c26:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <__data_end>
     c2a:	a6 e6       	ldi	r26, 0x66	; 102
     c2c:	b3 e0       	ldi	r27, 0x03	; 3
     c2e:	26 ef       	ldi	r18, 0xF6	; 246
     c30:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     c32:	e5 e0       	ldi	r30, 0x05	; 5
     c34:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     c36:	5e 91       	ld	r21, -X
     c38:	4e 91       	ld	r20, -X
     c3a:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <__data_end>
     c3e:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <__data_end+0x1>
     c42:	84 23       	and	r24, r20
     c44:	95 23       	and	r25, r21
     c46:	89 2b       	or	r24, r25
     c48:	21 f0       	breq	.+8      	; 0xc52 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     c4a:	80 81       	ld	r24, Z
     c4c:	80 62       	ori	r24, 0x20	; 32
     c4e:	80 83       	st	Z, r24
     c50:	03 c0       	rjmp	.+6      	; 0xc58 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     c52:	80 81       	ld	r24, Z
     c54:	8f 7d       	andi	r24, 0xDF	; 223
     c56:	80 83       	st	Z, r24
        }
        CLOCK_1;
     c58:	80 81       	ld	r24, Z
     c5a:	80 61       	ori	r24, 0x10	; 16
     c5c:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     c5e:	80 81       	ld	r24, Z
     c60:	8f 7e       	andi	r24, 0xEF	; 239
     c62:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     c64:	a2 17       	cp	r26, r18
     c66:	b3 07       	cpc	r27, r19
     c68:	31 f7       	brne	.-52     	; 0xc36 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     c6a:	e5 e0       	ldi	r30, 0x05	; 5
     c6c:	f1 e0       	ldi	r31, 0x01	; 1
     c6e:	80 81       	ld	r24, Z
     c70:	87 7f       	andi	r24, 0xF7	; 247
     c72:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     c74:	80 81       	ld	r24, Z
     c76:	88 7f       	andi	r24, 0xF8	; 248
     c78:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     c7a:	90 81       	ld	r25, Z
     c7c:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <Zeilen_Nr.2731>
     c80:	89 2b       	or	r24, r25
     c82:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     c84:	80 81       	ld	r24, Z
     c86:	80 64       	ori	r24, 0x40	; 64
     c88:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     c8a:	80 81       	ld	r24, Z
     c8c:	88 60       	ori	r24, 0x08	; 8
     c8e:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     c90:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <Zeilen_Nr.2731>
     c94:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <Zeilen_Nr.2731+0x1>
     c98:	87 30       	cpi	r24, 0x07	; 7
     c9a:	91 05       	cpc	r25, r1
     c9c:	30 f4       	brcc	.+12     	; 0xcaa <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <Zeilen_Nr.2731+0x1>
     ca4:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <Zeilen_Nr.2731>
     ca8:	07 c0       	rjmp	.+14     	; 0xcb8 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     caa:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <Zeilen_Nr.2731+0x1>
     cae:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <Zeilen_Nr.2731>
        writeTextFinished = 1;
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <writeTextFinished>
    }
    
     cb8:	28 96       	adiw	r28, 0x08	; 8
     cba:	0f b6       	in	r0, 0x3f	; 63
     cbc:	f8 94       	cli
     cbe:	de bf       	out	0x3e, r29	; 62
     cc0:	0f be       	out	0x3f, r0	; 63
     cc2:	cd bf       	out	0x3d, r28	; 61
     cc4:	df 91       	pop	r29
     cc6:	cf 91       	pop	r28
     cc8:	08 95       	ret

00000cca <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     cca:	1f 92       	push	r1
     ccc:	0f 92       	push	r0
     cce:	0f b6       	in	r0, 0x3f	; 63
     cd0:	0f 92       	push	r0
     cd2:	11 24       	eor	r1, r1
     cd4:	0b b6       	in	r0, 0x3b	; 59
     cd6:	0f 92       	push	r0
     cd8:	2f 93       	push	r18
     cda:	3f 93       	push	r19
     cdc:	4f 93       	push	r20
     cde:	5f 93       	push	r21
     ce0:	6f 93       	push	r22
     ce2:	7f 93       	push	r23
     ce4:	8f 93       	push	r24
     ce6:	9f 93       	push	r25
     ce8:	af 93       	push	r26
     cea:	bf 93       	push	r27
     cec:	ef 93       	push	r30
     cee:	ff 93       	push	r31
    systemTimeMs += 1;
     cf0:	20 91 ed 02 	lds	r18, 0x02ED	; 0x8002ed <systemTimeMs>
     cf4:	30 91 ee 02 	lds	r19, 0x02EE	; 0x8002ee <systemTimeMs+0x1>
     cf8:	40 91 ef 02 	lds	r20, 0x02EF	; 0x8002ef <systemTimeMs+0x2>
     cfc:	50 91 f0 02 	lds	r21, 0x02F0	; 0x8002f0 <systemTimeMs+0x3>
     d00:	60 91 f1 02 	lds	r22, 0x02F1	; 0x8002f1 <systemTimeMs+0x4>
     d04:	70 91 f2 02 	lds	r23, 0x02F2	; 0x8002f2 <systemTimeMs+0x5>
     d08:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <systemTimeMs+0x6>
     d0c:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <systemTimeMs+0x7>
     d10:	a1 e0       	ldi	r26, 0x01	; 1
     d12:	85 d0       	rcall	.+266    	; 0xe1e <__adddi3_s8>
     d14:	20 93 ed 02 	sts	0x02ED, r18	; 0x8002ed <systemTimeMs>
     d18:	30 93 ee 02 	sts	0x02EE, r19	; 0x8002ee <systemTimeMs+0x1>
     d1c:	40 93 ef 02 	sts	0x02EF, r20	; 0x8002ef <systemTimeMs+0x2>
     d20:	50 93 f0 02 	sts	0x02F0, r21	; 0x8002f0 <systemTimeMs+0x3>
     d24:	60 93 f1 02 	sts	0x02F1, r22	; 0x8002f1 <systemTimeMs+0x4>
     d28:	70 93 f2 02 	sts	0x02F2, r23	; 0x8002f2 <systemTimeMs+0x5>
     d2c:	80 93 f3 02 	sts	0x02F3, r24	; 0x8002f3 <systemTimeMs+0x6>
     d30:	90 93 f4 02 	sts	0x02F4, r25	; 0x8002f4 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     d34:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <matrixRunning>
     d38:	81 11       	cpse	r24, r1
     d3a:	4f df       	rcall	.-354    	; 0xbda <matrixWriteNextLine>
}
     d3c:	ff 91       	pop	r31
     d3e:	ef 91       	pop	r30
     d40:	bf 91       	pop	r27
     d42:	af 91       	pop	r26
     d44:	9f 91       	pop	r25
     d46:	8f 91       	pop	r24
     d48:	7f 91       	pop	r23
     d4a:	6f 91       	pop	r22
     d4c:	5f 91       	pop	r21
     d4e:	4f 91       	pop	r20
     d50:	3f 91       	pop	r19
     d52:	2f 91       	pop	r18
     d54:	0f 90       	pop	r0
     d56:	0b be       	out	0x3b, r0	; 59
     d58:	0f 90       	pop	r0
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	0f 90       	pop	r0
     d5e:	1f 90       	pop	r1
     d60:	18 95       	reti

00000d62 <__umoddi3>:
     d62:	68 94       	set
     d64:	01 c0       	rjmp	.+2      	; 0xd68 <__udivdi3_umoddi3>

00000d66 <__udivdi3>:
     d66:	e8 94       	clt

00000d68 <__udivdi3_umoddi3>:
     d68:	8f 92       	push	r8
     d6a:	9f 92       	push	r9
     d6c:	cf 93       	push	r28
     d6e:	df 93       	push	r29
     d70:	05 d0       	rcall	.+10     	; 0xd7c <__udivmod64>
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	9f 90       	pop	r9
     d78:	8f 90       	pop	r8
     d7a:	08 95       	ret

00000d7c <__udivmod64>:
     d7c:	88 24       	eor	r8, r8
     d7e:	99 24       	eor	r9, r9
     d80:	f4 01       	movw	r30, r8
     d82:	e4 01       	movw	r28, r8
     d84:	b0 e4       	ldi	r27, 0x40	; 64
     d86:	9f 93       	push	r25
     d88:	aa 27       	eor	r26, r26
     d8a:	9a 15       	cp	r25, r10
     d8c:	8b 04       	cpc	r8, r11
     d8e:	9c 04       	cpc	r9, r12
     d90:	ed 05       	cpc	r30, r13
     d92:	fe 05       	cpc	r31, r14
     d94:	cf 05       	cpc	r28, r15
     d96:	d0 07       	cpc	r29, r16
     d98:	a1 07       	cpc	r26, r17
     d9a:	98 f4       	brcc	.+38     	; 0xdc2 <__udivmod64+0x46>
     d9c:	ad 2f       	mov	r26, r29
     d9e:	dc 2f       	mov	r29, r28
     da0:	cf 2f       	mov	r28, r31
     da2:	fe 2f       	mov	r31, r30
     da4:	e9 2d       	mov	r30, r9
     da6:	98 2c       	mov	r9, r8
     da8:	89 2e       	mov	r8, r25
     daa:	98 2f       	mov	r25, r24
     dac:	87 2f       	mov	r24, r23
     dae:	76 2f       	mov	r23, r22
     db0:	65 2f       	mov	r22, r21
     db2:	54 2f       	mov	r21, r20
     db4:	43 2f       	mov	r20, r19
     db6:	32 2f       	mov	r19, r18
     db8:	22 27       	eor	r18, r18
     dba:	b8 50       	subi	r27, 0x08	; 8
     dbc:	31 f7       	brne	.-52     	; 0xd8a <__udivmod64+0xe>
     dbe:	bf 91       	pop	r27
     dc0:	27 c0       	rjmp	.+78     	; 0xe10 <__udivmod64+0x94>
     dc2:	1b 2e       	mov	r1, r27
     dc4:	bf 91       	pop	r27
     dc6:	bb 27       	eor	r27, r27
     dc8:	22 0f       	add	r18, r18
     dca:	33 1f       	adc	r19, r19
     dcc:	44 1f       	adc	r20, r20
     dce:	55 1f       	adc	r21, r21
     dd0:	66 1f       	adc	r22, r22
     dd2:	77 1f       	adc	r23, r23
     dd4:	88 1f       	adc	r24, r24
     dd6:	99 1f       	adc	r25, r25
     dd8:	88 1c       	adc	r8, r8
     dda:	99 1c       	adc	r9, r9
     ddc:	ee 1f       	adc	r30, r30
     dde:	ff 1f       	adc	r31, r31
     de0:	cc 1f       	adc	r28, r28
     de2:	dd 1f       	adc	r29, r29
     de4:	aa 1f       	adc	r26, r26
     de6:	bb 1f       	adc	r27, r27
     de8:	8a 14       	cp	r8, r10
     dea:	9b 04       	cpc	r9, r11
     dec:	ec 05       	cpc	r30, r12
     dee:	fd 05       	cpc	r31, r13
     df0:	ce 05       	cpc	r28, r14
     df2:	df 05       	cpc	r29, r15
     df4:	a0 07       	cpc	r26, r16
     df6:	b1 07       	cpc	r27, r17
     df8:	48 f0       	brcs	.+18     	; 0xe0c <__udivmod64+0x90>
     dfa:	8a 18       	sub	r8, r10
     dfc:	9b 08       	sbc	r9, r11
     dfe:	ec 09       	sbc	r30, r12
     e00:	fd 09       	sbc	r31, r13
     e02:	ce 09       	sbc	r28, r14
     e04:	df 09       	sbc	r29, r15
     e06:	a0 0b       	sbc	r26, r16
     e08:	b1 0b       	sbc	r27, r17
     e0a:	21 60       	ori	r18, 0x01	; 1
     e0c:	1a 94       	dec	r1
     e0e:	e1 f6       	brne	.-72     	; 0xdc8 <__udivmod64+0x4c>
     e10:	2e f4       	brtc	.+10     	; 0xe1c <__udivmod64+0xa0>
     e12:	94 01       	movw	r18, r8
     e14:	af 01       	movw	r20, r30
     e16:	be 01       	movw	r22, r28
     e18:	cd 01       	movw	r24, r26
     e1a:	00 0c       	add	r0, r0
     e1c:	08 95       	ret

00000e1e <__adddi3_s8>:
     e1e:	00 24       	eor	r0, r0
     e20:	a7 fd       	sbrc	r26, 7
     e22:	00 94       	com	r0
     e24:	2a 0f       	add	r18, r26
     e26:	30 1d       	adc	r19, r0
     e28:	40 1d       	adc	r20, r0
     e2a:	50 1d       	adc	r21, r0
     e2c:	60 1d       	adc	r22, r0
     e2e:	70 1d       	adc	r23, r0
     e30:	80 1d       	adc	r24, r0
     e32:	90 1d       	adc	r25, r0
     e34:	08 95       	ret

00000e36 <strcmp>:
     e36:	fb 01       	movw	r30, r22
     e38:	dc 01       	movw	r26, r24
     e3a:	8d 91       	ld	r24, X+
     e3c:	01 90       	ld	r0, Z+
     e3e:	80 19       	sub	r24, r0
     e40:	01 10       	cpse	r0, r1
     e42:	d9 f3       	breq	.-10     	; 0xe3a <strcmp+0x4>
     e44:	99 0b       	sbc	r25, r25
     e46:	08 95       	ret

00000e48 <vsnprintf>:
     e48:	0f 93       	push	r16
     e4a:	1f 93       	push	r17
     e4c:	cf 93       	push	r28
     e4e:	df 93       	push	r29
     e50:	cd b7       	in	r28, 0x3d	; 61
     e52:	de b7       	in	r29, 0x3e	; 62
     e54:	2e 97       	sbiw	r28, 0x0e	; 14
     e56:	0f b6       	in	r0, 0x3f	; 63
     e58:	f8 94       	cli
     e5a:	de bf       	out	0x3e, r29	; 62
     e5c:	0f be       	out	0x3f, r0	; 63
     e5e:	cd bf       	out	0x3d, r28	; 61
     e60:	8c 01       	movw	r16, r24
     e62:	fa 01       	movw	r30, r20
     e64:	86 e0       	ldi	r24, 0x06	; 6
     e66:	8c 83       	std	Y+4, r24	; 0x04
     e68:	1a 83       	std	Y+2, r17	; 0x02
     e6a:	09 83       	std	Y+1, r16	; 0x01
     e6c:	77 ff       	sbrs	r23, 7
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <vsnprintf+0x2c>
     e70:	60 e0       	ldi	r22, 0x00	; 0
     e72:	70 e8       	ldi	r23, 0x80	; 128
     e74:	cb 01       	movw	r24, r22
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	9e 83       	std	Y+6, r25	; 0x06
     e7a:	8d 83       	std	Y+5, r24	; 0x05
     e7c:	a9 01       	movw	r20, r18
     e7e:	bf 01       	movw	r22, r30
     e80:	ce 01       	movw	r24, r28
     e82:	01 96       	adiw	r24, 0x01	; 1
     e84:	19 d0       	rcall	.+50     	; 0xeb8 <vfprintf>
     e86:	4d 81       	ldd	r20, Y+5	; 0x05
     e88:	5e 81       	ldd	r21, Y+6	; 0x06
     e8a:	57 fd       	sbrc	r21, 7
     e8c:	0a c0       	rjmp	.+20     	; 0xea2 <vsnprintf+0x5a>
     e8e:	2f 81       	ldd	r18, Y+7	; 0x07
     e90:	38 85       	ldd	r19, Y+8	; 0x08
     e92:	42 17       	cp	r20, r18
     e94:	53 07       	cpc	r21, r19
     e96:	0c f4       	brge	.+2      	; 0xe9a <vsnprintf+0x52>
     e98:	9a 01       	movw	r18, r20
     e9a:	f8 01       	movw	r30, r16
     e9c:	e2 0f       	add	r30, r18
     e9e:	f3 1f       	adc	r31, r19
     ea0:	10 82       	st	Z, r1
     ea2:	2e 96       	adiw	r28, 0x0e	; 14
     ea4:	0f b6       	in	r0, 0x3f	; 63
     ea6:	f8 94       	cli
     ea8:	de bf       	out	0x3e, r29	; 62
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	cd bf       	out	0x3d, r28	; 61
     eae:	df 91       	pop	r29
     eb0:	cf 91       	pop	r28
     eb2:	1f 91       	pop	r17
     eb4:	0f 91       	pop	r16
     eb6:	08 95       	ret

00000eb8 <vfprintf>:
     eb8:	2f 92       	push	r2
     eba:	3f 92       	push	r3
     ebc:	4f 92       	push	r4
     ebe:	5f 92       	push	r5
     ec0:	6f 92       	push	r6
     ec2:	7f 92       	push	r7
     ec4:	8f 92       	push	r8
     ec6:	9f 92       	push	r9
     ec8:	af 92       	push	r10
     eca:	bf 92       	push	r11
     ecc:	cf 92       	push	r12
     ece:	df 92       	push	r13
     ed0:	ef 92       	push	r14
     ed2:	ff 92       	push	r15
     ed4:	0f 93       	push	r16
     ed6:	1f 93       	push	r17
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	cd b7       	in	r28, 0x3d	; 61
     ede:	de b7       	in	r29, 0x3e	; 62
     ee0:	2b 97       	sbiw	r28, 0x0b	; 11
     ee2:	0f b6       	in	r0, 0x3f	; 63
     ee4:	f8 94       	cli
     ee6:	de bf       	out	0x3e, r29	; 62
     ee8:	0f be       	out	0x3f, r0	; 63
     eea:	cd bf       	out	0x3d, r28	; 61
     eec:	6c 01       	movw	r12, r24
     eee:	7b 01       	movw	r14, r22
     ef0:	8a 01       	movw	r16, r20
     ef2:	fc 01       	movw	r30, r24
     ef4:	17 82       	std	Z+7, r1	; 0x07
     ef6:	16 82       	std	Z+6, r1	; 0x06
     ef8:	83 81       	ldd	r24, Z+3	; 0x03
     efa:	81 ff       	sbrs	r24, 1
     efc:	bf c1       	rjmp	.+894    	; 0x127c <vfprintf+0x3c4>
     efe:	ce 01       	movw	r24, r28
     f00:	01 96       	adiw	r24, 0x01	; 1
     f02:	3c 01       	movw	r6, r24
     f04:	f6 01       	movw	r30, r12
     f06:	93 81       	ldd	r25, Z+3	; 0x03
     f08:	f7 01       	movw	r30, r14
     f0a:	93 fd       	sbrc	r25, 3
     f0c:	85 91       	lpm	r24, Z+
     f0e:	93 ff       	sbrs	r25, 3
     f10:	81 91       	ld	r24, Z+
     f12:	7f 01       	movw	r14, r30
     f14:	88 23       	and	r24, r24
     f16:	09 f4       	brne	.+2      	; 0xf1a <vfprintf+0x62>
     f18:	ad c1       	rjmp	.+858    	; 0x1274 <vfprintf+0x3bc>
     f1a:	85 32       	cpi	r24, 0x25	; 37
     f1c:	39 f4       	brne	.+14     	; 0xf2c <vfprintf+0x74>
     f1e:	93 fd       	sbrc	r25, 3
     f20:	85 91       	lpm	r24, Z+
     f22:	93 ff       	sbrs	r25, 3
     f24:	81 91       	ld	r24, Z+
     f26:	7f 01       	movw	r14, r30
     f28:	85 32       	cpi	r24, 0x25	; 37
     f2a:	21 f4       	brne	.+8      	; 0xf34 <vfprintf+0x7c>
     f2c:	b6 01       	movw	r22, r12
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	d6 d1       	rcall	.+940    	; 0x12de <fputc>
     f32:	e8 cf       	rjmp	.-48     	; 0xf04 <vfprintf+0x4c>
     f34:	91 2c       	mov	r9, r1
     f36:	21 2c       	mov	r2, r1
     f38:	31 2c       	mov	r3, r1
     f3a:	ff e1       	ldi	r31, 0x1F	; 31
     f3c:	f3 15       	cp	r31, r3
     f3e:	d8 f0       	brcs	.+54     	; 0xf76 <vfprintf+0xbe>
     f40:	8b 32       	cpi	r24, 0x2B	; 43
     f42:	79 f0       	breq	.+30     	; 0xf62 <vfprintf+0xaa>
     f44:	38 f4       	brcc	.+14     	; 0xf54 <vfprintf+0x9c>
     f46:	80 32       	cpi	r24, 0x20	; 32
     f48:	79 f0       	breq	.+30     	; 0xf68 <vfprintf+0xb0>
     f4a:	83 32       	cpi	r24, 0x23	; 35
     f4c:	a1 f4       	brne	.+40     	; 0xf76 <vfprintf+0xbe>
     f4e:	23 2d       	mov	r18, r3
     f50:	20 61       	ori	r18, 0x10	; 16
     f52:	1d c0       	rjmp	.+58     	; 0xf8e <vfprintf+0xd6>
     f54:	8d 32       	cpi	r24, 0x2D	; 45
     f56:	61 f0       	breq	.+24     	; 0xf70 <vfprintf+0xb8>
     f58:	80 33       	cpi	r24, 0x30	; 48
     f5a:	69 f4       	brne	.+26     	; 0xf76 <vfprintf+0xbe>
     f5c:	23 2d       	mov	r18, r3
     f5e:	21 60       	ori	r18, 0x01	; 1
     f60:	16 c0       	rjmp	.+44     	; 0xf8e <vfprintf+0xd6>
     f62:	83 2d       	mov	r24, r3
     f64:	82 60       	ori	r24, 0x02	; 2
     f66:	38 2e       	mov	r3, r24
     f68:	e3 2d       	mov	r30, r3
     f6a:	e4 60       	ori	r30, 0x04	; 4
     f6c:	3e 2e       	mov	r3, r30
     f6e:	2a c0       	rjmp	.+84     	; 0xfc4 <vfprintf+0x10c>
     f70:	f3 2d       	mov	r31, r3
     f72:	f8 60       	ori	r31, 0x08	; 8
     f74:	1d c0       	rjmp	.+58     	; 0xfb0 <vfprintf+0xf8>
     f76:	37 fc       	sbrc	r3, 7
     f78:	2d c0       	rjmp	.+90     	; 0xfd4 <vfprintf+0x11c>
     f7a:	20 ed       	ldi	r18, 0xD0	; 208
     f7c:	28 0f       	add	r18, r24
     f7e:	2a 30       	cpi	r18, 0x0A	; 10
     f80:	40 f0       	brcs	.+16     	; 0xf92 <vfprintf+0xda>
     f82:	8e 32       	cpi	r24, 0x2E	; 46
     f84:	b9 f4       	brne	.+46     	; 0xfb4 <vfprintf+0xfc>
     f86:	36 fc       	sbrc	r3, 6
     f88:	75 c1       	rjmp	.+746    	; 0x1274 <vfprintf+0x3bc>
     f8a:	23 2d       	mov	r18, r3
     f8c:	20 64       	ori	r18, 0x40	; 64
     f8e:	32 2e       	mov	r3, r18
     f90:	19 c0       	rjmp	.+50     	; 0xfc4 <vfprintf+0x10c>
     f92:	36 fe       	sbrs	r3, 6
     f94:	06 c0       	rjmp	.+12     	; 0xfa2 <vfprintf+0xea>
     f96:	8a e0       	ldi	r24, 0x0A	; 10
     f98:	98 9e       	mul	r9, r24
     f9a:	20 0d       	add	r18, r0
     f9c:	11 24       	eor	r1, r1
     f9e:	92 2e       	mov	r9, r18
     fa0:	11 c0       	rjmp	.+34     	; 0xfc4 <vfprintf+0x10c>
     fa2:	ea e0       	ldi	r30, 0x0A	; 10
     fa4:	2e 9e       	mul	r2, r30
     fa6:	20 0d       	add	r18, r0
     fa8:	11 24       	eor	r1, r1
     faa:	22 2e       	mov	r2, r18
     fac:	f3 2d       	mov	r31, r3
     fae:	f0 62       	ori	r31, 0x20	; 32
     fb0:	3f 2e       	mov	r3, r31
     fb2:	08 c0       	rjmp	.+16     	; 0xfc4 <vfprintf+0x10c>
     fb4:	8c 36       	cpi	r24, 0x6C	; 108
     fb6:	21 f4       	brne	.+8      	; 0xfc0 <vfprintf+0x108>
     fb8:	83 2d       	mov	r24, r3
     fba:	80 68       	ori	r24, 0x80	; 128
     fbc:	38 2e       	mov	r3, r24
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <vfprintf+0x10c>
     fc0:	88 36       	cpi	r24, 0x68	; 104
     fc2:	41 f4       	brne	.+16     	; 0xfd4 <vfprintf+0x11c>
     fc4:	f7 01       	movw	r30, r14
     fc6:	93 fd       	sbrc	r25, 3
     fc8:	85 91       	lpm	r24, Z+
     fca:	93 ff       	sbrs	r25, 3
     fcc:	81 91       	ld	r24, Z+
     fce:	7f 01       	movw	r14, r30
     fd0:	81 11       	cpse	r24, r1
     fd2:	b3 cf       	rjmp	.-154    	; 0xf3a <vfprintf+0x82>
     fd4:	98 2f       	mov	r25, r24
     fd6:	9f 7d       	andi	r25, 0xDF	; 223
     fd8:	95 54       	subi	r25, 0x45	; 69
     fda:	93 30       	cpi	r25, 0x03	; 3
     fdc:	28 f4       	brcc	.+10     	; 0xfe8 <vfprintf+0x130>
     fde:	0c 5f       	subi	r16, 0xFC	; 252
     fe0:	1f 4f       	sbci	r17, 0xFF	; 255
     fe2:	9f e3       	ldi	r25, 0x3F	; 63
     fe4:	99 83       	std	Y+1, r25	; 0x01
     fe6:	0d c0       	rjmp	.+26     	; 0x1002 <vfprintf+0x14a>
     fe8:	83 36       	cpi	r24, 0x63	; 99
     fea:	31 f0       	breq	.+12     	; 0xff8 <vfprintf+0x140>
     fec:	83 37       	cpi	r24, 0x73	; 115
     fee:	71 f0       	breq	.+28     	; 0x100c <vfprintf+0x154>
     ff0:	83 35       	cpi	r24, 0x53	; 83
     ff2:	09 f0       	breq	.+2      	; 0xff6 <vfprintf+0x13e>
     ff4:	55 c0       	rjmp	.+170    	; 0x10a0 <vfprintf+0x1e8>
     ff6:	20 c0       	rjmp	.+64     	; 0x1038 <vfprintf+0x180>
     ff8:	f8 01       	movw	r30, r16
     ffa:	80 81       	ld	r24, Z
     ffc:	89 83       	std	Y+1, r24	; 0x01
     ffe:	0e 5f       	subi	r16, 0xFE	; 254
    1000:	1f 4f       	sbci	r17, 0xFF	; 255
    1002:	88 24       	eor	r8, r8
    1004:	83 94       	inc	r8
    1006:	91 2c       	mov	r9, r1
    1008:	53 01       	movw	r10, r6
    100a:	12 c0       	rjmp	.+36     	; 0x1030 <vfprintf+0x178>
    100c:	28 01       	movw	r4, r16
    100e:	f2 e0       	ldi	r31, 0x02	; 2
    1010:	4f 0e       	add	r4, r31
    1012:	51 1c       	adc	r5, r1
    1014:	f8 01       	movw	r30, r16
    1016:	a0 80       	ld	r10, Z
    1018:	b1 80       	ldd	r11, Z+1	; 0x01
    101a:	36 fe       	sbrs	r3, 6
    101c:	03 c0       	rjmp	.+6      	; 0x1024 <vfprintf+0x16c>
    101e:	69 2d       	mov	r22, r9
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	02 c0       	rjmp	.+4      	; 0x1028 <vfprintf+0x170>
    1024:	6f ef       	ldi	r22, 0xFF	; 255
    1026:	7f ef       	ldi	r23, 0xFF	; 255
    1028:	c5 01       	movw	r24, r10
    102a:	4e d1       	rcall	.+668    	; 0x12c8 <strnlen>
    102c:	4c 01       	movw	r8, r24
    102e:	82 01       	movw	r16, r4
    1030:	f3 2d       	mov	r31, r3
    1032:	ff 77       	andi	r31, 0x7F	; 127
    1034:	3f 2e       	mov	r3, r31
    1036:	15 c0       	rjmp	.+42     	; 0x1062 <vfprintf+0x1aa>
    1038:	28 01       	movw	r4, r16
    103a:	22 e0       	ldi	r18, 0x02	; 2
    103c:	42 0e       	add	r4, r18
    103e:	51 1c       	adc	r5, r1
    1040:	f8 01       	movw	r30, r16
    1042:	a0 80       	ld	r10, Z
    1044:	b1 80       	ldd	r11, Z+1	; 0x01
    1046:	36 fe       	sbrs	r3, 6
    1048:	03 c0       	rjmp	.+6      	; 0x1050 <vfprintf+0x198>
    104a:	69 2d       	mov	r22, r9
    104c:	70 e0       	ldi	r23, 0x00	; 0
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <vfprintf+0x19c>
    1050:	6f ef       	ldi	r22, 0xFF	; 255
    1052:	7f ef       	ldi	r23, 0xFF	; 255
    1054:	c5 01       	movw	r24, r10
    1056:	2d d1       	rcall	.+602    	; 0x12b2 <strnlen_P>
    1058:	4c 01       	movw	r8, r24
    105a:	f3 2d       	mov	r31, r3
    105c:	f0 68       	ori	r31, 0x80	; 128
    105e:	3f 2e       	mov	r3, r31
    1060:	82 01       	movw	r16, r4
    1062:	33 fc       	sbrc	r3, 3
    1064:	19 c0       	rjmp	.+50     	; 0x1098 <vfprintf+0x1e0>
    1066:	82 2d       	mov	r24, r2
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	88 16       	cp	r8, r24
    106c:	99 06       	cpc	r9, r25
    106e:	a0 f4       	brcc	.+40     	; 0x1098 <vfprintf+0x1e0>
    1070:	b6 01       	movw	r22, r12
    1072:	80 e2       	ldi	r24, 0x20	; 32
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	33 d1       	rcall	.+614    	; 0x12de <fputc>
    1078:	2a 94       	dec	r2
    107a:	f5 cf       	rjmp	.-22     	; 0x1066 <vfprintf+0x1ae>
    107c:	f5 01       	movw	r30, r10
    107e:	37 fc       	sbrc	r3, 7
    1080:	85 91       	lpm	r24, Z+
    1082:	37 fe       	sbrs	r3, 7
    1084:	81 91       	ld	r24, Z+
    1086:	5f 01       	movw	r10, r30
    1088:	b6 01       	movw	r22, r12
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	28 d1       	rcall	.+592    	; 0x12de <fputc>
    108e:	21 10       	cpse	r2, r1
    1090:	2a 94       	dec	r2
    1092:	21 e0       	ldi	r18, 0x01	; 1
    1094:	82 1a       	sub	r8, r18
    1096:	91 08       	sbc	r9, r1
    1098:	81 14       	cp	r8, r1
    109a:	91 04       	cpc	r9, r1
    109c:	79 f7       	brne	.-34     	; 0x107c <vfprintf+0x1c4>
    109e:	e1 c0       	rjmp	.+450    	; 0x1262 <vfprintf+0x3aa>
    10a0:	84 36       	cpi	r24, 0x64	; 100
    10a2:	11 f0       	breq	.+4      	; 0x10a8 <vfprintf+0x1f0>
    10a4:	89 36       	cpi	r24, 0x69	; 105
    10a6:	39 f5       	brne	.+78     	; 0x10f6 <vfprintf+0x23e>
    10a8:	f8 01       	movw	r30, r16
    10aa:	37 fe       	sbrs	r3, 7
    10ac:	07 c0       	rjmp	.+14     	; 0x10bc <vfprintf+0x204>
    10ae:	60 81       	ld	r22, Z
    10b0:	71 81       	ldd	r23, Z+1	; 0x01
    10b2:	82 81       	ldd	r24, Z+2	; 0x02
    10b4:	93 81       	ldd	r25, Z+3	; 0x03
    10b6:	0c 5f       	subi	r16, 0xFC	; 252
    10b8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ba:	08 c0       	rjmp	.+16     	; 0x10cc <vfprintf+0x214>
    10bc:	60 81       	ld	r22, Z
    10be:	71 81       	ldd	r23, Z+1	; 0x01
    10c0:	07 2e       	mov	r0, r23
    10c2:	00 0c       	add	r0, r0
    10c4:	88 0b       	sbc	r24, r24
    10c6:	99 0b       	sbc	r25, r25
    10c8:	0e 5f       	subi	r16, 0xFE	; 254
    10ca:	1f 4f       	sbci	r17, 0xFF	; 255
    10cc:	f3 2d       	mov	r31, r3
    10ce:	ff 76       	andi	r31, 0x6F	; 111
    10d0:	3f 2e       	mov	r3, r31
    10d2:	97 ff       	sbrs	r25, 7
    10d4:	09 c0       	rjmp	.+18     	; 0x10e8 <vfprintf+0x230>
    10d6:	90 95       	com	r25
    10d8:	80 95       	com	r24
    10da:	70 95       	com	r23
    10dc:	61 95       	neg	r22
    10de:	7f 4f       	sbci	r23, 0xFF	; 255
    10e0:	8f 4f       	sbci	r24, 0xFF	; 255
    10e2:	9f 4f       	sbci	r25, 0xFF	; 255
    10e4:	f0 68       	ori	r31, 0x80	; 128
    10e6:	3f 2e       	mov	r3, r31
    10e8:	2a e0       	ldi	r18, 0x0A	; 10
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	a3 01       	movw	r20, r6
    10ee:	33 d1       	rcall	.+614    	; 0x1356 <__ultoa_invert>
    10f0:	88 2e       	mov	r8, r24
    10f2:	86 18       	sub	r8, r6
    10f4:	44 c0       	rjmp	.+136    	; 0x117e <vfprintf+0x2c6>
    10f6:	85 37       	cpi	r24, 0x75	; 117
    10f8:	31 f4       	brne	.+12     	; 0x1106 <vfprintf+0x24e>
    10fa:	23 2d       	mov	r18, r3
    10fc:	2f 7e       	andi	r18, 0xEF	; 239
    10fe:	b2 2e       	mov	r11, r18
    1100:	2a e0       	ldi	r18, 0x0A	; 10
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	25 c0       	rjmp	.+74     	; 0x1150 <vfprintf+0x298>
    1106:	93 2d       	mov	r25, r3
    1108:	99 7f       	andi	r25, 0xF9	; 249
    110a:	b9 2e       	mov	r11, r25
    110c:	8f 36       	cpi	r24, 0x6F	; 111
    110e:	c1 f0       	breq	.+48     	; 0x1140 <vfprintf+0x288>
    1110:	18 f4       	brcc	.+6      	; 0x1118 <vfprintf+0x260>
    1112:	88 35       	cpi	r24, 0x58	; 88
    1114:	79 f0       	breq	.+30     	; 0x1134 <vfprintf+0x27c>
    1116:	ae c0       	rjmp	.+348    	; 0x1274 <vfprintf+0x3bc>
    1118:	80 37       	cpi	r24, 0x70	; 112
    111a:	19 f0       	breq	.+6      	; 0x1122 <vfprintf+0x26a>
    111c:	88 37       	cpi	r24, 0x78	; 120
    111e:	21 f0       	breq	.+8      	; 0x1128 <vfprintf+0x270>
    1120:	a9 c0       	rjmp	.+338    	; 0x1274 <vfprintf+0x3bc>
    1122:	e9 2f       	mov	r30, r25
    1124:	e0 61       	ori	r30, 0x10	; 16
    1126:	be 2e       	mov	r11, r30
    1128:	b4 fe       	sbrs	r11, 4
    112a:	0d c0       	rjmp	.+26     	; 0x1146 <vfprintf+0x28e>
    112c:	fb 2d       	mov	r31, r11
    112e:	f4 60       	ori	r31, 0x04	; 4
    1130:	bf 2e       	mov	r11, r31
    1132:	09 c0       	rjmp	.+18     	; 0x1146 <vfprintf+0x28e>
    1134:	34 fe       	sbrs	r3, 4
    1136:	0a c0       	rjmp	.+20     	; 0x114c <vfprintf+0x294>
    1138:	29 2f       	mov	r18, r25
    113a:	26 60       	ori	r18, 0x06	; 6
    113c:	b2 2e       	mov	r11, r18
    113e:	06 c0       	rjmp	.+12     	; 0x114c <vfprintf+0x294>
    1140:	28 e0       	ldi	r18, 0x08	; 8
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	05 c0       	rjmp	.+10     	; 0x1150 <vfprintf+0x298>
    1146:	20 e1       	ldi	r18, 0x10	; 16
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	02 c0       	rjmp	.+4      	; 0x1150 <vfprintf+0x298>
    114c:	20 e1       	ldi	r18, 0x10	; 16
    114e:	32 e0       	ldi	r19, 0x02	; 2
    1150:	f8 01       	movw	r30, r16
    1152:	b7 fe       	sbrs	r11, 7
    1154:	07 c0       	rjmp	.+14     	; 0x1164 <vfprintf+0x2ac>
    1156:	60 81       	ld	r22, Z
    1158:	71 81       	ldd	r23, Z+1	; 0x01
    115a:	82 81       	ldd	r24, Z+2	; 0x02
    115c:	93 81       	ldd	r25, Z+3	; 0x03
    115e:	0c 5f       	subi	r16, 0xFC	; 252
    1160:	1f 4f       	sbci	r17, 0xFF	; 255
    1162:	06 c0       	rjmp	.+12     	; 0x1170 <vfprintf+0x2b8>
    1164:	60 81       	ld	r22, Z
    1166:	71 81       	ldd	r23, Z+1	; 0x01
    1168:	80 e0       	ldi	r24, 0x00	; 0
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	0e 5f       	subi	r16, 0xFE	; 254
    116e:	1f 4f       	sbci	r17, 0xFF	; 255
    1170:	a3 01       	movw	r20, r6
    1172:	f1 d0       	rcall	.+482    	; 0x1356 <__ultoa_invert>
    1174:	88 2e       	mov	r8, r24
    1176:	86 18       	sub	r8, r6
    1178:	fb 2d       	mov	r31, r11
    117a:	ff 77       	andi	r31, 0x7F	; 127
    117c:	3f 2e       	mov	r3, r31
    117e:	36 fe       	sbrs	r3, 6
    1180:	0d c0       	rjmp	.+26     	; 0x119c <vfprintf+0x2e4>
    1182:	23 2d       	mov	r18, r3
    1184:	2e 7f       	andi	r18, 0xFE	; 254
    1186:	a2 2e       	mov	r10, r18
    1188:	89 14       	cp	r8, r9
    118a:	58 f4       	brcc	.+22     	; 0x11a2 <vfprintf+0x2ea>
    118c:	34 fe       	sbrs	r3, 4
    118e:	0b c0       	rjmp	.+22     	; 0x11a6 <vfprintf+0x2ee>
    1190:	32 fc       	sbrc	r3, 2
    1192:	09 c0       	rjmp	.+18     	; 0x11a6 <vfprintf+0x2ee>
    1194:	83 2d       	mov	r24, r3
    1196:	8e 7e       	andi	r24, 0xEE	; 238
    1198:	a8 2e       	mov	r10, r24
    119a:	05 c0       	rjmp	.+10     	; 0x11a6 <vfprintf+0x2ee>
    119c:	b8 2c       	mov	r11, r8
    119e:	a3 2c       	mov	r10, r3
    11a0:	03 c0       	rjmp	.+6      	; 0x11a8 <vfprintf+0x2f0>
    11a2:	b8 2c       	mov	r11, r8
    11a4:	01 c0       	rjmp	.+2      	; 0x11a8 <vfprintf+0x2f0>
    11a6:	b9 2c       	mov	r11, r9
    11a8:	a4 fe       	sbrs	r10, 4
    11aa:	0f c0       	rjmp	.+30     	; 0x11ca <vfprintf+0x312>
    11ac:	fe 01       	movw	r30, r28
    11ae:	e8 0d       	add	r30, r8
    11b0:	f1 1d       	adc	r31, r1
    11b2:	80 81       	ld	r24, Z
    11b4:	80 33       	cpi	r24, 0x30	; 48
    11b6:	21 f4       	brne	.+8      	; 0x11c0 <vfprintf+0x308>
    11b8:	9a 2d       	mov	r25, r10
    11ba:	99 7e       	andi	r25, 0xE9	; 233
    11bc:	a9 2e       	mov	r10, r25
    11be:	09 c0       	rjmp	.+18     	; 0x11d2 <vfprintf+0x31a>
    11c0:	a2 fe       	sbrs	r10, 2
    11c2:	06 c0       	rjmp	.+12     	; 0x11d0 <vfprintf+0x318>
    11c4:	b3 94       	inc	r11
    11c6:	b3 94       	inc	r11
    11c8:	04 c0       	rjmp	.+8      	; 0x11d2 <vfprintf+0x31a>
    11ca:	8a 2d       	mov	r24, r10
    11cc:	86 78       	andi	r24, 0x86	; 134
    11ce:	09 f0       	breq	.+2      	; 0x11d2 <vfprintf+0x31a>
    11d0:	b3 94       	inc	r11
    11d2:	a3 fc       	sbrc	r10, 3
    11d4:	10 c0       	rjmp	.+32     	; 0x11f6 <vfprintf+0x33e>
    11d6:	a0 fe       	sbrs	r10, 0
    11d8:	06 c0       	rjmp	.+12     	; 0x11e6 <vfprintf+0x32e>
    11da:	b2 14       	cp	r11, r2
    11dc:	80 f4       	brcc	.+32     	; 0x11fe <vfprintf+0x346>
    11de:	28 0c       	add	r2, r8
    11e0:	92 2c       	mov	r9, r2
    11e2:	9b 18       	sub	r9, r11
    11e4:	0d c0       	rjmp	.+26     	; 0x1200 <vfprintf+0x348>
    11e6:	b2 14       	cp	r11, r2
    11e8:	58 f4       	brcc	.+22     	; 0x1200 <vfprintf+0x348>
    11ea:	b6 01       	movw	r22, r12
    11ec:	80 e2       	ldi	r24, 0x20	; 32
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	76 d0       	rcall	.+236    	; 0x12de <fputc>
    11f2:	b3 94       	inc	r11
    11f4:	f8 cf       	rjmp	.-16     	; 0x11e6 <vfprintf+0x32e>
    11f6:	b2 14       	cp	r11, r2
    11f8:	18 f4       	brcc	.+6      	; 0x1200 <vfprintf+0x348>
    11fa:	2b 18       	sub	r2, r11
    11fc:	02 c0       	rjmp	.+4      	; 0x1202 <vfprintf+0x34a>
    11fe:	98 2c       	mov	r9, r8
    1200:	21 2c       	mov	r2, r1
    1202:	a4 fe       	sbrs	r10, 4
    1204:	0f c0       	rjmp	.+30     	; 0x1224 <vfprintf+0x36c>
    1206:	b6 01       	movw	r22, r12
    1208:	80 e3       	ldi	r24, 0x30	; 48
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	68 d0       	rcall	.+208    	; 0x12de <fputc>
    120e:	a2 fe       	sbrs	r10, 2
    1210:	16 c0       	rjmp	.+44     	; 0x123e <vfprintf+0x386>
    1212:	a1 fc       	sbrc	r10, 1
    1214:	03 c0       	rjmp	.+6      	; 0x121c <vfprintf+0x364>
    1216:	88 e7       	ldi	r24, 0x78	; 120
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	02 c0       	rjmp	.+4      	; 0x1220 <vfprintf+0x368>
    121c:	88 e5       	ldi	r24, 0x58	; 88
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	b6 01       	movw	r22, r12
    1222:	0c c0       	rjmp	.+24     	; 0x123c <vfprintf+0x384>
    1224:	8a 2d       	mov	r24, r10
    1226:	86 78       	andi	r24, 0x86	; 134
    1228:	51 f0       	breq	.+20     	; 0x123e <vfprintf+0x386>
    122a:	a1 fe       	sbrs	r10, 1
    122c:	02 c0       	rjmp	.+4      	; 0x1232 <vfprintf+0x37a>
    122e:	8b e2       	ldi	r24, 0x2B	; 43
    1230:	01 c0       	rjmp	.+2      	; 0x1234 <vfprintf+0x37c>
    1232:	80 e2       	ldi	r24, 0x20	; 32
    1234:	a7 fc       	sbrc	r10, 7
    1236:	8d e2       	ldi	r24, 0x2D	; 45
    1238:	b6 01       	movw	r22, r12
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	50 d0       	rcall	.+160    	; 0x12de <fputc>
    123e:	89 14       	cp	r8, r9
    1240:	30 f4       	brcc	.+12     	; 0x124e <vfprintf+0x396>
    1242:	b6 01       	movw	r22, r12
    1244:	80 e3       	ldi	r24, 0x30	; 48
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	4a d0       	rcall	.+148    	; 0x12de <fputc>
    124a:	9a 94       	dec	r9
    124c:	f8 cf       	rjmp	.-16     	; 0x123e <vfprintf+0x386>
    124e:	8a 94       	dec	r8
    1250:	f3 01       	movw	r30, r6
    1252:	e8 0d       	add	r30, r8
    1254:	f1 1d       	adc	r31, r1
    1256:	80 81       	ld	r24, Z
    1258:	b6 01       	movw	r22, r12
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	40 d0       	rcall	.+128    	; 0x12de <fputc>
    125e:	81 10       	cpse	r8, r1
    1260:	f6 cf       	rjmp	.-20     	; 0x124e <vfprintf+0x396>
    1262:	22 20       	and	r2, r2
    1264:	09 f4       	brne	.+2      	; 0x1268 <vfprintf+0x3b0>
    1266:	4e ce       	rjmp	.-868    	; 0xf04 <vfprintf+0x4c>
    1268:	b6 01       	movw	r22, r12
    126a:	80 e2       	ldi	r24, 0x20	; 32
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	37 d0       	rcall	.+110    	; 0x12de <fputc>
    1270:	2a 94       	dec	r2
    1272:	f7 cf       	rjmp	.-18     	; 0x1262 <vfprintf+0x3aa>
    1274:	f6 01       	movw	r30, r12
    1276:	86 81       	ldd	r24, Z+6	; 0x06
    1278:	97 81       	ldd	r25, Z+7	; 0x07
    127a:	02 c0       	rjmp	.+4      	; 0x1280 <vfprintf+0x3c8>
    127c:	8f ef       	ldi	r24, 0xFF	; 255
    127e:	9f ef       	ldi	r25, 0xFF	; 255
    1280:	2b 96       	adiw	r28, 0x0b	; 11
    1282:	0f b6       	in	r0, 0x3f	; 63
    1284:	f8 94       	cli
    1286:	de bf       	out	0x3e, r29	; 62
    1288:	0f be       	out	0x3f, r0	; 63
    128a:	cd bf       	out	0x3d, r28	; 61
    128c:	df 91       	pop	r29
    128e:	cf 91       	pop	r28
    1290:	1f 91       	pop	r17
    1292:	0f 91       	pop	r16
    1294:	ff 90       	pop	r15
    1296:	ef 90       	pop	r14
    1298:	df 90       	pop	r13
    129a:	cf 90       	pop	r12
    129c:	bf 90       	pop	r11
    129e:	af 90       	pop	r10
    12a0:	9f 90       	pop	r9
    12a2:	8f 90       	pop	r8
    12a4:	7f 90       	pop	r7
    12a6:	6f 90       	pop	r6
    12a8:	5f 90       	pop	r5
    12aa:	4f 90       	pop	r4
    12ac:	3f 90       	pop	r3
    12ae:	2f 90       	pop	r2
    12b0:	08 95       	ret

000012b2 <strnlen_P>:
    12b2:	fc 01       	movw	r30, r24
    12b4:	05 90       	lpm	r0, Z+
    12b6:	61 50       	subi	r22, 0x01	; 1
    12b8:	70 40       	sbci	r23, 0x00	; 0
    12ba:	01 10       	cpse	r0, r1
    12bc:	d8 f7       	brcc	.-10     	; 0x12b4 <strnlen_P+0x2>
    12be:	80 95       	com	r24
    12c0:	90 95       	com	r25
    12c2:	8e 0f       	add	r24, r30
    12c4:	9f 1f       	adc	r25, r31
    12c6:	08 95       	ret

000012c8 <strnlen>:
    12c8:	fc 01       	movw	r30, r24
    12ca:	61 50       	subi	r22, 0x01	; 1
    12cc:	70 40       	sbci	r23, 0x00	; 0
    12ce:	01 90       	ld	r0, Z+
    12d0:	01 10       	cpse	r0, r1
    12d2:	d8 f7       	brcc	.-10     	; 0x12ca <strnlen+0x2>
    12d4:	80 95       	com	r24
    12d6:	90 95       	com	r25
    12d8:	8e 0f       	add	r24, r30
    12da:	9f 1f       	adc	r25, r31
    12dc:	08 95       	ret

000012de <fputc>:
    12de:	0f 93       	push	r16
    12e0:	1f 93       	push	r17
    12e2:	cf 93       	push	r28
    12e4:	df 93       	push	r29
    12e6:	fb 01       	movw	r30, r22
    12e8:	23 81       	ldd	r18, Z+3	; 0x03
    12ea:	21 fd       	sbrc	r18, 1
    12ec:	03 c0       	rjmp	.+6      	; 0x12f4 <fputc+0x16>
    12ee:	8f ef       	ldi	r24, 0xFF	; 255
    12f0:	9f ef       	ldi	r25, 0xFF	; 255
    12f2:	2c c0       	rjmp	.+88     	; 0x134c <fputc+0x6e>
    12f4:	22 ff       	sbrs	r18, 2
    12f6:	16 c0       	rjmp	.+44     	; 0x1324 <fputc+0x46>
    12f8:	46 81       	ldd	r20, Z+6	; 0x06
    12fa:	57 81       	ldd	r21, Z+7	; 0x07
    12fc:	24 81       	ldd	r18, Z+4	; 0x04
    12fe:	35 81       	ldd	r19, Z+5	; 0x05
    1300:	42 17       	cp	r20, r18
    1302:	53 07       	cpc	r21, r19
    1304:	44 f4       	brge	.+16     	; 0x1316 <fputc+0x38>
    1306:	a0 81       	ld	r26, Z
    1308:	b1 81       	ldd	r27, Z+1	; 0x01
    130a:	9d 01       	movw	r18, r26
    130c:	2f 5f       	subi	r18, 0xFF	; 255
    130e:	3f 4f       	sbci	r19, 0xFF	; 255
    1310:	31 83       	std	Z+1, r19	; 0x01
    1312:	20 83       	st	Z, r18
    1314:	8c 93       	st	X, r24
    1316:	26 81       	ldd	r18, Z+6	; 0x06
    1318:	37 81       	ldd	r19, Z+7	; 0x07
    131a:	2f 5f       	subi	r18, 0xFF	; 255
    131c:	3f 4f       	sbci	r19, 0xFF	; 255
    131e:	37 83       	std	Z+7, r19	; 0x07
    1320:	26 83       	std	Z+6, r18	; 0x06
    1322:	14 c0       	rjmp	.+40     	; 0x134c <fputc+0x6e>
    1324:	8b 01       	movw	r16, r22
    1326:	ec 01       	movw	r28, r24
    1328:	fb 01       	movw	r30, r22
    132a:	00 84       	ldd	r0, Z+8	; 0x08
    132c:	f1 85       	ldd	r31, Z+9	; 0x09
    132e:	e0 2d       	mov	r30, r0
    1330:	19 95       	eicall
    1332:	89 2b       	or	r24, r25
    1334:	e1 f6       	brne	.-72     	; 0x12ee <fputc+0x10>
    1336:	d8 01       	movw	r26, r16
    1338:	16 96       	adiw	r26, 0x06	; 6
    133a:	8d 91       	ld	r24, X+
    133c:	9c 91       	ld	r25, X
    133e:	17 97       	sbiw	r26, 0x07	; 7
    1340:	01 96       	adiw	r24, 0x01	; 1
    1342:	17 96       	adiw	r26, 0x07	; 7
    1344:	9c 93       	st	X, r25
    1346:	8e 93       	st	-X, r24
    1348:	16 97       	sbiw	r26, 0x06	; 6
    134a:	ce 01       	movw	r24, r28
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	08 95       	ret

00001356 <__ultoa_invert>:
    1356:	fa 01       	movw	r30, r20
    1358:	aa 27       	eor	r26, r26
    135a:	28 30       	cpi	r18, 0x08	; 8
    135c:	51 f1       	breq	.+84     	; 0x13b2 <__ultoa_invert+0x5c>
    135e:	20 31       	cpi	r18, 0x10	; 16
    1360:	81 f1       	breq	.+96     	; 0x13c2 <__ultoa_invert+0x6c>
    1362:	e8 94       	clt
    1364:	6f 93       	push	r22
    1366:	6e 7f       	andi	r22, 0xFE	; 254
    1368:	6e 5f       	subi	r22, 0xFE	; 254
    136a:	7f 4f       	sbci	r23, 0xFF	; 255
    136c:	8f 4f       	sbci	r24, 0xFF	; 255
    136e:	9f 4f       	sbci	r25, 0xFF	; 255
    1370:	af 4f       	sbci	r26, 0xFF	; 255
    1372:	b1 e0       	ldi	r27, 0x01	; 1
    1374:	3e d0       	rcall	.+124    	; 0x13f2 <__ultoa_invert+0x9c>
    1376:	b4 e0       	ldi	r27, 0x04	; 4
    1378:	3c d0       	rcall	.+120    	; 0x13f2 <__ultoa_invert+0x9c>
    137a:	67 0f       	add	r22, r23
    137c:	78 1f       	adc	r23, r24
    137e:	89 1f       	adc	r24, r25
    1380:	9a 1f       	adc	r25, r26
    1382:	a1 1d       	adc	r26, r1
    1384:	68 0f       	add	r22, r24
    1386:	79 1f       	adc	r23, r25
    1388:	8a 1f       	adc	r24, r26
    138a:	91 1d       	adc	r25, r1
    138c:	a1 1d       	adc	r26, r1
    138e:	6a 0f       	add	r22, r26
    1390:	71 1d       	adc	r23, r1
    1392:	81 1d       	adc	r24, r1
    1394:	91 1d       	adc	r25, r1
    1396:	a1 1d       	adc	r26, r1
    1398:	20 d0       	rcall	.+64     	; 0x13da <__ultoa_invert+0x84>
    139a:	09 f4       	brne	.+2      	; 0x139e <__ultoa_invert+0x48>
    139c:	68 94       	set
    139e:	3f 91       	pop	r19
    13a0:	2a e0       	ldi	r18, 0x0A	; 10
    13a2:	26 9f       	mul	r18, r22
    13a4:	11 24       	eor	r1, r1
    13a6:	30 19       	sub	r19, r0
    13a8:	30 5d       	subi	r19, 0xD0	; 208
    13aa:	31 93       	st	Z+, r19
    13ac:	de f6       	brtc	.-74     	; 0x1364 <__ultoa_invert+0xe>
    13ae:	cf 01       	movw	r24, r30
    13b0:	08 95       	ret
    13b2:	46 2f       	mov	r20, r22
    13b4:	47 70       	andi	r20, 0x07	; 7
    13b6:	40 5d       	subi	r20, 0xD0	; 208
    13b8:	41 93       	st	Z+, r20
    13ba:	b3 e0       	ldi	r27, 0x03	; 3
    13bc:	0f d0       	rcall	.+30     	; 0x13dc <__ultoa_invert+0x86>
    13be:	c9 f7       	brne	.-14     	; 0x13b2 <__ultoa_invert+0x5c>
    13c0:	f6 cf       	rjmp	.-20     	; 0x13ae <__ultoa_invert+0x58>
    13c2:	46 2f       	mov	r20, r22
    13c4:	4f 70       	andi	r20, 0x0F	; 15
    13c6:	40 5d       	subi	r20, 0xD0	; 208
    13c8:	4a 33       	cpi	r20, 0x3A	; 58
    13ca:	18 f0       	brcs	.+6      	; 0x13d2 <__ultoa_invert+0x7c>
    13cc:	49 5d       	subi	r20, 0xD9	; 217
    13ce:	31 fd       	sbrc	r19, 1
    13d0:	40 52       	subi	r20, 0x20	; 32
    13d2:	41 93       	st	Z+, r20
    13d4:	02 d0       	rcall	.+4      	; 0x13da <__ultoa_invert+0x84>
    13d6:	a9 f7       	brne	.-22     	; 0x13c2 <__ultoa_invert+0x6c>
    13d8:	ea cf       	rjmp	.-44     	; 0x13ae <__ultoa_invert+0x58>
    13da:	b4 e0       	ldi	r27, 0x04	; 4
    13dc:	a6 95       	lsr	r26
    13de:	97 95       	ror	r25
    13e0:	87 95       	ror	r24
    13e2:	77 95       	ror	r23
    13e4:	67 95       	ror	r22
    13e6:	ba 95       	dec	r27
    13e8:	c9 f7       	brne	.-14     	; 0x13dc <__ultoa_invert+0x86>
    13ea:	00 97       	sbiw	r24, 0x00	; 0
    13ec:	61 05       	cpc	r22, r1
    13ee:	71 05       	cpc	r23, r1
    13f0:	08 95       	ret
    13f2:	9b 01       	movw	r18, r22
    13f4:	ac 01       	movw	r20, r24
    13f6:	0a 2e       	mov	r0, r26
    13f8:	06 94       	lsr	r0
    13fa:	57 95       	ror	r21
    13fc:	47 95       	ror	r20
    13fe:	37 95       	ror	r19
    1400:	27 95       	ror	r18
    1402:	ba 95       	dec	r27
    1404:	c9 f7       	brne	.-14     	; 0x13f8 <__ultoa_invert+0xa2>
    1406:	62 0f       	add	r22, r18
    1408:	73 1f       	adc	r23, r19
    140a:	84 1f       	adc	r24, r20
    140c:	95 1f       	adc	r25, r21
    140e:	a0 1d       	adc	r26, r0
    1410:	08 95       	ret

00001412 <_exit>:
    1412:	f8 94       	cli

00001414 <__stop_program>:
    1414:	ff cf       	rjmp	.-2      	; 0x1414 <__stop_program>
