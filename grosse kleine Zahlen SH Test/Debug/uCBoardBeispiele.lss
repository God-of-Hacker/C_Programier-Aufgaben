
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000015e  00800200  00000e02  00000e96  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e02  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  0080035e  0080035e  00000ff4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ff4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001050  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00001090  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000246b  00000000  00000000  00001278  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fce  00000000  00000000  000036e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001413  00000000  00000000  000046b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000068c  00000000  00000000  00005ac4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ce8  00000000  00000000  00006150  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001adf  00000000  00000000  00006e38  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  00008917  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	93 c3       	rjmp	.+1830   	; 0x784 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e0       	ldi	r30, 0x02	; 2
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 35       	cpi	r26, 0x5E	; 94
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ae e5       	ldi	r26, 0x5E	; 94
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 3d       	cpi	r26, 0xDC	; 220
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	6e c6       	rjmp	.+3292   	; 0xdfe <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:

#define SIZE        100

//Hauptprogramm
int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	c8 5c       	subi	r28, 0xC8	; 200
 12e:	d1 09       	sbc	r29, r1
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	f8 94       	cli
 134:	de bf       	out	0x3e, r29	; 62
 136:	0f be       	out	0x3f, r0	; 63
 138:	cd bf       	out	0x3d, r28	; 61
    //Variablen
    uint16_t testArray[SIZE] =
 13a:	88 ec       	ldi	r24, 0xC8	; 200
 13c:	e0 e0       	ldi	r30, 0x00	; 0
 13e:	f2 e0       	ldi	r31, 0x02	; 2
 140:	de 01       	movw	r26, r28
 142:	11 96       	adiw	r26, 0x01	; 1
 144:	01 90       	ld	r0, Z+
 146:	0d 92       	st	X+, r0
 148:	8a 95       	dec	r24
 14a:	e1 f7       	brne	.-8      	; 0x144 <main+0x20>
    uint16_t maxIndex = 0;
    uint16_t minZahl = 65535;
    uint16_t minIndex = 0;
    
    //Initialisieren
    initBoard(1);
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	97 d1       	rcall	.+814    	; 0x47e <initBoard>
 150:	fe 01       	movw	r30, r28
 152:	31 96       	adiw	r30, 0x01	; 1
    
    
    for (uint16_t i=0; i<SIZE;i=i+1)
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
    };
    
    uint16_t maxZahl = 0;
    uint16_t maxIndex = 0;
    uint16_t minZahl = 65535;
    uint16_t minIndex = 0;
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	70 e0       	ldi	r23, 0x00	; 0
        11933, 22958, 61231, 57095, 39850, 39160, 47316, 53204, 20357,  2753
    };
    
    uint16_t maxZahl = 0;
    uint16_t maxIndex = 0;
    uint16_t minZahl = 65535;
 15c:	4f ef       	ldi	r20, 0xFF	; 255
 15e:	5f ef       	ldi	r21, 0xFF	; 255
        5797, 65271,  1783, 61756, 23743, 26248,  2212,  4002, 31030, 47946,
        11933, 22958, 61231, 57095, 39850, 39160, 47316, 53204, 20357,  2753
    };
    
    uint16_t maxZahl = 0;
    uint16_t maxIndex = 0;
 160:	f1 2c       	mov	r15, r1
 162:	e1 2c       	mov	r14, r1
        27911, 11533, 16461, 40099, 31239, 53667, 39818,  2253, 62228,  2284,
        5797, 65271,  1783, 61756, 23743, 26248,  2212,  4002, 31030, 47946,
        11933, 22958, 61231, 57095, 39850, 39160, 47316, 53204, 20357,  2753
    };
    
    uint16_t maxZahl = 0;
 164:	00 e0       	ldi	r16, 0x00	; 0
 166:	10 e0       	ldi	r17, 0x00	; 0
    initBoard(1);
    
    
    for (uint16_t i=0; i<SIZE;i=i+1)
    {
        if (testArray[i] > maxZahl)
 168:	21 91       	ld	r18, Z+
 16a:	31 91       	ld	r19, Z+
 16c:	02 17       	cp	r16, r18
 16e:	13 07       	cpc	r17, r19
 170:	18 f4       	brcc	.+6      	; 0x178 <main+0x54>
 172:	f8 2e       	mov	r15, r24
 174:	e9 2e       	mov	r14, r25
        {
            maxZahl = testArray[i],
 176:	89 01       	movw	r16, r18
            maxIndex = i;
           
        }
        if (testArray[i] < minZahl)
 178:	24 17       	cp	r18, r20
 17a:	35 07       	cpc	r19, r21
 17c:	18 f4       	brcc	.+6      	; 0x184 <main+0x60>
 17e:	68 2f       	mov	r22, r24
 180:	79 2f       	mov	r23, r25
        {
            minZahl = testArray[i],
 182:	a9 01       	movw	r20, r18
    
    //Initialisieren
    initBoard(1);
    
    
    for (uint16_t i=0; i<SIZE;i=i+1)
 184:	01 96       	adiw	r24, 0x01	; 1
 186:	84 36       	cpi	r24, 0x64	; 100
 188:	91 05       	cpc	r25, r1
 18a:	71 f7       	brne	.-36     	; 0x168 <main+0x44>
        }
    }
    
    
          //Ausgabe------------------------------------------------------------------
          lcdWriteText(0,0,"Min %5u, Ind %5u", minZahl, minIndex);
 18c:	7f 93       	push	r23
 18e:	6f 93       	push	r22
 190:	5f 93       	push	r21
 192:	4f 93       	push	r20
 194:	80 ed       	ldi	r24, 0xD0	; 208
 196:	92 e0       	ldi	r25, 0x02	; 2
 198:	9f 93       	push	r25
 19a:	8f 93       	push	r24
 19c:	1f 92       	push	r1
 19e:	1f 92       	push	r1
 1a0:	fa d0       	rcall	.+500    	; 0x396 <lcdWriteText>
          lcdWriteText(1,0,"Max %5u, Ind %5u", maxZahl, maxIndex);
 1a2:	ef 92       	push	r14
 1a4:	ff 92       	push	r15
 1a6:	1f 93       	push	r17
 1a8:	0f 93       	push	r16
 1aa:	81 ee       	ldi	r24, 0xE1	; 225
 1ac:	92 e0       	ldi	r25, 0x02	; 2
 1ae:	9f 93       	push	r25
 1b0:	8f 93       	push	r24
 1b2:	1f 92       	push	r1
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	8f 93       	push	r24
 1b8:	ee d0       	rcall	.+476    	; 0x396 <lcdWriteText>
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	f8 94       	cli
 1be:	de bf       	out	0x3e, r29	; 62
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	cd bf       	out	0x3d, r28	; 61
 1c4:	ff cf       	rjmp	.-2      	; 0x1c4 <main+0xa0>

000001c6 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1c6:	82 b9       	out	0x02, r24	; 2
 1c8:	95 b9       	out	0x05, r25	; 5
 1ca:	08 95       	ret

000001cc <startSystemTimeMs>:
 1cc:	83 e0       	ldi	r24, 0x03	; 3
 1ce:	84 bd       	out	0x24, r24	; 36
 1d0:	8b e0       	ldi	r24, 0x0B	; 11
 1d2:	85 bd       	out	0x25, r24	; 37
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 1da:	89 ef       	ldi	r24, 0xF9	; 249
 1dc:	87 bd       	out	0x27, r24	; 39
 1de:	08 95       	ret

000001e0 <initAdc>:
 1e0:	11 ba       	out	0x11, r1	; 17
 1e2:	10 ba       	out	0x10, r1	; 16
 1e4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 1e8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 1ec:	80 e4       	ldi	r24, 0x40	; 64
 1ee:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 1f2:	8f e0       	ldi	r24, 0x0F	; 15
 1f4:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 1fe:	ea e7       	ldi	r30, 0x7A	; 122
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	87 ea       	ldi	r24, 0xA7	; 167
 204:	80 83       	st	Z, r24
 206:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 20a:	80 81       	ld	r24, Z
 20c:	80 64       	ori	r24, 0x40	; 64
 20e:	80 83       	st	Z, r24
 210:	80 81       	ld	r24, Z
 212:	84 ff       	sbrs	r24, 4
 214:	fd cf       	rjmp	.-6      	; 0x210 <initAdc+0x30>
 216:	ea e7       	ldi	r30, 0x7A	; 122
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	8f 7e       	andi	r24, 0xEF	; 239
 21e:	80 83       	st	Z, r24
 220:	08 95       	ret

00000222 <rgbWrite>:
 222:	2f ef       	ldi	r18, 0xFF	; 255
 224:	33 e0       	ldi	r19, 0x03	; 3
 226:	f9 01       	movw	r30, r18
 228:	e8 1b       	sub	r30, r24
 22a:	f9 0b       	sbc	r31, r25
 22c:	c9 01       	movw	r24, r18
 22e:	86 1b       	sub	r24, r22
 230:	97 0b       	sbc	r25, r23
 232:	24 1b       	sub	r18, r20
 234:	35 0b       	sbc	r19, r21
 236:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 23a:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 23e:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 242:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 246:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 24a:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 24e:	08 95       	ret

00000250 <initRgb>:
 250:	8e ef       	ldi	r24, 0xFE	; 254
 252:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 256:	8b e1       	ldi	r24, 0x1B	; 27
 258:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 25c:	83 e0       	ldi	r24, 0x03	; 3
 25e:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 262:	8f ef       	ldi	r24, 0xFF	; 255
 264:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	50 e0       	ldi	r21, 0x00	; 0
 26c:	60 e0       	ldi	r22, 0x00	; 0
 26e:	70 e0       	ldi	r23, 0x00	; 0
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	d6 cf       	rjmp	.-84     	; 0x222 <rgbWrite>
 276:	08 95       	ret

00000278 <lcdSid>:
 278:	88 23       	and	r24, r24
 27a:	11 f0       	breq	.+4      	; 0x280 <lcdSid+0x8>
 27c:	a0 9a       	sbi	0x14, 0	; 20
 27e:	08 95       	ret
 280:	a0 98       	cbi	0x14, 0	; 20
 282:	08 95       	ret

00000284 <lcdSclk>:
 284:	88 23       	and	r24, r24
 286:	11 f0       	breq	.+4      	; 0x28c <lcdSclk+0x8>
 288:	a1 9a       	sbi	0x14, 1	; 20
 28a:	08 95       	ret
 28c:	a1 98       	cbi	0x14, 1	; 20
 28e:	08 95       	ret

00000290 <lcdLight>:
 290:	81 11       	cpse	r24, r1
 292:	04 c0       	rjmp	.+8      	; 0x29c <lcdLight+0xc>
 294:	84 b5       	in	r24, 0x24	; 36
 296:	8f 7d       	andi	r24, 0xDF	; 223
 298:	84 bd       	out	0x24, r24	; 36
 29a:	08 95       	ret
 29c:	94 b5       	in	r25, 0x24	; 36
 29e:	90 62       	ori	r25, 0x20	; 32
 2a0:	94 bd       	out	0x24, r25	; 36
 2a2:	88 bd       	out	0x28, r24	; 40
 2a4:	08 95       	ret

000002a6 <writeLcdF>:
 2a6:	ef 92       	push	r14
 2a8:	ff 92       	push	r15
 2aa:	0f 93       	push	r16
 2ac:	1f 93       	push	r17
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	7c 01       	movw	r14, r24
 2b4:	eb 01       	movw	r28, r22
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	df df       	rcall	.-66     	; 0x278 <lcdSid>
 2ba:	05 e0       	ldi	r16, 0x05	; 5
 2bc:	10 e0       	ldi	r17, 0x00	; 0
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	e1 df       	rcall	.-62     	; 0x284 <lcdSclk>
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	df df       	rcall	.-66     	; 0x284 <lcdSclk>
 2c6:	01 50       	subi	r16, 0x01	; 1
 2c8:	11 09       	sbc	r17, r1
 2ca:	c9 f7       	brne	.-14     	; 0x2be <writeLcdF+0x18>
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	d4 df       	rcall	.-88     	; 0x278 <lcdSid>
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	d8 df       	rcall	.-80     	; 0x284 <lcdSclk>
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	d6 df       	rcall	.-84     	; 0x284 <lcdSclk>
 2d8:	83 e4       	ldi	r24, 0x43	; 67
 2da:	e8 16       	cp	r14, r24
 2dc:	f1 04       	cpc	r15, r1
 2de:	19 f4       	brne	.+6      	; 0x2e6 <writeLcdF+0x40>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	ca df       	rcall	.-108    	; 0x278 <lcdSid>
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <writeLcdF+0x44>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	c7 df       	rcall	.-114    	; 0x278 <lcdSid>
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	cb df       	rcall	.-106    	; 0x284 <lcdSclk>
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	c9 df       	rcall	.-110    	; 0x284 <lcdSclk>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	c1 df       	rcall	.-126    	; 0x278 <lcdSid>
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	c5 df       	rcall	.-118    	; 0x284 <lcdSclk>
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	c3 df       	rcall	.-122    	; 0x284 <lcdSclk>
 2fe:	04 e0       	ldi	r16, 0x04	; 4
 300:	10 e0       	ldi	r17, 0x00	; 0
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	bf df       	rcall	.-130    	; 0x284 <lcdSclk>
 306:	c0 ff       	sbrs	r28, 0
 308:	03 c0       	rjmp	.+6      	; 0x310 <writeLcdF+0x6a>
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	b5 df       	rcall	.-150    	; 0x278 <lcdSid>
 30e:	02 c0       	rjmp	.+4      	; 0x314 <writeLcdF+0x6e>
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	b2 df       	rcall	.-156    	; 0x278 <lcdSid>
 314:	d6 95       	lsr	r29
 316:	c7 95       	ror	r28
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	b4 df       	rcall	.-152    	; 0x284 <lcdSclk>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	b2 df       	rcall	.-156    	; 0x284 <lcdSclk>
 320:	01 50       	subi	r16, 0x01	; 1
 322:	11 09       	sbc	r17, r1
 324:	71 f7       	brne	.-36     	; 0x302 <writeLcdF+0x5c>
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	a7 df       	rcall	.-178    	; 0x278 <lcdSid>
 32a:	04 e0       	ldi	r16, 0x04	; 4
 32c:	10 e0       	ldi	r17, 0x00	; 0
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	a9 df       	rcall	.-174    	; 0x284 <lcdSclk>
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	a7 df       	rcall	.-178    	; 0x284 <lcdSclk>
 336:	01 50       	subi	r16, 0x01	; 1
 338:	11 09       	sbc	r17, r1
 33a:	c9 f7       	brne	.-14     	; 0x32e <writeLcdF+0x88>
 33c:	04 e0       	ldi	r16, 0x04	; 4
 33e:	10 e0       	ldi	r17, 0x00	; 0
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	a0 df       	rcall	.-192    	; 0x284 <lcdSclk>
 344:	c0 ff       	sbrs	r28, 0
 346:	03 c0       	rjmp	.+6      	; 0x34e <writeLcdF+0xa8>
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	96 df       	rcall	.-212    	; 0x278 <lcdSid>
 34c:	02 c0       	rjmp	.+4      	; 0x352 <writeLcdF+0xac>
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	93 df       	rcall	.-218    	; 0x278 <lcdSid>
 352:	d6 95       	lsr	r29
 354:	c7 95       	ror	r28
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	95 df       	rcall	.-214    	; 0x284 <lcdSclk>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	93 df       	rcall	.-218    	; 0x284 <lcdSclk>
 35e:	01 50       	subi	r16, 0x01	; 1
 360:	11 09       	sbc	r17, r1
 362:	71 f7       	brne	.-36     	; 0x340 <writeLcdF+0x9a>
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	88 df       	rcall	.-240    	; 0x278 <lcdSid>
 368:	c4 e0       	ldi	r28, 0x04	; 4
 36a:	d0 e0       	ldi	r29, 0x00	; 0
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	8a df       	rcall	.-236    	; 0x284 <lcdSclk>
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	88 df       	rcall	.-240    	; 0x284 <lcdSclk>
 374:	21 97       	sbiw	r28, 0x01	; 1
 376:	d1 f7       	brne	.-12     	; 0x36c <writeLcdF+0xc6>
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	7e df       	rcall	.-260    	; 0x278 <lcdSid>
 37c:	87 ec       	ldi	r24, 0xC7	; 199
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	01 97       	sbiw	r24, 0x01	; 1
 382:	f1 f7       	brne	.-4      	; 0x380 <writeLcdF+0xda>
 384:	00 c0       	rjmp	.+0      	; 0x386 <writeLcdF+0xe0>
 386:	00 00       	nop
 388:	df 91       	pop	r29
 38a:	cf 91       	pop	r28
 38c:	1f 91       	pop	r17
 38e:	0f 91       	pop	r16
 390:	ff 90       	pop	r15
 392:	ef 90       	pop	r14
 394:	08 95       	ret

00000396 <lcdWriteText>:
 396:	1f 93       	push	r17
 398:	cf 93       	push	r28
 39a:	df 93       	push	r29
 39c:	cd b7       	in	r28, 0x3d	; 61
 39e:	de b7       	in	r29, 0x3e	; 62
 3a0:	65 97       	sbiw	r28, 0x15	; 21
 3a2:	0f b6       	in	r0, 0x3f	; 63
 3a4:	f8 94       	cli
 3a6:	de bf       	out	0x3e, r29	; 62
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	cd bf       	out	0x3d, r28	; 61
 3ac:	9e 01       	movw	r18, r28
 3ae:	20 5e       	subi	r18, 0xE0	; 224
 3b0:	3f 4f       	sbci	r19, 0xFF	; 255
 3b2:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3b4:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3b6:	65 e1       	ldi	r22, 0x15	; 21
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	ce 01       	movw	r24, r28
 3bc:	01 96       	adiw	r24, 0x01	; 1
 3be:	3a d2       	rcall	.+1140   	; 0x834 <vsnprintf>
 3c0:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3c2:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3c4:	90 e2       	ldi	r25, 0x20	; 32
 3c6:	89 9f       	mul	r24, r25
 3c8:	60 0d       	add	r22, r0
 3ca:	11 24       	eor	r1, r1
 3cc:	60 68       	ori	r22, 0x80	; 128
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	83 e4       	ldi	r24, 0x43	; 67
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	68 df       	rcall	.-304    	; 0x2a6 <writeLcdF>
 3d6:	69 81       	ldd	r22, Y+1	; 0x01
 3d8:	66 23       	and	r22, r22
 3da:	79 f0       	breq	.+30     	; 0x3fa <lcdWriteText+0x64>
 3dc:	10 e0       	ldi	r17, 0x00	; 0
 3de:	1f 5f       	subi	r17, 0xFF	; 255
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	84 e4       	ldi	r24, 0x44	; 68
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	5f df       	rcall	.-322    	; 0x2a6 <writeLcdF>
 3e8:	e1 e0       	ldi	r30, 0x01	; 1
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	ec 0f       	add	r30, r28
 3ee:	fd 1f       	adc	r31, r29
 3f0:	e1 0f       	add	r30, r17
 3f2:	f1 1d       	adc	r31, r1
 3f4:	60 81       	ld	r22, Z
 3f6:	61 11       	cpse	r22, r1
 3f8:	f2 cf       	rjmp	.-28     	; 0x3de <lcdWriteText+0x48>
 3fa:	65 96       	adiw	r28, 0x15	; 21
 3fc:	0f b6       	in	r0, 0x3f	; 63
 3fe:	f8 94       	cli
 400:	de bf       	out	0x3e, r29	; 62
 402:	0f be       	out	0x3f, r0	; 63
 404:	cd bf       	out	0x3d, r28	; 61
 406:	df 91       	pop	r29
 408:	cf 91       	pop	r28
 40a:	1f 91       	pop	r17
 40c:	08 95       	ret

0000040e <lcdClear>:
 40e:	61 e0       	ldi	r22, 0x01	; 1
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	83 e4       	ldi	r24, 0x43	; 67
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	47 df       	rcall	.-370    	; 0x2a6 <writeLcdF>
 418:	8f e3       	ldi	r24, 0x3F	; 63
 41a:	9f e1       	ldi	r25, 0x1F	; 31
 41c:	01 97       	sbiw	r24, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <lcdClear+0xe>
 420:	00 c0       	rjmp	.+0      	; 0x422 <lcdClear+0x14>
 422:	00 00       	nop
 424:	8a e1       	ldi	r24, 0x1A	; 26
 426:	93 e0       	ldi	r25, 0x03	; 3
 428:	9f 93       	push	r25
 42a:	8f 93       	push	r24
 42c:	1f 92       	push	r1
 42e:	1f 92       	push	r1
 430:	b2 df       	rcall	.-156    	; 0x396 <lcdWriteText>
 432:	0f 90       	pop	r0
 434:	0f 90       	pop	r0
 436:	0f 90       	pop	r0
 438:	0f 90       	pop	r0
 43a:	08 95       	ret

0000043c <initLcd>:
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	22 df       	rcall	.-444    	; 0x284 <lcdSclk>
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	1a df       	rcall	.-460    	; 0x278 <lcdSid>
 444:	64 e3       	ldi	r22, 0x34	; 52
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	83 e4       	ldi	r24, 0x43	; 67
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	2c df       	rcall	.-424    	; 0x2a6 <writeLcdF>
 44e:	69 e0       	ldi	r22, 0x09	; 9
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	83 e4       	ldi	r24, 0x43	; 67
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	27 df       	rcall	.-434    	; 0x2a6 <writeLcdF>
 458:	60 e3       	ldi	r22, 0x30	; 48
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	83 e4       	ldi	r24, 0x43	; 67
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	22 df       	rcall	.-444    	; 0x2a6 <writeLcdF>
 462:	6c e0       	ldi	r22, 0x0C	; 12
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	83 e4       	ldi	r24, 0x43	; 67
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	1d df       	rcall	.-454    	; 0x2a6 <writeLcdF>
 46c:	d0 df       	rcall	.-96     	; 0x40e <lcdClear>
 46e:	67 e0       	ldi	r22, 0x07	; 7
 470:	70 e0       	ldi	r23, 0x00	; 0
 472:	83 e4       	ldi	r24, 0x43	; 67
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	17 df       	rcall	.-466    	; 0x2a6 <writeLcdF>
 478:	80 e0       	ldi	r24, 0x00	; 0
 47a:	0a cf       	rjmp	.-492    	; 0x290 <lcdLight>
 47c:	08 95       	ret

0000047e <initBoard>:
 47e:	4f 92       	push	r4
 480:	5f 92       	push	r5
 482:	6f 92       	push	r6
 484:	7f 92       	push	r7
 486:	8f 92       	push	r8
 488:	9f 92       	push	r9
 48a:	af 92       	push	r10
 48c:	bf 92       	push	r11
 48e:	cf 92       	push	r12
 490:	df 92       	push	r13
 492:	ef 92       	push	r14
 494:	ff 92       	push	r15
 496:	0f 93       	push	r16
 498:	1f 93       	push	r17
 49a:	cf 93       	push	r28
 49c:	df 93       	push	r29
 49e:	c8 2f       	mov	r28, r24
 4a0:	85 b7       	in	r24, 0x35	; 53
 4a2:	85 bf       	out	0x35, r24	; 53
 4a4:	12 b8       	out	0x02, r1	; 2
 4a6:	8f ef       	ldi	r24, 0xFF	; 255
 4a8:	81 b9       	out	0x01, r24	; 1
 4aa:	15 b8       	out	0x05, r1	; 5
 4ac:	84 b9       	out	0x04, r24	; 4
 4ae:	88 b9       	out	0x08, r24	; 8
 4b0:	17 b8       	out	0x07, r1	; 7
 4b2:	8b b9       	out	0x0b, r24	; 11
 4b4:	1a b8       	out	0x0a, r1	; 10
 4b6:	8e b9       	out	0x0e, r24	; 14
 4b8:	1d b8       	out	0x0d, r1	; 13
 4ba:	72 98       	cbi	0x0e, 2	; 14
 4bc:	11 ba       	out	0x11, r1	; 17
 4be:	10 ba       	out	0x10, r1	; 16
 4c0:	94 e0       	ldi	r25, 0x04	; 4
 4c2:	94 bb       	out	0x14, r25	; 20
 4c4:	93 b3       	in	r25, 0x13	; 19
 4c6:	93 60       	ori	r25, 0x03	; 3
 4c8:	93 bb       	out	0x13, r25	; 19
 4ca:	9d 9a       	sbi	0x13, 5	; 19
 4cc:	97 ec       	ldi	r25, 0xC7	; 199
 4ce:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 4d2:	98 e3       	ldi	r25, 0x38	; 56
 4d4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 4d8:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 4dc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 4e0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 4e4:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 4e8:	8c e3       	ldi	r24, 0x3C	; 60
 4ea:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 4ee:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 4f2:	78 94       	sei
 4f4:	6b de       	rcall	.-810    	; 0x1cc <startSystemTimeMs>
 4f6:	a2 df       	rcall	.-188    	; 0x43c <initLcd>
 4f8:	73 de       	rcall	.-794    	; 0x1e0 <initAdc>
 4fa:	aa de       	rcall	.-684    	; 0x250 <initRgb>
 4fc:	cc 23       	and	r28, r28
 4fe:	09 f4       	brne	.+2      	; 0x502 <initBoard+0x84>
 500:	b8 c0       	rjmp	.+368    	; 0x672 <initBoard+0x1f4>
 502:	8f ef       	ldi	r24, 0xFF	; 255
 504:	c5 de       	rcall	.-630    	; 0x290 <lcdLight>
 506:	40 e0       	ldi	r20, 0x00	; 0
 508:	50 e0       	ldi	r21, 0x00	; 0
 50a:	6f ef       	ldi	r22, 0xFF	; 255
 50c:	73 e0       	ldi	r23, 0x03	; 3
 50e:	80 e0       	ldi	r24, 0x00	; 0
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	87 de       	rcall	.-754    	; 0x222 <rgbWrite>
 514:	87 e0       	ldi	r24, 0x07	; 7
 516:	93 e0       	ldi	r25, 0x03	; 3
 518:	9f 93       	push	r25
 51a:	8f 93       	push	r24
 51c:	1f 92       	push	r1
 51e:	1f 92       	push	r1
 520:	3a df       	rcall	.-396    	; 0x396 <lcdWriteText>
 522:	8c e1       	ldi	r24, 0x1C	; 28
 524:	93 e0       	ldi	r25, 0x03	; 3
 526:	9f 93       	push	r25
 528:	8f 93       	push	r24
 52a:	1f 92       	push	r1
 52c:	81 e0       	ldi	r24, 0x01	; 1
 52e:	8f 93       	push	r24
 530:	32 df       	rcall	.-412    	; 0x396 <lcdWriteText>
 532:	82 ef       	ldi	r24, 0xF2	; 242
 534:	92 e0       	ldi	r25, 0x02	; 2
 536:	9f 93       	push	r25
 538:	8f 93       	push	r24
 53a:	1f 92       	push	r1
 53c:	82 e0       	ldi	r24, 0x02	; 2
 53e:	8f 93       	push	r24
 540:	2a df       	rcall	.-428    	; 0x396 <lcdWriteText>
 542:	81 e3       	ldi	r24, 0x31	; 49
 544:	93 e0       	ldi	r25, 0x03	; 3
 546:	9f 93       	push	r25
 548:	8f 93       	push	r24
 54a:	1f 92       	push	r1
 54c:	83 e0       	ldi	r24, 0x03	; 3
 54e:	8f 93       	push	r24
 550:	22 df       	rcall	.-444    	; 0x396 <lcdWriteText>
 552:	8d b7       	in	r24, 0x3d	; 61
 554:	9e b7       	in	r25, 0x3e	; 62
 556:	40 96       	adiw	r24, 0x10	; 16
 558:	0f b6       	in	r0, 0x3f	; 63
 55a:	f8 94       	cli
 55c:	9e bf       	out	0x3e, r25	; 62
 55e:	0f be       	out	0x3f, r0	; 63
 560:	8d bf       	out	0x3d, r24	; 61
 562:	88 24       	eor	r8, r8
 564:	83 94       	inc	r8
 566:	c0 e0       	ldi	r28, 0x00	; 0
 568:	71 2c       	mov	r7, r1
 56a:	99 24       	eor	r9, r9
 56c:	93 94       	inc	r9
 56e:	d0 e0       	ldi	r29, 0x00	; 0
 570:	cc 24       	eor	r12, r12
 572:	c3 94       	inc	r12
 574:	d1 2c       	mov	r13, r1
 576:	e1 2c       	mov	r14, r1
 578:	68 94       	set
 57a:	ff 24       	eor	r15, r15
 57c:	f7 f8       	bld	r15, 7
 57e:	66 24       	eor	r6, r6
 580:	63 94       	inc	r6
 582:	51 2c       	mov	r5, r1
 584:	09 e0       	ldi	r16, 0x09	; 9
 586:	11 e0       	ldi	r17, 0x01	; 1
 588:	0f 2e       	mov	r0, r31
 58a:	f6 e4       	ldi	r31, 0x46	; 70
 58c:	af 2e       	mov	r10, r31
 58e:	f3 e0       	ldi	r31, 0x03	; 3
 590:	bf 2e       	mov	r11, r31
 592:	f0 2d       	mov	r31, r0
 594:	0f 2e       	mov	r0, r31
 596:	f3 e0       	ldi	r31, 0x03	; 3
 598:	4f 2e       	mov	r4, r31
 59a:	f0 2d       	mov	r31, r0
 59c:	99 20       	and	r9, r9
 59e:	49 f0       	breq	.+18     	; 0x5b2 <initBoard+0x134>
 5a0:	c7 01       	movw	r24, r14
 5a2:	0d 2e       	mov	r0, r29
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <initBoard+0x12c>
 5a6:	96 95       	lsr	r25
 5a8:	87 95       	ror	r24
 5aa:	0a 94       	dec	r0
 5ac:	e2 f7       	brpl	.-8      	; 0x5a6 <initBoard+0x128>
 5ae:	0b de       	rcall	.-1002   	; 0x1c6 <ledWriteAll>
 5b0:	08 c0       	rjmp	.+16     	; 0x5c2 <initBoard+0x144>
 5b2:	c6 01       	movw	r24, r12
 5b4:	0d 2e       	mov	r0, r29
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <initBoard+0x13e>
 5b8:	88 0f       	add	r24, r24
 5ba:	99 1f       	adc	r25, r25
 5bc:	0a 94       	dec	r0
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <initBoard+0x13a>
 5c0:	02 de       	rcall	.-1020   	; 0x1c6 <ledWriteAll>
 5c2:	df 5f       	subi	r29, 0xFF	; 255
 5c4:	d1 31       	cpi	r29, 0x11	; 17
 5c6:	28 f0       	brcs	.+10     	; 0x5d2 <initBoard+0x154>
 5c8:	86 2d       	mov	r24, r6
 5ca:	91 10       	cpse	r9, r1
 5cc:	85 2d       	mov	r24, r5
 5ce:	98 2e       	mov	r9, r24
 5d0:	d0 e0       	ldi	r29, 0x00	; 0
 5d2:	88 20       	and	r8, r8
 5d4:	11 f0       	breq	.+4      	; 0x5da <initBoard+0x15c>
 5d6:	ce 5f       	subi	r28, 0xFE	; 254
 5d8:	01 c0       	rjmp	.+2      	; 0x5dc <initBoard+0x15e>
 5da:	c2 50       	subi	r28, 0x02	; 2
 5dc:	8c 2f       	mov	r24, r28
 5de:	58 de       	rcall	.-848    	; 0x290 <lcdLight>
 5e0:	ce 3f       	cpi	r28, 0xFE	; 254
 5e2:	21 f0       	breq	.+8      	; 0x5ec <initBoard+0x16e>
 5e4:	c8 37       	cpi	r28, 0x78	; 120
 5e6:	19 f4       	brne	.+6      	; 0x5ee <initBoard+0x170>
 5e8:	86 2c       	mov	r8, r6
 5ea:	01 c0       	rjmp	.+2      	; 0x5ee <initBoard+0x170>
 5ec:	85 2c       	mov	r8, r5
 5ee:	71 10       	cpse	r7, r1
 5f0:	3b c0       	rjmp	.+118    	; 0x668 <initBoard+0x1ea>
 5f2:	f8 01       	movw	r30, r16
 5f4:	80 81       	ld	r24, Z
 5f6:	83 7c       	andi	r24, 0xC3	; 195
 5f8:	91 f0       	breq	.+36     	; 0x61e <initBoard+0x1a0>
 5fa:	40 e0       	ldi	r20, 0x00	; 0
 5fc:	50 e0       	ldi	r21, 0x00	; 0
 5fe:	66 e2       	ldi	r22, 0x26	; 38
 600:	72 e0       	ldi	r23, 0x02	; 2
 602:	8f ef       	ldi	r24, 0xFF	; 255
 604:	93 e0       	ldi	r25, 0x03	; 3
 606:	0d de       	rcall	.-998    	; 0x222 <rgbWrite>
 608:	bf 92       	push	r11
 60a:	af 92       	push	r10
 60c:	1f 92       	push	r1
 60e:	4f 92       	push	r4
 610:	c2 de       	rcall	.-636    	; 0x396 <lcdWriteText>
 612:	0f 90       	pop	r0
 614:	0f 90       	pop	r0
 616:	0f 90       	pop	r0
 618:	0f 90       	pop	r0
 61a:	76 2c       	mov	r7, r6
 61c:	25 c0       	rjmp	.+74     	; 0x668 <initBoard+0x1ea>
 61e:	8f ef       	ldi	r24, 0xFF	; 255
 620:	9c e7       	ldi	r25, 0x7C	; 124
 622:	01 97       	sbiw	r24, 0x01	; 1
 624:	f1 f7       	brne	.-4      	; 0x622 <initBoard+0x1a4>
 626:	00 c0       	rjmp	.+0      	; 0x628 <initBoard+0x1aa>
 628:	00 00       	nop
 62a:	b8 cf       	rjmp	.-144    	; 0x59c <initBoard+0x11e>
 62c:	f0 de       	rcall	.-544    	; 0x40e <lcdClear>
 62e:	80 e0       	ldi	r24, 0x00	; 0
 630:	2f de       	rcall	.-930    	; 0x290 <lcdLight>
 632:	80 e0       	ldi	r24, 0x00	; 0
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	c7 dd       	rcall	.-1138   	; 0x1c6 <ledWriteAll>
 638:	40 e0       	ldi	r20, 0x00	; 0
 63a:	50 e0       	ldi	r21, 0x00	; 0
 63c:	60 e0       	ldi	r22, 0x00	; 0
 63e:	70 e0       	ldi	r23, 0x00	; 0
 640:	80 e0       	ldi	r24, 0x00	; 0
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	ee dd       	rcall	.-1060   	; 0x222 <rgbWrite>
 646:	10 92 63 03 	sts	0x0363, r1	; 0x800363 <systemTimeMs>
 64a:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <systemTimeMs+0x1>
 64e:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <systemTimeMs+0x2>
 652:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <systemTimeMs+0x3>
 656:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <systemTimeMs+0x4>
 65a:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <systemTimeMs+0x5>
 65e:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <systemTimeMs+0x6>
 662:	10 92 6a 03 	sts	0x036A, r1	; 0x80036a <systemTimeMs+0x7>
 666:	05 c0       	rjmp	.+10     	; 0x672 <initBoard+0x1f4>
 668:	f8 01       	movw	r30, r16
 66a:	80 81       	ld	r24, Z
 66c:	83 7c       	andi	r24, 0xC3	; 195
 66e:	b9 f6       	brne	.-82     	; 0x61e <initBoard+0x1a0>
 670:	dd cf       	rjmp	.-70     	; 0x62c <initBoard+0x1ae>
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	1f 91       	pop	r17
 678:	0f 91       	pop	r16
 67a:	ff 90       	pop	r15
 67c:	ef 90       	pop	r14
 67e:	df 90       	pop	r13
 680:	cf 90       	pop	r12
 682:	bf 90       	pop	r11
 684:	af 90       	pop	r10
 686:	9f 90       	pop	r9
 688:	8f 90       	pop	r8
 68a:	7f 90       	pop	r7
 68c:	6f 90       	pop	r6
 68e:	5f 90       	pop	r5
 690:	4f 90       	pop	r4
 692:	08 95       	ret

00000694 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 694:	cf 93       	push	r28
 696:	df 93       	push	r29
 698:	cd b7       	in	r28, 0x3d	; 61
 69a:	de b7       	in	r29, 0x3e	; 62
 69c:	28 97       	sbiw	r28, 0x08	; 8
 69e:	0f b6       	in	r0, 0x3f	; 63
 6a0:	f8 94       	cli
 6a2:	de bf       	out	0x3e, r29	; 62
 6a4:	0f be       	out	0x3f, r0	; 63
 6a6:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 6a8:	88 e0       	ldi	r24, 0x08	; 8
 6aa:	e8 ec       	ldi	r30, 0xC8	; 200
 6ac:	f2 e0       	ldi	r31, 0x02	; 2
 6ae:	de 01       	movw	r26, r28
 6b0:	11 96       	adiw	r26, 0x01	; 1
 6b2:	01 90       	ld	r0, Z+
 6b4:	0d 92       	st	X+, r0
 6b6:	8a 95       	dec	r24
 6b8:	e1 f7       	brne	.-8      	; 0x6b2 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6ba:	e5 e0       	ldi	r30, 0x05	; 5
 6bc:	f1 e0       	ldi	r31, 0x01	; 1
 6be:	80 81       	ld	r24, Z
 6c0:	8f 7b       	andi	r24, 0xBF	; 191
 6c2:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6c4:	e0 91 60 03 	lds	r30, 0x0360	; 0x800360 <Zeilen_Nr.2731>
 6c8:	f0 91 61 03 	lds	r31, 0x0361	; 0x800361 <Zeilen_Nr.2731+0x1>
 6cc:	81 e0       	ldi	r24, 0x01	; 1
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	8c 0f       	add	r24, r28
 6d2:	9d 1f       	adc	r25, r29
 6d4:	e8 0f       	add	r30, r24
 6d6:	f9 1f       	adc	r31, r25
 6d8:	80 81       	ld	r24, Z
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	90 93 5f 03 	sts	0x035F, r25	; 0x80035f <__data_end+0x1>
 6e0:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <__data_end>
 6e4:	ac ed       	ldi	r26, 0xDC	; 220
 6e6:	b3 e0       	ldi	r27, 0x03	; 3
 6e8:	2c e6       	ldi	r18, 0x6C	; 108
 6ea:	33 e0       	ldi	r19, 0x03	; 3
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 6ec:	e5 e0       	ldi	r30, 0x05	; 5
 6ee:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 6f0:	5e 91       	ld	r21, -X
 6f2:	4e 91       	ld	r20, -X
 6f4:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <__data_end>
 6f8:	90 91 5f 03 	lds	r25, 0x035F	; 0x80035f <__data_end+0x1>
 6fc:	84 23       	and	r24, r20
 6fe:	95 23       	and	r25, r21
 700:	89 2b       	or	r24, r25
 702:	21 f0       	breq	.+8      	; 0x70c <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 704:	80 81       	ld	r24, Z
 706:	80 62       	ori	r24, 0x20	; 32
 708:	80 83       	st	Z, r24
 70a:	03 c0       	rjmp	.+6      	; 0x712 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 70c:	80 81       	ld	r24, Z
 70e:	8f 7d       	andi	r24, 0xDF	; 223
 710:	80 83       	st	Z, r24
        }
        CLOCK_1;
 712:	80 81       	ld	r24, Z
 714:	80 61       	ori	r24, 0x10	; 16
 716:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 718:	80 81       	ld	r24, Z
 71a:	8f 7e       	andi	r24, 0xEF	; 239
 71c:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 71e:	a2 17       	cp	r26, r18
 720:	b3 07       	cpc	r27, r19
 722:	31 f7       	brne	.-52     	; 0x6f0 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 724:	e5 e0       	ldi	r30, 0x05	; 5
 726:	f1 e0       	ldi	r31, 0x01	; 1
 728:	80 81       	ld	r24, Z
 72a:	87 7f       	andi	r24, 0xF7	; 247
 72c:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 72e:	80 81       	ld	r24, Z
 730:	88 7f       	andi	r24, 0xF8	; 248
 732:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 734:	90 81       	ld	r25, Z
 736:	80 91 60 03 	lds	r24, 0x0360	; 0x800360 <Zeilen_Nr.2731>
 73a:	89 2b       	or	r24, r25
 73c:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 73e:	80 81       	ld	r24, Z
 740:	80 64       	ori	r24, 0x40	; 64
 742:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 744:	80 81       	ld	r24, Z
 746:	88 60       	ori	r24, 0x08	; 8
 748:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 74a:	80 91 60 03 	lds	r24, 0x0360	; 0x800360 <Zeilen_Nr.2731>
 74e:	90 91 61 03 	lds	r25, 0x0361	; 0x800361 <Zeilen_Nr.2731+0x1>
 752:	87 30       	cpi	r24, 0x07	; 7
 754:	91 05       	cpc	r25, r1
 756:	30 f4       	brcc	.+12     	; 0x764 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 758:	01 96       	adiw	r24, 0x01	; 1
 75a:	90 93 61 03 	sts	0x0361, r25	; 0x800361 <Zeilen_Nr.2731+0x1>
 75e:	80 93 60 03 	sts	0x0360, r24	; 0x800360 <Zeilen_Nr.2731>
 762:	07 c0       	rjmp	.+14     	; 0x772 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 764:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <Zeilen_Nr.2731+0x1>
 768:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <Zeilen_Nr.2731>
        writeTextFinished = 1;
 76c:	81 e0       	ldi	r24, 0x01	; 1
 76e:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <writeTextFinished>
    }
    
 772:	28 96       	adiw	r28, 0x08	; 8
 774:	0f b6       	in	r0, 0x3f	; 63
 776:	f8 94       	cli
 778:	de bf       	out	0x3e, r29	; 62
 77a:	0f be       	out	0x3f, r0	; 63
 77c:	cd bf       	out	0x3d, r28	; 61
 77e:	df 91       	pop	r29
 780:	cf 91       	pop	r28
 782:	08 95       	ret

00000784 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 784:	1f 92       	push	r1
 786:	0f 92       	push	r0
 788:	0f b6       	in	r0, 0x3f	; 63
 78a:	0f 92       	push	r0
 78c:	11 24       	eor	r1, r1
 78e:	0b b6       	in	r0, 0x3b	; 59
 790:	0f 92       	push	r0
 792:	2f 93       	push	r18
 794:	3f 93       	push	r19
 796:	4f 93       	push	r20
 798:	5f 93       	push	r21
 79a:	6f 93       	push	r22
 79c:	7f 93       	push	r23
 79e:	8f 93       	push	r24
 7a0:	9f 93       	push	r25
 7a2:	af 93       	push	r26
 7a4:	bf 93       	push	r27
 7a6:	ef 93       	push	r30
 7a8:	ff 93       	push	r31
    systemTimeMs += 1;
 7aa:	20 91 63 03 	lds	r18, 0x0363	; 0x800363 <systemTimeMs>
 7ae:	30 91 64 03 	lds	r19, 0x0364	; 0x800364 <systemTimeMs+0x1>
 7b2:	40 91 65 03 	lds	r20, 0x0365	; 0x800365 <systemTimeMs+0x2>
 7b6:	50 91 66 03 	lds	r21, 0x0366	; 0x800366 <systemTimeMs+0x3>
 7ba:	60 91 67 03 	lds	r22, 0x0367	; 0x800367 <systemTimeMs+0x4>
 7be:	70 91 68 03 	lds	r23, 0x0368	; 0x800368 <systemTimeMs+0x5>
 7c2:	80 91 69 03 	lds	r24, 0x0369	; 0x800369 <systemTimeMs+0x6>
 7c6:	90 91 6a 03 	lds	r25, 0x036A	; 0x80036a <systemTimeMs+0x7>
 7ca:	a1 e0       	ldi	r26, 0x01	; 1
 7cc:	27 d0       	rcall	.+78     	; 0x81c <__adddi3_s8>
 7ce:	20 93 63 03 	sts	0x0363, r18	; 0x800363 <systemTimeMs>
 7d2:	30 93 64 03 	sts	0x0364, r19	; 0x800364 <systemTimeMs+0x1>
 7d6:	40 93 65 03 	sts	0x0365, r20	; 0x800365 <systemTimeMs+0x2>
 7da:	50 93 66 03 	sts	0x0366, r21	; 0x800366 <systemTimeMs+0x3>
 7de:	60 93 67 03 	sts	0x0367, r22	; 0x800367 <systemTimeMs+0x4>
 7e2:	70 93 68 03 	sts	0x0368, r23	; 0x800368 <systemTimeMs+0x5>
 7e6:	80 93 69 03 	sts	0x0369, r24	; 0x800369 <systemTimeMs+0x6>
 7ea:	90 93 6a 03 	sts	0x036A, r25	; 0x80036a <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 7ee:	80 91 6b 03 	lds	r24, 0x036B	; 0x80036b <matrixRunning>
 7f2:	81 11       	cpse	r24, r1
 7f4:	4f df       	rcall	.-354    	; 0x694 <matrixWriteNextLine>
}
 7f6:	ff 91       	pop	r31
 7f8:	ef 91       	pop	r30
 7fa:	bf 91       	pop	r27
 7fc:	af 91       	pop	r26
 7fe:	9f 91       	pop	r25
 800:	8f 91       	pop	r24
 802:	7f 91       	pop	r23
 804:	6f 91       	pop	r22
 806:	5f 91       	pop	r21
 808:	4f 91       	pop	r20
 80a:	3f 91       	pop	r19
 80c:	2f 91       	pop	r18
 80e:	0f 90       	pop	r0
 810:	0b be       	out	0x3b, r0	; 59
 812:	0f 90       	pop	r0
 814:	0f be       	out	0x3f, r0	; 63
 816:	0f 90       	pop	r0
 818:	1f 90       	pop	r1
 81a:	18 95       	reti

0000081c <__adddi3_s8>:
 81c:	00 24       	eor	r0, r0
 81e:	a7 fd       	sbrc	r26, 7
 820:	00 94       	com	r0
 822:	2a 0f       	add	r18, r26
 824:	30 1d       	adc	r19, r0
 826:	40 1d       	adc	r20, r0
 828:	50 1d       	adc	r21, r0
 82a:	60 1d       	adc	r22, r0
 82c:	70 1d       	adc	r23, r0
 82e:	80 1d       	adc	r24, r0
 830:	90 1d       	adc	r25, r0
 832:	08 95       	ret

00000834 <vsnprintf>:
 834:	0f 93       	push	r16
 836:	1f 93       	push	r17
 838:	cf 93       	push	r28
 83a:	df 93       	push	r29
 83c:	cd b7       	in	r28, 0x3d	; 61
 83e:	de b7       	in	r29, 0x3e	; 62
 840:	2e 97       	sbiw	r28, 0x0e	; 14
 842:	0f b6       	in	r0, 0x3f	; 63
 844:	f8 94       	cli
 846:	de bf       	out	0x3e, r29	; 62
 848:	0f be       	out	0x3f, r0	; 63
 84a:	cd bf       	out	0x3d, r28	; 61
 84c:	8c 01       	movw	r16, r24
 84e:	fa 01       	movw	r30, r20
 850:	86 e0       	ldi	r24, 0x06	; 6
 852:	8c 83       	std	Y+4, r24	; 0x04
 854:	1a 83       	std	Y+2, r17	; 0x02
 856:	09 83       	std	Y+1, r16	; 0x01
 858:	77 ff       	sbrs	r23, 7
 85a:	02 c0       	rjmp	.+4      	; 0x860 <vsnprintf+0x2c>
 85c:	60 e0       	ldi	r22, 0x00	; 0
 85e:	70 e8       	ldi	r23, 0x80	; 128
 860:	cb 01       	movw	r24, r22
 862:	01 97       	sbiw	r24, 0x01	; 1
 864:	9e 83       	std	Y+6, r25	; 0x06
 866:	8d 83       	std	Y+5, r24	; 0x05
 868:	a9 01       	movw	r20, r18
 86a:	bf 01       	movw	r22, r30
 86c:	ce 01       	movw	r24, r28
 86e:	01 96       	adiw	r24, 0x01	; 1
 870:	19 d0       	rcall	.+50     	; 0x8a4 <vfprintf>
 872:	4d 81       	ldd	r20, Y+5	; 0x05
 874:	5e 81       	ldd	r21, Y+6	; 0x06
 876:	57 fd       	sbrc	r21, 7
 878:	0a c0       	rjmp	.+20     	; 0x88e <vsnprintf+0x5a>
 87a:	2f 81       	ldd	r18, Y+7	; 0x07
 87c:	38 85       	ldd	r19, Y+8	; 0x08
 87e:	42 17       	cp	r20, r18
 880:	53 07       	cpc	r21, r19
 882:	0c f4       	brge	.+2      	; 0x886 <vsnprintf+0x52>
 884:	9a 01       	movw	r18, r20
 886:	f8 01       	movw	r30, r16
 888:	e2 0f       	add	r30, r18
 88a:	f3 1f       	adc	r31, r19
 88c:	10 82       	st	Z, r1
 88e:	2e 96       	adiw	r28, 0x0e	; 14
 890:	0f b6       	in	r0, 0x3f	; 63
 892:	f8 94       	cli
 894:	de bf       	out	0x3e, r29	; 62
 896:	0f be       	out	0x3f, r0	; 63
 898:	cd bf       	out	0x3d, r28	; 61
 89a:	df 91       	pop	r29
 89c:	cf 91       	pop	r28
 89e:	1f 91       	pop	r17
 8a0:	0f 91       	pop	r16
 8a2:	08 95       	ret

000008a4 <vfprintf>:
 8a4:	2f 92       	push	r2
 8a6:	3f 92       	push	r3
 8a8:	4f 92       	push	r4
 8aa:	5f 92       	push	r5
 8ac:	6f 92       	push	r6
 8ae:	7f 92       	push	r7
 8b0:	8f 92       	push	r8
 8b2:	9f 92       	push	r9
 8b4:	af 92       	push	r10
 8b6:	bf 92       	push	r11
 8b8:	cf 92       	push	r12
 8ba:	df 92       	push	r13
 8bc:	ef 92       	push	r14
 8be:	ff 92       	push	r15
 8c0:	0f 93       	push	r16
 8c2:	1f 93       	push	r17
 8c4:	cf 93       	push	r28
 8c6:	df 93       	push	r29
 8c8:	cd b7       	in	r28, 0x3d	; 61
 8ca:	de b7       	in	r29, 0x3e	; 62
 8cc:	2b 97       	sbiw	r28, 0x0b	; 11
 8ce:	0f b6       	in	r0, 0x3f	; 63
 8d0:	f8 94       	cli
 8d2:	de bf       	out	0x3e, r29	; 62
 8d4:	0f be       	out	0x3f, r0	; 63
 8d6:	cd bf       	out	0x3d, r28	; 61
 8d8:	6c 01       	movw	r12, r24
 8da:	7b 01       	movw	r14, r22
 8dc:	8a 01       	movw	r16, r20
 8de:	fc 01       	movw	r30, r24
 8e0:	17 82       	std	Z+7, r1	; 0x07
 8e2:	16 82       	std	Z+6, r1	; 0x06
 8e4:	83 81       	ldd	r24, Z+3	; 0x03
 8e6:	81 ff       	sbrs	r24, 1
 8e8:	bf c1       	rjmp	.+894    	; 0xc68 <vfprintf+0x3c4>
 8ea:	ce 01       	movw	r24, r28
 8ec:	01 96       	adiw	r24, 0x01	; 1
 8ee:	3c 01       	movw	r6, r24
 8f0:	f6 01       	movw	r30, r12
 8f2:	93 81       	ldd	r25, Z+3	; 0x03
 8f4:	f7 01       	movw	r30, r14
 8f6:	93 fd       	sbrc	r25, 3
 8f8:	85 91       	lpm	r24, Z+
 8fa:	93 ff       	sbrs	r25, 3
 8fc:	81 91       	ld	r24, Z+
 8fe:	7f 01       	movw	r14, r30
 900:	88 23       	and	r24, r24
 902:	09 f4       	brne	.+2      	; 0x906 <vfprintf+0x62>
 904:	ad c1       	rjmp	.+858    	; 0xc60 <vfprintf+0x3bc>
 906:	85 32       	cpi	r24, 0x25	; 37
 908:	39 f4       	brne	.+14     	; 0x918 <vfprintf+0x74>
 90a:	93 fd       	sbrc	r25, 3
 90c:	85 91       	lpm	r24, Z+
 90e:	93 ff       	sbrs	r25, 3
 910:	81 91       	ld	r24, Z+
 912:	7f 01       	movw	r14, r30
 914:	85 32       	cpi	r24, 0x25	; 37
 916:	21 f4       	brne	.+8      	; 0x920 <vfprintf+0x7c>
 918:	b6 01       	movw	r22, r12
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	d6 d1       	rcall	.+940    	; 0xcca <fputc>
 91e:	e8 cf       	rjmp	.-48     	; 0x8f0 <vfprintf+0x4c>
 920:	91 2c       	mov	r9, r1
 922:	21 2c       	mov	r2, r1
 924:	31 2c       	mov	r3, r1
 926:	ff e1       	ldi	r31, 0x1F	; 31
 928:	f3 15       	cp	r31, r3
 92a:	d8 f0       	brcs	.+54     	; 0x962 <vfprintf+0xbe>
 92c:	8b 32       	cpi	r24, 0x2B	; 43
 92e:	79 f0       	breq	.+30     	; 0x94e <vfprintf+0xaa>
 930:	38 f4       	brcc	.+14     	; 0x940 <vfprintf+0x9c>
 932:	80 32       	cpi	r24, 0x20	; 32
 934:	79 f0       	breq	.+30     	; 0x954 <vfprintf+0xb0>
 936:	83 32       	cpi	r24, 0x23	; 35
 938:	a1 f4       	brne	.+40     	; 0x962 <vfprintf+0xbe>
 93a:	23 2d       	mov	r18, r3
 93c:	20 61       	ori	r18, 0x10	; 16
 93e:	1d c0       	rjmp	.+58     	; 0x97a <vfprintf+0xd6>
 940:	8d 32       	cpi	r24, 0x2D	; 45
 942:	61 f0       	breq	.+24     	; 0x95c <vfprintf+0xb8>
 944:	80 33       	cpi	r24, 0x30	; 48
 946:	69 f4       	brne	.+26     	; 0x962 <vfprintf+0xbe>
 948:	23 2d       	mov	r18, r3
 94a:	21 60       	ori	r18, 0x01	; 1
 94c:	16 c0       	rjmp	.+44     	; 0x97a <vfprintf+0xd6>
 94e:	83 2d       	mov	r24, r3
 950:	82 60       	ori	r24, 0x02	; 2
 952:	38 2e       	mov	r3, r24
 954:	e3 2d       	mov	r30, r3
 956:	e4 60       	ori	r30, 0x04	; 4
 958:	3e 2e       	mov	r3, r30
 95a:	2a c0       	rjmp	.+84     	; 0x9b0 <vfprintf+0x10c>
 95c:	f3 2d       	mov	r31, r3
 95e:	f8 60       	ori	r31, 0x08	; 8
 960:	1d c0       	rjmp	.+58     	; 0x99c <vfprintf+0xf8>
 962:	37 fc       	sbrc	r3, 7
 964:	2d c0       	rjmp	.+90     	; 0x9c0 <vfprintf+0x11c>
 966:	20 ed       	ldi	r18, 0xD0	; 208
 968:	28 0f       	add	r18, r24
 96a:	2a 30       	cpi	r18, 0x0A	; 10
 96c:	40 f0       	brcs	.+16     	; 0x97e <vfprintf+0xda>
 96e:	8e 32       	cpi	r24, 0x2E	; 46
 970:	b9 f4       	brne	.+46     	; 0x9a0 <vfprintf+0xfc>
 972:	36 fc       	sbrc	r3, 6
 974:	75 c1       	rjmp	.+746    	; 0xc60 <vfprintf+0x3bc>
 976:	23 2d       	mov	r18, r3
 978:	20 64       	ori	r18, 0x40	; 64
 97a:	32 2e       	mov	r3, r18
 97c:	19 c0       	rjmp	.+50     	; 0x9b0 <vfprintf+0x10c>
 97e:	36 fe       	sbrs	r3, 6
 980:	06 c0       	rjmp	.+12     	; 0x98e <vfprintf+0xea>
 982:	8a e0       	ldi	r24, 0x0A	; 10
 984:	98 9e       	mul	r9, r24
 986:	20 0d       	add	r18, r0
 988:	11 24       	eor	r1, r1
 98a:	92 2e       	mov	r9, r18
 98c:	11 c0       	rjmp	.+34     	; 0x9b0 <vfprintf+0x10c>
 98e:	ea e0       	ldi	r30, 0x0A	; 10
 990:	2e 9e       	mul	r2, r30
 992:	20 0d       	add	r18, r0
 994:	11 24       	eor	r1, r1
 996:	22 2e       	mov	r2, r18
 998:	f3 2d       	mov	r31, r3
 99a:	f0 62       	ori	r31, 0x20	; 32
 99c:	3f 2e       	mov	r3, r31
 99e:	08 c0       	rjmp	.+16     	; 0x9b0 <vfprintf+0x10c>
 9a0:	8c 36       	cpi	r24, 0x6C	; 108
 9a2:	21 f4       	brne	.+8      	; 0x9ac <vfprintf+0x108>
 9a4:	83 2d       	mov	r24, r3
 9a6:	80 68       	ori	r24, 0x80	; 128
 9a8:	38 2e       	mov	r3, r24
 9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <vfprintf+0x10c>
 9ac:	88 36       	cpi	r24, 0x68	; 104
 9ae:	41 f4       	brne	.+16     	; 0x9c0 <vfprintf+0x11c>
 9b0:	f7 01       	movw	r30, r14
 9b2:	93 fd       	sbrc	r25, 3
 9b4:	85 91       	lpm	r24, Z+
 9b6:	93 ff       	sbrs	r25, 3
 9b8:	81 91       	ld	r24, Z+
 9ba:	7f 01       	movw	r14, r30
 9bc:	81 11       	cpse	r24, r1
 9be:	b3 cf       	rjmp	.-154    	; 0x926 <vfprintf+0x82>
 9c0:	98 2f       	mov	r25, r24
 9c2:	9f 7d       	andi	r25, 0xDF	; 223
 9c4:	95 54       	subi	r25, 0x45	; 69
 9c6:	93 30       	cpi	r25, 0x03	; 3
 9c8:	28 f4       	brcc	.+10     	; 0x9d4 <vfprintf+0x130>
 9ca:	0c 5f       	subi	r16, 0xFC	; 252
 9cc:	1f 4f       	sbci	r17, 0xFF	; 255
 9ce:	9f e3       	ldi	r25, 0x3F	; 63
 9d0:	99 83       	std	Y+1, r25	; 0x01
 9d2:	0d c0       	rjmp	.+26     	; 0x9ee <vfprintf+0x14a>
 9d4:	83 36       	cpi	r24, 0x63	; 99
 9d6:	31 f0       	breq	.+12     	; 0x9e4 <vfprintf+0x140>
 9d8:	83 37       	cpi	r24, 0x73	; 115
 9da:	71 f0       	breq	.+28     	; 0x9f8 <vfprintf+0x154>
 9dc:	83 35       	cpi	r24, 0x53	; 83
 9de:	09 f0       	breq	.+2      	; 0x9e2 <vfprintf+0x13e>
 9e0:	55 c0       	rjmp	.+170    	; 0xa8c <vfprintf+0x1e8>
 9e2:	20 c0       	rjmp	.+64     	; 0xa24 <vfprintf+0x180>
 9e4:	f8 01       	movw	r30, r16
 9e6:	80 81       	ld	r24, Z
 9e8:	89 83       	std	Y+1, r24	; 0x01
 9ea:	0e 5f       	subi	r16, 0xFE	; 254
 9ec:	1f 4f       	sbci	r17, 0xFF	; 255
 9ee:	88 24       	eor	r8, r8
 9f0:	83 94       	inc	r8
 9f2:	91 2c       	mov	r9, r1
 9f4:	53 01       	movw	r10, r6
 9f6:	12 c0       	rjmp	.+36     	; 0xa1c <vfprintf+0x178>
 9f8:	28 01       	movw	r4, r16
 9fa:	f2 e0       	ldi	r31, 0x02	; 2
 9fc:	4f 0e       	add	r4, r31
 9fe:	51 1c       	adc	r5, r1
 a00:	f8 01       	movw	r30, r16
 a02:	a0 80       	ld	r10, Z
 a04:	b1 80       	ldd	r11, Z+1	; 0x01
 a06:	36 fe       	sbrs	r3, 6
 a08:	03 c0       	rjmp	.+6      	; 0xa10 <vfprintf+0x16c>
 a0a:	69 2d       	mov	r22, r9
 a0c:	70 e0       	ldi	r23, 0x00	; 0
 a0e:	02 c0       	rjmp	.+4      	; 0xa14 <vfprintf+0x170>
 a10:	6f ef       	ldi	r22, 0xFF	; 255
 a12:	7f ef       	ldi	r23, 0xFF	; 255
 a14:	c5 01       	movw	r24, r10
 a16:	4e d1       	rcall	.+668    	; 0xcb4 <strnlen>
 a18:	4c 01       	movw	r8, r24
 a1a:	82 01       	movw	r16, r4
 a1c:	f3 2d       	mov	r31, r3
 a1e:	ff 77       	andi	r31, 0x7F	; 127
 a20:	3f 2e       	mov	r3, r31
 a22:	15 c0       	rjmp	.+42     	; 0xa4e <vfprintf+0x1aa>
 a24:	28 01       	movw	r4, r16
 a26:	22 e0       	ldi	r18, 0x02	; 2
 a28:	42 0e       	add	r4, r18
 a2a:	51 1c       	adc	r5, r1
 a2c:	f8 01       	movw	r30, r16
 a2e:	a0 80       	ld	r10, Z
 a30:	b1 80       	ldd	r11, Z+1	; 0x01
 a32:	36 fe       	sbrs	r3, 6
 a34:	03 c0       	rjmp	.+6      	; 0xa3c <vfprintf+0x198>
 a36:	69 2d       	mov	r22, r9
 a38:	70 e0       	ldi	r23, 0x00	; 0
 a3a:	02 c0       	rjmp	.+4      	; 0xa40 <vfprintf+0x19c>
 a3c:	6f ef       	ldi	r22, 0xFF	; 255
 a3e:	7f ef       	ldi	r23, 0xFF	; 255
 a40:	c5 01       	movw	r24, r10
 a42:	2d d1       	rcall	.+602    	; 0xc9e <strnlen_P>
 a44:	4c 01       	movw	r8, r24
 a46:	f3 2d       	mov	r31, r3
 a48:	f0 68       	ori	r31, 0x80	; 128
 a4a:	3f 2e       	mov	r3, r31
 a4c:	82 01       	movw	r16, r4
 a4e:	33 fc       	sbrc	r3, 3
 a50:	19 c0       	rjmp	.+50     	; 0xa84 <vfprintf+0x1e0>
 a52:	82 2d       	mov	r24, r2
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	88 16       	cp	r8, r24
 a58:	99 06       	cpc	r9, r25
 a5a:	a0 f4       	brcc	.+40     	; 0xa84 <vfprintf+0x1e0>
 a5c:	b6 01       	movw	r22, r12
 a5e:	80 e2       	ldi	r24, 0x20	; 32
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	33 d1       	rcall	.+614    	; 0xcca <fputc>
 a64:	2a 94       	dec	r2
 a66:	f5 cf       	rjmp	.-22     	; 0xa52 <vfprintf+0x1ae>
 a68:	f5 01       	movw	r30, r10
 a6a:	37 fc       	sbrc	r3, 7
 a6c:	85 91       	lpm	r24, Z+
 a6e:	37 fe       	sbrs	r3, 7
 a70:	81 91       	ld	r24, Z+
 a72:	5f 01       	movw	r10, r30
 a74:	b6 01       	movw	r22, r12
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	28 d1       	rcall	.+592    	; 0xcca <fputc>
 a7a:	21 10       	cpse	r2, r1
 a7c:	2a 94       	dec	r2
 a7e:	21 e0       	ldi	r18, 0x01	; 1
 a80:	82 1a       	sub	r8, r18
 a82:	91 08       	sbc	r9, r1
 a84:	81 14       	cp	r8, r1
 a86:	91 04       	cpc	r9, r1
 a88:	79 f7       	brne	.-34     	; 0xa68 <vfprintf+0x1c4>
 a8a:	e1 c0       	rjmp	.+450    	; 0xc4e <vfprintf+0x3aa>
 a8c:	84 36       	cpi	r24, 0x64	; 100
 a8e:	11 f0       	breq	.+4      	; 0xa94 <vfprintf+0x1f0>
 a90:	89 36       	cpi	r24, 0x69	; 105
 a92:	39 f5       	brne	.+78     	; 0xae2 <vfprintf+0x23e>
 a94:	f8 01       	movw	r30, r16
 a96:	37 fe       	sbrs	r3, 7
 a98:	07 c0       	rjmp	.+14     	; 0xaa8 <vfprintf+0x204>
 a9a:	60 81       	ld	r22, Z
 a9c:	71 81       	ldd	r23, Z+1	; 0x01
 a9e:	82 81       	ldd	r24, Z+2	; 0x02
 aa0:	93 81       	ldd	r25, Z+3	; 0x03
 aa2:	0c 5f       	subi	r16, 0xFC	; 252
 aa4:	1f 4f       	sbci	r17, 0xFF	; 255
 aa6:	08 c0       	rjmp	.+16     	; 0xab8 <vfprintf+0x214>
 aa8:	60 81       	ld	r22, Z
 aaa:	71 81       	ldd	r23, Z+1	; 0x01
 aac:	07 2e       	mov	r0, r23
 aae:	00 0c       	add	r0, r0
 ab0:	88 0b       	sbc	r24, r24
 ab2:	99 0b       	sbc	r25, r25
 ab4:	0e 5f       	subi	r16, 0xFE	; 254
 ab6:	1f 4f       	sbci	r17, 0xFF	; 255
 ab8:	f3 2d       	mov	r31, r3
 aba:	ff 76       	andi	r31, 0x6F	; 111
 abc:	3f 2e       	mov	r3, r31
 abe:	97 ff       	sbrs	r25, 7
 ac0:	09 c0       	rjmp	.+18     	; 0xad4 <vfprintf+0x230>
 ac2:	90 95       	com	r25
 ac4:	80 95       	com	r24
 ac6:	70 95       	com	r23
 ac8:	61 95       	neg	r22
 aca:	7f 4f       	sbci	r23, 0xFF	; 255
 acc:	8f 4f       	sbci	r24, 0xFF	; 255
 ace:	9f 4f       	sbci	r25, 0xFF	; 255
 ad0:	f0 68       	ori	r31, 0x80	; 128
 ad2:	3f 2e       	mov	r3, r31
 ad4:	2a e0       	ldi	r18, 0x0A	; 10
 ad6:	30 e0       	ldi	r19, 0x00	; 0
 ad8:	a3 01       	movw	r20, r6
 ada:	33 d1       	rcall	.+614    	; 0xd42 <__ultoa_invert>
 adc:	88 2e       	mov	r8, r24
 ade:	86 18       	sub	r8, r6
 ae0:	44 c0       	rjmp	.+136    	; 0xb6a <vfprintf+0x2c6>
 ae2:	85 37       	cpi	r24, 0x75	; 117
 ae4:	31 f4       	brne	.+12     	; 0xaf2 <vfprintf+0x24e>
 ae6:	23 2d       	mov	r18, r3
 ae8:	2f 7e       	andi	r18, 0xEF	; 239
 aea:	b2 2e       	mov	r11, r18
 aec:	2a e0       	ldi	r18, 0x0A	; 10
 aee:	30 e0       	ldi	r19, 0x00	; 0
 af0:	25 c0       	rjmp	.+74     	; 0xb3c <vfprintf+0x298>
 af2:	93 2d       	mov	r25, r3
 af4:	99 7f       	andi	r25, 0xF9	; 249
 af6:	b9 2e       	mov	r11, r25
 af8:	8f 36       	cpi	r24, 0x6F	; 111
 afa:	c1 f0       	breq	.+48     	; 0xb2c <vfprintf+0x288>
 afc:	18 f4       	brcc	.+6      	; 0xb04 <vfprintf+0x260>
 afe:	88 35       	cpi	r24, 0x58	; 88
 b00:	79 f0       	breq	.+30     	; 0xb20 <vfprintf+0x27c>
 b02:	ae c0       	rjmp	.+348    	; 0xc60 <vfprintf+0x3bc>
 b04:	80 37       	cpi	r24, 0x70	; 112
 b06:	19 f0       	breq	.+6      	; 0xb0e <vfprintf+0x26a>
 b08:	88 37       	cpi	r24, 0x78	; 120
 b0a:	21 f0       	breq	.+8      	; 0xb14 <vfprintf+0x270>
 b0c:	a9 c0       	rjmp	.+338    	; 0xc60 <vfprintf+0x3bc>
 b0e:	e9 2f       	mov	r30, r25
 b10:	e0 61       	ori	r30, 0x10	; 16
 b12:	be 2e       	mov	r11, r30
 b14:	b4 fe       	sbrs	r11, 4
 b16:	0d c0       	rjmp	.+26     	; 0xb32 <vfprintf+0x28e>
 b18:	fb 2d       	mov	r31, r11
 b1a:	f4 60       	ori	r31, 0x04	; 4
 b1c:	bf 2e       	mov	r11, r31
 b1e:	09 c0       	rjmp	.+18     	; 0xb32 <vfprintf+0x28e>
 b20:	34 fe       	sbrs	r3, 4
 b22:	0a c0       	rjmp	.+20     	; 0xb38 <vfprintf+0x294>
 b24:	29 2f       	mov	r18, r25
 b26:	26 60       	ori	r18, 0x06	; 6
 b28:	b2 2e       	mov	r11, r18
 b2a:	06 c0       	rjmp	.+12     	; 0xb38 <vfprintf+0x294>
 b2c:	28 e0       	ldi	r18, 0x08	; 8
 b2e:	30 e0       	ldi	r19, 0x00	; 0
 b30:	05 c0       	rjmp	.+10     	; 0xb3c <vfprintf+0x298>
 b32:	20 e1       	ldi	r18, 0x10	; 16
 b34:	30 e0       	ldi	r19, 0x00	; 0
 b36:	02 c0       	rjmp	.+4      	; 0xb3c <vfprintf+0x298>
 b38:	20 e1       	ldi	r18, 0x10	; 16
 b3a:	32 e0       	ldi	r19, 0x02	; 2
 b3c:	f8 01       	movw	r30, r16
 b3e:	b7 fe       	sbrs	r11, 7
 b40:	07 c0       	rjmp	.+14     	; 0xb50 <vfprintf+0x2ac>
 b42:	60 81       	ld	r22, Z
 b44:	71 81       	ldd	r23, Z+1	; 0x01
 b46:	82 81       	ldd	r24, Z+2	; 0x02
 b48:	93 81       	ldd	r25, Z+3	; 0x03
 b4a:	0c 5f       	subi	r16, 0xFC	; 252
 b4c:	1f 4f       	sbci	r17, 0xFF	; 255
 b4e:	06 c0       	rjmp	.+12     	; 0xb5c <vfprintf+0x2b8>
 b50:	60 81       	ld	r22, Z
 b52:	71 81       	ldd	r23, Z+1	; 0x01
 b54:	80 e0       	ldi	r24, 0x00	; 0
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	0e 5f       	subi	r16, 0xFE	; 254
 b5a:	1f 4f       	sbci	r17, 0xFF	; 255
 b5c:	a3 01       	movw	r20, r6
 b5e:	f1 d0       	rcall	.+482    	; 0xd42 <__ultoa_invert>
 b60:	88 2e       	mov	r8, r24
 b62:	86 18       	sub	r8, r6
 b64:	fb 2d       	mov	r31, r11
 b66:	ff 77       	andi	r31, 0x7F	; 127
 b68:	3f 2e       	mov	r3, r31
 b6a:	36 fe       	sbrs	r3, 6
 b6c:	0d c0       	rjmp	.+26     	; 0xb88 <vfprintf+0x2e4>
 b6e:	23 2d       	mov	r18, r3
 b70:	2e 7f       	andi	r18, 0xFE	; 254
 b72:	a2 2e       	mov	r10, r18
 b74:	89 14       	cp	r8, r9
 b76:	58 f4       	brcc	.+22     	; 0xb8e <vfprintf+0x2ea>
 b78:	34 fe       	sbrs	r3, 4
 b7a:	0b c0       	rjmp	.+22     	; 0xb92 <vfprintf+0x2ee>
 b7c:	32 fc       	sbrc	r3, 2
 b7e:	09 c0       	rjmp	.+18     	; 0xb92 <vfprintf+0x2ee>
 b80:	83 2d       	mov	r24, r3
 b82:	8e 7e       	andi	r24, 0xEE	; 238
 b84:	a8 2e       	mov	r10, r24
 b86:	05 c0       	rjmp	.+10     	; 0xb92 <vfprintf+0x2ee>
 b88:	b8 2c       	mov	r11, r8
 b8a:	a3 2c       	mov	r10, r3
 b8c:	03 c0       	rjmp	.+6      	; 0xb94 <vfprintf+0x2f0>
 b8e:	b8 2c       	mov	r11, r8
 b90:	01 c0       	rjmp	.+2      	; 0xb94 <vfprintf+0x2f0>
 b92:	b9 2c       	mov	r11, r9
 b94:	a4 fe       	sbrs	r10, 4
 b96:	0f c0       	rjmp	.+30     	; 0xbb6 <vfprintf+0x312>
 b98:	fe 01       	movw	r30, r28
 b9a:	e8 0d       	add	r30, r8
 b9c:	f1 1d       	adc	r31, r1
 b9e:	80 81       	ld	r24, Z
 ba0:	80 33       	cpi	r24, 0x30	; 48
 ba2:	21 f4       	brne	.+8      	; 0xbac <vfprintf+0x308>
 ba4:	9a 2d       	mov	r25, r10
 ba6:	99 7e       	andi	r25, 0xE9	; 233
 ba8:	a9 2e       	mov	r10, r25
 baa:	09 c0       	rjmp	.+18     	; 0xbbe <vfprintf+0x31a>
 bac:	a2 fe       	sbrs	r10, 2
 bae:	06 c0       	rjmp	.+12     	; 0xbbc <vfprintf+0x318>
 bb0:	b3 94       	inc	r11
 bb2:	b3 94       	inc	r11
 bb4:	04 c0       	rjmp	.+8      	; 0xbbe <vfprintf+0x31a>
 bb6:	8a 2d       	mov	r24, r10
 bb8:	86 78       	andi	r24, 0x86	; 134
 bba:	09 f0       	breq	.+2      	; 0xbbe <vfprintf+0x31a>
 bbc:	b3 94       	inc	r11
 bbe:	a3 fc       	sbrc	r10, 3
 bc0:	10 c0       	rjmp	.+32     	; 0xbe2 <vfprintf+0x33e>
 bc2:	a0 fe       	sbrs	r10, 0
 bc4:	06 c0       	rjmp	.+12     	; 0xbd2 <vfprintf+0x32e>
 bc6:	b2 14       	cp	r11, r2
 bc8:	80 f4       	brcc	.+32     	; 0xbea <vfprintf+0x346>
 bca:	28 0c       	add	r2, r8
 bcc:	92 2c       	mov	r9, r2
 bce:	9b 18       	sub	r9, r11
 bd0:	0d c0       	rjmp	.+26     	; 0xbec <vfprintf+0x348>
 bd2:	b2 14       	cp	r11, r2
 bd4:	58 f4       	brcc	.+22     	; 0xbec <vfprintf+0x348>
 bd6:	b6 01       	movw	r22, r12
 bd8:	80 e2       	ldi	r24, 0x20	; 32
 bda:	90 e0       	ldi	r25, 0x00	; 0
 bdc:	76 d0       	rcall	.+236    	; 0xcca <fputc>
 bde:	b3 94       	inc	r11
 be0:	f8 cf       	rjmp	.-16     	; 0xbd2 <vfprintf+0x32e>
 be2:	b2 14       	cp	r11, r2
 be4:	18 f4       	brcc	.+6      	; 0xbec <vfprintf+0x348>
 be6:	2b 18       	sub	r2, r11
 be8:	02 c0       	rjmp	.+4      	; 0xbee <vfprintf+0x34a>
 bea:	98 2c       	mov	r9, r8
 bec:	21 2c       	mov	r2, r1
 bee:	a4 fe       	sbrs	r10, 4
 bf0:	0f c0       	rjmp	.+30     	; 0xc10 <vfprintf+0x36c>
 bf2:	b6 01       	movw	r22, r12
 bf4:	80 e3       	ldi	r24, 0x30	; 48
 bf6:	90 e0       	ldi	r25, 0x00	; 0
 bf8:	68 d0       	rcall	.+208    	; 0xcca <fputc>
 bfa:	a2 fe       	sbrs	r10, 2
 bfc:	16 c0       	rjmp	.+44     	; 0xc2a <vfprintf+0x386>
 bfe:	a1 fc       	sbrc	r10, 1
 c00:	03 c0       	rjmp	.+6      	; 0xc08 <vfprintf+0x364>
 c02:	88 e7       	ldi	r24, 0x78	; 120
 c04:	90 e0       	ldi	r25, 0x00	; 0
 c06:	02 c0       	rjmp	.+4      	; 0xc0c <vfprintf+0x368>
 c08:	88 e5       	ldi	r24, 0x58	; 88
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	b6 01       	movw	r22, r12
 c0e:	0c c0       	rjmp	.+24     	; 0xc28 <vfprintf+0x384>
 c10:	8a 2d       	mov	r24, r10
 c12:	86 78       	andi	r24, 0x86	; 134
 c14:	51 f0       	breq	.+20     	; 0xc2a <vfprintf+0x386>
 c16:	a1 fe       	sbrs	r10, 1
 c18:	02 c0       	rjmp	.+4      	; 0xc1e <vfprintf+0x37a>
 c1a:	8b e2       	ldi	r24, 0x2B	; 43
 c1c:	01 c0       	rjmp	.+2      	; 0xc20 <vfprintf+0x37c>
 c1e:	80 e2       	ldi	r24, 0x20	; 32
 c20:	a7 fc       	sbrc	r10, 7
 c22:	8d e2       	ldi	r24, 0x2D	; 45
 c24:	b6 01       	movw	r22, r12
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	50 d0       	rcall	.+160    	; 0xcca <fputc>
 c2a:	89 14       	cp	r8, r9
 c2c:	30 f4       	brcc	.+12     	; 0xc3a <vfprintf+0x396>
 c2e:	b6 01       	movw	r22, r12
 c30:	80 e3       	ldi	r24, 0x30	; 48
 c32:	90 e0       	ldi	r25, 0x00	; 0
 c34:	4a d0       	rcall	.+148    	; 0xcca <fputc>
 c36:	9a 94       	dec	r9
 c38:	f8 cf       	rjmp	.-16     	; 0xc2a <vfprintf+0x386>
 c3a:	8a 94       	dec	r8
 c3c:	f3 01       	movw	r30, r6
 c3e:	e8 0d       	add	r30, r8
 c40:	f1 1d       	adc	r31, r1
 c42:	80 81       	ld	r24, Z
 c44:	b6 01       	movw	r22, r12
 c46:	90 e0       	ldi	r25, 0x00	; 0
 c48:	40 d0       	rcall	.+128    	; 0xcca <fputc>
 c4a:	81 10       	cpse	r8, r1
 c4c:	f6 cf       	rjmp	.-20     	; 0xc3a <vfprintf+0x396>
 c4e:	22 20       	and	r2, r2
 c50:	09 f4       	brne	.+2      	; 0xc54 <vfprintf+0x3b0>
 c52:	4e ce       	rjmp	.-868    	; 0x8f0 <vfprintf+0x4c>
 c54:	b6 01       	movw	r22, r12
 c56:	80 e2       	ldi	r24, 0x20	; 32
 c58:	90 e0       	ldi	r25, 0x00	; 0
 c5a:	37 d0       	rcall	.+110    	; 0xcca <fputc>
 c5c:	2a 94       	dec	r2
 c5e:	f7 cf       	rjmp	.-18     	; 0xc4e <vfprintf+0x3aa>
 c60:	f6 01       	movw	r30, r12
 c62:	86 81       	ldd	r24, Z+6	; 0x06
 c64:	97 81       	ldd	r25, Z+7	; 0x07
 c66:	02 c0       	rjmp	.+4      	; 0xc6c <vfprintf+0x3c8>
 c68:	8f ef       	ldi	r24, 0xFF	; 255
 c6a:	9f ef       	ldi	r25, 0xFF	; 255
 c6c:	2b 96       	adiw	r28, 0x0b	; 11
 c6e:	0f b6       	in	r0, 0x3f	; 63
 c70:	f8 94       	cli
 c72:	de bf       	out	0x3e, r29	; 62
 c74:	0f be       	out	0x3f, r0	; 63
 c76:	cd bf       	out	0x3d, r28	; 61
 c78:	df 91       	pop	r29
 c7a:	cf 91       	pop	r28
 c7c:	1f 91       	pop	r17
 c7e:	0f 91       	pop	r16
 c80:	ff 90       	pop	r15
 c82:	ef 90       	pop	r14
 c84:	df 90       	pop	r13
 c86:	cf 90       	pop	r12
 c88:	bf 90       	pop	r11
 c8a:	af 90       	pop	r10
 c8c:	9f 90       	pop	r9
 c8e:	8f 90       	pop	r8
 c90:	7f 90       	pop	r7
 c92:	6f 90       	pop	r6
 c94:	5f 90       	pop	r5
 c96:	4f 90       	pop	r4
 c98:	3f 90       	pop	r3
 c9a:	2f 90       	pop	r2
 c9c:	08 95       	ret

00000c9e <strnlen_P>:
 c9e:	fc 01       	movw	r30, r24
 ca0:	05 90       	lpm	r0, Z+
 ca2:	61 50       	subi	r22, 0x01	; 1
 ca4:	70 40       	sbci	r23, 0x00	; 0
 ca6:	01 10       	cpse	r0, r1
 ca8:	d8 f7       	brcc	.-10     	; 0xca0 <strnlen_P+0x2>
 caa:	80 95       	com	r24
 cac:	90 95       	com	r25
 cae:	8e 0f       	add	r24, r30
 cb0:	9f 1f       	adc	r25, r31
 cb2:	08 95       	ret

00000cb4 <strnlen>:
 cb4:	fc 01       	movw	r30, r24
 cb6:	61 50       	subi	r22, 0x01	; 1
 cb8:	70 40       	sbci	r23, 0x00	; 0
 cba:	01 90       	ld	r0, Z+
 cbc:	01 10       	cpse	r0, r1
 cbe:	d8 f7       	brcc	.-10     	; 0xcb6 <strnlen+0x2>
 cc0:	80 95       	com	r24
 cc2:	90 95       	com	r25
 cc4:	8e 0f       	add	r24, r30
 cc6:	9f 1f       	adc	r25, r31
 cc8:	08 95       	ret

00000cca <fputc>:
 cca:	0f 93       	push	r16
 ccc:	1f 93       	push	r17
 cce:	cf 93       	push	r28
 cd0:	df 93       	push	r29
 cd2:	fb 01       	movw	r30, r22
 cd4:	23 81       	ldd	r18, Z+3	; 0x03
 cd6:	21 fd       	sbrc	r18, 1
 cd8:	03 c0       	rjmp	.+6      	; 0xce0 <fputc+0x16>
 cda:	8f ef       	ldi	r24, 0xFF	; 255
 cdc:	9f ef       	ldi	r25, 0xFF	; 255
 cde:	2c c0       	rjmp	.+88     	; 0xd38 <fputc+0x6e>
 ce0:	22 ff       	sbrs	r18, 2
 ce2:	16 c0       	rjmp	.+44     	; 0xd10 <fputc+0x46>
 ce4:	46 81       	ldd	r20, Z+6	; 0x06
 ce6:	57 81       	ldd	r21, Z+7	; 0x07
 ce8:	24 81       	ldd	r18, Z+4	; 0x04
 cea:	35 81       	ldd	r19, Z+5	; 0x05
 cec:	42 17       	cp	r20, r18
 cee:	53 07       	cpc	r21, r19
 cf0:	44 f4       	brge	.+16     	; 0xd02 <fputc+0x38>
 cf2:	a0 81       	ld	r26, Z
 cf4:	b1 81       	ldd	r27, Z+1	; 0x01
 cf6:	9d 01       	movw	r18, r26
 cf8:	2f 5f       	subi	r18, 0xFF	; 255
 cfa:	3f 4f       	sbci	r19, 0xFF	; 255
 cfc:	31 83       	std	Z+1, r19	; 0x01
 cfe:	20 83       	st	Z, r18
 d00:	8c 93       	st	X, r24
 d02:	26 81       	ldd	r18, Z+6	; 0x06
 d04:	37 81       	ldd	r19, Z+7	; 0x07
 d06:	2f 5f       	subi	r18, 0xFF	; 255
 d08:	3f 4f       	sbci	r19, 0xFF	; 255
 d0a:	37 83       	std	Z+7, r19	; 0x07
 d0c:	26 83       	std	Z+6, r18	; 0x06
 d0e:	14 c0       	rjmp	.+40     	; 0xd38 <fputc+0x6e>
 d10:	8b 01       	movw	r16, r22
 d12:	ec 01       	movw	r28, r24
 d14:	fb 01       	movw	r30, r22
 d16:	00 84       	ldd	r0, Z+8	; 0x08
 d18:	f1 85       	ldd	r31, Z+9	; 0x09
 d1a:	e0 2d       	mov	r30, r0
 d1c:	19 95       	eicall
 d1e:	89 2b       	or	r24, r25
 d20:	e1 f6       	brne	.-72     	; 0xcda <fputc+0x10>
 d22:	d8 01       	movw	r26, r16
 d24:	16 96       	adiw	r26, 0x06	; 6
 d26:	8d 91       	ld	r24, X+
 d28:	9c 91       	ld	r25, X
 d2a:	17 97       	sbiw	r26, 0x07	; 7
 d2c:	01 96       	adiw	r24, 0x01	; 1
 d2e:	17 96       	adiw	r26, 0x07	; 7
 d30:	9c 93       	st	X, r25
 d32:	8e 93       	st	-X, r24
 d34:	16 97       	sbiw	r26, 0x06	; 6
 d36:	ce 01       	movw	r24, r28
 d38:	df 91       	pop	r29
 d3a:	cf 91       	pop	r28
 d3c:	1f 91       	pop	r17
 d3e:	0f 91       	pop	r16
 d40:	08 95       	ret

00000d42 <__ultoa_invert>:
 d42:	fa 01       	movw	r30, r20
 d44:	aa 27       	eor	r26, r26
 d46:	28 30       	cpi	r18, 0x08	; 8
 d48:	51 f1       	breq	.+84     	; 0xd9e <__ultoa_invert+0x5c>
 d4a:	20 31       	cpi	r18, 0x10	; 16
 d4c:	81 f1       	breq	.+96     	; 0xdae <__ultoa_invert+0x6c>
 d4e:	e8 94       	clt
 d50:	6f 93       	push	r22
 d52:	6e 7f       	andi	r22, 0xFE	; 254
 d54:	6e 5f       	subi	r22, 0xFE	; 254
 d56:	7f 4f       	sbci	r23, 0xFF	; 255
 d58:	8f 4f       	sbci	r24, 0xFF	; 255
 d5a:	9f 4f       	sbci	r25, 0xFF	; 255
 d5c:	af 4f       	sbci	r26, 0xFF	; 255
 d5e:	b1 e0       	ldi	r27, 0x01	; 1
 d60:	3e d0       	rcall	.+124    	; 0xdde <__ultoa_invert+0x9c>
 d62:	b4 e0       	ldi	r27, 0x04	; 4
 d64:	3c d0       	rcall	.+120    	; 0xdde <__ultoa_invert+0x9c>
 d66:	67 0f       	add	r22, r23
 d68:	78 1f       	adc	r23, r24
 d6a:	89 1f       	adc	r24, r25
 d6c:	9a 1f       	adc	r25, r26
 d6e:	a1 1d       	adc	r26, r1
 d70:	68 0f       	add	r22, r24
 d72:	79 1f       	adc	r23, r25
 d74:	8a 1f       	adc	r24, r26
 d76:	91 1d       	adc	r25, r1
 d78:	a1 1d       	adc	r26, r1
 d7a:	6a 0f       	add	r22, r26
 d7c:	71 1d       	adc	r23, r1
 d7e:	81 1d       	adc	r24, r1
 d80:	91 1d       	adc	r25, r1
 d82:	a1 1d       	adc	r26, r1
 d84:	20 d0       	rcall	.+64     	; 0xdc6 <__ultoa_invert+0x84>
 d86:	09 f4       	brne	.+2      	; 0xd8a <__ultoa_invert+0x48>
 d88:	68 94       	set
 d8a:	3f 91       	pop	r19
 d8c:	2a e0       	ldi	r18, 0x0A	; 10
 d8e:	26 9f       	mul	r18, r22
 d90:	11 24       	eor	r1, r1
 d92:	30 19       	sub	r19, r0
 d94:	30 5d       	subi	r19, 0xD0	; 208
 d96:	31 93       	st	Z+, r19
 d98:	de f6       	brtc	.-74     	; 0xd50 <__ultoa_invert+0xe>
 d9a:	cf 01       	movw	r24, r30
 d9c:	08 95       	ret
 d9e:	46 2f       	mov	r20, r22
 da0:	47 70       	andi	r20, 0x07	; 7
 da2:	40 5d       	subi	r20, 0xD0	; 208
 da4:	41 93       	st	Z+, r20
 da6:	b3 e0       	ldi	r27, 0x03	; 3
 da8:	0f d0       	rcall	.+30     	; 0xdc8 <__ultoa_invert+0x86>
 daa:	c9 f7       	brne	.-14     	; 0xd9e <__ultoa_invert+0x5c>
 dac:	f6 cf       	rjmp	.-20     	; 0xd9a <__ultoa_invert+0x58>
 dae:	46 2f       	mov	r20, r22
 db0:	4f 70       	andi	r20, 0x0F	; 15
 db2:	40 5d       	subi	r20, 0xD0	; 208
 db4:	4a 33       	cpi	r20, 0x3A	; 58
 db6:	18 f0       	brcs	.+6      	; 0xdbe <__ultoa_invert+0x7c>
 db8:	49 5d       	subi	r20, 0xD9	; 217
 dba:	31 fd       	sbrc	r19, 1
 dbc:	40 52       	subi	r20, 0x20	; 32
 dbe:	41 93       	st	Z+, r20
 dc0:	02 d0       	rcall	.+4      	; 0xdc6 <__ultoa_invert+0x84>
 dc2:	a9 f7       	brne	.-22     	; 0xdae <__ultoa_invert+0x6c>
 dc4:	ea cf       	rjmp	.-44     	; 0xd9a <__ultoa_invert+0x58>
 dc6:	b4 e0       	ldi	r27, 0x04	; 4
 dc8:	a6 95       	lsr	r26
 dca:	97 95       	ror	r25
 dcc:	87 95       	ror	r24
 dce:	77 95       	ror	r23
 dd0:	67 95       	ror	r22
 dd2:	ba 95       	dec	r27
 dd4:	c9 f7       	brne	.-14     	; 0xdc8 <__ultoa_invert+0x86>
 dd6:	00 97       	sbiw	r24, 0x00	; 0
 dd8:	61 05       	cpc	r22, r1
 dda:	71 05       	cpc	r23, r1
 ddc:	08 95       	ret
 dde:	9b 01       	movw	r18, r22
 de0:	ac 01       	movw	r20, r24
 de2:	0a 2e       	mov	r0, r26
 de4:	06 94       	lsr	r0
 de6:	57 95       	ror	r21
 de8:	47 95       	ror	r20
 dea:	37 95       	ror	r19
 dec:	27 95       	ror	r18
 dee:	ba 95       	dec	r27
 df0:	c9 f7       	brne	.-14     	; 0xde4 <__ultoa_invert+0xa2>
 df2:	62 0f       	add	r22, r18
 df4:	73 1f       	adc	r23, r19
 df6:	84 1f       	adc	r24, r20
 df8:	95 1f       	adc	r25, r21
 dfa:	a0 1d       	adc	r26, r0
 dfc:	08 95       	ret

00000dfe <_exit>:
 dfe:	f8 94       	cli

00000e00 <__stop_program>:
 e00:	ff cf       	rjmp	.-2      	; 0xe00 <__stop_program>
