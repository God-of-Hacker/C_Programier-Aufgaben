
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000d8e  00000e22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000e96  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ef4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00000f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002427  00000000  00000000  00001114  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fac  00000000  00000000  0000353b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013e0  00000000  00000000  000044e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  000058c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d1e  00000000  00000000  00005f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a9a  00000000  00000000  00006c4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  000086e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	59 c3       	rjmp	.+1714   	; 0x710 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e8       	ldi	r30, 0x8E	; 142
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	34 c6       	rjmp	.+3176   	; 0xd8a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    uint16_t S4 = 0;
    uint16_t S3 = 0;
    
    
    //Initialisieren
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	71 d1       	rcall	.+738    	; 0x40a <initBoard>
//Hauptprogramm
int main(void)
{
    //Variablen
    uint16_t schalter = 0;
    uint16_t leds = 0;
 128:	c0 e0       	ldi	r28, 0x00	; 0
 12a:	d0 e0       	ldi	r29, 0x00	; 0
        } 
        else
        {   leds = leds & 0xfffe;
        }
       if (S7 && S6 && !S5)
       {    leds = leds | (1<<1);
 12c:	03 e0       	ldi	r16, 0x03	; 3
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        schalter = switchReadAll();
 12e:	10 e0       	ldi	r17, 0x00	; 0
 130:	11 d0       	rcall	.+34     	; 0x154 <switchReadAll>
        S7 = schalter & 0b10000000;
        S6 = schalter & 0b01000000;
       
        
        //Verarbeitung-------------------------------------------------------------
        if (S7)
 132:	88 23       	and	r24, r24
 134:	24 f4       	brge	.+8      	; 0x13e <main+0x1a>
        {   leds = leds | 0x01;
        } 
        else
        {   leds = leds & 0xfffe;
        }
       if (S7 && S6 && !S5)
 136:	86 fd       	sbrc	r24, 6
 138:	05 c0       	rjmp	.+10     	; 0x144 <main+0x20>
        S6 = schalter & 0b01000000;
       
        
        //Verarbeitung-------------------------------------------------------------
        if (S7)
        {   leds = leds | 0x01;
 13a:	c1 60       	ori	r28, 0x01	; 1
 13c:	01 c0       	rjmp	.+2      	; 0x140 <main+0x1c>
        } 
        else
        {   leds = leds & 0xfffe;
 13e:	ce 7f       	andi	r28, 0xFE	; 254
        }
       if (S7 && S6 && !S5)
       {    leds = leds | (1<<1);
       } 
       else
       {    leds = leds & ~(1<<1);
 140:	cd 7f       	andi	r28, 0xFD	; 253
 142:	02 c0       	rjmp	.+4      	; 0x148 <main+0x24>
        } 
        else
        {   leds = leds & 0xfffe;
        }
       if (S7 && S6 && !S5)
       {    leds = leds | (1<<1);
 144:	c0 2f       	mov	r28, r16
       else
       {    leds = leds & ~(1<<1);
       }
      
        //Ausgabe------------------------------------------------------------------
        ledWriteAll(leds);
 146:	d1 2f       	mov	r29, r17
 148:	ce 01       	movw	r24, r28
 14a:	01 d0       	rcall	.+2      	; 0x14e <ledWriteAll>
        
    }
 14c:	f1 cf       	rjmp	.-30     	; 0x130 <main+0xc>

0000014e <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 14e:	82 b9       	out	0x02, r24	; 2
 150:	95 b9       	out	0x05, r25	; 5
 152:	08 95       	ret

00000154 <switchReadAll>:
 154:	86 b1       	in	r24, 0x06	; 6
 156:	08 95       	ret

00000158 <startSystemTimeMs>:
 158:	83 e0       	ldi	r24, 0x03	; 3
 15a:	84 bd       	out	0x24, r24	; 36
 15c:	8b e0       	ldi	r24, 0x0B	; 11
 15e:	85 bd       	out	0x25, r24	; 37
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 166:	89 ef       	ldi	r24, 0xF9	; 249
 168:	87 bd       	out	0x27, r24	; 39
 16a:	08 95       	ret

0000016c <initAdc>:
 16c:	11 ba       	out	0x11, r1	; 17
 16e:	10 ba       	out	0x10, r1	; 16
 170:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 174:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 178:	80 e4       	ldi	r24, 0x40	; 64
 17a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 17e:	8f e0       	ldi	r24, 0x0F	; 15
 180:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 184:	8f ef       	ldi	r24, 0xFF	; 255
 186:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 18a:	ea e7       	ldi	r30, 0x7A	; 122
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	87 ea       	ldi	r24, 0xA7	; 167
 190:	80 83       	st	Z, r24
 192:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 196:	80 81       	ld	r24, Z
 198:	80 64       	ori	r24, 0x40	; 64
 19a:	80 83       	st	Z, r24
 19c:	80 81       	ld	r24, Z
 19e:	84 ff       	sbrs	r24, 4
 1a0:	fd cf       	rjmp	.-6      	; 0x19c <initAdc+0x30>
 1a2:	ea e7       	ldi	r30, 0x7A	; 122
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	8f 7e       	andi	r24, 0xEF	; 239
 1aa:	80 83       	st	Z, r24
 1ac:	08 95       	ret

000001ae <rgbWrite>:
 1ae:	2f ef       	ldi	r18, 0xFF	; 255
 1b0:	33 e0       	ldi	r19, 0x03	; 3
 1b2:	f9 01       	movw	r30, r18
 1b4:	e8 1b       	sub	r30, r24
 1b6:	f9 0b       	sbc	r31, r25
 1b8:	c9 01       	movw	r24, r18
 1ba:	86 1b       	sub	r24, r22
 1bc:	97 0b       	sbc	r25, r23
 1be:	24 1b       	sub	r18, r20
 1c0:	35 0b       	sbc	r19, r21
 1c2:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 1c6:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 1ca:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 1ce:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 1d2:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 1d6:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 1da:	08 95       	ret

000001dc <initRgb>:
 1dc:	8e ef       	ldi	r24, 0xFE	; 254
 1de:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 1e2:	8b e1       	ldi	r24, 0x1B	; 27
 1e4:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 1e8:	83 e0       	ldi	r24, 0x03	; 3
 1ea:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 1ee:	8f ef       	ldi	r24, 0xFF	; 255
 1f0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 1f4:	40 e0       	ldi	r20, 0x00	; 0
 1f6:	50 e0       	ldi	r21, 0x00	; 0
 1f8:	60 e0       	ldi	r22, 0x00	; 0
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	d6 cf       	rjmp	.-84     	; 0x1ae <rgbWrite>
 202:	08 95       	ret

00000204 <lcdSid>:
 204:	88 23       	and	r24, r24
 206:	11 f0       	breq	.+4      	; 0x20c <lcdSid+0x8>
 208:	a0 9a       	sbi	0x14, 0	; 20
 20a:	08 95       	ret
 20c:	a0 98       	cbi	0x14, 0	; 20
 20e:	08 95       	ret

00000210 <lcdSclk>:
 210:	88 23       	and	r24, r24
 212:	11 f0       	breq	.+4      	; 0x218 <lcdSclk+0x8>
 214:	a1 9a       	sbi	0x14, 1	; 20
 216:	08 95       	ret
 218:	a1 98       	cbi	0x14, 1	; 20
 21a:	08 95       	ret

0000021c <lcdLight>:
 21c:	81 11       	cpse	r24, r1
 21e:	04 c0       	rjmp	.+8      	; 0x228 <lcdLight+0xc>
 220:	84 b5       	in	r24, 0x24	; 36
 222:	8f 7d       	andi	r24, 0xDF	; 223
 224:	84 bd       	out	0x24, r24	; 36
 226:	08 95       	ret
 228:	94 b5       	in	r25, 0x24	; 36
 22a:	90 62       	ori	r25, 0x20	; 32
 22c:	94 bd       	out	0x24, r25	; 36
 22e:	88 bd       	out	0x28, r24	; 40
 230:	08 95       	ret

00000232 <writeLcdF>:
 232:	ef 92       	push	r14
 234:	ff 92       	push	r15
 236:	0f 93       	push	r16
 238:	1f 93       	push	r17
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	7c 01       	movw	r14, r24
 240:	eb 01       	movw	r28, r22
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	df df       	rcall	.-66     	; 0x204 <lcdSid>
 246:	05 e0       	ldi	r16, 0x05	; 5
 248:	10 e0       	ldi	r17, 0x00	; 0
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	e1 df       	rcall	.-62     	; 0x210 <lcdSclk>
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	df df       	rcall	.-66     	; 0x210 <lcdSclk>
 252:	01 50       	subi	r16, 0x01	; 1
 254:	11 09       	sbc	r17, r1
 256:	c9 f7       	brne	.-14     	; 0x24a <writeLcdF+0x18>
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	d4 df       	rcall	.-88     	; 0x204 <lcdSid>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	d8 df       	rcall	.-80     	; 0x210 <lcdSclk>
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	d6 df       	rcall	.-84     	; 0x210 <lcdSclk>
 264:	83 e4       	ldi	r24, 0x43	; 67
 266:	e8 16       	cp	r14, r24
 268:	f1 04       	cpc	r15, r1
 26a:	19 f4       	brne	.+6      	; 0x272 <writeLcdF+0x40>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	ca df       	rcall	.-108    	; 0x204 <lcdSid>
 270:	02 c0       	rjmp	.+4      	; 0x276 <writeLcdF+0x44>
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	c7 df       	rcall	.-114    	; 0x204 <lcdSid>
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	cb df       	rcall	.-106    	; 0x210 <lcdSclk>
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	c9 df       	rcall	.-110    	; 0x210 <lcdSclk>
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	c1 df       	rcall	.-126    	; 0x204 <lcdSid>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	c5 df       	rcall	.-118    	; 0x210 <lcdSclk>
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	c3 df       	rcall	.-122    	; 0x210 <lcdSclk>
 28a:	04 e0       	ldi	r16, 0x04	; 4
 28c:	10 e0       	ldi	r17, 0x00	; 0
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	bf df       	rcall	.-130    	; 0x210 <lcdSclk>
 292:	c0 ff       	sbrs	r28, 0
 294:	03 c0       	rjmp	.+6      	; 0x29c <writeLcdF+0x6a>
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	b5 df       	rcall	.-150    	; 0x204 <lcdSid>
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <writeLcdF+0x6e>
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	b2 df       	rcall	.-156    	; 0x204 <lcdSid>
 2a0:	d6 95       	lsr	r29
 2a2:	c7 95       	ror	r28
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	b4 df       	rcall	.-152    	; 0x210 <lcdSclk>
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	b2 df       	rcall	.-156    	; 0x210 <lcdSclk>
 2ac:	01 50       	subi	r16, 0x01	; 1
 2ae:	11 09       	sbc	r17, r1
 2b0:	71 f7       	brne	.-36     	; 0x28e <writeLcdF+0x5c>
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	a7 df       	rcall	.-178    	; 0x204 <lcdSid>
 2b6:	04 e0       	ldi	r16, 0x04	; 4
 2b8:	10 e0       	ldi	r17, 0x00	; 0
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	a9 df       	rcall	.-174    	; 0x210 <lcdSclk>
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	a7 df       	rcall	.-178    	; 0x210 <lcdSclk>
 2c2:	01 50       	subi	r16, 0x01	; 1
 2c4:	11 09       	sbc	r17, r1
 2c6:	c9 f7       	brne	.-14     	; 0x2ba <writeLcdF+0x88>
 2c8:	04 e0       	ldi	r16, 0x04	; 4
 2ca:	10 e0       	ldi	r17, 0x00	; 0
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	a0 df       	rcall	.-192    	; 0x210 <lcdSclk>
 2d0:	c0 ff       	sbrs	r28, 0
 2d2:	03 c0       	rjmp	.+6      	; 0x2da <writeLcdF+0xa8>
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	96 df       	rcall	.-212    	; 0x204 <lcdSid>
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <writeLcdF+0xac>
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	93 df       	rcall	.-218    	; 0x204 <lcdSid>
 2de:	d6 95       	lsr	r29
 2e0:	c7 95       	ror	r28
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	95 df       	rcall	.-214    	; 0x210 <lcdSclk>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	93 df       	rcall	.-218    	; 0x210 <lcdSclk>
 2ea:	01 50       	subi	r16, 0x01	; 1
 2ec:	11 09       	sbc	r17, r1
 2ee:	71 f7       	brne	.-36     	; 0x2cc <writeLcdF+0x9a>
 2f0:	80 e0       	ldi	r24, 0x00	; 0
 2f2:	88 df       	rcall	.-240    	; 0x204 <lcdSid>
 2f4:	c4 e0       	ldi	r28, 0x04	; 4
 2f6:	d0 e0       	ldi	r29, 0x00	; 0
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	8a df       	rcall	.-236    	; 0x210 <lcdSclk>
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	88 df       	rcall	.-240    	; 0x210 <lcdSclk>
 300:	21 97       	sbiw	r28, 0x01	; 1
 302:	d1 f7       	brne	.-12     	; 0x2f8 <writeLcdF+0xc6>
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	7e df       	rcall	.-260    	; 0x204 <lcdSid>
 308:	87 ec       	ldi	r24, 0xC7	; 199
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <writeLcdF+0xda>
 310:	00 c0       	rjmp	.+0      	; 0x312 <writeLcdF+0xe0>
 312:	00 00       	nop
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	0f 91       	pop	r16
 31c:	ff 90       	pop	r15
 31e:	ef 90       	pop	r14
 320:	08 95       	ret

00000322 <lcdWriteText>:
 322:	1f 93       	push	r17
 324:	cf 93       	push	r28
 326:	df 93       	push	r29
 328:	cd b7       	in	r28, 0x3d	; 61
 32a:	de b7       	in	r29, 0x3e	; 62
 32c:	65 97       	sbiw	r28, 0x15	; 21
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	f8 94       	cli
 332:	de bf       	out	0x3e, r29	; 62
 334:	0f be       	out	0x3f, r0	; 63
 336:	cd bf       	out	0x3d, r28	; 61
 338:	9e 01       	movw	r18, r28
 33a:	20 5e       	subi	r18, 0xE0	; 224
 33c:	3f 4f       	sbci	r19, 0xFF	; 255
 33e:	4e 8d       	ldd	r20, Y+30	; 0x1e
 340:	5f 8d       	ldd	r21, Y+31	; 0x1f
 342:	65 e1       	ldi	r22, 0x15	; 21
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	ce 01       	movw	r24, r28
 348:	01 96       	adiw	r24, 0x01	; 1
 34a:	3a d2       	rcall	.+1140   	; 0x7c0 <vsnprintf>
 34c:	6d 8d       	ldd	r22, Y+29	; 0x1d
 34e:	8c 8d       	ldd	r24, Y+28	; 0x1c
 350:	90 e2       	ldi	r25, 0x20	; 32
 352:	89 9f       	mul	r24, r25
 354:	60 0d       	add	r22, r0
 356:	11 24       	eor	r1, r1
 358:	60 68       	ori	r22, 0x80	; 128
 35a:	70 e0       	ldi	r23, 0x00	; 0
 35c:	83 e4       	ldi	r24, 0x43	; 67
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	68 df       	rcall	.-304    	; 0x232 <writeLcdF>
 362:	69 81       	ldd	r22, Y+1	; 0x01
 364:	66 23       	and	r22, r22
 366:	79 f0       	breq	.+30     	; 0x386 <lcdWriteText+0x64>
 368:	10 e0       	ldi	r17, 0x00	; 0
 36a:	1f 5f       	subi	r17, 0xFF	; 255
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	84 e4       	ldi	r24, 0x44	; 68
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	5f df       	rcall	.-322    	; 0x232 <writeLcdF>
 374:	e1 e0       	ldi	r30, 0x01	; 1
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	ec 0f       	add	r30, r28
 37a:	fd 1f       	adc	r31, r29
 37c:	e1 0f       	add	r30, r17
 37e:	f1 1d       	adc	r31, r1
 380:	60 81       	ld	r22, Z
 382:	61 11       	cpse	r22, r1
 384:	f2 cf       	rjmp	.-28     	; 0x36a <lcdWriteText+0x48>
 386:	65 96       	adiw	r28, 0x15	; 21
 388:	0f b6       	in	r0, 0x3f	; 63
 38a:	f8 94       	cli
 38c:	de bf       	out	0x3e, r29	; 62
 38e:	0f be       	out	0x3f, r0	; 63
 390:	cd bf       	out	0x3d, r28	; 61
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	1f 91       	pop	r17
 398:	08 95       	ret

0000039a <lcdClear>:
 39a:	61 e0       	ldi	r22, 0x01	; 1
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	83 e4       	ldi	r24, 0x43	; 67
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	47 df       	rcall	.-370    	; 0x232 <writeLcdF>
 3a4:	8f e3       	ldi	r24, 0x3F	; 63
 3a6:	9f e1       	ldi	r25, 0x1F	; 31
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <lcdClear+0xe>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <lcdClear+0x14>
 3ae:	00 00       	nop
 3b0:	80 e3       	ldi	r24, 0x30	; 48
 3b2:	92 e0       	ldi	r25, 0x02	; 2
 3b4:	9f 93       	push	r25
 3b6:	8f 93       	push	r24
 3b8:	1f 92       	push	r1
 3ba:	1f 92       	push	r1
 3bc:	b2 df       	rcall	.-156    	; 0x322 <lcdWriteText>
 3be:	0f 90       	pop	r0
 3c0:	0f 90       	pop	r0
 3c2:	0f 90       	pop	r0
 3c4:	0f 90       	pop	r0
 3c6:	08 95       	ret

000003c8 <initLcd>:
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	22 df       	rcall	.-444    	; 0x210 <lcdSclk>
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	1a df       	rcall	.-460    	; 0x204 <lcdSid>
 3d0:	64 e3       	ldi	r22, 0x34	; 52
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	83 e4       	ldi	r24, 0x43	; 67
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	2c df       	rcall	.-424    	; 0x232 <writeLcdF>
 3da:	69 e0       	ldi	r22, 0x09	; 9
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	83 e4       	ldi	r24, 0x43	; 67
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	27 df       	rcall	.-434    	; 0x232 <writeLcdF>
 3e4:	60 e3       	ldi	r22, 0x30	; 48
 3e6:	70 e0       	ldi	r23, 0x00	; 0
 3e8:	83 e4       	ldi	r24, 0x43	; 67
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	22 df       	rcall	.-444    	; 0x232 <writeLcdF>
 3ee:	6c e0       	ldi	r22, 0x0C	; 12
 3f0:	70 e0       	ldi	r23, 0x00	; 0
 3f2:	83 e4       	ldi	r24, 0x43	; 67
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	1d df       	rcall	.-454    	; 0x232 <writeLcdF>
 3f8:	d0 df       	rcall	.-96     	; 0x39a <lcdClear>
 3fa:	67 e0       	ldi	r22, 0x07	; 7
 3fc:	70 e0       	ldi	r23, 0x00	; 0
 3fe:	83 e4       	ldi	r24, 0x43	; 67
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	17 df       	rcall	.-466    	; 0x232 <writeLcdF>
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	0a cf       	rjmp	.-492    	; 0x21c <lcdLight>
 408:	08 95       	ret

0000040a <initBoard>:
 40a:	4f 92       	push	r4
 40c:	5f 92       	push	r5
 40e:	6f 92       	push	r6
 410:	7f 92       	push	r7
 412:	8f 92       	push	r8
 414:	9f 92       	push	r9
 416:	af 92       	push	r10
 418:	bf 92       	push	r11
 41a:	cf 92       	push	r12
 41c:	df 92       	push	r13
 41e:	ef 92       	push	r14
 420:	ff 92       	push	r15
 422:	0f 93       	push	r16
 424:	1f 93       	push	r17
 426:	cf 93       	push	r28
 428:	df 93       	push	r29
 42a:	c8 2f       	mov	r28, r24
 42c:	85 b7       	in	r24, 0x35	; 53
 42e:	85 bf       	out	0x35, r24	; 53
 430:	12 b8       	out	0x02, r1	; 2
 432:	8f ef       	ldi	r24, 0xFF	; 255
 434:	81 b9       	out	0x01, r24	; 1
 436:	15 b8       	out	0x05, r1	; 5
 438:	84 b9       	out	0x04, r24	; 4
 43a:	88 b9       	out	0x08, r24	; 8
 43c:	17 b8       	out	0x07, r1	; 7
 43e:	8b b9       	out	0x0b, r24	; 11
 440:	1a b8       	out	0x0a, r1	; 10
 442:	8e b9       	out	0x0e, r24	; 14
 444:	1d b8       	out	0x0d, r1	; 13
 446:	72 98       	cbi	0x0e, 2	; 14
 448:	11 ba       	out	0x11, r1	; 17
 44a:	10 ba       	out	0x10, r1	; 16
 44c:	94 e0       	ldi	r25, 0x04	; 4
 44e:	94 bb       	out	0x14, r25	; 20
 450:	93 b3       	in	r25, 0x13	; 19
 452:	93 60       	ori	r25, 0x03	; 3
 454:	93 bb       	out	0x13, r25	; 19
 456:	9d 9a       	sbi	0x13, 5	; 19
 458:	97 ec       	ldi	r25, 0xC7	; 199
 45a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 45e:	98 e3       	ldi	r25, 0x38	; 56
 460:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 464:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 468:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 46c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 470:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 474:	8c e3       	ldi	r24, 0x3C	; 60
 476:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 47a:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 47e:	78 94       	sei
 480:	6b de       	rcall	.-810    	; 0x158 <startSystemTimeMs>
 482:	a2 df       	rcall	.-188    	; 0x3c8 <initLcd>
 484:	73 de       	rcall	.-794    	; 0x16c <initAdc>
 486:	aa de       	rcall	.-684    	; 0x1dc <initRgb>
 488:	cc 23       	and	r28, r28
 48a:	09 f4       	brne	.+2      	; 0x48e <initBoard+0x84>
 48c:	b8 c0       	rjmp	.+368    	; 0x5fe <initBoard+0x1f4>
 48e:	8f ef       	ldi	r24, 0xFF	; 255
 490:	c5 de       	rcall	.-630    	; 0x21c <lcdLight>
 492:	40 e0       	ldi	r20, 0x00	; 0
 494:	50 e0       	ldi	r21, 0x00	; 0
 496:	6f ef       	ldi	r22, 0xFF	; 255
 498:	73 e0       	ldi	r23, 0x03	; 3
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	87 de       	rcall	.-754    	; 0x1ae <rgbWrite>
 4a0:	8d e1       	ldi	r24, 0x1D	; 29
 4a2:	92 e0       	ldi	r25, 0x02	; 2
 4a4:	9f 93       	push	r25
 4a6:	8f 93       	push	r24
 4a8:	1f 92       	push	r1
 4aa:	1f 92       	push	r1
 4ac:	3a df       	rcall	.-396    	; 0x322 <lcdWriteText>
 4ae:	82 e3       	ldi	r24, 0x32	; 50
 4b0:	92 e0       	ldi	r25, 0x02	; 2
 4b2:	9f 93       	push	r25
 4b4:	8f 93       	push	r24
 4b6:	1f 92       	push	r1
 4b8:	81 e0       	ldi	r24, 0x01	; 1
 4ba:	8f 93       	push	r24
 4bc:	32 df       	rcall	.-412    	; 0x322 <lcdWriteText>
 4be:	88 e0       	ldi	r24, 0x08	; 8
 4c0:	92 e0       	ldi	r25, 0x02	; 2
 4c2:	9f 93       	push	r25
 4c4:	8f 93       	push	r24
 4c6:	1f 92       	push	r1
 4c8:	82 e0       	ldi	r24, 0x02	; 2
 4ca:	8f 93       	push	r24
 4cc:	2a df       	rcall	.-428    	; 0x322 <lcdWriteText>
 4ce:	87 e4       	ldi	r24, 0x47	; 71
 4d0:	92 e0       	ldi	r25, 0x02	; 2
 4d2:	9f 93       	push	r25
 4d4:	8f 93       	push	r24
 4d6:	1f 92       	push	r1
 4d8:	83 e0       	ldi	r24, 0x03	; 3
 4da:	8f 93       	push	r24
 4dc:	22 df       	rcall	.-444    	; 0x322 <lcdWriteText>
 4de:	8d b7       	in	r24, 0x3d	; 61
 4e0:	9e b7       	in	r25, 0x3e	; 62
 4e2:	40 96       	adiw	r24, 0x10	; 16
 4e4:	0f b6       	in	r0, 0x3f	; 63
 4e6:	f8 94       	cli
 4e8:	9e bf       	out	0x3e, r25	; 62
 4ea:	0f be       	out	0x3f, r0	; 63
 4ec:	8d bf       	out	0x3d, r24	; 61
 4ee:	88 24       	eor	r8, r8
 4f0:	83 94       	inc	r8
 4f2:	c0 e0       	ldi	r28, 0x00	; 0
 4f4:	71 2c       	mov	r7, r1
 4f6:	99 24       	eor	r9, r9
 4f8:	93 94       	inc	r9
 4fa:	d0 e0       	ldi	r29, 0x00	; 0
 4fc:	cc 24       	eor	r12, r12
 4fe:	c3 94       	inc	r12
 500:	d1 2c       	mov	r13, r1
 502:	e1 2c       	mov	r14, r1
 504:	68 94       	set
 506:	ff 24       	eor	r15, r15
 508:	f7 f8       	bld	r15, 7
 50a:	66 24       	eor	r6, r6
 50c:	63 94       	inc	r6
 50e:	51 2c       	mov	r5, r1
 510:	09 e0       	ldi	r16, 0x09	; 9
 512:	11 e0       	ldi	r17, 0x01	; 1
 514:	0f 2e       	mov	r0, r31
 516:	fc e5       	ldi	r31, 0x5C	; 92
 518:	af 2e       	mov	r10, r31
 51a:	f2 e0       	ldi	r31, 0x02	; 2
 51c:	bf 2e       	mov	r11, r31
 51e:	f0 2d       	mov	r31, r0
 520:	0f 2e       	mov	r0, r31
 522:	f3 e0       	ldi	r31, 0x03	; 3
 524:	4f 2e       	mov	r4, r31
 526:	f0 2d       	mov	r31, r0
 528:	99 20       	and	r9, r9
 52a:	49 f0       	breq	.+18     	; 0x53e <initBoard+0x134>
 52c:	c7 01       	movw	r24, r14
 52e:	0d 2e       	mov	r0, r29
 530:	02 c0       	rjmp	.+4      	; 0x536 <initBoard+0x12c>
 532:	96 95       	lsr	r25
 534:	87 95       	ror	r24
 536:	0a 94       	dec	r0
 538:	e2 f7       	brpl	.-8      	; 0x532 <initBoard+0x128>
 53a:	09 de       	rcall	.-1006   	; 0x14e <ledWriteAll>
 53c:	08 c0       	rjmp	.+16     	; 0x54e <initBoard+0x144>
 53e:	c6 01       	movw	r24, r12
 540:	0d 2e       	mov	r0, r29
 542:	02 c0       	rjmp	.+4      	; 0x548 <initBoard+0x13e>
 544:	88 0f       	add	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	0a 94       	dec	r0
 54a:	e2 f7       	brpl	.-8      	; 0x544 <initBoard+0x13a>
 54c:	00 de       	rcall	.-1024   	; 0x14e <ledWriteAll>
 54e:	df 5f       	subi	r29, 0xFF	; 255
 550:	d1 31       	cpi	r29, 0x11	; 17
 552:	28 f0       	brcs	.+10     	; 0x55e <initBoard+0x154>
 554:	86 2d       	mov	r24, r6
 556:	91 10       	cpse	r9, r1
 558:	85 2d       	mov	r24, r5
 55a:	98 2e       	mov	r9, r24
 55c:	d0 e0       	ldi	r29, 0x00	; 0
 55e:	88 20       	and	r8, r8
 560:	11 f0       	breq	.+4      	; 0x566 <initBoard+0x15c>
 562:	ce 5f       	subi	r28, 0xFE	; 254
 564:	01 c0       	rjmp	.+2      	; 0x568 <initBoard+0x15e>
 566:	c2 50       	subi	r28, 0x02	; 2
 568:	8c 2f       	mov	r24, r28
 56a:	58 de       	rcall	.-848    	; 0x21c <lcdLight>
 56c:	ce 3f       	cpi	r28, 0xFE	; 254
 56e:	21 f0       	breq	.+8      	; 0x578 <initBoard+0x16e>
 570:	c8 37       	cpi	r28, 0x78	; 120
 572:	19 f4       	brne	.+6      	; 0x57a <initBoard+0x170>
 574:	86 2c       	mov	r8, r6
 576:	01 c0       	rjmp	.+2      	; 0x57a <initBoard+0x170>
 578:	85 2c       	mov	r8, r5
 57a:	71 10       	cpse	r7, r1
 57c:	3b c0       	rjmp	.+118    	; 0x5f4 <initBoard+0x1ea>
 57e:	f8 01       	movw	r30, r16
 580:	80 81       	ld	r24, Z
 582:	83 7c       	andi	r24, 0xC3	; 195
 584:	91 f0       	breq	.+36     	; 0x5aa <initBoard+0x1a0>
 586:	40 e0       	ldi	r20, 0x00	; 0
 588:	50 e0       	ldi	r21, 0x00	; 0
 58a:	66 e2       	ldi	r22, 0x26	; 38
 58c:	72 e0       	ldi	r23, 0x02	; 2
 58e:	8f ef       	ldi	r24, 0xFF	; 255
 590:	93 e0       	ldi	r25, 0x03	; 3
 592:	0d de       	rcall	.-998    	; 0x1ae <rgbWrite>
 594:	bf 92       	push	r11
 596:	af 92       	push	r10
 598:	1f 92       	push	r1
 59a:	4f 92       	push	r4
 59c:	c2 de       	rcall	.-636    	; 0x322 <lcdWriteText>
 59e:	0f 90       	pop	r0
 5a0:	0f 90       	pop	r0
 5a2:	0f 90       	pop	r0
 5a4:	0f 90       	pop	r0
 5a6:	76 2c       	mov	r7, r6
 5a8:	25 c0       	rjmp	.+74     	; 0x5f4 <initBoard+0x1ea>
 5aa:	8f ef       	ldi	r24, 0xFF	; 255
 5ac:	9c e7       	ldi	r25, 0x7C	; 124
 5ae:	01 97       	sbiw	r24, 0x01	; 1
 5b0:	f1 f7       	brne	.-4      	; 0x5ae <initBoard+0x1a4>
 5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <initBoard+0x1aa>
 5b4:	00 00       	nop
 5b6:	b8 cf       	rjmp	.-144    	; 0x528 <initBoard+0x11e>
 5b8:	f0 de       	rcall	.-544    	; 0x39a <lcdClear>
 5ba:	80 e0       	ldi	r24, 0x00	; 0
 5bc:	2f de       	rcall	.-930    	; 0x21c <lcdLight>
 5be:	80 e0       	ldi	r24, 0x00	; 0
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	c5 dd       	rcall	.-1142   	; 0x14e <ledWriteAll>
 5c4:	40 e0       	ldi	r20, 0x00	; 0
 5c6:	50 e0       	ldi	r21, 0x00	; 0
 5c8:	60 e0       	ldi	r22, 0x00	; 0
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	80 e0       	ldi	r24, 0x00	; 0
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	ee dd       	rcall	.-1060   	; 0x1ae <rgbWrite>
 5d2:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 5d6:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 5da:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 5de:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 5e2:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 5e6:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 5ea:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 5ee:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 5f2:	05 c0       	rjmp	.+10     	; 0x5fe <initBoard+0x1f4>
 5f4:	f8 01       	movw	r30, r16
 5f6:	80 81       	ld	r24, Z
 5f8:	83 7c       	andi	r24, 0xC3	; 195
 5fa:	b9 f6       	brne	.-82     	; 0x5aa <initBoard+0x1a0>
 5fc:	dd cf       	rjmp	.-70     	; 0x5b8 <initBoard+0x1ae>
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	1f 91       	pop	r17
 604:	0f 91       	pop	r16
 606:	ff 90       	pop	r15
 608:	ef 90       	pop	r14
 60a:	df 90       	pop	r13
 60c:	cf 90       	pop	r12
 60e:	bf 90       	pop	r11
 610:	af 90       	pop	r10
 612:	9f 90       	pop	r9
 614:	8f 90       	pop	r8
 616:	7f 90       	pop	r7
 618:	6f 90       	pop	r6
 61a:	5f 90       	pop	r5
 61c:	4f 90       	pop	r4
 61e:	08 95       	ret

00000620 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 620:	cf 93       	push	r28
 622:	df 93       	push	r29
 624:	cd b7       	in	r28, 0x3d	; 61
 626:	de b7       	in	r29, 0x3e	; 62
 628:	28 97       	sbiw	r28, 0x08	; 8
 62a:	0f b6       	in	r0, 0x3f	; 63
 62c:	f8 94       	cli
 62e:	de bf       	out	0x3e, r29	; 62
 630:	0f be       	out	0x3f, r0	; 63
 632:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 634:	88 e0       	ldi	r24, 0x08	; 8
 636:	e0 e0       	ldi	r30, 0x00	; 0
 638:	f2 e0       	ldi	r31, 0x02	; 2
 63a:	de 01       	movw	r26, r28
 63c:	11 96       	adiw	r26, 0x01	; 1
 63e:	01 90       	ld	r0, Z+
 640:	0d 92       	st	X+, r0
 642:	8a 95       	dec	r24
 644:	e1 f7       	brne	.-8      	; 0x63e <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 646:	e5 e0       	ldi	r30, 0x05	; 5
 648:	f1 e0       	ldi	r31, 0x01	; 1
 64a:	80 81       	ld	r24, Z
 64c:	8f 7b       	andi	r24, 0xBF	; 191
 64e:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 650:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 654:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 658:	81 e0       	ldi	r24, 0x01	; 1
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	8c 0f       	add	r24, r28
 65e:	9d 1f       	adc	r25, r29
 660:	e8 0f       	add	r30, r24
 662:	f9 1f       	adc	r31, r25
 664:	80 81       	ld	r24, Z
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 66c:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 670:	a2 ef       	ldi	r26, 0xF2	; 242
 672:	b2 e0       	ldi	r27, 0x02	; 2
 674:	22 e8       	ldi	r18, 0x82	; 130
 676:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 678:	e5 e0       	ldi	r30, 0x05	; 5
 67a:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 67c:	5e 91       	ld	r21, -X
 67e:	4e 91       	ld	r20, -X
 680:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 684:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 688:	84 23       	and	r24, r20
 68a:	95 23       	and	r25, r21
 68c:	89 2b       	or	r24, r25
 68e:	21 f0       	breq	.+8      	; 0x698 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 690:	80 81       	ld	r24, Z
 692:	80 62       	ori	r24, 0x20	; 32
 694:	80 83       	st	Z, r24
 696:	03 c0       	rjmp	.+6      	; 0x69e <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 698:	80 81       	ld	r24, Z
 69a:	8f 7d       	andi	r24, 0xDF	; 223
 69c:	80 83       	st	Z, r24
        }
        CLOCK_1;
 69e:	80 81       	ld	r24, Z
 6a0:	80 61       	ori	r24, 0x10	; 16
 6a2:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 6a4:	80 81       	ld	r24, Z
 6a6:	8f 7e       	andi	r24, 0xEF	; 239
 6a8:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 6aa:	a2 17       	cp	r26, r18
 6ac:	b3 07       	cpc	r27, r19
 6ae:	31 f7       	brne	.-52     	; 0x67c <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 6b0:	e5 e0       	ldi	r30, 0x05	; 5
 6b2:	f1 e0       	ldi	r31, 0x01	; 1
 6b4:	80 81       	ld	r24, Z
 6b6:	87 7f       	andi	r24, 0xF7	; 247
 6b8:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 6ba:	80 81       	ld	r24, Z
 6bc:	88 7f       	andi	r24, 0xF8	; 248
 6be:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 6c0:	90 81       	ld	r25, Z
 6c2:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 6c6:	89 2b       	or	r24, r25
 6c8:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 6ca:	80 81       	ld	r24, Z
 6cc:	80 64       	ori	r24, 0x40	; 64
 6ce:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 6d0:	80 81       	ld	r24, Z
 6d2:	88 60       	ori	r24, 0x08	; 8
 6d4:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 6d6:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 6da:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 6de:	87 30       	cpi	r24, 0x07	; 7
 6e0:	91 05       	cpc	r25, r1
 6e2:	30 f4       	brcc	.+12     	; 0x6f0 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 6e4:	01 96       	adiw	r24, 0x01	; 1
 6e6:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2725+0x1>
 6ea:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2725>
 6ee:	07 c0       	rjmp	.+14     	; 0x6fe <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 6f0:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2725+0x1>
 6f4:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2725>
        writeTextFinished = 1;
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 6fe:	28 96       	adiw	r28, 0x08	; 8
 700:	0f b6       	in	r0, 0x3f	; 63
 702:	f8 94       	cli
 704:	de bf       	out	0x3e, r29	; 62
 706:	0f be       	out	0x3f, r0	; 63
 708:	cd bf       	out	0x3d, r28	; 61
 70a:	df 91       	pop	r29
 70c:	cf 91       	pop	r28
 70e:	08 95       	ret

00000710 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 710:	1f 92       	push	r1
 712:	0f 92       	push	r0
 714:	0f b6       	in	r0, 0x3f	; 63
 716:	0f 92       	push	r0
 718:	11 24       	eor	r1, r1
 71a:	0b b6       	in	r0, 0x3b	; 59
 71c:	0f 92       	push	r0
 71e:	2f 93       	push	r18
 720:	3f 93       	push	r19
 722:	4f 93       	push	r20
 724:	5f 93       	push	r21
 726:	6f 93       	push	r22
 728:	7f 93       	push	r23
 72a:	8f 93       	push	r24
 72c:	9f 93       	push	r25
 72e:	af 93       	push	r26
 730:	bf 93       	push	r27
 732:	ef 93       	push	r30
 734:	ff 93       	push	r31
    systemTimeMs += 1;
 736:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 73a:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 73e:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 742:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 746:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 74a:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 74e:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 752:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 756:	a1 e0       	ldi	r26, 0x01	; 1
 758:	27 d0       	rcall	.+78     	; 0x7a8 <__adddi3_s8>
 75a:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 75e:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 762:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 766:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 76a:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 76e:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 772:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 776:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 77a:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 77e:	81 11       	cpse	r24, r1
 780:	4f df       	rcall	.-354    	; 0x620 <matrixWriteNextLine>
}
 782:	ff 91       	pop	r31
 784:	ef 91       	pop	r30
 786:	bf 91       	pop	r27
 788:	af 91       	pop	r26
 78a:	9f 91       	pop	r25
 78c:	8f 91       	pop	r24
 78e:	7f 91       	pop	r23
 790:	6f 91       	pop	r22
 792:	5f 91       	pop	r21
 794:	4f 91       	pop	r20
 796:	3f 91       	pop	r19
 798:	2f 91       	pop	r18
 79a:	0f 90       	pop	r0
 79c:	0b be       	out	0x3b, r0	; 59
 79e:	0f 90       	pop	r0
 7a0:	0f be       	out	0x3f, r0	; 63
 7a2:	0f 90       	pop	r0
 7a4:	1f 90       	pop	r1
 7a6:	18 95       	reti

000007a8 <__adddi3_s8>:
 7a8:	00 24       	eor	r0, r0
 7aa:	a7 fd       	sbrc	r26, 7
 7ac:	00 94       	com	r0
 7ae:	2a 0f       	add	r18, r26
 7b0:	30 1d       	adc	r19, r0
 7b2:	40 1d       	adc	r20, r0
 7b4:	50 1d       	adc	r21, r0
 7b6:	60 1d       	adc	r22, r0
 7b8:	70 1d       	adc	r23, r0
 7ba:	80 1d       	adc	r24, r0
 7bc:	90 1d       	adc	r25, r0
 7be:	08 95       	ret

000007c0 <vsnprintf>:
 7c0:	0f 93       	push	r16
 7c2:	1f 93       	push	r17
 7c4:	cf 93       	push	r28
 7c6:	df 93       	push	r29
 7c8:	cd b7       	in	r28, 0x3d	; 61
 7ca:	de b7       	in	r29, 0x3e	; 62
 7cc:	2e 97       	sbiw	r28, 0x0e	; 14
 7ce:	0f b6       	in	r0, 0x3f	; 63
 7d0:	f8 94       	cli
 7d2:	de bf       	out	0x3e, r29	; 62
 7d4:	0f be       	out	0x3f, r0	; 63
 7d6:	cd bf       	out	0x3d, r28	; 61
 7d8:	8c 01       	movw	r16, r24
 7da:	fa 01       	movw	r30, r20
 7dc:	86 e0       	ldi	r24, 0x06	; 6
 7de:	8c 83       	std	Y+4, r24	; 0x04
 7e0:	1a 83       	std	Y+2, r17	; 0x02
 7e2:	09 83       	std	Y+1, r16	; 0x01
 7e4:	77 ff       	sbrs	r23, 7
 7e6:	02 c0       	rjmp	.+4      	; 0x7ec <vsnprintf+0x2c>
 7e8:	60 e0       	ldi	r22, 0x00	; 0
 7ea:	70 e8       	ldi	r23, 0x80	; 128
 7ec:	cb 01       	movw	r24, r22
 7ee:	01 97       	sbiw	r24, 0x01	; 1
 7f0:	9e 83       	std	Y+6, r25	; 0x06
 7f2:	8d 83       	std	Y+5, r24	; 0x05
 7f4:	a9 01       	movw	r20, r18
 7f6:	bf 01       	movw	r22, r30
 7f8:	ce 01       	movw	r24, r28
 7fa:	01 96       	adiw	r24, 0x01	; 1
 7fc:	19 d0       	rcall	.+50     	; 0x830 <vfprintf>
 7fe:	4d 81       	ldd	r20, Y+5	; 0x05
 800:	5e 81       	ldd	r21, Y+6	; 0x06
 802:	57 fd       	sbrc	r21, 7
 804:	0a c0       	rjmp	.+20     	; 0x81a <vsnprintf+0x5a>
 806:	2f 81       	ldd	r18, Y+7	; 0x07
 808:	38 85       	ldd	r19, Y+8	; 0x08
 80a:	42 17       	cp	r20, r18
 80c:	53 07       	cpc	r21, r19
 80e:	0c f4       	brge	.+2      	; 0x812 <vsnprintf+0x52>
 810:	9a 01       	movw	r18, r20
 812:	f8 01       	movw	r30, r16
 814:	e2 0f       	add	r30, r18
 816:	f3 1f       	adc	r31, r19
 818:	10 82       	st	Z, r1
 81a:	2e 96       	adiw	r28, 0x0e	; 14
 81c:	0f b6       	in	r0, 0x3f	; 63
 81e:	f8 94       	cli
 820:	de bf       	out	0x3e, r29	; 62
 822:	0f be       	out	0x3f, r0	; 63
 824:	cd bf       	out	0x3d, r28	; 61
 826:	df 91       	pop	r29
 828:	cf 91       	pop	r28
 82a:	1f 91       	pop	r17
 82c:	0f 91       	pop	r16
 82e:	08 95       	ret

00000830 <vfprintf>:
 830:	2f 92       	push	r2
 832:	3f 92       	push	r3
 834:	4f 92       	push	r4
 836:	5f 92       	push	r5
 838:	6f 92       	push	r6
 83a:	7f 92       	push	r7
 83c:	8f 92       	push	r8
 83e:	9f 92       	push	r9
 840:	af 92       	push	r10
 842:	bf 92       	push	r11
 844:	cf 92       	push	r12
 846:	df 92       	push	r13
 848:	ef 92       	push	r14
 84a:	ff 92       	push	r15
 84c:	0f 93       	push	r16
 84e:	1f 93       	push	r17
 850:	cf 93       	push	r28
 852:	df 93       	push	r29
 854:	cd b7       	in	r28, 0x3d	; 61
 856:	de b7       	in	r29, 0x3e	; 62
 858:	2b 97       	sbiw	r28, 0x0b	; 11
 85a:	0f b6       	in	r0, 0x3f	; 63
 85c:	f8 94       	cli
 85e:	de bf       	out	0x3e, r29	; 62
 860:	0f be       	out	0x3f, r0	; 63
 862:	cd bf       	out	0x3d, r28	; 61
 864:	6c 01       	movw	r12, r24
 866:	7b 01       	movw	r14, r22
 868:	8a 01       	movw	r16, r20
 86a:	fc 01       	movw	r30, r24
 86c:	17 82       	std	Z+7, r1	; 0x07
 86e:	16 82       	std	Z+6, r1	; 0x06
 870:	83 81       	ldd	r24, Z+3	; 0x03
 872:	81 ff       	sbrs	r24, 1
 874:	bf c1       	rjmp	.+894    	; 0xbf4 <vfprintf+0x3c4>
 876:	ce 01       	movw	r24, r28
 878:	01 96       	adiw	r24, 0x01	; 1
 87a:	3c 01       	movw	r6, r24
 87c:	f6 01       	movw	r30, r12
 87e:	93 81       	ldd	r25, Z+3	; 0x03
 880:	f7 01       	movw	r30, r14
 882:	93 fd       	sbrc	r25, 3
 884:	85 91       	lpm	r24, Z+
 886:	93 ff       	sbrs	r25, 3
 888:	81 91       	ld	r24, Z+
 88a:	7f 01       	movw	r14, r30
 88c:	88 23       	and	r24, r24
 88e:	09 f4       	brne	.+2      	; 0x892 <vfprintf+0x62>
 890:	ad c1       	rjmp	.+858    	; 0xbec <vfprintf+0x3bc>
 892:	85 32       	cpi	r24, 0x25	; 37
 894:	39 f4       	brne	.+14     	; 0x8a4 <vfprintf+0x74>
 896:	93 fd       	sbrc	r25, 3
 898:	85 91       	lpm	r24, Z+
 89a:	93 ff       	sbrs	r25, 3
 89c:	81 91       	ld	r24, Z+
 89e:	7f 01       	movw	r14, r30
 8a0:	85 32       	cpi	r24, 0x25	; 37
 8a2:	21 f4       	brne	.+8      	; 0x8ac <vfprintf+0x7c>
 8a4:	b6 01       	movw	r22, r12
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	d6 d1       	rcall	.+940    	; 0xc56 <fputc>
 8aa:	e8 cf       	rjmp	.-48     	; 0x87c <vfprintf+0x4c>
 8ac:	91 2c       	mov	r9, r1
 8ae:	21 2c       	mov	r2, r1
 8b0:	31 2c       	mov	r3, r1
 8b2:	ff e1       	ldi	r31, 0x1F	; 31
 8b4:	f3 15       	cp	r31, r3
 8b6:	d8 f0       	brcs	.+54     	; 0x8ee <vfprintf+0xbe>
 8b8:	8b 32       	cpi	r24, 0x2B	; 43
 8ba:	79 f0       	breq	.+30     	; 0x8da <vfprintf+0xaa>
 8bc:	38 f4       	brcc	.+14     	; 0x8cc <vfprintf+0x9c>
 8be:	80 32       	cpi	r24, 0x20	; 32
 8c0:	79 f0       	breq	.+30     	; 0x8e0 <vfprintf+0xb0>
 8c2:	83 32       	cpi	r24, 0x23	; 35
 8c4:	a1 f4       	brne	.+40     	; 0x8ee <vfprintf+0xbe>
 8c6:	23 2d       	mov	r18, r3
 8c8:	20 61       	ori	r18, 0x10	; 16
 8ca:	1d c0       	rjmp	.+58     	; 0x906 <vfprintf+0xd6>
 8cc:	8d 32       	cpi	r24, 0x2D	; 45
 8ce:	61 f0       	breq	.+24     	; 0x8e8 <vfprintf+0xb8>
 8d0:	80 33       	cpi	r24, 0x30	; 48
 8d2:	69 f4       	brne	.+26     	; 0x8ee <vfprintf+0xbe>
 8d4:	23 2d       	mov	r18, r3
 8d6:	21 60       	ori	r18, 0x01	; 1
 8d8:	16 c0       	rjmp	.+44     	; 0x906 <vfprintf+0xd6>
 8da:	83 2d       	mov	r24, r3
 8dc:	82 60       	ori	r24, 0x02	; 2
 8de:	38 2e       	mov	r3, r24
 8e0:	e3 2d       	mov	r30, r3
 8e2:	e4 60       	ori	r30, 0x04	; 4
 8e4:	3e 2e       	mov	r3, r30
 8e6:	2a c0       	rjmp	.+84     	; 0x93c <vfprintf+0x10c>
 8e8:	f3 2d       	mov	r31, r3
 8ea:	f8 60       	ori	r31, 0x08	; 8
 8ec:	1d c0       	rjmp	.+58     	; 0x928 <vfprintf+0xf8>
 8ee:	37 fc       	sbrc	r3, 7
 8f0:	2d c0       	rjmp	.+90     	; 0x94c <vfprintf+0x11c>
 8f2:	20 ed       	ldi	r18, 0xD0	; 208
 8f4:	28 0f       	add	r18, r24
 8f6:	2a 30       	cpi	r18, 0x0A	; 10
 8f8:	40 f0       	brcs	.+16     	; 0x90a <vfprintf+0xda>
 8fa:	8e 32       	cpi	r24, 0x2E	; 46
 8fc:	b9 f4       	brne	.+46     	; 0x92c <vfprintf+0xfc>
 8fe:	36 fc       	sbrc	r3, 6
 900:	75 c1       	rjmp	.+746    	; 0xbec <vfprintf+0x3bc>
 902:	23 2d       	mov	r18, r3
 904:	20 64       	ori	r18, 0x40	; 64
 906:	32 2e       	mov	r3, r18
 908:	19 c0       	rjmp	.+50     	; 0x93c <vfprintf+0x10c>
 90a:	36 fe       	sbrs	r3, 6
 90c:	06 c0       	rjmp	.+12     	; 0x91a <vfprintf+0xea>
 90e:	8a e0       	ldi	r24, 0x0A	; 10
 910:	98 9e       	mul	r9, r24
 912:	20 0d       	add	r18, r0
 914:	11 24       	eor	r1, r1
 916:	92 2e       	mov	r9, r18
 918:	11 c0       	rjmp	.+34     	; 0x93c <vfprintf+0x10c>
 91a:	ea e0       	ldi	r30, 0x0A	; 10
 91c:	2e 9e       	mul	r2, r30
 91e:	20 0d       	add	r18, r0
 920:	11 24       	eor	r1, r1
 922:	22 2e       	mov	r2, r18
 924:	f3 2d       	mov	r31, r3
 926:	f0 62       	ori	r31, 0x20	; 32
 928:	3f 2e       	mov	r3, r31
 92a:	08 c0       	rjmp	.+16     	; 0x93c <vfprintf+0x10c>
 92c:	8c 36       	cpi	r24, 0x6C	; 108
 92e:	21 f4       	brne	.+8      	; 0x938 <vfprintf+0x108>
 930:	83 2d       	mov	r24, r3
 932:	80 68       	ori	r24, 0x80	; 128
 934:	38 2e       	mov	r3, r24
 936:	02 c0       	rjmp	.+4      	; 0x93c <vfprintf+0x10c>
 938:	88 36       	cpi	r24, 0x68	; 104
 93a:	41 f4       	brne	.+16     	; 0x94c <vfprintf+0x11c>
 93c:	f7 01       	movw	r30, r14
 93e:	93 fd       	sbrc	r25, 3
 940:	85 91       	lpm	r24, Z+
 942:	93 ff       	sbrs	r25, 3
 944:	81 91       	ld	r24, Z+
 946:	7f 01       	movw	r14, r30
 948:	81 11       	cpse	r24, r1
 94a:	b3 cf       	rjmp	.-154    	; 0x8b2 <vfprintf+0x82>
 94c:	98 2f       	mov	r25, r24
 94e:	9f 7d       	andi	r25, 0xDF	; 223
 950:	95 54       	subi	r25, 0x45	; 69
 952:	93 30       	cpi	r25, 0x03	; 3
 954:	28 f4       	brcc	.+10     	; 0x960 <vfprintf+0x130>
 956:	0c 5f       	subi	r16, 0xFC	; 252
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	9f e3       	ldi	r25, 0x3F	; 63
 95c:	99 83       	std	Y+1, r25	; 0x01
 95e:	0d c0       	rjmp	.+26     	; 0x97a <vfprintf+0x14a>
 960:	83 36       	cpi	r24, 0x63	; 99
 962:	31 f0       	breq	.+12     	; 0x970 <vfprintf+0x140>
 964:	83 37       	cpi	r24, 0x73	; 115
 966:	71 f0       	breq	.+28     	; 0x984 <vfprintf+0x154>
 968:	83 35       	cpi	r24, 0x53	; 83
 96a:	09 f0       	breq	.+2      	; 0x96e <vfprintf+0x13e>
 96c:	55 c0       	rjmp	.+170    	; 0xa18 <vfprintf+0x1e8>
 96e:	20 c0       	rjmp	.+64     	; 0x9b0 <vfprintf+0x180>
 970:	f8 01       	movw	r30, r16
 972:	80 81       	ld	r24, Z
 974:	89 83       	std	Y+1, r24	; 0x01
 976:	0e 5f       	subi	r16, 0xFE	; 254
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	88 24       	eor	r8, r8
 97c:	83 94       	inc	r8
 97e:	91 2c       	mov	r9, r1
 980:	53 01       	movw	r10, r6
 982:	12 c0       	rjmp	.+36     	; 0x9a8 <vfprintf+0x178>
 984:	28 01       	movw	r4, r16
 986:	f2 e0       	ldi	r31, 0x02	; 2
 988:	4f 0e       	add	r4, r31
 98a:	51 1c       	adc	r5, r1
 98c:	f8 01       	movw	r30, r16
 98e:	a0 80       	ld	r10, Z
 990:	b1 80       	ldd	r11, Z+1	; 0x01
 992:	36 fe       	sbrs	r3, 6
 994:	03 c0       	rjmp	.+6      	; 0x99c <vfprintf+0x16c>
 996:	69 2d       	mov	r22, r9
 998:	70 e0       	ldi	r23, 0x00	; 0
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <vfprintf+0x170>
 99c:	6f ef       	ldi	r22, 0xFF	; 255
 99e:	7f ef       	ldi	r23, 0xFF	; 255
 9a0:	c5 01       	movw	r24, r10
 9a2:	4e d1       	rcall	.+668    	; 0xc40 <strnlen>
 9a4:	4c 01       	movw	r8, r24
 9a6:	82 01       	movw	r16, r4
 9a8:	f3 2d       	mov	r31, r3
 9aa:	ff 77       	andi	r31, 0x7F	; 127
 9ac:	3f 2e       	mov	r3, r31
 9ae:	15 c0       	rjmp	.+42     	; 0x9da <vfprintf+0x1aa>
 9b0:	28 01       	movw	r4, r16
 9b2:	22 e0       	ldi	r18, 0x02	; 2
 9b4:	42 0e       	add	r4, r18
 9b6:	51 1c       	adc	r5, r1
 9b8:	f8 01       	movw	r30, r16
 9ba:	a0 80       	ld	r10, Z
 9bc:	b1 80       	ldd	r11, Z+1	; 0x01
 9be:	36 fe       	sbrs	r3, 6
 9c0:	03 c0       	rjmp	.+6      	; 0x9c8 <vfprintf+0x198>
 9c2:	69 2d       	mov	r22, r9
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <vfprintf+0x19c>
 9c8:	6f ef       	ldi	r22, 0xFF	; 255
 9ca:	7f ef       	ldi	r23, 0xFF	; 255
 9cc:	c5 01       	movw	r24, r10
 9ce:	2d d1       	rcall	.+602    	; 0xc2a <strnlen_P>
 9d0:	4c 01       	movw	r8, r24
 9d2:	f3 2d       	mov	r31, r3
 9d4:	f0 68       	ori	r31, 0x80	; 128
 9d6:	3f 2e       	mov	r3, r31
 9d8:	82 01       	movw	r16, r4
 9da:	33 fc       	sbrc	r3, 3
 9dc:	19 c0       	rjmp	.+50     	; 0xa10 <vfprintf+0x1e0>
 9de:	82 2d       	mov	r24, r2
 9e0:	90 e0       	ldi	r25, 0x00	; 0
 9e2:	88 16       	cp	r8, r24
 9e4:	99 06       	cpc	r9, r25
 9e6:	a0 f4       	brcc	.+40     	; 0xa10 <vfprintf+0x1e0>
 9e8:	b6 01       	movw	r22, r12
 9ea:	80 e2       	ldi	r24, 0x20	; 32
 9ec:	90 e0       	ldi	r25, 0x00	; 0
 9ee:	33 d1       	rcall	.+614    	; 0xc56 <fputc>
 9f0:	2a 94       	dec	r2
 9f2:	f5 cf       	rjmp	.-22     	; 0x9de <vfprintf+0x1ae>
 9f4:	f5 01       	movw	r30, r10
 9f6:	37 fc       	sbrc	r3, 7
 9f8:	85 91       	lpm	r24, Z+
 9fa:	37 fe       	sbrs	r3, 7
 9fc:	81 91       	ld	r24, Z+
 9fe:	5f 01       	movw	r10, r30
 a00:	b6 01       	movw	r22, r12
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	28 d1       	rcall	.+592    	; 0xc56 <fputc>
 a06:	21 10       	cpse	r2, r1
 a08:	2a 94       	dec	r2
 a0a:	21 e0       	ldi	r18, 0x01	; 1
 a0c:	82 1a       	sub	r8, r18
 a0e:	91 08       	sbc	r9, r1
 a10:	81 14       	cp	r8, r1
 a12:	91 04       	cpc	r9, r1
 a14:	79 f7       	brne	.-34     	; 0x9f4 <vfprintf+0x1c4>
 a16:	e1 c0       	rjmp	.+450    	; 0xbda <vfprintf+0x3aa>
 a18:	84 36       	cpi	r24, 0x64	; 100
 a1a:	11 f0       	breq	.+4      	; 0xa20 <vfprintf+0x1f0>
 a1c:	89 36       	cpi	r24, 0x69	; 105
 a1e:	39 f5       	brne	.+78     	; 0xa6e <vfprintf+0x23e>
 a20:	f8 01       	movw	r30, r16
 a22:	37 fe       	sbrs	r3, 7
 a24:	07 c0       	rjmp	.+14     	; 0xa34 <vfprintf+0x204>
 a26:	60 81       	ld	r22, Z
 a28:	71 81       	ldd	r23, Z+1	; 0x01
 a2a:	82 81       	ldd	r24, Z+2	; 0x02
 a2c:	93 81       	ldd	r25, Z+3	; 0x03
 a2e:	0c 5f       	subi	r16, 0xFC	; 252
 a30:	1f 4f       	sbci	r17, 0xFF	; 255
 a32:	08 c0       	rjmp	.+16     	; 0xa44 <vfprintf+0x214>
 a34:	60 81       	ld	r22, Z
 a36:	71 81       	ldd	r23, Z+1	; 0x01
 a38:	07 2e       	mov	r0, r23
 a3a:	00 0c       	add	r0, r0
 a3c:	88 0b       	sbc	r24, r24
 a3e:	99 0b       	sbc	r25, r25
 a40:	0e 5f       	subi	r16, 0xFE	; 254
 a42:	1f 4f       	sbci	r17, 0xFF	; 255
 a44:	f3 2d       	mov	r31, r3
 a46:	ff 76       	andi	r31, 0x6F	; 111
 a48:	3f 2e       	mov	r3, r31
 a4a:	97 ff       	sbrs	r25, 7
 a4c:	09 c0       	rjmp	.+18     	; 0xa60 <vfprintf+0x230>
 a4e:	90 95       	com	r25
 a50:	80 95       	com	r24
 a52:	70 95       	com	r23
 a54:	61 95       	neg	r22
 a56:	7f 4f       	sbci	r23, 0xFF	; 255
 a58:	8f 4f       	sbci	r24, 0xFF	; 255
 a5a:	9f 4f       	sbci	r25, 0xFF	; 255
 a5c:	f0 68       	ori	r31, 0x80	; 128
 a5e:	3f 2e       	mov	r3, r31
 a60:	2a e0       	ldi	r18, 0x0A	; 10
 a62:	30 e0       	ldi	r19, 0x00	; 0
 a64:	a3 01       	movw	r20, r6
 a66:	33 d1       	rcall	.+614    	; 0xcce <__ultoa_invert>
 a68:	88 2e       	mov	r8, r24
 a6a:	86 18       	sub	r8, r6
 a6c:	44 c0       	rjmp	.+136    	; 0xaf6 <vfprintf+0x2c6>
 a6e:	85 37       	cpi	r24, 0x75	; 117
 a70:	31 f4       	brne	.+12     	; 0xa7e <vfprintf+0x24e>
 a72:	23 2d       	mov	r18, r3
 a74:	2f 7e       	andi	r18, 0xEF	; 239
 a76:	b2 2e       	mov	r11, r18
 a78:	2a e0       	ldi	r18, 0x0A	; 10
 a7a:	30 e0       	ldi	r19, 0x00	; 0
 a7c:	25 c0       	rjmp	.+74     	; 0xac8 <vfprintf+0x298>
 a7e:	93 2d       	mov	r25, r3
 a80:	99 7f       	andi	r25, 0xF9	; 249
 a82:	b9 2e       	mov	r11, r25
 a84:	8f 36       	cpi	r24, 0x6F	; 111
 a86:	c1 f0       	breq	.+48     	; 0xab8 <vfprintf+0x288>
 a88:	18 f4       	brcc	.+6      	; 0xa90 <vfprintf+0x260>
 a8a:	88 35       	cpi	r24, 0x58	; 88
 a8c:	79 f0       	breq	.+30     	; 0xaac <vfprintf+0x27c>
 a8e:	ae c0       	rjmp	.+348    	; 0xbec <vfprintf+0x3bc>
 a90:	80 37       	cpi	r24, 0x70	; 112
 a92:	19 f0       	breq	.+6      	; 0xa9a <vfprintf+0x26a>
 a94:	88 37       	cpi	r24, 0x78	; 120
 a96:	21 f0       	breq	.+8      	; 0xaa0 <vfprintf+0x270>
 a98:	a9 c0       	rjmp	.+338    	; 0xbec <vfprintf+0x3bc>
 a9a:	e9 2f       	mov	r30, r25
 a9c:	e0 61       	ori	r30, 0x10	; 16
 a9e:	be 2e       	mov	r11, r30
 aa0:	b4 fe       	sbrs	r11, 4
 aa2:	0d c0       	rjmp	.+26     	; 0xabe <vfprintf+0x28e>
 aa4:	fb 2d       	mov	r31, r11
 aa6:	f4 60       	ori	r31, 0x04	; 4
 aa8:	bf 2e       	mov	r11, r31
 aaa:	09 c0       	rjmp	.+18     	; 0xabe <vfprintf+0x28e>
 aac:	34 fe       	sbrs	r3, 4
 aae:	0a c0       	rjmp	.+20     	; 0xac4 <vfprintf+0x294>
 ab0:	29 2f       	mov	r18, r25
 ab2:	26 60       	ori	r18, 0x06	; 6
 ab4:	b2 2e       	mov	r11, r18
 ab6:	06 c0       	rjmp	.+12     	; 0xac4 <vfprintf+0x294>
 ab8:	28 e0       	ldi	r18, 0x08	; 8
 aba:	30 e0       	ldi	r19, 0x00	; 0
 abc:	05 c0       	rjmp	.+10     	; 0xac8 <vfprintf+0x298>
 abe:	20 e1       	ldi	r18, 0x10	; 16
 ac0:	30 e0       	ldi	r19, 0x00	; 0
 ac2:	02 c0       	rjmp	.+4      	; 0xac8 <vfprintf+0x298>
 ac4:	20 e1       	ldi	r18, 0x10	; 16
 ac6:	32 e0       	ldi	r19, 0x02	; 2
 ac8:	f8 01       	movw	r30, r16
 aca:	b7 fe       	sbrs	r11, 7
 acc:	07 c0       	rjmp	.+14     	; 0xadc <vfprintf+0x2ac>
 ace:	60 81       	ld	r22, Z
 ad0:	71 81       	ldd	r23, Z+1	; 0x01
 ad2:	82 81       	ldd	r24, Z+2	; 0x02
 ad4:	93 81       	ldd	r25, Z+3	; 0x03
 ad6:	0c 5f       	subi	r16, 0xFC	; 252
 ad8:	1f 4f       	sbci	r17, 0xFF	; 255
 ada:	06 c0       	rjmp	.+12     	; 0xae8 <vfprintf+0x2b8>
 adc:	60 81       	ld	r22, Z
 ade:	71 81       	ldd	r23, Z+1	; 0x01
 ae0:	80 e0       	ldi	r24, 0x00	; 0
 ae2:	90 e0       	ldi	r25, 0x00	; 0
 ae4:	0e 5f       	subi	r16, 0xFE	; 254
 ae6:	1f 4f       	sbci	r17, 0xFF	; 255
 ae8:	a3 01       	movw	r20, r6
 aea:	f1 d0       	rcall	.+482    	; 0xcce <__ultoa_invert>
 aec:	88 2e       	mov	r8, r24
 aee:	86 18       	sub	r8, r6
 af0:	fb 2d       	mov	r31, r11
 af2:	ff 77       	andi	r31, 0x7F	; 127
 af4:	3f 2e       	mov	r3, r31
 af6:	36 fe       	sbrs	r3, 6
 af8:	0d c0       	rjmp	.+26     	; 0xb14 <vfprintf+0x2e4>
 afa:	23 2d       	mov	r18, r3
 afc:	2e 7f       	andi	r18, 0xFE	; 254
 afe:	a2 2e       	mov	r10, r18
 b00:	89 14       	cp	r8, r9
 b02:	58 f4       	brcc	.+22     	; 0xb1a <vfprintf+0x2ea>
 b04:	34 fe       	sbrs	r3, 4
 b06:	0b c0       	rjmp	.+22     	; 0xb1e <vfprintf+0x2ee>
 b08:	32 fc       	sbrc	r3, 2
 b0a:	09 c0       	rjmp	.+18     	; 0xb1e <vfprintf+0x2ee>
 b0c:	83 2d       	mov	r24, r3
 b0e:	8e 7e       	andi	r24, 0xEE	; 238
 b10:	a8 2e       	mov	r10, r24
 b12:	05 c0       	rjmp	.+10     	; 0xb1e <vfprintf+0x2ee>
 b14:	b8 2c       	mov	r11, r8
 b16:	a3 2c       	mov	r10, r3
 b18:	03 c0       	rjmp	.+6      	; 0xb20 <vfprintf+0x2f0>
 b1a:	b8 2c       	mov	r11, r8
 b1c:	01 c0       	rjmp	.+2      	; 0xb20 <vfprintf+0x2f0>
 b1e:	b9 2c       	mov	r11, r9
 b20:	a4 fe       	sbrs	r10, 4
 b22:	0f c0       	rjmp	.+30     	; 0xb42 <vfprintf+0x312>
 b24:	fe 01       	movw	r30, r28
 b26:	e8 0d       	add	r30, r8
 b28:	f1 1d       	adc	r31, r1
 b2a:	80 81       	ld	r24, Z
 b2c:	80 33       	cpi	r24, 0x30	; 48
 b2e:	21 f4       	brne	.+8      	; 0xb38 <vfprintf+0x308>
 b30:	9a 2d       	mov	r25, r10
 b32:	99 7e       	andi	r25, 0xE9	; 233
 b34:	a9 2e       	mov	r10, r25
 b36:	09 c0       	rjmp	.+18     	; 0xb4a <vfprintf+0x31a>
 b38:	a2 fe       	sbrs	r10, 2
 b3a:	06 c0       	rjmp	.+12     	; 0xb48 <vfprintf+0x318>
 b3c:	b3 94       	inc	r11
 b3e:	b3 94       	inc	r11
 b40:	04 c0       	rjmp	.+8      	; 0xb4a <vfprintf+0x31a>
 b42:	8a 2d       	mov	r24, r10
 b44:	86 78       	andi	r24, 0x86	; 134
 b46:	09 f0       	breq	.+2      	; 0xb4a <vfprintf+0x31a>
 b48:	b3 94       	inc	r11
 b4a:	a3 fc       	sbrc	r10, 3
 b4c:	10 c0       	rjmp	.+32     	; 0xb6e <vfprintf+0x33e>
 b4e:	a0 fe       	sbrs	r10, 0
 b50:	06 c0       	rjmp	.+12     	; 0xb5e <vfprintf+0x32e>
 b52:	b2 14       	cp	r11, r2
 b54:	80 f4       	brcc	.+32     	; 0xb76 <vfprintf+0x346>
 b56:	28 0c       	add	r2, r8
 b58:	92 2c       	mov	r9, r2
 b5a:	9b 18       	sub	r9, r11
 b5c:	0d c0       	rjmp	.+26     	; 0xb78 <vfprintf+0x348>
 b5e:	b2 14       	cp	r11, r2
 b60:	58 f4       	brcc	.+22     	; 0xb78 <vfprintf+0x348>
 b62:	b6 01       	movw	r22, r12
 b64:	80 e2       	ldi	r24, 0x20	; 32
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	76 d0       	rcall	.+236    	; 0xc56 <fputc>
 b6a:	b3 94       	inc	r11
 b6c:	f8 cf       	rjmp	.-16     	; 0xb5e <vfprintf+0x32e>
 b6e:	b2 14       	cp	r11, r2
 b70:	18 f4       	brcc	.+6      	; 0xb78 <vfprintf+0x348>
 b72:	2b 18       	sub	r2, r11
 b74:	02 c0       	rjmp	.+4      	; 0xb7a <vfprintf+0x34a>
 b76:	98 2c       	mov	r9, r8
 b78:	21 2c       	mov	r2, r1
 b7a:	a4 fe       	sbrs	r10, 4
 b7c:	0f c0       	rjmp	.+30     	; 0xb9c <vfprintf+0x36c>
 b7e:	b6 01       	movw	r22, r12
 b80:	80 e3       	ldi	r24, 0x30	; 48
 b82:	90 e0       	ldi	r25, 0x00	; 0
 b84:	68 d0       	rcall	.+208    	; 0xc56 <fputc>
 b86:	a2 fe       	sbrs	r10, 2
 b88:	16 c0       	rjmp	.+44     	; 0xbb6 <vfprintf+0x386>
 b8a:	a1 fc       	sbrc	r10, 1
 b8c:	03 c0       	rjmp	.+6      	; 0xb94 <vfprintf+0x364>
 b8e:	88 e7       	ldi	r24, 0x78	; 120
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <vfprintf+0x368>
 b94:	88 e5       	ldi	r24, 0x58	; 88
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	b6 01       	movw	r22, r12
 b9a:	0c c0       	rjmp	.+24     	; 0xbb4 <vfprintf+0x384>
 b9c:	8a 2d       	mov	r24, r10
 b9e:	86 78       	andi	r24, 0x86	; 134
 ba0:	51 f0       	breq	.+20     	; 0xbb6 <vfprintf+0x386>
 ba2:	a1 fe       	sbrs	r10, 1
 ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x37a>
 ba6:	8b e2       	ldi	r24, 0x2B	; 43
 ba8:	01 c0       	rjmp	.+2      	; 0xbac <vfprintf+0x37c>
 baa:	80 e2       	ldi	r24, 0x20	; 32
 bac:	a7 fc       	sbrc	r10, 7
 bae:	8d e2       	ldi	r24, 0x2D	; 45
 bb0:	b6 01       	movw	r22, r12
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	50 d0       	rcall	.+160    	; 0xc56 <fputc>
 bb6:	89 14       	cp	r8, r9
 bb8:	30 f4       	brcc	.+12     	; 0xbc6 <vfprintf+0x396>
 bba:	b6 01       	movw	r22, r12
 bbc:	80 e3       	ldi	r24, 0x30	; 48
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	4a d0       	rcall	.+148    	; 0xc56 <fputc>
 bc2:	9a 94       	dec	r9
 bc4:	f8 cf       	rjmp	.-16     	; 0xbb6 <vfprintf+0x386>
 bc6:	8a 94       	dec	r8
 bc8:	f3 01       	movw	r30, r6
 bca:	e8 0d       	add	r30, r8
 bcc:	f1 1d       	adc	r31, r1
 bce:	80 81       	ld	r24, Z
 bd0:	b6 01       	movw	r22, r12
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	40 d0       	rcall	.+128    	; 0xc56 <fputc>
 bd6:	81 10       	cpse	r8, r1
 bd8:	f6 cf       	rjmp	.-20     	; 0xbc6 <vfprintf+0x396>
 bda:	22 20       	and	r2, r2
 bdc:	09 f4       	brne	.+2      	; 0xbe0 <vfprintf+0x3b0>
 bde:	4e ce       	rjmp	.-868    	; 0x87c <vfprintf+0x4c>
 be0:	b6 01       	movw	r22, r12
 be2:	80 e2       	ldi	r24, 0x20	; 32
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	37 d0       	rcall	.+110    	; 0xc56 <fputc>
 be8:	2a 94       	dec	r2
 bea:	f7 cf       	rjmp	.-18     	; 0xbda <vfprintf+0x3aa>
 bec:	f6 01       	movw	r30, r12
 bee:	86 81       	ldd	r24, Z+6	; 0x06
 bf0:	97 81       	ldd	r25, Z+7	; 0x07
 bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <vfprintf+0x3c8>
 bf4:	8f ef       	ldi	r24, 0xFF	; 255
 bf6:	9f ef       	ldi	r25, 0xFF	; 255
 bf8:	2b 96       	adiw	r28, 0x0b	; 11
 bfa:	0f b6       	in	r0, 0x3f	; 63
 bfc:	f8 94       	cli
 bfe:	de bf       	out	0x3e, r29	; 62
 c00:	0f be       	out	0x3f, r0	; 63
 c02:	cd bf       	out	0x3d, r28	; 61
 c04:	df 91       	pop	r29
 c06:	cf 91       	pop	r28
 c08:	1f 91       	pop	r17
 c0a:	0f 91       	pop	r16
 c0c:	ff 90       	pop	r15
 c0e:	ef 90       	pop	r14
 c10:	df 90       	pop	r13
 c12:	cf 90       	pop	r12
 c14:	bf 90       	pop	r11
 c16:	af 90       	pop	r10
 c18:	9f 90       	pop	r9
 c1a:	8f 90       	pop	r8
 c1c:	7f 90       	pop	r7
 c1e:	6f 90       	pop	r6
 c20:	5f 90       	pop	r5
 c22:	4f 90       	pop	r4
 c24:	3f 90       	pop	r3
 c26:	2f 90       	pop	r2
 c28:	08 95       	ret

00000c2a <strnlen_P>:
 c2a:	fc 01       	movw	r30, r24
 c2c:	05 90       	lpm	r0, Z+
 c2e:	61 50       	subi	r22, 0x01	; 1
 c30:	70 40       	sbci	r23, 0x00	; 0
 c32:	01 10       	cpse	r0, r1
 c34:	d8 f7       	brcc	.-10     	; 0xc2c <strnlen_P+0x2>
 c36:	80 95       	com	r24
 c38:	90 95       	com	r25
 c3a:	8e 0f       	add	r24, r30
 c3c:	9f 1f       	adc	r25, r31
 c3e:	08 95       	ret

00000c40 <strnlen>:
 c40:	fc 01       	movw	r30, r24
 c42:	61 50       	subi	r22, 0x01	; 1
 c44:	70 40       	sbci	r23, 0x00	; 0
 c46:	01 90       	ld	r0, Z+
 c48:	01 10       	cpse	r0, r1
 c4a:	d8 f7       	brcc	.-10     	; 0xc42 <strnlen+0x2>
 c4c:	80 95       	com	r24
 c4e:	90 95       	com	r25
 c50:	8e 0f       	add	r24, r30
 c52:	9f 1f       	adc	r25, r31
 c54:	08 95       	ret

00000c56 <fputc>:
 c56:	0f 93       	push	r16
 c58:	1f 93       	push	r17
 c5a:	cf 93       	push	r28
 c5c:	df 93       	push	r29
 c5e:	fb 01       	movw	r30, r22
 c60:	23 81       	ldd	r18, Z+3	; 0x03
 c62:	21 fd       	sbrc	r18, 1
 c64:	03 c0       	rjmp	.+6      	; 0xc6c <fputc+0x16>
 c66:	8f ef       	ldi	r24, 0xFF	; 255
 c68:	9f ef       	ldi	r25, 0xFF	; 255
 c6a:	2c c0       	rjmp	.+88     	; 0xcc4 <fputc+0x6e>
 c6c:	22 ff       	sbrs	r18, 2
 c6e:	16 c0       	rjmp	.+44     	; 0xc9c <fputc+0x46>
 c70:	46 81       	ldd	r20, Z+6	; 0x06
 c72:	57 81       	ldd	r21, Z+7	; 0x07
 c74:	24 81       	ldd	r18, Z+4	; 0x04
 c76:	35 81       	ldd	r19, Z+5	; 0x05
 c78:	42 17       	cp	r20, r18
 c7a:	53 07       	cpc	r21, r19
 c7c:	44 f4       	brge	.+16     	; 0xc8e <fputc+0x38>
 c7e:	a0 81       	ld	r26, Z
 c80:	b1 81       	ldd	r27, Z+1	; 0x01
 c82:	9d 01       	movw	r18, r26
 c84:	2f 5f       	subi	r18, 0xFF	; 255
 c86:	3f 4f       	sbci	r19, 0xFF	; 255
 c88:	31 83       	std	Z+1, r19	; 0x01
 c8a:	20 83       	st	Z, r18
 c8c:	8c 93       	st	X, r24
 c8e:	26 81       	ldd	r18, Z+6	; 0x06
 c90:	37 81       	ldd	r19, Z+7	; 0x07
 c92:	2f 5f       	subi	r18, 0xFF	; 255
 c94:	3f 4f       	sbci	r19, 0xFF	; 255
 c96:	37 83       	std	Z+7, r19	; 0x07
 c98:	26 83       	std	Z+6, r18	; 0x06
 c9a:	14 c0       	rjmp	.+40     	; 0xcc4 <fputc+0x6e>
 c9c:	8b 01       	movw	r16, r22
 c9e:	ec 01       	movw	r28, r24
 ca0:	fb 01       	movw	r30, r22
 ca2:	00 84       	ldd	r0, Z+8	; 0x08
 ca4:	f1 85       	ldd	r31, Z+9	; 0x09
 ca6:	e0 2d       	mov	r30, r0
 ca8:	19 95       	eicall
 caa:	89 2b       	or	r24, r25
 cac:	e1 f6       	brne	.-72     	; 0xc66 <fputc+0x10>
 cae:	d8 01       	movw	r26, r16
 cb0:	16 96       	adiw	r26, 0x06	; 6
 cb2:	8d 91       	ld	r24, X+
 cb4:	9c 91       	ld	r25, X
 cb6:	17 97       	sbiw	r26, 0x07	; 7
 cb8:	01 96       	adiw	r24, 0x01	; 1
 cba:	17 96       	adiw	r26, 0x07	; 7
 cbc:	9c 93       	st	X, r25
 cbe:	8e 93       	st	-X, r24
 cc0:	16 97       	sbiw	r26, 0x06	; 6
 cc2:	ce 01       	movw	r24, r28
 cc4:	df 91       	pop	r29
 cc6:	cf 91       	pop	r28
 cc8:	1f 91       	pop	r17
 cca:	0f 91       	pop	r16
 ccc:	08 95       	ret

00000cce <__ultoa_invert>:
 cce:	fa 01       	movw	r30, r20
 cd0:	aa 27       	eor	r26, r26
 cd2:	28 30       	cpi	r18, 0x08	; 8
 cd4:	51 f1       	breq	.+84     	; 0xd2a <__ultoa_invert+0x5c>
 cd6:	20 31       	cpi	r18, 0x10	; 16
 cd8:	81 f1       	breq	.+96     	; 0xd3a <__ultoa_invert+0x6c>
 cda:	e8 94       	clt
 cdc:	6f 93       	push	r22
 cde:	6e 7f       	andi	r22, 0xFE	; 254
 ce0:	6e 5f       	subi	r22, 0xFE	; 254
 ce2:	7f 4f       	sbci	r23, 0xFF	; 255
 ce4:	8f 4f       	sbci	r24, 0xFF	; 255
 ce6:	9f 4f       	sbci	r25, 0xFF	; 255
 ce8:	af 4f       	sbci	r26, 0xFF	; 255
 cea:	b1 e0       	ldi	r27, 0x01	; 1
 cec:	3e d0       	rcall	.+124    	; 0xd6a <__ultoa_invert+0x9c>
 cee:	b4 e0       	ldi	r27, 0x04	; 4
 cf0:	3c d0       	rcall	.+120    	; 0xd6a <__ultoa_invert+0x9c>
 cf2:	67 0f       	add	r22, r23
 cf4:	78 1f       	adc	r23, r24
 cf6:	89 1f       	adc	r24, r25
 cf8:	9a 1f       	adc	r25, r26
 cfa:	a1 1d       	adc	r26, r1
 cfc:	68 0f       	add	r22, r24
 cfe:	79 1f       	adc	r23, r25
 d00:	8a 1f       	adc	r24, r26
 d02:	91 1d       	adc	r25, r1
 d04:	a1 1d       	adc	r26, r1
 d06:	6a 0f       	add	r22, r26
 d08:	71 1d       	adc	r23, r1
 d0a:	81 1d       	adc	r24, r1
 d0c:	91 1d       	adc	r25, r1
 d0e:	a1 1d       	adc	r26, r1
 d10:	20 d0       	rcall	.+64     	; 0xd52 <__ultoa_invert+0x84>
 d12:	09 f4       	brne	.+2      	; 0xd16 <__ultoa_invert+0x48>
 d14:	68 94       	set
 d16:	3f 91       	pop	r19
 d18:	2a e0       	ldi	r18, 0x0A	; 10
 d1a:	26 9f       	mul	r18, r22
 d1c:	11 24       	eor	r1, r1
 d1e:	30 19       	sub	r19, r0
 d20:	30 5d       	subi	r19, 0xD0	; 208
 d22:	31 93       	st	Z+, r19
 d24:	de f6       	brtc	.-74     	; 0xcdc <__ultoa_invert+0xe>
 d26:	cf 01       	movw	r24, r30
 d28:	08 95       	ret
 d2a:	46 2f       	mov	r20, r22
 d2c:	47 70       	andi	r20, 0x07	; 7
 d2e:	40 5d       	subi	r20, 0xD0	; 208
 d30:	41 93       	st	Z+, r20
 d32:	b3 e0       	ldi	r27, 0x03	; 3
 d34:	0f d0       	rcall	.+30     	; 0xd54 <__ultoa_invert+0x86>
 d36:	c9 f7       	brne	.-14     	; 0xd2a <__ultoa_invert+0x5c>
 d38:	f6 cf       	rjmp	.-20     	; 0xd26 <__ultoa_invert+0x58>
 d3a:	46 2f       	mov	r20, r22
 d3c:	4f 70       	andi	r20, 0x0F	; 15
 d3e:	40 5d       	subi	r20, 0xD0	; 208
 d40:	4a 33       	cpi	r20, 0x3A	; 58
 d42:	18 f0       	brcs	.+6      	; 0xd4a <__ultoa_invert+0x7c>
 d44:	49 5d       	subi	r20, 0xD9	; 217
 d46:	31 fd       	sbrc	r19, 1
 d48:	40 52       	subi	r20, 0x20	; 32
 d4a:	41 93       	st	Z+, r20
 d4c:	02 d0       	rcall	.+4      	; 0xd52 <__ultoa_invert+0x84>
 d4e:	a9 f7       	brne	.-22     	; 0xd3a <__ultoa_invert+0x6c>
 d50:	ea cf       	rjmp	.-44     	; 0xd26 <__ultoa_invert+0x58>
 d52:	b4 e0       	ldi	r27, 0x04	; 4
 d54:	a6 95       	lsr	r26
 d56:	97 95       	ror	r25
 d58:	87 95       	ror	r24
 d5a:	77 95       	ror	r23
 d5c:	67 95       	ror	r22
 d5e:	ba 95       	dec	r27
 d60:	c9 f7       	brne	.-14     	; 0xd54 <__ultoa_invert+0x86>
 d62:	00 97       	sbiw	r24, 0x00	; 0
 d64:	61 05       	cpc	r22, r1
 d66:	71 05       	cpc	r23, r1
 d68:	08 95       	ret
 d6a:	9b 01       	movw	r18, r22
 d6c:	ac 01       	movw	r20, r24
 d6e:	0a 2e       	mov	r0, r26
 d70:	06 94       	lsr	r0
 d72:	57 95       	ror	r21
 d74:	47 95       	ror	r20
 d76:	37 95       	ror	r19
 d78:	27 95       	ror	r18
 d7a:	ba 95       	dec	r27
 d7c:	c9 f7       	brne	.-14     	; 0xd70 <__ultoa_invert+0xa2>
 d7e:	62 0f       	add	r22, r18
 d80:	73 1f       	adc	r23, r19
 d82:	84 1f       	adc	r24, r20
 d84:	95 1f       	adc	r25, r21
 d86:	a0 1d       	adc	r26, r0
 d88:	08 95       	ret

00000d8a <_exit>:
 d8a:	f8 94       	cli

00000d8c <__stop_program>:
 d8c:	ff cf       	rjmp	.-2      	; 0xd8c <__stop_program>
