
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000146  00800200  00000de4  00000e78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000de4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800346  00800346  00000fbe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fbe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000101c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002449  00000000  00000000  00001244  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fc5  00000000  00000000  0000368d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000140d  00000000  00000000  00004652  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000068c  00000000  00000000  00005a60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cd3  00000000  00000000  000060ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001aca  00000000  00000000  00006dbf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008889  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	84 c3       	rjmp	.+1800   	; 0x766 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ee       	ldi	r30, 0xE4	; 228
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 34       	cpi	r26, 0x46	; 70
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a6 e4       	ldi	r26, 0x46	; 70
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 3c       	cpi	r26, 0xC4	; 196
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	5f c6       	rjmp	.+3262   	; 0xde0 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:

#define SIZE        100

//Hauptprogramm
int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	c8 5c       	subi	r28, 0xC8	; 200
 12e:	d1 09       	sbc	r29, r1
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	f8 94       	cli
 134:	de bf       	out	0x3e, r29	; 62
 136:	0f be       	out	0x3f, r0	; 63
 138:	cd bf       	out	0x3d, r28	; 61
    //Variablen
    uint16_t testArray[SIZE] =
 13a:	88 ec       	ldi	r24, 0xC8	; 200
 13c:	e0 e0       	ldi	r30, 0x00	; 0
 13e:	f2 e0       	ldi	r31, 0x02	; 2
 140:	de 01       	movw	r26, r28
 142:	11 96       	adiw	r26, 0x01	; 1
 144:	01 90       	ld	r0, Z+
 146:	0d 92       	st	X+, r0
 148:	8a 95       	dec	r24
 14a:	e1 f7       	brne	.-8      	; 0x144 <main+0x20>
    uint16_t i=0;
    uint16_t zahlKommtVor=0;
    uint16_t graosseZahl=0;
    uint16_t index=0;
    //Initialisieren
    initBoard(1);
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	88 d1       	rcall	.+784    	; 0x460 <initBoard>
 150:	fe 01       	movw	r30, r28
 152:	31 96       	adiw	r30, 0x01	; 1
    };
    
    uint16_t i=0;
    uint16_t zahlKommtVor=0;
    uint16_t graosseZahl=0;
    uint16_t index=0;
 154:	a0 e0       	ldi	r26, 0x00	; 0
 156:	b0 e0       	ldi	r27, 0x00	; 0
        11933, 22958, 61231, 57095, 39850, 39160, 47316, 53204, 20357,  2753
    };
    
    uint16_t i=0;
    uint16_t zahlKommtVor=0;
    uint16_t graosseZahl=0;
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	70 e0       	ldi	r23, 0x00	; 0
        5797, 65271,  1783, 61756, 23743, 26248,  2212,  4002, 31030, 47946,
        11933, 22958, 61231, 57095, 39850, 39160, 47316, 53204, 20357,  2753
    };
    
    uint16_t i=0;
    uint16_t zahlKommtVor=0;
 15c:	40 e0       	ldi	r20, 0x00	; 0
 15e:	50 e0       	ldi	r21, 0x00	; 0
    uint16_t graosseZahl=0;
    uint16_t index=0;
    //Initialisieren
    initBoard(1);

    for (i=0; i<SIZE; i=i+1)
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
    {
        if (testArray [i] > graosseZahl )
        {
            graosseZahl = testArray [i];
            zahlKommtVor=1;
 164:	01 e0       	ldi	r16, 0x01	; 1
 166:	10 e0       	ldi	r17, 0x00	; 0
    //Initialisieren
    initBoard(1);

    for (i=0; i<SIZE; i=i+1)
    {
        if (testArray [i] > graosseZahl )
 168:	21 91       	ld	r18, Z+
 16a:	31 91       	ld	r19, Z+
 16c:	62 17       	cp	r22, r18
 16e:	73 07       	cpc	r23, r19
 170:	28 f4       	brcc	.+10     	; 0x17c <main+0x58>
 172:	a8 2f       	mov	r26, r24
 174:	b9 2f       	mov	r27, r25
        {
            graosseZahl = testArray [i];
 176:	b9 01       	movw	r22, r18
            zahlKommtVor=1;
 178:	40 2f       	mov	r20, r16
 17a:	51 2f       	mov	r21, r17
    uint16_t graosseZahl=0;
    uint16_t index=0;
    //Initialisieren
    initBoard(1);

    for (i=0; i<SIZE; i=i+1)
 17c:	01 96       	adiw	r24, 0x01	; 1
 17e:	84 36       	cpi	r24, 0x64	; 100
 180:	91 05       	cpc	r25, r1
 182:	91 f7       	brne	.-28     	; 0x168 <main+0x44>
            zahlKommtVor=1;
            index=i;
        }
    }
    
    if (zahlKommtVor)
 184:	45 2b       	or	r20, r21
 186:	79 f0       	breq	.+30     	; 0x1a6 <main+0x82>
    {
        lcdWriteText(0,0,"Index: %u ", index);
 188:	bf 93       	push	r27
 18a:	af 93       	push	r26
 18c:	80 ed       	ldi	r24, 0xD0	; 208
 18e:	92 e0       	ldi	r25, 0x02	; 2
 190:	9f 93       	push	r25
 192:	8f 93       	push	r24
 194:	1f 92       	push	r1
 196:	1f 92       	push	r1
 198:	ef d0       	rcall	.+478    	; 0x378 <lcdWriteText>
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	ff cf       	rjmp	.-2      	; 0x1a6 <main+0x82>

000001a8 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1a8:	82 b9       	out	0x02, r24	; 2
 1aa:	95 b9       	out	0x05, r25	; 5
 1ac:	08 95       	ret

000001ae <startSystemTimeMs>:
 1ae:	83 e0       	ldi	r24, 0x03	; 3
 1b0:	84 bd       	out	0x24, r24	; 36
 1b2:	8b e0       	ldi	r24, 0x0B	; 11
 1b4:	85 bd       	out	0x25, r24	; 37
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 1bc:	89 ef       	ldi	r24, 0xF9	; 249
 1be:	87 bd       	out	0x27, r24	; 39
 1c0:	08 95       	ret

000001c2 <initAdc>:
 1c2:	11 ba       	out	0x11, r1	; 17
 1c4:	10 ba       	out	0x10, r1	; 16
 1c6:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 1ca:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 1ce:	80 e4       	ldi	r24, 0x40	; 64
 1d0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 1d4:	8f e0       	ldi	r24, 0x0F	; 15
 1d6:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 1da:	8f ef       	ldi	r24, 0xFF	; 255
 1dc:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 1e0:	ea e7       	ldi	r30, 0x7A	; 122
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	87 ea       	ldi	r24, 0xA7	; 167
 1e6:	80 83       	st	Z, r24
 1e8:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 1ec:	80 81       	ld	r24, Z
 1ee:	80 64       	ori	r24, 0x40	; 64
 1f0:	80 83       	st	Z, r24
 1f2:	80 81       	ld	r24, Z
 1f4:	84 ff       	sbrs	r24, 4
 1f6:	fd cf       	rjmp	.-6      	; 0x1f2 <initAdc+0x30>
 1f8:	ea e7       	ldi	r30, 0x7A	; 122
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	8f 7e       	andi	r24, 0xEF	; 239
 200:	80 83       	st	Z, r24
 202:	08 95       	ret

00000204 <rgbWrite>:
 204:	2f ef       	ldi	r18, 0xFF	; 255
 206:	33 e0       	ldi	r19, 0x03	; 3
 208:	f9 01       	movw	r30, r18
 20a:	e8 1b       	sub	r30, r24
 20c:	f9 0b       	sbc	r31, r25
 20e:	c9 01       	movw	r24, r18
 210:	86 1b       	sub	r24, r22
 212:	97 0b       	sbc	r25, r23
 214:	24 1b       	sub	r18, r20
 216:	35 0b       	sbc	r19, r21
 218:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 21c:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 220:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 224:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 228:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 22c:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 230:	08 95       	ret

00000232 <initRgb>:
 232:	8e ef       	ldi	r24, 0xFE	; 254
 234:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 238:	8b e1       	ldi	r24, 0x1B	; 27
 23a:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 23e:	83 e0       	ldi	r24, 0x03	; 3
 240:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 244:	8f ef       	ldi	r24, 0xFF	; 255
 246:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 24a:	40 e0       	ldi	r20, 0x00	; 0
 24c:	50 e0       	ldi	r21, 0x00	; 0
 24e:	60 e0       	ldi	r22, 0x00	; 0
 250:	70 e0       	ldi	r23, 0x00	; 0
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	d6 cf       	rjmp	.-84     	; 0x204 <rgbWrite>
 258:	08 95       	ret

0000025a <lcdSid>:
 25a:	88 23       	and	r24, r24
 25c:	11 f0       	breq	.+4      	; 0x262 <lcdSid+0x8>
 25e:	a0 9a       	sbi	0x14, 0	; 20
 260:	08 95       	ret
 262:	a0 98       	cbi	0x14, 0	; 20
 264:	08 95       	ret

00000266 <lcdSclk>:
 266:	88 23       	and	r24, r24
 268:	11 f0       	breq	.+4      	; 0x26e <lcdSclk+0x8>
 26a:	a1 9a       	sbi	0x14, 1	; 20
 26c:	08 95       	ret
 26e:	a1 98       	cbi	0x14, 1	; 20
 270:	08 95       	ret

00000272 <lcdLight>:
 272:	81 11       	cpse	r24, r1
 274:	04 c0       	rjmp	.+8      	; 0x27e <lcdLight+0xc>
 276:	84 b5       	in	r24, 0x24	; 36
 278:	8f 7d       	andi	r24, 0xDF	; 223
 27a:	84 bd       	out	0x24, r24	; 36
 27c:	08 95       	ret
 27e:	94 b5       	in	r25, 0x24	; 36
 280:	90 62       	ori	r25, 0x20	; 32
 282:	94 bd       	out	0x24, r25	; 36
 284:	88 bd       	out	0x28, r24	; 40
 286:	08 95       	ret

00000288 <writeLcdF>:
 288:	ef 92       	push	r14
 28a:	ff 92       	push	r15
 28c:	0f 93       	push	r16
 28e:	1f 93       	push	r17
 290:	cf 93       	push	r28
 292:	df 93       	push	r29
 294:	7c 01       	movw	r14, r24
 296:	eb 01       	movw	r28, r22
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	df df       	rcall	.-66     	; 0x25a <lcdSid>
 29c:	05 e0       	ldi	r16, 0x05	; 5
 29e:	10 e0       	ldi	r17, 0x00	; 0
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	e1 df       	rcall	.-62     	; 0x266 <lcdSclk>
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	df df       	rcall	.-66     	; 0x266 <lcdSclk>
 2a8:	01 50       	subi	r16, 0x01	; 1
 2aa:	11 09       	sbc	r17, r1
 2ac:	c9 f7       	brne	.-14     	; 0x2a0 <writeLcdF+0x18>
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	d4 df       	rcall	.-88     	; 0x25a <lcdSid>
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	d8 df       	rcall	.-80     	; 0x266 <lcdSclk>
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	d6 df       	rcall	.-84     	; 0x266 <lcdSclk>
 2ba:	83 e4       	ldi	r24, 0x43	; 67
 2bc:	e8 16       	cp	r14, r24
 2be:	f1 04       	cpc	r15, r1
 2c0:	19 f4       	brne	.+6      	; 0x2c8 <writeLcdF+0x40>
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	ca df       	rcall	.-108    	; 0x25a <lcdSid>
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <writeLcdF+0x44>
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	c7 df       	rcall	.-114    	; 0x25a <lcdSid>
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	cb df       	rcall	.-106    	; 0x266 <lcdSclk>
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	c9 df       	rcall	.-110    	; 0x266 <lcdSclk>
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	c1 df       	rcall	.-126    	; 0x25a <lcdSid>
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	c5 df       	rcall	.-118    	; 0x266 <lcdSclk>
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	c3 df       	rcall	.-122    	; 0x266 <lcdSclk>
 2e0:	04 e0       	ldi	r16, 0x04	; 4
 2e2:	10 e0       	ldi	r17, 0x00	; 0
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	bf df       	rcall	.-130    	; 0x266 <lcdSclk>
 2e8:	c0 ff       	sbrs	r28, 0
 2ea:	03 c0       	rjmp	.+6      	; 0x2f2 <writeLcdF+0x6a>
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	b5 df       	rcall	.-150    	; 0x25a <lcdSid>
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <writeLcdF+0x6e>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	b2 df       	rcall	.-156    	; 0x25a <lcdSid>
 2f6:	d6 95       	lsr	r29
 2f8:	c7 95       	ror	r28
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	b4 df       	rcall	.-152    	; 0x266 <lcdSclk>
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	b2 df       	rcall	.-156    	; 0x266 <lcdSclk>
 302:	01 50       	subi	r16, 0x01	; 1
 304:	11 09       	sbc	r17, r1
 306:	71 f7       	brne	.-36     	; 0x2e4 <writeLcdF+0x5c>
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	a7 df       	rcall	.-178    	; 0x25a <lcdSid>
 30c:	04 e0       	ldi	r16, 0x04	; 4
 30e:	10 e0       	ldi	r17, 0x00	; 0
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	a9 df       	rcall	.-174    	; 0x266 <lcdSclk>
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	a7 df       	rcall	.-178    	; 0x266 <lcdSclk>
 318:	01 50       	subi	r16, 0x01	; 1
 31a:	11 09       	sbc	r17, r1
 31c:	c9 f7       	brne	.-14     	; 0x310 <writeLcdF+0x88>
 31e:	04 e0       	ldi	r16, 0x04	; 4
 320:	10 e0       	ldi	r17, 0x00	; 0
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	a0 df       	rcall	.-192    	; 0x266 <lcdSclk>
 326:	c0 ff       	sbrs	r28, 0
 328:	03 c0       	rjmp	.+6      	; 0x330 <writeLcdF+0xa8>
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	96 df       	rcall	.-212    	; 0x25a <lcdSid>
 32e:	02 c0       	rjmp	.+4      	; 0x334 <writeLcdF+0xac>
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	93 df       	rcall	.-218    	; 0x25a <lcdSid>
 334:	d6 95       	lsr	r29
 336:	c7 95       	ror	r28
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	95 df       	rcall	.-214    	; 0x266 <lcdSclk>
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	93 df       	rcall	.-218    	; 0x266 <lcdSclk>
 340:	01 50       	subi	r16, 0x01	; 1
 342:	11 09       	sbc	r17, r1
 344:	71 f7       	brne	.-36     	; 0x322 <writeLcdF+0x9a>
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	88 df       	rcall	.-240    	; 0x25a <lcdSid>
 34a:	c4 e0       	ldi	r28, 0x04	; 4
 34c:	d0 e0       	ldi	r29, 0x00	; 0
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	8a df       	rcall	.-236    	; 0x266 <lcdSclk>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	88 df       	rcall	.-240    	; 0x266 <lcdSclk>
 356:	21 97       	sbiw	r28, 0x01	; 1
 358:	d1 f7       	brne	.-12     	; 0x34e <writeLcdF+0xc6>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	7e df       	rcall	.-260    	; 0x25a <lcdSid>
 35e:	87 ec       	ldi	r24, 0xC7	; 199
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	01 97       	sbiw	r24, 0x01	; 1
 364:	f1 f7       	brne	.-4      	; 0x362 <writeLcdF+0xda>
 366:	00 c0       	rjmp	.+0      	; 0x368 <writeLcdF+0xe0>
 368:	00 00       	nop
 36a:	df 91       	pop	r29
 36c:	cf 91       	pop	r28
 36e:	1f 91       	pop	r17
 370:	0f 91       	pop	r16
 372:	ff 90       	pop	r15
 374:	ef 90       	pop	r14
 376:	08 95       	ret

00000378 <lcdWriteText>:
 378:	1f 93       	push	r17
 37a:	cf 93       	push	r28
 37c:	df 93       	push	r29
 37e:	cd b7       	in	r28, 0x3d	; 61
 380:	de b7       	in	r29, 0x3e	; 62
 382:	65 97       	sbiw	r28, 0x15	; 21
 384:	0f b6       	in	r0, 0x3f	; 63
 386:	f8 94       	cli
 388:	de bf       	out	0x3e, r29	; 62
 38a:	0f be       	out	0x3f, r0	; 63
 38c:	cd bf       	out	0x3d, r28	; 61
 38e:	9e 01       	movw	r18, r28
 390:	20 5e       	subi	r18, 0xE0	; 224
 392:	3f 4f       	sbci	r19, 0xFF	; 255
 394:	4e 8d       	ldd	r20, Y+30	; 0x1e
 396:	5f 8d       	ldd	r21, Y+31	; 0x1f
 398:	65 e1       	ldi	r22, 0x15	; 21
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	ce 01       	movw	r24, r28
 39e:	01 96       	adiw	r24, 0x01	; 1
 3a0:	3a d2       	rcall	.+1140   	; 0x816 <vsnprintf>
 3a2:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3a4:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3a6:	90 e2       	ldi	r25, 0x20	; 32
 3a8:	89 9f       	mul	r24, r25
 3aa:	60 0d       	add	r22, r0
 3ac:	11 24       	eor	r1, r1
 3ae:	60 68       	ori	r22, 0x80	; 128
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	83 e4       	ldi	r24, 0x43	; 67
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	68 df       	rcall	.-304    	; 0x288 <writeLcdF>
 3b8:	69 81       	ldd	r22, Y+1	; 0x01
 3ba:	66 23       	and	r22, r22
 3bc:	79 f0       	breq	.+30     	; 0x3dc <lcdWriteText+0x64>
 3be:	10 e0       	ldi	r17, 0x00	; 0
 3c0:	1f 5f       	subi	r17, 0xFF	; 255
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	84 e4       	ldi	r24, 0x44	; 68
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	5f df       	rcall	.-322    	; 0x288 <writeLcdF>
 3ca:	e1 e0       	ldi	r30, 0x01	; 1
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	ec 0f       	add	r30, r28
 3d0:	fd 1f       	adc	r31, r29
 3d2:	e1 0f       	add	r30, r17
 3d4:	f1 1d       	adc	r31, r1
 3d6:	60 81       	ld	r22, Z
 3d8:	61 11       	cpse	r22, r1
 3da:	f2 cf       	rjmp	.-28     	; 0x3c0 <lcdWriteText+0x48>
 3dc:	65 96       	adiw	r28, 0x15	; 21
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	f8 94       	cli
 3e2:	de bf       	out	0x3e, r29	; 62
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	cd bf       	out	0x3d, r28	; 61
 3e8:	df 91       	pop	r29
 3ea:	cf 91       	pop	r28
 3ec:	1f 91       	pop	r17
 3ee:	08 95       	ret

000003f0 <lcdClear>:
 3f0:	61 e0       	ldi	r22, 0x01	; 1
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	83 e4       	ldi	r24, 0x43	; 67
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	47 df       	rcall	.-370    	; 0x288 <writeLcdF>
 3fa:	8f e3       	ldi	r24, 0x3F	; 63
 3fc:	9f e1       	ldi	r25, 0x1F	; 31
 3fe:	01 97       	sbiw	r24, 0x01	; 1
 400:	f1 f7       	brne	.-4      	; 0x3fe <lcdClear+0xe>
 402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 404:	00 00       	nop
 406:	83 e0       	ldi	r24, 0x03	; 3
 408:	93 e0       	ldi	r25, 0x03	; 3
 40a:	9f 93       	push	r25
 40c:	8f 93       	push	r24
 40e:	1f 92       	push	r1
 410:	1f 92       	push	r1
 412:	b2 df       	rcall	.-156    	; 0x378 <lcdWriteText>
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	0f 90       	pop	r0
 41c:	08 95       	ret

0000041e <initLcd>:
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	22 df       	rcall	.-444    	; 0x266 <lcdSclk>
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	1a df       	rcall	.-460    	; 0x25a <lcdSid>
 426:	64 e3       	ldi	r22, 0x34	; 52
 428:	70 e0       	ldi	r23, 0x00	; 0
 42a:	83 e4       	ldi	r24, 0x43	; 67
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	2c df       	rcall	.-424    	; 0x288 <writeLcdF>
 430:	69 e0       	ldi	r22, 0x09	; 9
 432:	70 e0       	ldi	r23, 0x00	; 0
 434:	83 e4       	ldi	r24, 0x43	; 67
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	27 df       	rcall	.-434    	; 0x288 <writeLcdF>
 43a:	60 e3       	ldi	r22, 0x30	; 48
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	83 e4       	ldi	r24, 0x43	; 67
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	22 df       	rcall	.-444    	; 0x288 <writeLcdF>
 444:	6c e0       	ldi	r22, 0x0C	; 12
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	83 e4       	ldi	r24, 0x43	; 67
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	1d df       	rcall	.-454    	; 0x288 <writeLcdF>
 44e:	d0 df       	rcall	.-96     	; 0x3f0 <lcdClear>
 450:	67 e0       	ldi	r22, 0x07	; 7
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	83 e4       	ldi	r24, 0x43	; 67
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	17 df       	rcall	.-466    	; 0x288 <writeLcdF>
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	0a cf       	rjmp	.-492    	; 0x272 <lcdLight>
 45e:	08 95       	ret

00000460 <initBoard>:
 460:	4f 92       	push	r4
 462:	5f 92       	push	r5
 464:	6f 92       	push	r6
 466:	7f 92       	push	r7
 468:	8f 92       	push	r8
 46a:	9f 92       	push	r9
 46c:	af 92       	push	r10
 46e:	bf 92       	push	r11
 470:	cf 92       	push	r12
 472:	df 92       	push	r13
 474:	ef 92       	push	r14
 476:	ff 92       	push	r15
 478:	0f 93       	push	r16
 47a:	1f 93       	push	r17
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	c8 2f       	mov	r28, r24
 482:	85 b7       	in	r24, 0x35	; 53
 484:	85 bf       	out	0x35, r24	; 53
 486:	12 b8       	out	0x02, r1	; 2
 488:	8f ef       	ldi	r24, 0xFF	; 255
 48a:	81 b9       	out	0x01, r24	; 1
 48c:	15 b8       	out	0x05, r1	; 5
 48e:	84 b9       	out	0x04, r24	; 4
 490:	88 b9       	out	0x08, r24	; 8
 492:	17 b8       	out	0x07, r1	; 7
 494:	8b b9       	out	0x0b, r24	; 11
 496:	1a b8       	out	0x0a, r1	; 10
 498:	8e b9       	out	0x0e, r24	; 14
 49a:	1d b8       	out	0x0d, r1	; 13
 49c:	72 98       	cbi	0x0e, 2	; 14
 49e:	11 ba       	out	0x11, r1	; 17
 4a0:	10 ba       	out	0x10, r1	; 16
 4a2:	94 e0       	ldi	r25, 0x04	; 4
 4a4:	94 bb       	out	0x14, r25	; 20
 4a6:	93 b3       	in	r25, 0x13	; 19
 4a8:	93 60       	ori	r25, 0x03	; 3
 4aa:	93 bb       	out	0x13, r25	; 19
 4ac:	9d 9a       	sbi	0x13, 5	; 19
 4ae:	97 ec       	ldi	r25, 0xC7	; 199
 4b0:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 4b4:	98 e3       	ldi	r25, 0x38	; 56
 4b6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 4ba:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 4be:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 4c2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 4c6:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 4ca:	8c e3       	ldi	r24, 0x3C	; 60
 4cc:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 4d0:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 4d4:	78 94       	sei
 4d6:	6b de       	rcall	.-810    	; 0x1ae <startSystemTimeMs>
 4d8:	a2 df       	rcall	.-188    	; 0x41e <initLcd>
 4da:	73 de       	rcall	.-794    	; 0x1c2 <initAdc>
 4dc:	aa de       	rcall	.-684    	; 0x232 <initRgb>
 4de:	cc 23       	and	r28, r28
 4e0:	09 f4       	brne	.+2      	; 0x4e4 <initBoard+0x84>
 4e2:	b8 c0       	rjmp	.+368    	; 0x654 <initBoard+0x1f4>
 4e4:	8f ef       	ldi	r24, 0xFF	; 255
 4e6:	c5 de       	rcall	.-630    	; 0x272 <lcdLight>
 4e8:	40 e0       	ldi	r20, 0x00	; 0
 4ea:	50 e0       	ldi	r21, 0x00	; 0
 4ec:	6f ef       	ldi	r22, 0xFF	; 255
 4ee:	73 e0       	ldi	r23, 0x03	; 3
 4f0:	80 e0       	ldi	r24, 0x00	; 0
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	87 de       	rcall	.-754    	; 0x204 <rgbWrite>
 4f6:	80 ef       	ldi	r24, 0xF0	; 240
 4f8:	92 e0       	ldi	r25, 0x02	; 2
 4fa:	9f 93       	push	r25
 4fc:	8f 93       	push	r24
 4fe:	1f 92       	push	r1
 500:	1f 92       	push	r1
 502:	3a df       	rcall	.-396    	; 0x378 <lcdWriteText>
 504:	85 e0       	ldi	r24, 0x05	; 5
 506:	93 e0       	ldi	r25, 0x03	; 3
 508:	9f 93       	push	r25
 50a:	8f 93       	push	r24
 50c:	1f 92       	push	r1
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	8f 93       	push	r24
 512:	32 df       	rcall	.-412    	; 0x378 <lcdWriteText>
 514:	8b ed       	ldi	r24, 0xDB	; 219
 516:	92 e0       	ldi	r25, 0x02	; 2
 518:	9f 93       	push	r25
 51a:	8f 93       	push	r24
 51c:	1f 92       	push	r1
 51e:	82 e0       	ldi	r24, 0x02	; 2
 520:	8f 93       	push	r24
 522:	2a df       	rcall	.-428    	; 0x378 <lcdWriteText>
 524:	8a e1       	ldi	r24, 0x1A	; 26
 526:	93 e0       	ldi	r25, 0x03	; 3
 528:	9f 93       	push	r25
 52a:	8f 93       	push	r24
 52c:	1f 92       	push	r1
 52e:	83 e0       	ldi	r24, 0x03	; 3
 530:	8f 93       	push	r24
 532:	22 df       	rcall	.-444    	; 0x378 <lcdWriteText>
 534:	8d b7       	in	r24, 0x3d	; 61
 536:	9e b7       	in	r25, 0x3e	; 62
 538:	40 96       	adiw	r24, 0x10	; 16
 53a:	0f b6       	in	r0, 0x3f	; 63
 53c:	f8 94       	cli
 53e:	9e bf       	out	0x3e, r25	; 62
 540:	0f be       	out	0x3f, r0	; 63
 542:	8d bf       	out	0x3d, r24	; 61
 544:	88 24       	eor	r8, r8
 546:	83 94       	inc	r8
 548:	c0 e0       	ldi	r28, 0x00	; 0
 54a:	71 2c       	mov	r7, r1
 54c:	99 24       	eor	r9, r9
 54e:	93 94       	inc	r9
 550:	d0 e0       	ldi	r29, 0x00	; 0
 552:	cc 24       	eor	r12, r12
 554:	c3 94       	inc	r12
 556:	d1 2c       	mov	r13, r1
 558:	e1 2c       	mov	r14, r1
 55a:	68 94       	set
 55c:	ff 24       	eor	r15, r15
 55e:	f7 f8       	bld	r15, 7
 560:	66 24       	eor	r6, r6
 562:	63 94       	inc	r6
 564:	51 2c       	mov	r5, r1
 566:	09 e0       	ldi	r16, 0x09	; 9
 568:	11 e0       	ldi	r17, 0x01	; 1
 56a:	0f 2e       	mov	r0, r31
 56c:	ff e2       	ldi	r31, 0x2F	; 47
 56e:	af 2e       	mov	r10, r31
 570:	f3 e0       	ldi	r31, 0x03	; 3
 572:	bf 2e       	mov	r11, r31
 574:	f0 2d       	mov	r31, r0
 576:	0f 2e       	mov	r0, r31
 578:	f3 e0       	ldi	r31, 0x03	; 3
 57a:	4f 2e       	mov	r4, r31
 57c:	f0 2d       	mov	r31, r0
 57e:	99 20       	and	r9, r9
 580:	49 f0       	breq	.+18     	; 0x594 <initBoard+0x134>
 582:	c7 01       	movw	r24, r14
 584:	0d 2e       	mov	r0, r29
 586:	02 c0       	rjmp	.+4      	; 0x58c <initBoard+0x12c>
 588:	96 95       	lsr	r25
 58a:	87 95       	ror	r24
 58c:	0a 94       	dec	r0
 58e:	e2 f7       	brpl	.-8      	; 0x588 <initBoard+0x128>
 590:	0b de       	rcall	.-1002   	; 0x1a8 <ledWriteAll>
 592:	08 c0       	rjmp	.+16     	; 0x5a4 <initBoard+0x144>
 594:	c6 01       	movw	r24, r12
 596:	0d 2e       	mov	r0, r29
 598:	02 c0       	rjmp	.+4      	; 0x59e <initBoard+0x13e>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <initBoard+0x13a>
 5a2:	02 de       	rcall	.-1020   	; 0x1a8 <ledWriteAll>
 5a4:	df 5f       	subi	r29, 0xFF	; 255
 5a6:	d1 31       	cpi	r29, 0x11	; 17
 5a8:	28 f0       	brcs	.+10     	; 0x5b4 <initBoard+0x154>
 5aa:	86 2d       	mov	r24, r6
 5ac:	91 10       	cpse	r9, r1
 5ae:	85 2d       	mov	r24, r5
 5b0:	98 2e       	mov	r9, r24
 5b2:	d0 e0       	ldi	r29, 0x00	; 0
 5b4:	88 20       	and	r8, r8
 5b6:	11 f0       	breq	.+4      	; 0x5bc <initBoard+0x15c>
 5b8:	ce 5f       	subi	r28, 0xFE	; 254
 5ba:	01 c0       	rjmp	.+2      	; 0x5be <initBoard+0x15e>
 5bc:	c2 50       	subi	r28, 0x02	; 2
 5be:	8c 2f       	mov	r24, r28
 5c0:	58 de       	rcall	.-848    	; 0x272 <lcdLight>
 5c2:	ce 3f       	cpi	r28, 0xFE	; 254
 5c4:	21 f0       	breq	.+8      	; 0x5ce <initBoard+0x16e>
 5c6:	c8 37       	cpi	r28, 0x78	; 120
 5c8:	19 f4       	brne	.+6      	; 0x5d0 <initBoard+0x170>
 5ca:	86 2c       	mov	r8, r6
 5cc:	01 c0       	rjmp	.+2      	; 0x5d0 <initBoard+0x170>
 5ce:	85 2c       	mov	r8, r5
 5d0:	71 10       	cpse	r7, r1
 5d2:	3b c0       	rjmp	.+118    	; 0x64a <initBoard+0x1ea>
 5d4:	f8 01       	movw	r30, r16
 5d6:	80 81       	ld	r24, Z
 5d8:	83 7c       	andi	r24, 0xC3	; 195
 5da:	91 f0       	breq	.+36     	; 0x600 <initBoard+0x1a0>
 5dc:	40 e0       	ldi	r20, 0x00	; 0
 5de:	50 e0       	ldi	r21, 0x00	; 0
 5e0:	66 e2       	ldi	r22, 0x26	; 38
 5e2:	72 e0       	ldi	r23, 0x02	; 2
 5e4:	8f ef       	ldi	r24, 0xFF	; 255
 5e6:	93 e0       	ldi	r25, 0x03	; 3
 5e8:	0d de       	rcall	.-998    	; 0x204 <rgbWrite>
 5ea:	bf 92       	push	r11
 5ec:	af 92       	push	r10
 5ee:	1f 92       	push	r1
 5f0:	4f 92       	push	r4
 5f2:	c2 de       	rcall	.-636    	; 0x378 <lcdWriteText>
 5f4:	0f 90       	pop	r0
 5f6:	0f 90       	pop	r0
 5f8:	0f 90       	pop	r0
 5fa:	0f 90       	pop	r0
 5fc:	76 2c       	mov	r7, r6
 5fe:	25 c0       	rjmp	.+74     	; 0x64a <initBoard+0x1ea>
 600:	8f ef       	ldi	r24, 0xFF	; 255
 602:	9c e7       	ldi	r25, 0x7C	; 124
 604:	01 97       	sbiw	r24, 0x01	; 1
 606:	f1 f7       	brne	.-4      	; 0x604 <initBoard+0x1a4>
 608:	00 c0       	rjmp	.+0      	; 0x60a <initBoard+0x1aa>
 60a:	00 00       	nop
 60c:	b8 cf       	rjmp	.-144    	; 0x57e <initBoard+0x11e>
 60e:	f0 de       	rcall	.-544    	; 0x3f0 <lcdClear>
 610:	80 e0       	ldi	r24, 0x00	; 0
 612:	2f de       	rcall	.-930    	; 0x272 <lcdLight>
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	c7 dd       	rcall	.-1138   	; 0x1a8 <ledWriteAll>
 61a:	40 e0       	ldi	r20, 0x00	; 0
 61c:	50 e0       	ldi	r21, 0x00	; 0
 61e:	60 e0       	ldi	r22, 0x00	; 0
 620:	70 e0       	ldi	r23, 0x00	; 0
 622:	80 e0       	ldi	r24, 0x00	; 0
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	ee dd       	rcall	.-1060   	; 0x204 <rgbWrite>
 628:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <systemTimeMs>
 62c:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <systemTimeMs+0x1>
 630:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <systemTimeMs+0x2>
 634:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <systemTimeMs+0x3>
 638:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <systemTimeMs+0x4>
 63c:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <systemTimeMs+0x5>
 640:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <systemTimeMs+0x6>
 644:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <systemTimeMs+0x7>
 648:	05 c0       	rjmp	.+10     	; 0x654 <initBoard+0x1f4>
 64a:	f8 01       	movw	r30, r16
 64c:	80 81       	ld	r24, Z
 64e:	83 7c       	andi	r24, 0xC3	; 195
 650:	b9 f6       	brne	.-82     	; 0x600 <initBoard+0x1a0>
 652:	dd cf       	rjmp	.-70     	; 0x60e <initBoard+0x1ae>
 654:	df 91       	pop	r29
 656:	cf 91       	pop	r28
 658:	1f 91       	pop	r17
 65a:	0f 91       	pop	r16
 65c:	ff 90       	pop	r15
 65e:	ef 90       	pop	r14
 660:	df 90       	pop	r13
 662:	cf 90       	pop	r12
 664:	bf 90       	pop	r11
 666:	af 90       	pop	r10
 668:	9f 90       	pop	r9
 66a:	8f 90       	pop	r8
 66c:	7f 90       	pop	r7
 66e:	6f 90       	pop	r6
 670:	5f 90       	pop	r5
 672:	4f 90       	pop	r4
 674:	08 95       	ret

00000676 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 676:	cf 93       	push	r28
 678:	df 93       	push	r29
 67a:	cd b7       	in	r28, 0x3d	; 61
 67c:	de b7       	in	r29, 0x3e	; 62
 67e:	28 97       	sbiw	r28, 0x08	; 8
 680:	0f b6       	in	r0, 0x3f	; 63
 682:	f8 94       	cli
 684:	de bf       	out	0x3e, r29	; 62
 686:	0f be       	out	0x3f, r0	; 63
 688:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 68a:	88 e0       	ldi	r24, 0x08	; 8
 68c:	e8 ec       	ldi	r30, 0xC8	; 200
 68e:	f2 e0       	ldi	r31, 0x02	; 2
 690:	de 01       	movw	r26, r28
 692:	11 96       	adiw	r26, 0x01	; 1
 694:	01 90       	ld	r0, Z+
 696:	0d 92       	st	X+, r0
 698:	8a 95       	dec	r24
 69a:	e1 f7       	brne	.-8      	; 0x694 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 69c:	e5 e0       	ldi	r30, 0x05	; 5
 69e:	f1 e0       	ldi	r31, 0x01	; 1
 6a0:	80 81       	ld	r24, Z
 6a2:	8f 7b       	andi	r24, 0xBF	; 191
 6a4:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6a6:	e0 91 48 03 	lds	r30, 0x0348	; 0x800348 <Zeilen_Nr.2731>
 6aa:	f0 91 49 03 	lds	r31, 0x0349	; 0x800349 <Zeilen_Nr.2731+0x1>
 6ae:	81 e0       	ldi	r24, 0x01	; 1
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	8c 0f       	add	r24, r28
 6b4:	9d 1f       	adc	r25, r29
 6b6:	e8 0f       	add	r30, r24
 6b8:	f9 1f       	adc	r31, r25
 6ba:	80 81       	ld	r24, Z
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	90 93 47 03 	sts	0x0347, r25	; 0x800347 <__data_end+0x1>
 6c2:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <__data_end>
 6c6:	a4 ec       	ldi	r26, 0xC4	; 196
 6c8:	b3 e0       	ldi	r27, 0x03	; 3
 6ca:	24 e5       	ldi	r18, 0x54	; 84
 6cc:	33 e0       	ldi	r19, 0x03	; 3
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 6ce:	e5 e0       	ldi	r30, 0x05	; 5
 6d0:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 6d2:	5e 91       	ld	r21, -X
 6d4:	4e 91       	ld	r20, -X
 6d6:	80 91 46 03 	lds	r24, 0x0346	; 0x800346 <__data_end>
 6da:	90 91 47 03 	lds	r25, 0x0347	; 0x800347 <__data_end+0x1>
 6de:	84 23       	and	r24, r20
 6e0:	95 23       	and	r25, r21
 6e2:	89 2b       	or	r24, r25
 6e4:	21 f0       	breq	.+8      	; 0x6ee <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 6e6:	80 81       	ld	r24, Z
 6e8:	80 62       	ori	r24, 0x20	; 32
 6ea:	80 83       	st	Z, r24
 6ec:	03 c0       	rjmp	.+6      	; 0x6f4 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 6ee:	80 81       	ld	r24, Z
 6f0:	8f 7d       	andi	r24, 0xDF	; 223
 6f2:	80 83       	st	Z, r24
        }
        CLOCK_1;
 6f4:	80 81       	ld	r24, Z
 6f6:	80 61       	ori	r24, 0x10	; 16
 6f8:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 6fa:	80 81       	ld	r24, Z
 6fc:	8f 7e       	andi	r24, 0xEF	; 239
 6fe:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 700:	a2 17       	cp	r26, r18
 702:	b3 07       	cpc	r27, r19
 704:	31 f7       	brne	.-52     	; 0x6d2 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 706:	e5 e0       	ldi	r30, 0x05	; 5
 708:	f1 e0       	ldi	r31, 0x01	; 1
 70a:	80 81       	ld	r24, Z
 70c:	87 7f       	andi	r24, 0xF7	; 247
 70e:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 710:	80 81       	ld	r24, Z
 712:	88 7f       	andi	r24, 0xF8	; 248
 714:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 716:	90 81       	ld	r25, Z
 718:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <Zeilen_Nr.2731>
 71c:	89 2b       	or	r24, r25
 71e:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 720:	80 81       	ld	r24, Z
 722:	80 64       	ori	r24, 0x40	; 64
 724:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 726:	80 81       	ld	r24, Z
 728:	88 60       	ori	r24, 0x08	; 8
 72a:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 72c:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <Zeilen_Nr.2731>
 730:	90 91 49 03 	lds	r25, 0x0349	; 0x800349 <Zeilen_Nr.2731+0x1>
 734:	87 30       	cpi	r24, 0x07	; 7
 736:	91 05       	cpc	r25, r1
 738:	30 f4       	brcc	.+12     	; 0x746 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 73a:	01 96       	adiw	r24, 0x01	; 1
 73c:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <Zeilen_Nr.2731+0x1>
 740:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <Zeilen_Nr.2731>
 744:	07 c0       	rjmp	.+14     	; 0x754 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 746:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <Zeilen_Nr.2731+0x1>
 74a:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <Zeilen_Nr.2731>
        writeTextFinished = 1;
 74e:	81 e0       	ldi	r24, 0x01	; 1
 750:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <writeTextFinished>
    }
    
 754:	28 96       	adiw	r28, 0x08	; 8
 756:	0f b6       	in	r0, 0x3f	; 63
 758:	f8 94       	cli
 75a:	de bf       	out	0x3e, r29	; 62
 75c:	0f be       	out	0x3f, r0	; 63
 75e:	cd bf       	out	0x3d, r28	; 61
 760:	df 91       	pop	r29
 762:	cf 91       	pop	r28
 764:	08 95       	ret

00000766 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 766:	1f 92       	push	r1
 768:	0f 92       	push	r0
 76a:	0f b6       	in	r0, 0x3f	; 63
 76c:	0f 92       	push	r0
 76e:	11 24       	eor	r1, r1
 770:	0b b6       	in	r0, 0x3b	; 59
 772:	0f 92       	push	r0
 774:	2f 93       	push	r18
 776:	3f 93       	push	r19
 778:	4f 93       	push	r20
 77a:	5f 93       	push	r21
 77c:	6f 93       	push	r22
 77e:	7f 93       	push	r23
 780:	8f 93       	push	r24
 782:	9f 93       	push	r25
 784:	af 93       	push	r26
 786:	bf 93       	push	r27
 788:	ef 93       	push	r30
 78a:	ff 93       	push	r31
    systemTimeMs += 1;
 78c:	20 91 4b 03 	lds	r18, 0x034B	; 0x80034b <systemTimeMs>
 790:	30 91 4c 03 	lds	r19, 0x034C	; 0x80034c <systemTimeMs+0x1>
 794:	40 91 4d 03 	lds	r20, 0x034D	; 0x80034d <systemTimeMs+0x2>
 798:	50 91 4e 03 	lds	r21, 0x034E	; 0x80034e <systemTimeMs+0x3>
 79c:	60 91 4f 03 	lds	r22, 0x034F	; 0x80034f <systemTimeMs+0x4>
 7a0:	70 91 50 03 	lds	r23, 0x0350	; 0x800350 <systemTimeMs+0x5>
 7a4:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <systemTimeMs+0x6>
 7a8:	90 91 52 03 	lds	r25, 0x0352	; 0x800352 <systemTimeMs+0x7>
 7ac:	a1 e0       	ldi	r26, 0x01	; 1
 7ae:	27 d0       	rcall	.+78     	; 0x7fe <__adddi3_s8>
 7b0:	20 93 4b 03 	sts	0x034B, r18	; 0x80034b <systemTimeMs>
 7b4:	30 93 4c 03 	sts	0x034C, r19	; 0x80034c <systemTimeMs+0x1>
 7b8:	40 93 4d 03 	sts	0x034D, r20	; 0x80034d <systemTimeMs+0x2>
 7bc:	50 93 4e 03 	sts	0x034E, r21	; 0x80034e <systemTimeMs+0x3>
 7c0:	60 93 4f 03 	sts	0x034F, r22	; 0x80034f <systemTimeMs+0x4>
 7c4:	70 93 50 03 	sts	0x0350, r23	; 0x800350 <systemTimeMs+0x5>
 7c8:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <systemTimeMs+0x6>
 7cc:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 7d0:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <matrixRunning>
 7d4:	81 11       	cpse	r24, r1
 7d6:	4f df       	rcall	.-354    	; 0x676 <matrixWriteNextLine>
}
 7d8:	ff 91       	pop	r31
 7da:	ef 91       	pop	r30
 7dc:	bf 91       	pop	r27
 7de:	af 91       	pop	r26
 7e0:	9f 91       	pop	r25
 7e2:	8f 91       	pop	r24
 7e4:	7f 91       	pop	r23
 7e6:	6f 91       	pop	r22
 7e8:	5f 91       	pop	r21
 7ea:	4f 91       	pop	r20
 7ec:	3f 91       	pop	r19
 7ee:	2f 91       	pop	r18
 7f0:	0f 90       	pop	r0
 7f2:	0b be       	out	0x3b, r0	; 59
 7f4:	0f 90       	pop	r0
 7f6:	0f be       	out	0x3f, r0	; 63
 7f8:	0f 90       	pop	r0
 7fa:	1f 90       	pop	r1
 7fc:	18 95       	reti

000007fe <__adddi3_s8>:
 7fe:	00 24       	eor	r0, r0
 800:	a7 fd       	sbrc	r26, 7
 802:	00 94       	com	r0
 804:	2a 0f       	add	r18, r26
 806:	30 1d       	adc	r19, r0
 808:	40 1d       	adc	r20, r0
 80a:	50 1d       	adc	r21, r0
 80c:	60 1d       	adc	r22, r0
 80e:	70 1d       	adc	r23, r0
 810:	80 1d       	adc	r24, r0
 812:	90 1d       	adc	r25, r0
 814:	08 95       	ret

00000816 <vsnprintf>:
 816:	0f 93       	push	r16
 818:	1f 93       	push	r17
 81a:	cf 93       	push	r28
 81c:	df 93       	push	r29
 81e:	cd b7       	in	r28, 0x3d	; 61
 820:	de b7       	in	r29, 0x3e	; 62
 822:	2e 97       	sbiw	r28, 0x0e	; 14
 824:	0f b6       	in	r0, 0x3f	; 63
 826:	f8 94       	cli
 828:	de bf       	out	0x3e, r29	; 62
 82a:	0f be       	out	0x3f, r0	; 63
 82c:	cd bf       	out	0x3d, r28	; 61
 82e:	8c 01       	movw	r16, r24
 830:	fa 01       	movw	r30, r20
 832:	86 e0       	ldi	r24, 0x06	; 6
 834:	8c 83       	std	Y+4, r24	; 0x04
 836:	1a 83       	std	Y+2, r17	; 0x02
 838:	09 83       	std	Y+1, r16	; 0x01
 83a:	77 ff       	sbrs	r23, 7
 83c:	02 c0       	rjmp	.+4      	; 0x842 <vsnprintf+0x2c>
 83e:	60 e0       	ldi	r22, 0x00	; 0
 840:	70 e8       	ldi	r23, 0x80	; 128
 842:	cb 01       	movw	r24, r22
 844:	01 97       	sbiw	r24, 0x01	; 1
 846:	9e 83       	std	Y+6, r25	; 0x06
 848:	8d 83       	std	Y+5, r24	; 0x05
 84a:	a9 01       	movw	r20, r18
 84c:	bf 01       	movw	r22, r30
 84e:	ce 01       	movw	r24, r28
 850:	01 96       	adiw	r24, 0x01	; 1
 852:	19 d0       	rcall	.+50     	; 0x886 <vfprintf>
 854:	4d 81       	ldd	r20, Y+5	; 0x05
 856:	5e 81       	ldd	r21, Y+6	; 0x06
 858:	57 fd       	sbrc	r21, 7
 85a:	0a c0       	rjmp	.+20     	; 0x870 <vsnprintf+0x5a>
 85c:	2f 81       	ldd	r18, Y+7	; 0x07
 85e:	38 85       	ldd	r19, Y+8	; 0x08
 860:	42 17       	cp	r20, r18
 862:	53 07       	cpc	r21, r19
 864:	0c f4       	brge	.+2      	; 0x868 <vsnprintf+0x52>
 866:	9a 01       	movw	r18, r20
 868:	f8 01       	movw	r30, r16
 86a:	e2 0f       	add	r30, r18
 86c:	f3 1f       	adc	r31, r19
 86e:	10 82       	st	Z, r1
 870:	2e 96       	adiw	r28, 0x0e	; 14
 872:	0f b6       	in	r0, 0x3f	; 63
 874:	f8 94       	cli
 876:	de bf       	out	0x3e, r29	; 62
 878:	0f be       	out	0x3f, r0	; 63
 87a:	cd bf       	out	0x3d, r28	; 61
 87c:	df 91       	pop	r29
 87e:	cf 91       	pop	r28
 880:	1f 91       	pop	r17
 882:	0f 91       	pop	r16
 884:	08 95       	ret

00000886 <vfprintf>:
 886:	2f 92       	push	r2
 888:	3f 92       	push	r3
 88a:	4f 92       	push	r4
 88c:	5f 92       	push	r5
 88e:	6f 92       	push	r6
 890:	7f 92       	push	r7
 892:	8f 92       	push	r8
 894:	9f 92       	push	r9
 896:	af 92       	push	r10
 898:	bf 92       	push	r11
 89a:	cf 92       	push	r12
 89c:	df 92       	push	r13
 89e:	ef 92       	push	r14
 8a0:	ff 92       	push	r15
 8a2:	0f 93       	push	r16
 8a4:	1f 93       	push	r17
 8a6:	cf 93       	push	r28
 8a8:	df 93       	push	r29
 8aa:	cd b7       	in	r28, 0x3d	; 61
 8ac:	de b7       	in	r29, 0x3e	; 62
 8ae:	2b 97       	sbiw	r28, 0x0b	; 11
 8b0:	0f b6       	in	r0, 0x3f	; 63
 8b2:	f8 94       	cli
 8b4:	de bf       	out	0x3e, r29	; 62
 8b6:	0f be       	out	0x3f, r0	; 63
 8b8:	cd bf       	out	0x3d, r28	; 61
 8ba:	6c 01       	movw	r12, r24
 8bc:	7b 01       	movw	r14, r22
 8be:	8a 01       	movw	r16, r20
 8c0:	fc 01       	movw	r30, r24
 8c2:	17 82       	std	Z+7, r1	; 0x07
 8c4:	16 82       	std	Z+6, r1	; 0x06
 8c6:	83 81       	ldd	r24, Z+3	; 0x03
 8c8:	81 ff       	sbrs	r24, 1
 8ca:	bf c1       	rjmp	.+894    	; 0xc4a <vfprintf+0x3c4>
 8cc:	ce 01       	movw	r24, r28
 8ce:	01 96       	adiw	r24, 0x01	; 1
 8d0:	3c 01       	movw	r6, r24
 8d2:	f6 01       	movw	r30, r12
 8d4:	93 81       	ldd	r25, Z+3	; 0x03
 8d6:	f7 01       	movw	r30, r14
 8d8:	93 fd       	sbrc	r25, 3
 8da:	85 91       	lpm	r24, Z+
 8dc:	93 ff       	sbrs	r25, 3
 8de:	81 91       	ld	r24, Z+
 8e0:	7f 01       	movw	r14, r30
 8e2:	88 23       	and	r24, r24
 8e4:	09 f4       	brne	.+2      	; 0x8e8 <vfprintf+0x62>
 8e6:	ad c1       	rjmp	.+858    	; 0xc42 <vfprintf+0x3bc>
 8e8:	85 32       	cpi	r24, 0x25	; 37
 8ea:	39 f4       	brne	.+14     	; 0x8fa <vfprintf+0x74>
 8ec:	93 fd       	sbrc	r25, 3
 8ee:	85 91       	lpm	r24, Z+
 8f0:	93 ff       	sbrs	r25, 3
 8f2:	81 91       	ld	r24, Z+
 8f4:	7f 01       	movw	r14, r30
 8f6:	85 32       	cpi	r24, 0x25	; 37
 8f8:	21 f4       	brne	.+8      	; 0x902 <vfprintf+0x7c>
 8fa:	b6 01       	movw	r22, r12
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	d6 d1       	rcall	.+940    	; 0xcac <fputc>
 900:	e8 cf       	rjmp	.-48     	; 0x8d2 <vfprintf+0x4c>
 902:	91 2c       	mov	r9, r1
 904:	21 2c       	mov	r2, r1
 906:	31 2c       	mov	r3, r1
 908:	ff e1       	ldi	r31, 0x1F	; 31
 90a:	f3 15       	cp	r31, r3
 90c:	d8 f0       	brcs	.+54     	; 0x944 <vfprintf+0xbe>
 90e:	8b 32       	cpi	r24, 0x2B	; 43
 910:	79 f0       	breq	.+30     	; 0x930 <vfprintf+0xaa>
 912:	38 f4       	brcc	.+14     	; 0x922 <vfprintf+0x9c>
 914:	80 32       	cpi	r24, 0x20	; 32
 916:	79 f0       	breq	.+30     	; 0x936 <vfprintf+0xb0>
 918:	83 32       	cpi	r24, 0x23	; 35
 91a:	a1 f4       	brne	.+40     	; 0x944 <vfprintf+0xbe>
 91c:	23 2d       	mov	r18, r3
 91e:	20 61       	ori	r18, 0x10	; 16
 920:	1d c0       	rjmp	.+58     	; 0x95c <vfprintf+0xd6>
 922:	8d 32       	cpi	r24, 0x2D	; 45
 924:	61 f0       	breq	.+24     	; 0x93e <vfprintf+0xb8>
 926:	80 33       	cpi	r24, 0x30	; 48
 928:	69 f4       	brne	.+26     	; 0x944 <vfprintf+0xbe>
 92a:	23 2d       	mov	r18, r3
 92c:	21 60       	ori	r18, 0x01	; 1
 92e:	16 c0       	rjmp	.+44     	; 0x95c <vfprintf+0xd6>
 930:	83 2d       	mov	r24, r3
 932:	82 60       	ori	r24, 0x02	; 2
 934:	38 2e       	mov	r3, r24
 936:	e3 2d       	mov	r30, r3
 938:	e4 60       	ori	r30, 0x04	; 4
 93a:	3e 2e       	mov	r3, r30
 93c:	2a c0       	rjmp	.+84     	; 0x992 <vfprintf+0x10c>
 93e:	f3 2d       	mov	r31, r3
 940:	f8 60       	ori	r31, 0x08	; 8
 942:	1d c0       	rjmp	.+58     	; 0x97e <vfprintf+0xf8>
 944:	37 fc       	sbrc	r3, 7
 946:	2d c0       	rjmp	.+90     	; 0x9a2 <vfprintf+0x11c>
 948:	20 ed       	ldi	r18, 0xD0	; 208
 94a:	28 0f       	add	r18, r24
 94c:	2a 30       	cpi	r18, 0x0A	; 10
 94e:	40 f0       	brcs	.+16     	; 0x960 <vfprintf+0xda>
 950:	8e 32       	cpi	r24, 0x2E	; 46
 952:	b9 f4       	brne	.+46     	; 0x982 <vfprintf+0xfc>
 954:	36 fc       	sbrc	r3, 6
 956:	75 c1       	rjmp	.+746    	; 0xc42 <vfprintf+0x3bc>
 958:	23 2d       	mov	r18, r3
 95a:	20 64       	ori	r18, 0x40	; 64
 95c:	32 2e       	mov	r3, r18
 95e:	19 c0       	rjmp	.+50     	; 0x992 <vfprintf+0x10c>
 960:	36 fe       	sbrs	r3, 6
 962:	06 c0       	rjmp	.+12     	; 0x970 <vfprintf+0xea>
 964:	8a e0       	ldi	r24, 0x0A	; 10
 966:	98 9e       	mul	r9, r24
 968:	20 0d       	add	r18, r0
 96a:	11 24       	eor	r1, r1
 96c:	92 2e       	mov	r9, r18
 96e:	11 c0       	rjmp	.+34     	; 0x992 <vfprintf+0x10c>
 970:	ea e0       	ldi	r30, 0x0A	; 10
 972:	2e 9e       	mul	r2, r30
 974:	20 0d       	add	r18, r0
 976:	11 24       	eor	r1, r1
 978:	22 2e       	mov	r2, r18
 97a:	f3 2d       	mov	r31, r3
 97c:	f0 62       	ori	r31, 0x20	; 32
 97e:	3f 2e       	mov	r3, r31
 980:	08 c0       	rjmp	.+16     	; 0x992 <vfprintf+0x10c>
 982:	8c 36       	cpi	r24, 0x6C	; 108
 984:	21 f4       	brne	.+8      	; 0x98e <vfprintf+0x108>
 986:	83 2d       	mov	r24, r3
 988:	80 68       	ori	r24, 0x80	; 128
 98a:	38 2e       	mov	r3, r24
 98c:	02 c0       	rjmp	.+4      	; 0x992 <vfprintf+0x10c>
 98e:	88 36       	cpi	r24, 0x68	; 104
 990:	41 f4       	brne	.+16     	; 0x9a2 <vfprintf+0x11c>
 992:	f7 01       	movw	r30, r14
 994:	93 fd       	sbrc	r25, 3
 996:	85 91       	lpm	r24, Z+
 998:	93 ff       	sbrs	r25, 3
 99a:	81 91       	ld	r24, Z+
 99c:	7f 01       	movw	r14, r30
 99e:	81 11       	cpse	r24, r1
 9a0:	b3 cf       	rjmp	.-154    	; 0x908 <vfprintf+0x82>
 9a2:	98 2f       	mov	r25, r24
 9a4:	9f 7d       	andi	r25, 0xDF	; 223
 9a6:	95 54       	subi	r25, 0x45	; 69
 9a8:	93 30       	cpi	r25, 0x03	; 3
 9aa:	28 f4       	brcc	.+10     	; 0x9b6 <vfprintf+0x130>
 9ac:	0c 5f       	subi	r16, 0xFC	; 252
 9ae:	1f 4f       	sbci	r17, 0xFF	; 255
 9b0:	9f e3       	ldi	r25, 0x3F	; 63
 9b2:	99 83       	std	Y+1, r25	; 0x01
 9b4:	0d c0       	rjmp	.+26     	; 0x9d0 <vfprintf+0x14a>
 9b6:	83 36       	cpi	r24, 0x63	; 99
 9b8:	31 f0       	breq	.+12     	; 0x9c6 <vfprintf+0x140>
 9ba:	83 37       	cpi	r24, 0x73	; 115
 9bc:	71 f0       	breq	.+28     	; 0x9da <vfprintf+0x154>
 9be:	83 35       	cpi	r24, 0x53	; 83
 9c0:	09 f0       	breq	.+2      	; 0x9c4 <vfprintf+0x13e>
 9c2:	55 c0       	rjmp	.+170    	; 0xa6e <vfprintf+0x1e8>
 9c4:	20 c0       	rjmp	.+64     	; 0xa06 <vfprintf+0x180>
 9c6:	f8 01       	movw	r30, r16
 9c8:	80 81       	ld	r24, Z
 9ca:	89 83       	std	Y+1, r24	; 0x01
 9cc:	0e 5f       	subi	r16, 0xFE	; 254
 9ce:	1f 4f       	sbci	r17, 0xFF	; 255
 9d0:	88 24       	eor	r8, r8
 9d2:	83 94       	inc	r8
 9d4:	91 2c       	mov	r9, r1
 9d6:	53 01       	movw	r10, r6
 9d8:	12 c0       	rjmp	.+36     	; 0x9fe <vfprintf+0x178>
 9da:	28 01       	movw	r4, r16
 9dc:	f2 e0       	ldi	r31, 0x02	; 2
 9de:	4f 0e       	add	r4, r31
 9e0:	51 1c       	adc	r5, r1
 9e2:	f8 01       	movw	r30, r16
 9e4:	a0 80       	ld	r10, Z
 9e6:	b1 80       	ldd	r11, Z+1	; 0x01
 9e8:	36 fe       	sbrs	r3, 6
 9ea:	03 c0       	rjmp	.+6      	; 0x9f2 <vfprintf+0x16c>
 9ec:	69 2d       	mov	r22, r9
 9ee:	70 e0       	ldi	r23, 0x00	; 0
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <vfprintf+0x170>
 9f2:	6f ef       	ldi	r22, 0xFF	; 255
 9f4:	7f ef       	ldi	r23, 0xFF	; 255
 9f6:	c5 01       	movw	r24, r10
 9f8:	4e d1       	rcall	.+668    	; 0xc96 <strnlen>
 9fa:	4c 01       	movw	r8, r24
 9fc:	82 01       	movw	r16, r4
 9fe:	f3 2d       	mov	r31, r3
 a00:	ff 77       	andi	r31, 0x7F	; 127
 a02:	3f 2e       	mov	r3, r31
 a04:	15 c0       	rjmp	.+42     	; 0xa30 <vfprintf+0x1aa>
 a06:	28 01       	movw	r4, r16
 a08:	22 e0       	ldi	r18, 0x02	; 2
 a0a:	42 0e       	add	r4, r18
 a0c:	51 1c       	adc	r5, r1
 a0e:	f8 01       	movw	r30, r16
 a10:	a0 80       	ld	r10, Z
 a12:	b1 80       	ldd	r11, Z+1	; 0x01
 a14:	36 fe       	sbrs	r3, 6
 a16:	03 c0       	rjmp	.+6      	; 0xa1e <vfprintf+0x198>
 a18:	69 2d       	mov	r22, r9
 a1a:	70 e0       	ldi	r23, 0x00	; 0
 a1c:	02 c0       	rjmp	.+4      	; 0xa22 <vfprintf+0x19c>
 a1e:	6f ef       	ldi	r22, 0xFF	; 255
 a20:	7f ef       	ldi	r23, 0xFF	; 255
 a22:	c5 01       	movw	r24, r10
 a24:	2d d1       	rcall	.+602    	; 0xc80 <strnlen_P>
 a26:	4c 01       	movw	r8, r24
 a28:	f3 2d       	mov	r31, r3
 a2a:	f0 68       	ori	r31, 0x80	; 128
 a2c:	3f 2e       	mov	r3, r31
 a2e:	82 01       	movw	r16, r4
 a30:	33 fc       	sbrc	r3, 3
 a32:	19 c0       	rjmp	.+50     	; 0xa66 <vfprintf+0x1e0>
 a34:	82 2d       	mov	r24, r2
 a36:	90 e0       	ldi	r25, 0x00	; 0
 a38:	88 16       	cp	r8, r24
 a3a:	99 06       	cpc	r9, r25
 a3c:	a0 f4       	brcc	.+40     	; 0xa66 <vfprintf+0x1e0>
 a3e:	b6 01       	movw	r22, r12
 a40:	80 e2       	ldi	r24, 0x20	; 32
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	33 d1       	rcall	.+614    	; 0xcac <fputc>
 a46:	2a 94       	dec	r2
 a48:	f5 cf       	rjmp	.-22     	; 0xa34 <vfprintf+0x1ae>
 a4a:	f5 01       	movw	r30, r10
 a4c:	37 fc       	sbrc	r3, 7
 a4e:	85 91       	lpm	r24, Z+
 a50:	37 fe       	sbrs	r3, 7
 a52:	81 91       	ld	r24, Z+
 a54:	5f 01       	movw	r10, r30
 a56:	b6 01       	movw	r22, r12
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	28 d1       	rcall	.+592    	; 0xcac <fputc>
 a5c:	21 10       	cpse	r2, r1
 a5e:	2a 94       	dec	r2
 a60:	21 e0       	ldi	r18, 0x01	; 1
 a62:	82 1a       	sub	r8, r18
 a64:	91 08       	sbc	r9, r1
 a66:	81 14       	cp	r8, r1
 a68:	91 04       	cpc	r9, r1
 a6a:	79 f7       	brne	.-34     	; 0xa4a <vfprintf+0x1c4>
 a6c:	e1 c0       	rjmp	.+450    	; 0xc30 <vfprintf+0x3aa>
 a6e:	84 36       	cpi	r24, 0x64	; 100
 a70:	11 f0       	breq	.+4      	; 0xa76 <vfprintf+0x1f0>
 a72:	89 36       	cpi	r24, 0x69	; 105
 a74:	39 f5       	brne	.+78     	; 0xac4 <vfprintf+0x23e>
 a76:	f8 01       	movw	r30, r16
 a78:	37 fe       	sbrs	r3, 7
 a7a:	07 c0       	rjmp	.+14     	; 0xa8a <vfprintf+0x204>
 a7c:	60 81       	ld	r22, Z
 a7e:	71 81       	ldd	r23, Z+1	; 0x01
 a80:	82 81       	ldd	r24, Z+2	; 0x02
 a82:	93 81       	ldd	r25, Z+3	; 0x03
 a84:	0c 5f       	subi	r16, 0xFC	; 252
 a86:	1f 4f       	sbci	r17, 0xFF	; 255
 a88:	08 c0       	rjmp	.+16     	; 0xa9a <vfprintf+0x214>
 a8a:	60 81       	ld	r22, Z
 a8c:	71 81       	ldd	r23, Z+1	; 0x01
 a8e:	07 2e       	mov	r0, r23
 a90:	00 0c       	add	r0, r0
 a92:	88 0b       	sbc	r24, r24
 a94:	99 0b       	sbc	r25, r25
 a96:	0e 5f       	subi	r16, 0xFE	; 254
 a98:	1f 4f       	sbci	r17, 0xFF	; 255
 a9a:	f3 2d       	mov	r31, r3
 a9c:	ff 76       	andi	r31, 0x6F	; 111
 a9e:	3f 2e       	mov	r3, r31
 aa0:	97 ff       	sbrs	r25, 7
 aa2:	09 c0       	rjmp	.+18     	; 0xab6 <vfprintf+0x230>
 aa4:	90 95       	com	r25
 aa6:	80 95       	com	r24
 aa8:	70 95       	com	r23
 aaa:	61 95       	neg	r22
 aac:	7f 4f       	sbci	r23, 0xFF	; 255
 aae:	8f 4f       	sbci	r24, 0xFF	; 255
 ab0:	9f 4f       	sbci	r25, 0xFF	; 255
 ab2:	f0 68       	ori	r31, 0x80	; 128
 ab4:	3f 2e       	mov	r3, r31
 ab6:	2a e0       	ldi	r18, 0x0A	; 10
 ab8:	30 e0       	ldi	r19, 0x00	; 0
 aba:	a3 01       	movw	r20, r6
 abc:	33 d1       	rcall	.+614    	; 0xd24 <__ultoa_invert>
 abe:	88 2e       	mov	r8, r24
 ac0:	86 18       	sub	r8, r6
 ac2:	44 c0       	rjmp	.+136    	; 0xb4c <vfprintf+0x2c6>
 ac4:	85 37       	cpi	r24, 0x75	; 117
 ac6:	31 f4       	brne	.+12     	; 0xad4 <vfprintf+0x24e>
 ac8:	23 2d       	mov	r18, r3
 aca:	2f 7e       	andi	r18, 0xEF	; 239
 acc:	b2 2e       	mov	r11, r18
 ace:	2a e0       	ldi	r18, 0x0A	; 10
 ad0:	30 e0       	ldi	r19, 0x00	; 0
 ad2:	25 c0       	rjmp	.+74     	; 0xb1e <vfprintf+0x298>
 ad4:	93 2d       	mov	r25, r3
 ad6:	99 7f       	andi	r25, 0xF9	; 249
 ad8:	b9 2e       	mov	r11, r25
 ada:	8f 36       	cpi	r24, 0x6F	; 111
 adc:	c1 f0       	breq	.+48     	; 0xb0e <vfprintf+0x288>
 ade:	18 f4       	brcc	.+6      	; 0xae6 <vfprintf+0x260>
 ae0:	88 35       	cpi	r24, 0x58	; 88
 ae2:	79 f0       	breq	.+30     	; 0xb02 <vfprintf+0x27c>
 ae4:	ae c0       	rjmp	.+348    	; 0xc42 <vfprintf+0x3bc>
 ae6:	80 37       	cpi	r24, 0x70	; 112
 ae8:	19 f0       	breq	.+6      	; 0xaf0 <vfprintf+0x26a>
 aea:	88 37       	cpi	r24, 0x78	; 120
 aec:	21 f0       	breq	.+8      	; 0xaf6 <vfprintf+0x270>
 aee:	a9 c0       	rjmp	.+338    	; 0xc42 <vfprintf+0x3bc>
 af0:	e9 2f       	mov	r30, r25
 af2:	e0 61       	ori	r30, 0x10	; 16
 af4:	be 2e       	mov	r11, r30
 af6:	b4 fe       	sbrs	r11, 4
 af8:	0d c0       	rjmp	.+26     	; 0xb14 <vfprintf+0x28e>
 afa:	fb 2d       	mov	r31, r11
 afc:	f4 60       	ori	r31, 0x04	; 4
 afe:	bf 2e       	mov	r11, r31
 b00:	09 c0       	rjmp	.+18     	; 0xb14 <vfprintf+0x28e>
 b02:	34 fe       	sbrs	r3, 4
 b04:	0a c0       	rjmp	.+20     	; 0xb1a <vfprintf+0x294>
 b06:	29 2f       	mov	r18, r25
 b08:	26 60       	ori	r18, 0x06	; 6
 b0a:	b2 2e       	mov	r11, r18
 b0c:	06 c0       	rjmp	.+12     	; 0xb1a <vfprintf+0x294>
 b0e:	28 e0       	ldi	r18, 0x08	; 8
 b10:	30 e0       	ldi	r19, 0x00	; 0
 b12:	05 c0       	rjmp	.+10     	; 0xb1e <vfprintf+0x298>
 b14:	20 e1       	ldi	r18, 0x10	; 16
 b16:	30 e0       	ldi	r19, 0x00	; 0
 b18:	02 c0       	rjmp	.+4      	; 0xb1e <vfprintf+0x298>
 b1a:	20 e1       	ldi	r18, 0x10	; 16
 b1c:	32 e0       	ldi	r19, 0x02	; 2
 b1e:	f8 01       	movw	r30, r16
 b20:	b7 fe       	sbrs	r11, 7
 b22:	07 c0       	rjmp	.+14     	; 0xb32 <vfprintf+0x2ac>
 b24:	60 81       	ld	r22, Z
 b26:	71 81       	ldd	r23, Z+1	; 0x01
 b28:	82 81       	ldd	r24, Z+2	; 0x02
 b2a:	93 81       	ldd	r25, Z+3	; 0x03
 b2c:	0c 5f       	subi	r16, 0xFC	; 252
 b2e:	1f 4f       	sbci	r17, 0xFF	; 255
 b30:	06 c0       	rjmp	.+12     	; 0xb3e <vfprintf+0x2b8>
 b32:	60 81       	ld	r22, Z
 b34:	71 81       	ldd	r23, Z+1	; 0x01
 b36:	80 e0       	ldi	r24, 0x00	; 0
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	0e 5f       	subi	r16, 0xFE	; 254
 b3c:	1f 4f       	sbci	r17, 0xFF	; 255
 b3e:	a3 01       	movw	r20, r6
 b40:	f1 d0       	rcall	.+482    	; 0xd24 <__ultoa_invert>
 b42:	88 2e       	mov	r8, r24
 b44:	86 18       	sub	r8, r6
 b46:	fb 2d       	mov	r31, r11
 b48:	ff 77       	andi	r31, 0x7F	; 127
 b4a:	3f 2e       	mov	r3, r31
 b4c:	36 fe       	sbrs	r3, 6
 b4e:	0d c0       	rjmp	.+26     	; 0xb6a <vfprintf+0x2e4>
 b50:	23 2d       	mov	r18, r3
 b52:	2e 7f       	andi	r18, 0xFE	; 254
 b54:	a2 2e       	mov	r10, r18
 b56:	89 14       	cp	r8, r9
 b58:	58 f4       	brcc	.+22     	; 0xb70 <vfprintf+0x2ea>
 b5a:	34 fe       	sbrs	r3, 4
 b5c:	0b c0       	rjmp	.+22     	; 0xb74 <vfprintf+0x2ee>
 b5e:	32 fc       	sbrc	r3, 2
 b60:	09 c0       	rjmp	.+18     	; 0xb74 <vfprintf+0x2ee>
 b62:	83 2d       	mov	r24, r3
 b64:	8e 7e       	andi	r24, 0xEE	; 238
 b66:	a8 2e       	mov	r10, r24
 b68:	05 c0       	rjmp	.+10     	; 0xb74 <vfprintf+0x2ee>
 b6a:	b8 2c       	mov	r11, r8
 b6c:	a3 2c       	mov	r10, r3
 b6e:	03 c0       	rjmp	.+6      	; 0xb76 <vfprintf+0x2f0>
 b70:	b8 2c       	mov	r11, r8
 b72:	01 c0       	rjmp	.+2      	; 0xb76 <vfprintf+0x2f0>
 b74:	b9 2c       	mov	r11, r9
 b76:	a4 fe       	sbrs	r10, 4
 b78:	0f c0       	rjmp	.+30     	; 0xb98 <vfprintf+0x312>
 b7a:	fe 01       	movw	r30, r28
 b7c:	e8 0d       	add	r30, r8
 b7e:	f1 1d       	adc	r31, r1
 b80:	80 81       	ld	r24, Z
 b82:	80 33       	cpi	r24, 0x30	; 48
 b84:	21 f4       	brne	.+8      	; 0xb8e <vfprintf+0x308>
 b86:	9a 2d       	mov	r25, r10
 b88:	99 7e       	andi	r25, 0xE9	; 233
 b8a:	a9 2e       	mov	r10, r25
 b8c:	09 c0       	rjmp	.+18     	; 0xba0 <vfprintf+0x31a>
 b8e:	a2 fe       	sbrs	r10, 2
 b90:	06 c0       	rjmp	.+12     	; 0xb9e <vfprintf+0x318>
 b92:	b3 94       	inc	r11
 b94:	b3 94       	inc	r11
 b96:	04 c0       	rjmp	.+8      	; 0xba0 <vfprintf+0x31a>
 b98:	8a 2d       	mov	r24, r10
 b9a:	86 78       	andi	r24, 0x86	; 134
 b9c:	09 f0       	breq	.+2      	; 0xba0 <vfprintf+0x31a>
 b9e:	b3 94       	inc	r11
 ba0:	a3 fc       	sbrc	r10, 3
 ba2:	10 c0       	rjmp	.+32     	; 0xbc4 <vfprintf+0x33e>
 ba4:	a0 fe       	sbrs	r10, 0
 ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <vfprintf+0x32e>
 ba8:	b2 14       	cp	r11, r2
 baa:	80 f4       	brcc	.+32     	; 0xbcc <vfprintf+0x346>
 bac:	28 0c       	add	r2, r8
 bae:	92 2c       	mov	r9, r2
 bb0:	9b 18       	sub	r9, r11
 bb2:	0d c0       	rjmp	.+26     	; 0xbce <vfprintf+0x348>
 bb4:	b2 14       	cp	r11, r2
 bb6:	58 f4       	brcc	.+22     	; 0xbce <vfprintf+0x348>
 bb8:	b6 01       	movw	r22, r12
 bba:	80 e2       	ldi	r24, 0x20	; 32
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	76 d0       	rcall	.+236    	; 0xcac <fputc>
 bc0:	b3 94       	inc	r11
 bc2:	f8 cf       	rjmp	.-16     	; 0xbb4 <vfprintf+0x32e>
 bc4:	b2 14       	cp	r11, r2
 bc6:	18 f4       	brcc	.+6      	; 0xbce <vfprintf+0x348>
 bc8:	2b 18       	sub	r2, r11
 bca:	02 c0       	rjmp	.+4      	; 0xbd0 <vfprintf+0x34a>
 bcc:	98 2c       	mov	r9, r8
 bce:	21 2c       	mov	r2, r1
 bd0:	a4 fe       	sbrs	r10, 4
 bd2:	0f c0       	rjmp	.+30     	; 0xbf2 <vfprintf+0x36c>
 bd4:	b6 01       	movw	r22, r12
 bd6:	80 e3       	ldi	r24, 0x30	; 48
 bd8:	90 e0       	ldi	r25, 0x00	; 0
 bda:	68 d0       	rcall	.+208    	; 0xcac <fputc>
 bdc:	a2 fe       	sbrs	r10, 2
 bde:	16 c0       	rjmp	.+44     	; 0xc0c <vfprintf+0x386>
 be0:	a1 fc       	sbrc	r10, 1
 be2:	03 c0       	rjmp	.+6      	; 0xbea <vfprintf+0x364>
 be4:	88 e7       	ldi	r24, 0x78	; 120
 be6:	90 e0       	ldi	r25, 0x00	; 0
 be8:	02 c0       	rjmp	.+4      	; 0xbee <vfprintf+0x368>
 bea:	88 e5       	ldi	r24, 0x58	; 88
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	b6 01       	movw	r22, r12
 bf0:	0c c0       	rjmp	.+24     	; 0xc0a <vfprintf+0x384>
 bf2:	8a 2d       	mov	r24, r10
 bf4:	86 78       	andi	r24, 0x86	; 134
 bf6:	51 f0       	breq	.+20     	; 0xc0c <vfprintf+0x386>
 bf8:	a1 fe       	sbrs	r10, 1
 bfa:	02 c0       	rjmp	.+4      	; 0xc00 <vfprintf+0x37a>
 bfc:	8b e2       	ldi	r24, 0x2B	; 43
 bfe:	01 c0       	rjmp	.+2      	; 0xc02 <vfprintf+0x37c>
 c00:	80 e2       	ldi	r24, 0x20	; 32
 c02:	a7 fc       	sbrc	r10, 7
 c04:	8d e2       	ldi	r24, 0x2D	; 45
 c06:	b6 01       	movw	r22, r12
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	50 d0       	rcall	.+160    	; 0xcac <fputc>
 c0c:	89 14       	cp	r8, r9
 c0e:	30 f4       	brcc	.+12     	; 0xc1c <vfprintf+0x396>
 c10:	b6 01       	movw	r22, r12
 c12:	80 e3       	ldi	r24, 0x30	; 48
 c14:	90 e0       	ldi	r25, 0x00	; 0
 c16:	4a d0       	rcall	.+148    	; 0xcac <fputc>
 c18:	9a 94       	dec	r9
 c1a:	f8 cf       	rjmp	.-16     	; 0xc0c <vfprintf+0x386>
 c1c:	8a 94       	dec	r8
 c1e:	f3 01       	movw	r30, r6
 c20:	e8 0d       	add	r30, r8
 c22:	f1 1d       	adc	r31, r1
 c24:	80 81       	ld	r24, Z
 c26:	b6 01       	movw	r22, r12
 c28:	90 e0       	ldi	r25, 0x00	; 0
 c2a:	40 d0       	rcall	.+128    	; 0xcac <fputc>
 c2c:	81 10       	cpse	r8, r1
 c2e:	f6 cf       	rjmp	.-20     	; 0xc1c <vfprintf+0x396>
 c30:	22 20       	and	r2, r2
 c32:	09 f4       	brne	.+2      	; 0xc36 <vfprintf+0x3b0>
 c34:	4e ce       	rjmp	.-868    	; 0x8d2 <vfprintf+0x4c>
 c36:	b6 01       	movw	r22, r12
 c38:	80 e2       	ldi	r24, 0x20	; 32
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	37 d0       	rcall	.+110    	; 0xcac <fputc>
 c3e:	2a 94       	dec	r2
 c40:	f7 cf       	rjmp	.-18     	; 0xc30 <vfprintf+0x3aa>
 c42:	f6 01       	movw	r30, r12
 c44:	86 81       	ldd	r24, Z+6	; 0x06
 c46:	97 81       	ldd	r25, Z+7	; 0x07
 c48:	02 c0       	rjmp	.+4      	; 0xc4e <vfprintf+0x3c8>
 c4a:	8f ef       	ldi	r24, 0xFF	; 255
 c4c:	9f ef       	ldi	r25, 0xFF	; 255
 c4e:	2b 96       	adiw	r28, 0x0b	; 11
 c50:	0f b6       	in	r0, 0x3f	; 63
 c52:	f8 94       	cli
 c54:	de bf       	out	0x3e, r29	; 62
 c56:	0f be       	out	0x3f, r0	; 63
 c58:	cd bf       	out	0x3d, r28	; 61
 c5a:	df 91       	pop	r29
 c5c:	cf 91       	pop	r28
 c5e:	1f 91       	pop	r17
 c60:	0f 91       	pop	r16
 c62:	ff 90       	pop	r15
 c64:	ef 90       	pop	r14
 c66:	df 90       	pop	r13
 c68:	cf 90       	pop	r12
 c6a:	bf 90       	pop	r11
 c6c:	af 90       	pop	r10
 c6e:	9f 90       	pop	r9
 c70:	8f 90       	pop	r8
 c72:	7f 90       	pop	r7
 c74:	6f 90       	pop	r6
 c76:	5f 90       	pop	r5
 c78:	4f 90       	pop	r4
 c7a:	3f 90       	pop	r3
 c7c:	2f 90       	pop	r2
 c7e:	08 95       	ret

00000c80 <strnlen_P>:
 c80:	fc 01       	movw	r30, r24
 c82:	05 90       	lpm	r0, Z+
 c84:	61 50       	subi	r22, 0x01	; 1
 c86:	70 40       	sbci	r23, 0x00	; 0
 c88:	01 10       	cpse	r0, r1
 c8a:	d8 f7       	brcc	.-10     	; 0xc82 <strnlen_P+0x2>
 c8c:	80 95       	com	r24
 c8e:	90 95       	com	r25
 c90:	8e 0f       	add	r24, r30
 c92:	9f 1f       	adc	r25, r31
 c94:	08 95       	ret

00000c96 <strnlen>:
 c96:	fc 01       	movw	r30, r24
 c98:	61 50       	subi	r22, 0x01	; 1
 c9a:	70 40       	sbci	r23, 0x00	; 0
 c9c:	01 90       	ld	r0, Z+
 c9e:	01 10       	cpse	r0, r1
 ca0:	d8 f7       	brcc	.-10     	; 0xc98 <strnlen+0x2>
 ca2:	80 95       	com	r24
 ca4:	90 95       	com	r25
 ca6:	8e 0f       	add	r24, r30
 ca8:	9f 1f       	adc	r25, r31
 caa:	08 95       	ret

00000cac <fputc>:
 cac:	0f 93       	push	r16
 cae:	1f 93       	push	r17
 cb0:	cf 93       	push	r28
 cb2:	df 93       	push	r29
 cb4:	fb 01       	movw	r30, r22
 cb6:	23 81       	ldd	r18, Z+3	; 0x03
 cb8:	21 fd       	sbrc	r18, 1
 cba:	03 c0       	rjmp	.+6      	; 0xcc2 <fputc+0x16>
 cbc:	8f ef       	ldi	r24, 0xFF	; 255
 cbe:	9f ef       	ldi	r25, 0xFF	; 255
 cc0:	2c c0       	rjmp	.+88     	; 0xd1a <fputc+0x6e>
 cc2:	22 ff       	sbrs	r18, 2
 cc4:	16 c0       	rjmp	.+44     	; 0xcf2 <fputc+0x46>
 cc6:	46 81       	ldd	r20, Z+6	; 0x06
 cc8:	57 81       	ldd	r21, Z+7	; 0x07
 cca:	24 81       	ldd	r18, Z+4	; 0x04
 ccc:	35 81       	ldd	r19, Z+5	; 0x05
 cce:	42 17       	cp	r20, r18
 cd0:	53 07       	cpc	r21, r19
 cd2:	44 f4       	brge	.+16     	; 0xce4 <fputc+0x38>
 cd4:	a0 81       	ld	r26, Z
 cd6:	b1 81       	ldd	r27, Z+1	; 0x01
 cd8:	9d 01       	movw	r18, r26
 cda:	2f 5f       	subi	r18, 0xFF	; 255
 cdc:	3f 4f       	sbci	r19, 0xFF	; 255
 cde:	31 83       	std	Z+1, r19	; 0x01
 ce0:	20 83       	st	Z, r18
 ce2:	8c 93       	st	X, r24
 ce4:	26 81       	ldd	r18, Z+6	; 0x06
 ce6:	37 81       	ldd	r19, Z+7	; 0x07
 ce8:	2f 5f       	subi	r18, 0xFF	; 255
 cea:	3f 4f       	sbci	r19, 0xFF	; 255
 cec:	37 83       	std	Z+7, r19	; 0x07
 cee:	26 83       	std	Z+6, r18	; 0x06
 cf0:	14 c0       	rjmp	.+40     	; 0xd1a <fputc+0x6e>
 cf2:	8b 01       	movw	r16, r22
 cf4:	ec 01       	movw	r28, r24
 cf6:	fb 01       	movw	r30, r22
 cf8:	00 84       	ldd	r0, Z+8	; 0x08
 cfa:	f1 85       	ldd	r31, Z+9	; 0x09
 cfc:	e0 2d       	mov	r30, r0
 cfe:	19 95       	eicall
 d00:	89 2b       	or	r24, r25
 d02:	e1 f6       	brne	.-72     	; 0xcbc <fputc+0x10>
 d04:	d8 01       	movw	r26, r16
 d06:	16 96       	adiw	r26, 0x06	; 6
 d08:	8d 91       	ld	r24, X+
 d0a:	9c 91       	ld	r25, X
 d0c:	17 97       	sbiw	r26, 0x07	; 7
 d0e:	01 96       	adiw	r24, 0x01	; 1
 d10:	17 96       	adiw	r26, 0x07	; 7
 d12:	9c 93       	st	X, r25
 d14:	8e 93       	st	-X, r24
 d16:	16 97       	sbiw	r26, 0x06	; 6
 d18:	ce 01       	movw	r24, r28
 d1a:	df 91       	pop	r29
 d1c:	cf 91       	pop	r28
 d1e:	1f 91       	pop	r17
 d20:	0f 91       	pop	r16
 d22:	08 95       	ret

00000d24 <__ultoa_invert>:
 d24:	fa 01       	movw	r30, r20
 d26:	aa 27       	eor	r26, r26
 d28:	28 30       	cpi	r18, 0x08	; 8
 d2a:	51 f1       	breq	.+84     	; 0xd80 <__ultoa_invert+0x5c>
 d2c:	20 31       	cpi	r18, 0x10	; 16
 d2e:	81 f1       	breq	.+96     	; 0xd90 <__ultoa_invert+0x6c>
 d30:	e8 94       	clt
 d32:	6f 93       	push	r22
 d34:	6e 7f       	andi	r22, 0xFE	; 254
 d36:	6e 5f       	subi	r22, 0xFE	; 254
 d38:	7f 4f       	sbci	r23, 0xFF	; 255
 d3a:	8f 4f       	sbci	r24, 0xFF	; 255
 d3c:	9f 4f       	sbci	r25, 0xFF	; 255
 d3e:	af 4f       	sbci	r26, 0xFF	; 255
 d40:	b1 e0       	ldi	r27, 0x01	; 1
 d42:	3e d0       	rcall	.+124    	; 0xdc0 <__ultoa_invert+0x9c>
 d44:	b4 e0       	ldi	r27, 0x04	; 4
 d46:	3c d0       	rcall	.+120    	; 0xdc0 <__ultoa_invert+0x9c>
 d48:	67 0f       	add	r22, r23
 d4a:	78 1f       	adc	r23, r24
 d4c:	89 1f       	adc	r24, r25
 d4e:	9a 1f       	adc	r25, r26
 d50:	a1 1d       	adc	r26, r1
 d52:	68 0f       	add	r22, r24
 d54:	79 1f       	adc	r23, r25
 d56:	8a 1f       	adc	r24, r26
 d58:	91 1d       	adc	r25, r1
 d5a:	a1 1d       	adc	r26, r1
 d5c:	6a 0f       	add	r22, r26
 d5e:	71 1d       	adc	r23, r1
 d60:	81 1d       	adc	r24, r1
 d62:	91 1d       	adc	r25, r1
 d64:	a1 1d       	adc	r26, r1
 d66:	20 d0       	rcall	.+64     	; 0xda8 <__ultoa_invert+0x84>
 d68:	09 f4       	brne	.+2      	; 0xd6c <__ultoa_invert+0x48>
 d6a:	68 94       	set
 d6c:	3f 91       	pop	r19
 d6e:	2a e0       	ldi	r18, 0x0A	; 10
 d70:	26 9f       	mul	r18, r22
 d72:	11 24       	eor	r1, r1
 d74:	30 19       	sub	r19, r0
 d76:	30 5d       	subi	r19, 0xD0	; 208
 d78:	31 93       	st	Z+, r19
 d7a:	de f6       	brtc	.-74     	; 0xd32 <__ultoa_invert+0xe>
 d7c:	cf 01       	movw	r24, r30
 d7e:	08 95       	ret
 d80:	46 2f       	mov	r20, r22
 d82:	47 70       	andi	r20, 0x07	; 7
 d84:	40 5d       	subi	r20, 0xD0	; 208
 d86:	41 93       	st	Z+, r20
 d88:	b3 e0       	ldi	r27, 0x03	; 3
 d8a:	0f d0       	rcall	.+30     	; 0xdaa <__ultoa_invert+0x86>
 d8c:	c9 f7       	brne	.-14     	; 0xd80 <__ultoa_invert+0x5c>
 d8e:	f6 cf       	rjmp	.-20     	; 0xd7c <__ultoa_invert+0x58>
 d90:	46 2f       	mov	r20, r22
 d92:	4f 70       	andi	r20, 0x0F	; 15
 d94:	40 5d       	subi	r20, 0xD0	; 208
 d96:	4a 33       	cpi	r20, 0x3A	; 58
 d98:	18 f0       	brcs	.+6      	; 0xda0 <__ultoa_invert+0x7c>
 d9a:	49 5d       	subi	r20, 0xD9	; 217
 d9c:	31 fd       	sbrc	r19, 1
 d9e:	40 52       	subi	r20, 0x20	; 32
 da0:	41 93       	st	Z+, r20
 da2:	02 d0       	rcall	.+4      	; 0xda8 <__ultoa_invert+0x84>
 da4:	a9 f7       	brne	.-22     	; 0xd90 <__ultoa_invert+0x6c>
 da6:	ea cf       	rjmp	.-44     	; 0xd7c <__ultoa_invert+0x58>
 da8:	b4 e0       	ldi	r27, 0x04	; 4
 daa:	a6 95       	lsr	r26
 dac:	97 95       	ror	r25
 dae:	87 95       	ror	r24
 db0:	77 95       	ror	r23
 db2:	67 95       	ror	r22
 db4:	ba 95       	dec	r27
 db6:	c9 f7       	brne	.-14     	; 0xdaa <__ultoa_invert+0x86>
 db8:	00 97       	sbiw	r24, 0x00	; 0
 dba:	61 05       	cpc	r22, r1
 dbc:	71 05       	cpc	r23, r1
 dbe:	08 95       	ret
 dc0:	9b 01       	movw	r18, r22
 dc2:	ac 01       	movw	r20, r24
 dc4:	0a 2e       	mov	r0, r26
 dc6:	06 94       	lsr	r0
 dc8:	57 95       	ror	r21
 dca:	47 95       	ror	r20
 dcc:	37 95       	ror	r19
 dce:	27 95       	ror	r18
 dd0:	ba 95       	dec	r27
 dd2:	c9 f7       	brne	.-14     	; 0xdc6 <__ultoa_invert+0xa2>
 dd4:	62 0f       	add	r22, r18
 dd6:	73 1f       	adc	r23, r19
 dd8:	84 1f       	adc	r24, r20
 dda:	95 1f       	adc	r25, r21
 ddc:	a0 1d       	adc	r26, r0
 dde:	08 95       	ret

00000de0 <_exit>:
 de0:	f8 94       	cli

00000de2 <__stop_program>:
 de2:	ff cf       	rjmp	.-2      	; 0xde2 <__stop_program>
