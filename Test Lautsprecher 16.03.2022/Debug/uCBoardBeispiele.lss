
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800200  0000145c  000014f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000145c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c8  00800298  00800298  00001588  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001588  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00001624  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002672  00000000  00000000  0000180c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001045  00000000  00000000  00003e7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000151d  00000000  00000000  00004ec3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  000063e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d21  00000000  00000000  00006a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d2f  00000000  00000000  00007789  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  000094b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	59 c6       	rjmp	.+3250   	; 0xd10 <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e5       	ldi	r30, 0x5C	; 92
      fc:	f4 e1       	ldi	r31, 0x14	; 20
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 39       	cpi	r26, 0x98	; 152
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a8 e9       	ldi	r26, 0x98	; 152
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a0 36       	cpi	r26, 0x60	; 96
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:
MUSTER_7, MUSTER_8, MUSTER_9, MUSTER_10, MUSTER_11, MUSTER_12, MUSTER_13, MUSTER_14, MUSTER_15};


//Hauptprogramm
int main(void)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	00 d0       	rcall	.+0      	; 0x12c <main+0x6>
     12c:	1f 92       	push	r1
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
    uint16_t spannung_mv = 0;
    
    //zustand_t state = AUS;
    
    //Initialisieren
    initBoard(1);
     132:	81 e0       	ldi	r24, 0x01	; 1
     134:	3c d3       	rcall	.+1656   	; 0x7ae <initBoard>
    uint8_t schalterAkku = 0;
    uint16_t leds = 0;
    uint8_t inDez =0;
    uint16_t i = 0;
    uint64_t timerBlink_ms = 0;
    uint8_t blink = 0;
     136:	31 2c       	mov	r3, r1
    uint8_t muster=0;
    uint8_t schalterAkku = 0;
    uint16_t leds = 0;
    uint8_t inDez =0;
    uint16_t i = 0;
    uint64_t timerBlink_ms = 0;
     138:	91 2c       	mov	r9, r1
     13a:	e1 2c       	mov	r14, r1
     13c:	f1 2c       	mov	r15, r1
     13e:	00 e0       	ldi	r16, 0x00	; 0
     140:	10 e0       	ldi	r17, 0x00	; 0
     142:	1c 82       	std	Y+4, r1	; 0x04
     144:	61 2c       	mov	r6, r1
     146:	71 2c       	mov	r7, r1
    uint8_t power=0;
    uint8_t muster=0;
    uint8_t schalterAkku = 0;
    uint16_t leds = 0;
    uint8_t inDez =0;
    uint16_t i = 0;
     148:	1a 82       	std	Y+2, r1	; 0x02
     14a:	19 82       	std	Y+1, r1	; 0x01
    uint8_t inTaster=0;
    uint8_t inTasterAlt=0;
    uint8_t power=0;
    uint8_t muster=0;
    uint8_t schalterAkku = 0;
    uint16_t leds = 0;
     14c:	a1 2c       	mov	r10, r1
     14e:	b1 2c       	mov	r11, r1

//Hauptprogramm
int main(void)
{
    //Variablen
    uint8_t inTaster=0;
     150:	1b 82       	std	Y+3, r1	; 0x03
                rgbWrite(0,0,0);
            }
            if (timerBlink_ms >= PERIOD)
            {
                rgbWrite(100,0,0);
                timerBlink_ms = 0;
     152:	81 2c       	mov	r8, r1
        else
        {
            
        }
        //Ausgabe------------------------------------------------------------------
        lcdLog("%u",blink);
     154:	0f 2e       	mov	r0, r31
     156:	fa e0       	ldi	r31, 0x0A	; 10
     158:	cf 2e       	mov	r12, r31
     15a:	f2 e0       	ldi	r31, 0x02	; 2
     15c:	df 2e       	mov	r13, r31
     15e:	f0 2d       	mov	r31, r0
                timerBlink_ms = 0;
            }
        }
        else
        {
            timerBlink_ms = PERIOD;
     160:	0f 2e       	mov	r0, r31
     162:	f8 ec       	ldi	r31, 0xC8	; 200
     164:	2f 2e       	mov	r2, r31
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        inTasterAlt = inTaster;
        inTaster = buttonReadAllPL();
     166:	f0 2d       	mov	r31, r0
     168:	ce d0       	rcall	.+412    	; 0x306 <buttonReadAllPL>
     16a:	58 2e       	mov	r5, r24
        power = (inTasterAlt ^ inTaster) & inTaster & IN_MASKE_POWER_TASTER;
     16c:	2b 81       	ldd	r18, Y+3	; 0x03
     16e:	20 95       	com	r18
     170:	28 23       	and	r18, r24
        muster = (inTasterAlt ^ inTaster) & inTaster & IN_MASKE_MUSTER_TASTER;
        
        schalterAkku = switchReadAll() & IN_MASKE_SCHALTER_AKKU;
     172:	2b 83       	std	Y+3, r18	; 0x03
     174:	c6 d0       	rcall	.+396    	; 0x302 <switchReadAll>
     176:	48 2e       	mov	r4, r24
        
        
        
        //Verarbeitung-------------------------------------------------------------
        
        if (power)
     178:	8b 81       	ldd	r24, Y+3	; 0x03
     17a:	80 ff       	sbrs	r24, 0
     17c:	1e c0       	rjmp	.+60     	; 0x1ba <main+0x94>
        {
            rgbWrite(0,100,0);
     17e:	40 e0       	ldi	r20, 0x00	; 0
     180:	50 e0       	ldi	r21, 0x00	; 0
     182:	64 e6       	ldi	r22, 0x64	; 100
     184:	70 e0       	ldi	r23, 0x00	; 0
     186:	80 e0       	ldi	r24, 0x00	; 0
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	eb d0       	rcall	.+470    	; 0x362 <rgbWrite>
            
            
            if (muster)
     18c:	9b 81       	ldd	r25, Y+3	; 0x03
     18e:	91 ff       	sbrs	r25, 1
     190:	0f c0       	rjmp	.+30     	; 0x1b0 <main+0x8a>
            {
                i=i+1;
     192:	89 81       	ldd	r24, Y+1	; 0x01
     194:	9a 81       	ldd	r25, Y+2	; 0x02
     196:	01 96       	adiw	r24, 0x01	; 1
     198:	9a 83       	std	Y+2, r25	; 0x02
                muster = buttonReadAllPL() & IN_MASKE_MUSTER_TASTER;
     19a:	89 83       	std	Y+1, r24	; 0x01
     19c:	b4 d0       	rcall	.+360    	; 0x306 <buttonReadAllPL>
                inDez = DECORDER[i];
     19e:	e9 81       	ldd	r30, Y+1	; 0x01
     1a0:	fa 81       	ldd	r31, Y+2	; 0x02
     1a2:	ee 0f       	add	r30, r30
     1a4:	ff 1f       	adc	r31, r31
     1a6:	e3 5f       	subi	r30, 0xF3	; 243
     1a8:	fd 4f       	sbci	r31, 0xFD	; 253
     1aa:	a0 80       	ld	r10, Z
     1ac:	b1 80       	ldd	r11, Z+1	; 0x01
     1ae:	bb 24       	eor	r11, r11
                leds = inDez;
            }
            
            if (schalterAkku < 100)
     1b0:	93 e6       	ldi	r25, 0x63	; 99
     1b2:	94 15       	cp	r25, r4
     1b4:	08 f0       	brcs	.+2      	; 0x1b8 <main+0x92>
     1b6:	74 c0       	rjmp	.+232    	; 0x2a0 <main+0x17a>
        else
        {
            
        }
        //Ausgabe------------------------------------------------------------------
        lcdLog("%u",blink);
     1b8:	88 c0       	rjmp	.+272    	; 0x2ca <main+0x1a4>
     1ba:	1f 92       	push	r1
     1bc:	3f 92       	push	r3
     1be:	df 92       	push	r13
     1c0:	cf 92       	push	r12
        lcdLog("%u",schalterAkku);
     1c2:	00 d4       	rcall	.+2048   	; 0x9c4 <lcdLog>
     1c4:	1f 92       	push	r1
     1c6:	4f 92       	push	r4
     1c8:	df 92       	push	r13
     1ca:	cf 92       	push	r12
     1cc:	fb d3       	rcall	.+2038   	; 0x9c4 <lcdLog>
        if (blink)
     1ce:	0f b6       	in	r0, 0x3f	; 63
     1d0:	f8 94       	cli
     1d2:	de bf       	out	0x3e, r29	; 62
     1d4:	0f be       	out	0x3f, r0	; 63
     1d6:	cd bf       	out	0x3d, r28	; 61
     1d8:	33 20       	and	r3, r3
     1da:	d9 f1       	breq	.+118    	; 0x252 <main+0x12c>
        {
            if (timerBlink_ms >= ON_TIME)
     1dc:	29 2d       	mov	r18, r9
     1de:	3e 2d       	mov	r19, r14
     1e0:	4f 2d       	mov	r20, r15
     1e2:	50 2f       	mov	r21, r16
     1e4:	61 2f       	mov	r22, r17
     1e6:	7c 81       	ldd	r23, Y+4	; 0x04
     1e8:	86 2d       	mov	r24, r6
     1ea:	97 2d       	mov	r25, r7
     1ec:	25 39       	cpi	r18, 0x95	; 149
     1ee:	31 05       	cpc	r19, r1
     1f0:	41 05       	cpc	r20, r1
     1f2:	51 05       	cpc	r21, r1
     1f4:	61 05       	cpc	r22, r1
     1f6:	71 05       	cpc	r23, r1
     1f8:	81 05       	cpc	r24, r1
     1fa:	91 05       	cpc	r25, r1
     1fc:	41 f0       	breq	.+16     	; 0x20e <main+0xe8>
            {
                rgbWrite(0,0,0);
     1fe:	38 f0       	brcs	.+14     	; 0x20e <main+0xe8>
     200:	40 e0       	ldi	r20, 0x00	; 0
     202:	50 e0       	ldi	r21, 0x00	; 0
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	80 e0       	ldi	r24, 0x00	; 0
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	aa d0       	rcall	.+340    	; 0x362 <rgbWrite>
            }
            if (timerBlink_ms >= PERIOD)
     20e:	29 2d       	mov	r18, r9
     210:	3e 2d       	mov	r19, r14
     212:	4f 2d       	mov	r20, r15
     214:	50 2f       	mov	r21, r16
     216:	61 2f       	mov	r22, r17
     218:	7c 81       	ldd	r23, Y+4	; 0x04
     21a:	86 2d       	mov	r24, r6
     21c:	97 2d       	mov	r25, r7
     21e:	27 3c       	cpi	r18, 0xC7	; 199
     220:	31 05       	cpc	r19, r1
     222:	41 05       	cpc	r20, r1
     224:	51 05       	cpc	r21, r1
     226:	61 05       	cpc	r22, r1
     228:	71 05       	cpc	r23, r1
     22a:	81 05       	cpc	r24, r1
     22c:	91 05       	cpc	r25, r1
     22e:	c9 f0       	breq	.+50     	; 0x262 <main+0x13c>
            {
                rgbWrite(100,0,0);
     230:	c0 f0       	brcs	.+48     	; 0x262 <main+0x13c>
     232:	40 e0       	ldi	r20, 0x00	; 0
     234:	50 e0       	ldi	r21, 0x00	; 0
     236:	60 e0       	ldi	r22, 0x00	; 0
     238:	70 e0       	ldi	r23, 0x00	; 0
     23a:	84 e6       	ldi	r24, 0x64	; 100
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	91 d0       	rcall	.+290    	; 0x362 <rgbWrite>
                timerBlink_ms = 0;
     240:	98 2c       	mov	r9, r8
     242:	e8 2c       	mov	r14, r8
     244:	f8 2c       	mov	r15, r8
     246:	08 2d       	mov	r16, r8
     248:	18 2d       	mov	r17, r8
     24a:	8c 82       	std	Y+4, r8	; 0x04
     24c:	68 2c       	mov	r6, r8
     24e:	78 2c       	mov	r7, r8
     250:	08 c0       	rjmp	.+16     	; 0x262 <main+0x13c>
            }
        }
        else
        {
            timerBlink_ms = PERIOD;
     252:	92 2c       	mov	r9, r2
     254:	e8 2c       	mov	r14, r8
     256:	f8 2c       	mov	r15, r8
     258:	08 2d       	mov	r16, r8
     25a:	18 2d       	mov	r17, r8
     25c:	8c 82       	std	Y+4, r8	; 0x04
     25e:	68 2c       	mov	r6, r8
        }
        ledWriteAll(leds);
     260:	78 2c       	mov	r7, r8
     262:	c5 01       	movw	r24, r10
     264:	4b d0       	rcall	.+150    	; 0x2fc <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     266:	2f ef       	ldi	r18, 0xFF	; 255
     268:	80 e7       	ldi	r24, 0x70	; 112
     26a:	92 e0       	ldi	r25, 0x02	; 2
     26c:	21 50       	subi	r18, 0x01	; 1
     26e:	80 40       	sbci	r24, 0x00	; 0
     270:	90 40       	sbci	r25, 0x00	; 0
     272:	e1 f7       	brne	.-8      	; 0x26c <main+0x146>
     274:	00 c0       	rjmp	.+0      	; 0x276 <main+0x150>
        //Warten-------------------------------------------------------------------
        _delay_ms(SYSTEM_TICK_MS);
        timerBlink_ms = timerBlink_ms + SYSTEM_TICK_MS;
     276:	00 00       	nop
     278:	29 2d       	mov	r18, r9
     27a:	3e 2d       	mov	r19, r14
     27c:	4f 2d       	mov	r20, r15
     27e:	50 2f       	mov	r21, r16
     280:	61 2f       	mov	r22, r17
     282:	7c 81       	ldd	r23, Y+4	; 0x04
     284:	86 2d       	mov	r24, r6
     286:	97 2d       	mov	r25, r7
     288:	a2 e3       	ldi	r26, 0x32	; 50
     28a:	ec d5       	rcall	.+3032   	; 0xe64 <__adddi3_s8>
     28c:	92 2e       	mov	r9, r18
     28e:	e3 2e       	mov	r14, r19
     290:	f4 2e       	mov	r15, r20
     292:	05 2f       	mov	r16, r21
     294:	16 2f       	mov	r17, r22
     296:	7c 83       	std	Y+4, r23	; 0x04
     298:	68 2e       	mov	r6, r24
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        inTasterAlt = inTaster;
        inTaster = buttonReadAllPL();
     29a:	79 2e       	mov	r7, r25
        else
        {
            
        }
        //Ausgabe------------------------------------------------------------------
        lcdLog("%u",blink);
     29c:	5b 82       	std	Y+3, r5	; 0x03
     29e:	64 cf       	rjmp	.-312    	; 0x168 <main+0x42>
     2a0:	1f 92       	push	r1
     2a2:	e1 e0       	ldi	r30, 0x01	; 1
     2a4:	ef 93       	push	r30
     2a6:	df 92       	push	r13
     2a8:	cf 92       	push	r12
        lcdLog("%u",schalterAkku);
     2aa:	8c d3       	rcall	.+1816   	; 0x9c4 <lcdLog>
     2ac:	1f 92       	push	r1
     2ae:	4f 92       	push	r4
     2b0:	df 92       	push	r13
     2b2:	cf 92       	push	r12
     2b4:	87 d3       	rcall	.+1806   	; 0x9c4 <lcdLog>
     2b6:	0f b6       	in	r0, 0x3f	; 63
     2b8:	f8 94       	cli
     2ba:	de bf       	out	0x3e, r29	; 62
     2bc:	0f be       	out	0x3f, r0	; 63
                leds = inDez;
            }
            
            if (schalterAkku < 100)
            {
                blink = 1;
     2be:	cd bf       	out	0x3d, r28	; 61
                leds = 0;
     2c0:	33 24       	eor	r3, r3
     2c2:	33 94       	inc	r3
     2c4:	a1 2c       	mov	r10, r1
        else
        {
            
        }
        //Ausgabe------------------------------------------------------------------
        lcdLog("%u",blink);
     2c6:	b1 2c       	mov	r11, r1
     2c8:	89 cf       	rjmp	.-238    	; 0x1dc <main+0xb6>
     2ca:	1f 92       	push	r1
     2cc:	1f 92       	push	r1
     2ce:	df 92       	push	r13
     2d0:	cf 92       	push	r12
        lcdLog("%u",schalterAkku);
     2d2:	78 d3       	rcall	.+1776   	; 0x9c4 <lcdLog>
     2d4:	1f 92       	push	r1
     2d6:	4f 92       	push	r4
     2d8:	df 92       	push	r13
     2da:	cf 92       	push	r12
     2dc:	73 d3       	rcall	.+1766   	; 0x9c4 <lcdLog>
     2de:	0f b6       	in	r0, 0x3f	; 63
     2e0:	f8 94       	cli
     2e2:	de bf       	out	0x3e, r29	; 62
     2e4:	0f be       	out	0x3f, r0	; 63
     2e6:	cd bf       	out	0x3d, r28	; 61
                blink = 1;
                leds = 0;
            }
            else 
            {
                blink = 0;             
     2e8:	38 2c       	mov	r3, r8
                timerBlink_ms = 0;
            }
        }
        else
        {
            timerBlink_ms = PERIOD;
     2ea:	92 2c       	mov	r9, r2
     2ec:	e8 2c       	mov	r14, r8
     2ee:	f8 2c       	mov	r15, r8
     2f0:	08 2d       	mov	r16, r8
     2f2:	18 2d       	mov	r17, r8
     2f4:	8c 82       	std	Y+4, r8	; 0x04
     2f6:	68 2c       	mov	r6, r8
     2f8:	78 2c       	mov	r7, r8
     2fa:	b3 cf       	rjmp	.-154    	; 0x262 <main+0x13c>

000002fc <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     2fc:	82 b9       	out	0x02, r24	; 2
     2fe:	95 b9       	out	0x05, r25	; 5
     300:	08 95       	ret

00000302 <switchReadAll>:
     302:	86 b1       	in	r24, 0x06	; 6
     304:	08 95       	ret

00000306 <buttonReadAllPL>:
     306:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>
     30a:	08 95       	ret

0000030c <startSystemTimeMs>:
     30c:	83 e0       	ldi	r24, 0x03	; 3
     30e:	84 bd       	out	0x24, r24	; 36
     310:	8b e0       	ldi	r24, 0x0B	; 11
     312:	85 bd       	out	0x25, r24	; 37
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     31a:	89 ef       	ldi	r24, 0xF9	; 249
     31c:	87 bd       	out	0x27, r24	; 39
     31e:	08 95       	ret

00000320 <initAdc>:
     320:	11 ba       	out	0x11, r1	; 17
     322:	10 ba       	out	0x10, r1	; 16
     324:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     328:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     32c:	80 e4       	ldi	r24, 0x40	; 64
     32e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     332:	8f e0       	ldi	r24, 0x0F	; 15
     334:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     338:	8f ef       	ldi	r24, 0xFF	; 255
     33a:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     33e:	ea e7       	ldi	r30, 0x7A	; 122
     340:	f0 e0       	ldi	r31, 0x00	; 0
     342:	87 ea       	ldi	r24, 0xA7	; 167
     344:	80 83       	st	Z, r24
     346:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     34a:	80 81       	ld	r24, Z
     34c:	80 64       	ori	r24, 0x40	; 64
     34e:	80 83       	st	Z, r24
     350:	80 81       	ld	r24, Z
     352:	84 ff       	sbrs	r24, 4
     354:	fd cf       	rjmp	.-6      	; 0x350 <initAdc+0x30>
     356:	ea e7       	ldi	r30, 0x7A	; 122
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	80 81       	ld	r24, Z
     35c:	8f 7e       	andi	r24, 0xEF	; 239
     35e:	80 83       	st	Z, r24
     360:	08 95       	ret

00000362 <rgbWrite>:
     362:	2f ef       	ldi	r18, 0xFF	; 255
     364:	33 e0       	ldi	r19, 0x03	; 3
     366:	f9 01       	movw	r30, r18
     368:	e8 1b       	sub	r30, r24
     36a:	f9 0b       	sbc	r31, r25
     36c:	c9 01       	movw	r24, r18
     36e:	86 1b       	sub	r24, r22
     370:	97 0b       	sbc	r25, r23
     372:	24 1b       	sub	r18, r20
     374:	35 0b       	sbc	r19, r21
     376:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     37a:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     37e:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     382:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     386:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     38a:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     38e:	08 95       	ret

00000390 <initRgb>:
     390:	8e ef       	ldi	r24, 0xFE	; 254
     392:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     396:	8b e1       	ldi	r24, 0x1B	; 27
     398:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     39c:	83 e0       	ldi	r24, 0x03	; 3
     39e:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3a2:	8f ef       	ldi	r24, 0xFF	; 255
     3a4:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     3a8:	40 e0       	ldi	r20, 0x00	; 0
     3aa:	50 e0       	ldi	r21, 0x00	; 0
     3ac:	60 e0       	ldi	r22, 0x00	; 0
     3ae:	70 e0       	ldi	r23, 0x00	; 0
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	d6 cf       	rjmp	.-84     	; 0x362 <rgbWrite>
     3b6:	08 95       	ret

000003b8 <lcdSid>:
     3b8:	88 23       	and	r24, r24
     3ba:	11 f0       	breq	.+4      	; 0x3c0 <lcdSid+0x8>
     3bc:	a0 9a       	sbi	0x14, 0	; 20
     3be:	08 95       	ret
     3c0:	a0 98       	cbi	0x14, 0	; 20
     3c2:	08 95       	ret

000003c4 <lcdSclk>:
     3c4:	88 23       	and	r24, r24
     3c6:	11 f0       	breq	.+4      	; 0x3cc <lcdSclk+0x8>
     3c8:	a1 9a       	sbi	0x14, 1	; 20
     3ca:	08 95       	ret
     3cc:	a1 98       	cbi	0x14, 1	; 20
     3ce:	08 95       	ret

000003d0 <lcdLight>:
     3d0:	81 11       	cpse	r24, r1
     3d2:	04 c0       	rjmp	.+8      	; 0x3dc <lcdLight+0xc>
     3d4:	84 b5       	in	r24, 0x24	; 36
     3d6:	8f 7d       	andi	r24, 0xDF	; 223
     3d8:	84 bd       	out	0x24, r24	; 36
     3da:	08 95       	ret
     3dc:	94 b5       	in	r25, 0x24	; 36
     3de:	90 62       	ori	r25, 0x20	; 32
     3e0:	94 bd       	out	0x24, r25	; 36
     3e2:	88 bd       	out	0x28, r24	; 40
     3e4:	08 95       	ret

000003e6 <writeLcdF>:
     3e6:	ef 92       	push	r14
     3e8:	ff 92       	push	r15
     3ea:	0f 93       	push	r16
     3ec:	1f 93       	push	r17
     3ee:	cf 93       	push	r28
     3f0:	df 93       	push	r29
     3f2:	7c 01       	movw	r14, r24
     3f4:	eb 01       	movw	r28, r22
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	df df       	rcall	.-66     	; 0x3b8 <lcdSid>
     3fa:	05 e0       	ldi	r16, 0x05	; 5
     3fc:	10 e0       	ldi	r17, 0x00	; 0
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	e1 df       	rcall	.-62     	; 0x3c4 <lcdSclk>
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	df df       	rcall	.-66     	; 0x3c4 <lcdSclk>
     406:	01 50       	subi	r16, 0x01	; 1
     408:	11 09       	sbc	r17, r1
     40a:	c9 f7       	brne	.-14     	; 0x3fe <writeLcdF+0x18>
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	d4 df       	rcall	.-88     	; 0x3b8 <lcdSid>
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	d8 df       	rcall	.-80     	; 0x3c4 <lcdSclk>
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	d6 df       	rcall	.-84     	; 0x3c4 <lcdSclk>
     418:	83 e4       	ldi	r24, 0x43	; 67
     41a:	e8 16       	cp	r14, r24
     41c:	f1 04       	cpc	r15, r1
     41e:	19 f4       	brne	.+6      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     420:	80 e0       	ldi	r24, 0x00	; 0
     422:	ca df       	rcall	.-108    	; 0x3b8 <lcdSid>
     424:	02 c0       	rjmp	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     426:	81 e0       	ldi	r24, 0x01	; 1
     428:	c7 df       	rcall	.-114    	; 0x3b8 <lcdSid>
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	cb df       	rcall	.-106    	; 0x3c4 <lcdSclk>
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	c9 df       	rcall	.-110    	; 0x3c4 <lcdSclk>
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	c1 df       	rcall	.-126    	; 0x3b8 <lcdSid>
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	c5 df       	rcall	.-118    	; 0x3c4 <lcdSclk>
     43a:	81 e0       	ldi	r24, 0x01	; 1
     43c:	c3 df       	rcall	.-122    	; 0x3c4 <lcdSclk>
     43e:	04 e0       	ldi	r16, 0x04	; 4
     440:	10 e0       	ldi	r17, 0x00	; 0
     442:	80 e0       	ldi	r24, 0x00	; 0
     444:	bf df       	rcall	.-130    	; 0x3c4 <lcdSclk>
     446:	c0 ff       	sbrs	r28, 0
     448:	03 c0       	rjmp	.+6      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	b5 df       	rcall	.-150    	; 0x3b8 <lcdSid>
     44e:	02 c0       	rjmp	.+4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	b2 df       	rcall	.-156    	; 0x3b8 <lcdSid>
     454:	d6 95       	lsr	r29
     456:	c7 95       	ror	r28
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	b4 df       	rcall	.-152    	; 0x3c4 <lcdSclk>
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	b2 df       	rcall	.-156    	; 0x3c4 <lcdSclk>
     460:	01 50       	subi	r16, 0x01	; 1
     462:	11 09       	sbc	r17, r1
     464:	71 f7       	brne	.-36     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	a7 df       	rcall	.-178    	; 0x3b8 <lcdSid>
     46a:	04 e0       	ldi	r16, 0x04	; 4
     46c:	10 e0       	ldi	r17, 0x00	; 0
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	a9 df       	rcall	.-174    	; 0x3c4 <lcdSclk>
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	a7 df       	rcall	.-178    	; 0x3c4 <lcdSclk>
     476:	01 50       	subi	r16, 0x01	; 1
     478:	11 09       	sbc	r17, r1
     47a:	c9 f7       	brne	.-14     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     47c:	04 e0       	ldi	r16, 0x04	; 4
     47e:	10 e0       	ldi	r17, 0x00	; 0
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	a0 df       	rcall	.-192    	; 0x3c4 <lcdSclk>
     484:	c0 ff       	sbrs	r28, 0
     486:	03 c0       	rjmp	.+6      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	96 df       	rcall	.-212    	; 0x3b8 <lcdSid>
     48c:	02 c0       	rjmp	.+4      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
     48e:	80 e0       	ldi	r24, 0x00	; 0
     490:	93 df       	rcall	.-218    	; 0x3b8 <lcdSid>
     492:	d6 95       	lsr	r29
     494:	c7 95       	ror	r28
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	95 df       	rcall	.-214    	; 0x3c4 <lcdSclk>
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	93 df       	rcall	.-218    	; 0x3c4 <lcdSclk>
     49e:	01 50       	subi	r16, 0x01	; 1
     4a0:	11 09       	sbc	r17, r1
     4a2:	71 f7       	brne	.-36     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	88 df       	rcall	.-240    	; 0x3b8 <lcdSid>
     4a8:	c4 e0       	ldi	r28, 0x04	; 4
     4aa:	d0 e0       	ldi	r29, 0x00	; 0
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	8a df       	rcall	.-236    	; 0x3c4 <lcdSclk>
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	88 df       	rcall	.-240    	; 0x3c4 <lcdSclk>
     4b4:	21 97       	sbiw	r28, 0x01	; 1
     4b6:	d1 f7       	brne	.-12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     4b8:	81 e0       	ldi	r24, 0x01	; 1
     4ba:	7e df       	rcall	.-260    	; 0x3b8 <lcdSid>
     4bc:	87 ec       	ldi	r24, 0xC7	; 199
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	01 97       	sbiw	r24, 0x01	; 1
     4c2:	f1 f7       	brne	.-4      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
     4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
     4c6:	00 00       	nop
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	ff 90       	pop	r15
     4d2:	ef 90       	pop	r14
     4d4:	08 95       	ret

000004d6 <lcdWriteText>:
     4d6:	1f 93       	push	r17
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	cd b7       	in	r28, 0x3d	; 61
     4de:	de b7       	in	r29, 0x3e	; 62
     4e0:	65 97       	sbiw	r28, 0x15	; 21
     4e2:	0f b6       	in	r0, 0x3f	; 63
     4e4:	f8 94       	cli
     4e6:	de bf       	out	0x3e, r29	; 62
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	cd bf       	out	0x3d, r28	; 61
     4ec:	9e 01       	movw	r18, r28
     4ee:	20 5e       	subi	r18, 0xE0	; 224
     4f0:	3f 4f       	sbci	r19, 0xFF	; 255
     4f2:	4e 8d       	ldd	r20, Y+30	; 0x1e
     4f4:	5f 8d       	ldd	r21, Y+31	; 0x1f
     4f6:	65 e1       	ldi	r22, 0x15	; 21
     4f8:	70 e0       	ldi	r23, 0x00	; 0
     4fa:	ce 01       	movw	r24, r28
     4fc:	01 96       	adiw	r24, 0x01	; 1
     4fe:	c7 d4       	rcall	.+2446   	; 0xe8e <vsnprintf>
     500:	6d 8d       	ldd	r22, Y+29	; 0x1d
     502:	8c 8d       	ldd	r24, Y+28	; 0x1c
     504:	90 e2       	ldi	r25, 0x20	; 32
     506:	89 9f       	mul	r24, r25
     508:	60 0d       	add	r22, r0
     50a:	11 24       	eor	r1, r1
     50c:	60 68       	ori	r22, 0x80	; 128
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	83 e4       	ldi	r24, 0x43	; 67
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	68 df       	rcall	.-304    	; 0x3e6 <writeLcdF>
     516:	69 81       	ldd	r22, Y+1	; 0x01
     518:	66 23       	and	r22, r22
     51a:	79 f0       	breq	.+30     	; 0x53a <lcdWriteText+0x64>
     51c:	10 e0       	ldi	r17, 0x00	; 0
     51e:	1f 5f       	subi	r17, 0xFF	; 255
     520:	70 e0       	ldi	r23, 0x00	; 0
     522:	84 e4       	ldi	r24, 0x44	; 68
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	5f df       	rcall	.-322    	; 0x3e6 <writeLcdF>
     528:	e1 e0       	ldi	r30, 0x01	; 1
     52a:	f0 e0       	ldi	r31, 0x00	; 0
     52c:	ec 0f       	add	r30, r28
     52e:	fd 1f       	adc	r31, r29
     530:	e1 0f       	add	r30, r17
     532:	f1 1d       	adc	r31, r1
     534:	60 81       	ld	r22, Z
     536:	61 11       	cpse	r22, r1
     538:	f2 cf       	rjmp	.-28     	; 0x51e <lcdWriteText+0x48>
     53a:	65 96       	adiw	r28, 0x15	; 21
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	f8 94       	cli
     540:	de bf       	out	0x3e, r29	; 62
     542:	0f be       	out	0x3f, r0	; 63
     544:	cd bf       	out	0x3d, r28	; 61
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	1f 91       	pop	r17
     54c:	08 95       	ret

0000054e <lcdWriteZahl>:
     54e:	2f 92       	push	r2
     550:	3f 92       	push	r3
     552:	4f 92       	push	r4
     554:	5f 92       	push	r5
     556:	6f 92       	push	r6
     558:	7f 92       	push	r7
     55a:	8f 92       	push	r8
     55c:	9f 92       	push	r9
     55e:	af 92       	push	r10
     560:	bf 92       	push	r11
     562:	cf 92       	push	r12
     564:	df 92       	push	r13
     566:	ef 92       	push	r14
     568:	ff 92       	push	r15
     56a:	0f 93       	push	r16
     56c:	1f 93       	push	r17
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
     572:	cd b7       	in	r28, 0x3d	; 61
     574:	de b7       	in	r29, 0x3e	; 62
     576:	e3 97       	sbiw	r28, 0x33	; 51
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	f8 94       	cli
     57c:	de bf       	out	0x3e, r29	; 62
     57e:	0f be       	out	0x3f, r0	; 63
     580:	cd bf       	out	0x3d, r28	; 61
     582:	8a ab       	std	Y+50, r24	; 0x32
     584:	6b ab       	std	Y+51, r22	; 0x33
     586:	ed a6       	std	Y+45, r14	; 0x2d
     588:	fe a6       	std	Y+46, r15	; 0x2e
     58a:	70 2e       	mov	r7, r16
     58c:	61 2e       	mov	r6, r17
     58e:	52 2e       	mov	r5, r18
     590:	43 2e       	mov	r4, r19
     592:	cf a6       	std	Y+47, r12	; 0x2f
     594:	a8 aa       	std	Y+48, r10	; 0x30
     596:	8c 2d       	mov	r24, r12
     598:	8a 0d       	add	r24, r10
     59a:	89 ab       	std	Y+49, r24	; 0x31
     59c:	85 31       	cpi	r24, 0x15	; 21
     59e:	70 f0       	brcs	.+28     	; 0x5bc <lcdWriteZahl+0x6e>
     5a0:	8d e2       	ldi	r24, 0x2D	; 45
     5a2:	92 e0       	ldi	r25, 0x02	; 2
     5a4:	9f 93       	push	r25
     5a6:	8f 93       	push	r24
     5a8:	9b a9       	ldd	r25, Y+51	; 0x33
     5aa:	9f 93       	push	r25
     5ac:	ea a9       	ldd	r30, Y+50	; 0x32
     5ae:	ef 93       	push	r30
     5b0:	92 df       	rcall	.-220    	; 0x4d6 <lcdWriteText>
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	0f 90       	pop	r0
     5ba:	a8 c0       	rjmp	.+336    	; 0x70c <lcdWriteZahl+0x1be>
     5bc:	4e 01       	movw	r8, r28
     5be:	f5 e1       	ldi	r31, 0x15	; 21
     5c0:	8f 0e       	add	r8, r31
     5c2:	91 1c       	adc	r9, r1
     5c4:	ce 01       	movw	r24, r28
     5c6:	01 96       	adiw	r24, 0x01	; 1
     5c8:	9c a7       	std	Y+44, r25	; 0x2c
     5ca:	8b a7       	std	Y+43, r24	; 0x2b
     5cc:	24 2e       	mov	r2, r20
     5ce:	35 2e       	mov	r3, r21
     5d0:	0f 2e       	mov	r0, r31
     5d2:	fa e0       	ldi	r31, 0x0A	; 10
     5d4:	af 2e       	mov	r10, r31
     5d6:	f0 2d       	mov	r31, r0
     5d8:	b1 2c       	mov	r11, r1
     5da:	c1 2c       	mov	r12, r1
     5dc:	d1 2c       	mov	r13, r1
     5de:	e1 2c       	mov	r14, r1
     5e0:	f1 2c       	mov	r15, r1
     5e2:	00 e0       	ldi	r16, 0x00	; 0
     5e4:	10 e0       	ldi	r17, 0x00	; 0
     5e6:	2d a5       	ldd	r18, Y+45	; 0x2d
     5e8:	3e a5       	ldd	r19, Y+46	; 0x2e
     5ea:	47 2d       	mov	r20, r7
     5ec:	56 2d       	mov	r21, r6
     5ee:	65 2d       	mov	r22, r5
     5f0:	74 2d       	mov	r23, r4
     5f2:	82 2d       	mov	r24, r2
     5f4:	93 2d       	mov	r25, r3
     5f6:	d8 d3       	rcall	.+1968   	; 0xda8 <__umoddi3>
     5f8:	20 5d       	subi	r18, 0xD0	; 208
     5fa:	f4 01       	movw	r30, r8
     5fc:	22 93       	st	-Z, r18
     5fe:	4f 01       	movw	r8, r30
     600:	2d a5       	ldd	r18, Y+45	; 0x2d
     602:	3e a5       	ldd	r19, Y+46	; 0x2e
     604:	47 2d       	mov	r20, r7
     606:	56 2d       	mov	r21, r6
     608:	65 2d       	mov	r22, r5
     60a:	74 2d       	mov	r23, r4
     60c:	82 2d       	mov	r24, r2
     60e:	93 2d       	mov	r25, r3
     610:	cd d3       	rcall	.+1946   	; 0xdac <__udivdi3>
     612:	2d a7       	std	Y+45, r18	; 0x2d
     614:	3e a7       	std	Y+46, r19	; 0x2e
     616:	74 2e       	mov	r7, r20
     618:	65 2e       	mov	r6, r21
     61a:	56 2e       	mov	r5, r22
     61c:	47 2e       	mov	r4, r23
     61e:	28 2e       	mov	r2, r24
     620:	39 2e       	mov	r3, r25
     622:	8b a5       	ldd	r24, Y+43	; 0x2b
     624:	9c a5       	ldd	r25, Y+44	; 0x2c
     626:	88 15       	cp	r24, r8
     628:	99 05       	cpc	r25, r9
     62a:	91 f6       	brne	.-92     	; 0x5d0 <lcdWriteZahl+0x82>
     62c:	84 e1       	ldi	r24, 0x14	; 20
     62e:	99 a9       	ldd	r25, Y+49	; 0x31
     630:	89 1b       	sub	r24, r25
     632:	ef a5       	ldd	r30, Y+47	; 0x2f
     634:	ee 23       	and	r30, r30
     636:	89 f0       	breq	.+34     	; 0x65a <lcdWriteZahl+0x10c>
     638:	fe 01       	movw	r30, r28
     63a:	75 96       	adiw	r30, 0x15	; 21
     63c:	2f a5       	ldd	r18, Y+47	; 0x2f
     63e:	28 0f       	add	r18, r24
     640:	a1 e0       	ldi	r26, 0x01	; 1
     642:	b0 e0       	ldi	r27, 0x00	; 0
     644:	ac 0f       	add	r26, r28
     646:	bd 1f       	adc	r27, r29
     648:	a8 0f       	add	r26, r24
     64a:	b1 1d       	adc	r27, r1
     64c:	9c 91       	ld	r25, X
     64e:	91 93       	st	Z+, r25
     650:	8f 5f       	subi	r24, 0xFF	; 255
     652:	82 13       	cpse	r24, r18
     654:	f5 cf       	rjmp	.-22     	; 0x640 <lcdWriteZahl+0xf2>
     656:	3f a5       	ldd	r19, Y+47	; 0x2f
     658:	02 c0       	rjmp	.+4      	; 0x65e <lcdWriteZahl+0x110>
     65a:	28 2f       	mov	r18, r24
     65c:	3f a5       	ldd	r19, Y+47	; 0x2f
     65e:	f8 a9       	ldd	r31, Y+48	; 0x30
     660:	ff 23       	and	r31, r31
     662:	f1 f0       	breq	.+60     	; 0x6a0 <lcdWriteZahl+0x152>
     664:	fe 01       	movw	r30, r28
     666:	e3 0f       	add	r30, r19
     668:	f1 1d       	adc	r31, r1
     66a:	8e e2       	ldi	r24, 0x2E	; 46
     66c:	85 8b       	std	Z+21, r24	; 0x15
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	93 0f       	add	r25, r19
     672:	38 a9       	ldd	r19, Y+48	; 0x30
     674:	39 0f       	add	r19, r25
     676:	89 2f       	mov	r24, r25
     678:	29 1b       	sub	r18, r25
     67a:	e5 e1       	ldi	r30, 0x15	; 21
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	ec 0f       	add	r30, r28
     680:	fd 1f       	adc	r31, r29
     682:	e8 0f       	add	r30, r24
     684:	f1 1d       	adc	r31, r1
     686:	92 2f       	mov	r25, r18
     688:	98 0f       	add	r25, r24
     68a:	a1 e0       	ldi	r26, 0x01	; 1
     68c:	b0 e0       	ldi	r27, 0x00	; 0
     68e:	ac 0f       	add	r26, r28
     690:	bd 1f       	adc	r27, r29
     692:	a9 0f       	add	r26, r25
     694:	b1 1d       	adc	r27, r1
     696:	9c 91       	ld	r25, X
     698:	90 83       	st	Z, r25
     69a:	8f 5f       	subi	r24, 0xFF	; 255
     69c:	38 13       	cpse	r19, r24
     69e:	ed cf       	rjmp	.-38     	; 0x67a <lcdWriteZahl+0x12c>
     6a0:	fe 01       	movw	r30, r28
     6a2:	e3 0f       	add	r30, r19
     6a4:	f1 1d       	adc	r31, r1
     6a6:	15 8a       	std	Z+21, r1	; 0x15
     6a8:	8d 89       	ldd	r24, Y+21	; 0x15
     6aa:	80 33       	cpi	r24, 0x30	; 48
     6ac:	11 f5       	brne	.+68     	; 0x6f2 <lcdWriteZahl+0x1a4>
     6ae:	8f a5       	ldd	r24, Y+47	; 0x2f
     6b0:	48 2f       	mov	r20, r24
     6b2:	50 e0       	ldi	r21, 0x00	; 0
     6b4:	41 50       	subi	r20, 0x01	; 1
     6b6:	51 09       	sbc	r21, r1
     6b8:	14 16       	cp	r1, r20
     6ba:	15 06       	cpc	r1, r21
     6bc:	d4 f4       	brge	.+52     	; 0x6f2 <lcdWriteZahl+0x1a4>
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	20 e0       	ldi	r18, 0x00	; 0
     6c4:	60 e2       	ldi	r22, 0x20	; 32
     6c6:	2f 5f       	subi	r18, 0xFF	; 255
     6c8:	e5 e1       	ldi	r30, 0x15	; 21
     6ca:	f0 e0       	ldi	r31, 0x00	; 0
     6cc:	ec 0f       	add	r30, r28
     6ce:	fd 1f       	adc	r31, r29
     6d0:	e8 0f       	add	r30, r24
     6d2:	f9 1f       	adc	r31, r25
     6d4:	60 83       	st	Z, r22
     6d6:	82 2f       	mov	r24, r18
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	e5 e1       	ldi	r30, 0x15	; 21
     6dc:	f0 e0       	ldi	r31, 0x00	; 0
     6de:	ec 0f       	add	r30, r28
     6e0:	fd 1f       	adc	r31, r29
     6e2:	e8 0f       	add	r30, r24
     6e4:	f9 1f       	adc	r31, r25
     6e6:	30 81       	ld	r19, Z
     6e8:	30 33       	cpi	r19, 0x30	; 48
     6ea:	19 f4       	brne	.+6      	; 0x6f2 <lcdWriteZahl+0x1a4>
     6ec:	84 17       	cp	r24, r20
     6ee:	95 07       	cpc	r25, r21
     6f0:	54 f3       	brlt	.-44     	; 0x6c6 <lcdWriteZahl+0x178>
     6f2:	ce 01       	movw	r24, r28
     6f4:	45 96       	adiw	r24, 0x15	; 21
     6f6:	9f 93       	push	r25
     6f8:	8f 93       	push	r24
     6fa:	9b a9       	ldd	r25, Y+51	; 0x33
     6fc:	9f 93       	push	r25
     6fe:	ea a9       	ldd	r30, Y+50	; 0x32
     700:	ef 93       	push	r30
     702:	e9 de       	rcall	.-558    	; 0x4d6 <lcdWriteText>
     704:	0f 90       	pop	r0
     706:	0f 90       	pop	r0
     708:	0f 90       	pop	r0
     70a:	0f 90       	pop	r0
     70c:	e3 96       	adiw	r28, 0x33	; 51
     70e:	0f b6       	in	r0, 0x3f	; 63
     710:	f8 94       	cli
     712:	de bf       	out	0x3e, r29	; 62
     714:	0f be       	out	0x3f, r0	; 63
     716:	cd bf       	out	0x3d, r28	; 61
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	bf 90       	pop	r11
     72a:	af 90       	pop	r10
     72c:	9f 90       	pop	r9
     72e:	8f 90       	pop	r8
     730:	7f 90       	pop	r7
     732:	6f 90       	pop	r6
     734:	5f 90       	pop	r5
     736:	4f 90       	pop	r4
     738:	3f 90       	pop	r3
     73a:	2f 90       	pop	r2
     73c:	08 95       	ret

0000073e <lcdClear>:
     73e:	61 e0       	ldi	r22, 0x01	; 1
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	83 e4       	ldi	r24, 0x43	; 67
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	4f de       	rcall	.-866    	; 0x3e6 <writeLcdF>
     748:	8f e3       	ldi	r24, 0x3F	; 63
     74a:	9f e1       	ldi	r25, 0x1F	; 31
     74c:	01 97       	sbiw	r24, 0x01	; 1
     74e:	f1 f7       	brne	.-4      	; 0x74c <lcdClear+0xe>
     750:	00 c0       	rjmp	.+0      	; 0x752 <lcdClear+0x14>
     752:	00 00       	nop
     754:	85 e5       	ldi	r24, 0x55	; 85
     756:	92 e0       	ldi	r25, 0x02	; 2
     758:	9f 93       	push	r25
     75a:	8f 93       	push	r24
     75c:	1f 92       	push	r1
     75e:	1f 92       	push	r1
     760:	ba de       	rcall	.-652    	; 0x4d6 <lcdWriteText>
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	0f 90       	pop	r0
     768:	0f 90       	pop	r0
     76a:	08 95       	ret

0000076c <initLcd>:
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	2a de       	rcall	.-940    	; 0x3c4 <lcdSclk>
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	22 de       	rcall	.-956    	; 0x3b8 <lcdSid>
     774:	64 e3       	ldi	r22, 0x34	; 52
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	83 e4       	ldi	r24, 0x43	; 67
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	34 de       	rcall	.-920    	; 0x3e6 <writeLcdF>
     77e:	69 e0       	ldi	r22, 0x09	; 9
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	83 e4       	ldi	r24, 0x43	; 67
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	2f de       	rcall	.-930    	; 0x3e6 <writeLcdF>
     788:	60 e3       	ldi	r22, 0x30	; 48
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	83 e4       	ldi	r24, 0x43	; 67
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	2a de       	rcall	.-940    	; 0x3e6 <writeLcdF>
     792:	6c e0       	ldi	r22, 0x0C	; 12
     794:	70 e0       	ldi	r23, 0x00	; 0
     796:	83 e4       	ldi	r24, 0x43	; 67
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	25 de       	rcall	.-950    	; 0x3e6 <writeLcdF>
     79c:	d0 df       	rcall	.-96     	; 0x73e <lcdClear>
     79e:	67 e0       	ldi	r22, 0x07	; 7
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	83 e4       	ldi	r24, 0x43	; 67
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	1f de       	rcall	.-962    	; 0x3e6 <writeLcdF>
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	12 ce       	rjmp	.-988    	; 0x3d0 <lcdLight>
     7ac:	08 95       	ret

000007ae <initBoard>:
     7ae:	4f 92       	push	r4
     7b0:	5f 92       	push	r5
     7b2:	6f 92       	push	r6
     7b4:	7f 92       	push	r7
     7b6:	8f 92       	push	r8
     7b8:	9f 92       	push	r9
     7ba:	af 92       	push	r10
     7bc:	bf 92       	push	r11
     7be:	cf 92       	push	r12
     7c0:	df 92       	push	r13
     7c2:	ef 92       	push	r14
     7c4:	ff 92       	push	r15
     7c6:	0f 93       	push	r16
     7c8:	1f 93       	push	r17
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	c8 2f       	mov	r28, r24
     7d0:	85 b7       	in	r24, 0x35	; 53
     7d2:	85 bf       	out	0x35, r24	; 53
     7d4:	12 b8       	out	0x02, r1	; 2
     7d6:	8f ef       	ldi	r24, 0xFF	; 255
     7d8:	81 b9       	out	0x01, r24	; 1
     7da:	15 b8       	out	0x05, r1	; 5
     7dc:	84 b9       	out	0x04, r24	; 4
     7de:	88 b9       	out	0x08, r24	; 8
     7e0:	17 b8       	out	0x07, r1	; 7
     7e2:	8b b9       	out	0x0b, r24	; 11
     7e4:	1a b8       	out	0x0a, r1	; 10
     7e6:	8e b9       	out	0x0e, r24	; 14
     7e8:	1d b8       	out	0x0d, r1	; 13
     7ea:	72 98       	cbi	0x0e, 2	; 14
     7ec:	11 ba       	out	0x11, r1	; 17
     7ee:	10 ba       	out	0x10, r1	; 16
     7f0:	94 e0       	ldi	r25, 0x04	; 4
     7f2:	94 bb       	out	0x14, r25	; 20
     7f4:	93 b3       	in	r25, 0x13	; 19
     7f6:	93 60       	ori	r25, 0x03	; 3
     7f8:	93 bb       	out	0x13, r25	; 19
     7fa:	9d 9a       	sbi	0x13, 5	; 19
     7fc:	97 ec       	ldi	r25, 0xC7	; 199
     7fe:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     802:	98 e3       	ldi	r25, 0x38	; 56
     804:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     808:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     80c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     810:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     814:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     818:	8c e3       	ldi	r24, 0x3C	; 60
     81a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     81e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     822:	78 94       	sei
     824:	73 dd       	rcall	.-1306   	; 0x30c <startSystemTimeMs>
     826:	a2 df       	rcall	.-188    	; 0x76c <initLcd>
     828:	7b dd       	rcall	.-1290   	; 0x320 <initAdc>
     82a:	b2 dd       	rcall	.-1180   	; 0x390 <initRgb>
     82c:	cc 23       	and	r28, r28
     82e:	09 f4       	brne	.+2      	; 0x832 <initBoard+0x84>
     830:	b8 c0       	rjmp	.+368    	; 0x9a2 <initBoard+0x1f4>
     832:	8f ef       	ldi	r24, 0xFF	; 255
     834:	cd dd       	rcall	.-1126   	; 0x3d0 <lcdLight>
     836:	40 e0       	ldi	r20, 0x00	; 0
     838:	50 e0       	ldi	r21, 0x00	; 0
     83a:	6f ef       	ldi	r22, 0xFF	; 255
     83c:	73 e0       	ldi	r23, 0x03	; 3
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	8f dd       	rcall	.-1250   	; 0x362 <rgbWrite>
     844:	82 e4       	ldi	r24, 0x42	; 66
     846:	92 e0       	ldi	r25, 0x02	; 2
     848:	9f 93       	push	r25
     84a:	8f 93       	push	r24
     84c:	1f 92       	push	r1
     84e:	1f 92       	push	r1
     850:	42 de       	rcall	.-892    	; 0x4d6 <lcdWriteText>
     852:	87 e5       	ldi	r24, 0x57	; 87
     854:	92 e0       	ldi	r25, 0x02	; 2
     856:	9f 93       	push	r25
     858:	8f 93       	push	r24
     85a:	1f 92       	push	r1
     85c:	81 e0       	ldi	r24, 0x01	; 1
     85e:	8f 93       	push	r24
     860:	3a de       	rcall	.-908    	; 0x4d6 <lcdWriteText>
     862:	8d e2       	ldi	r24, 0x2D	; 45
     864:	92 e0       	ldi	r25, 0x02	; 2
     866:	9f 93       	push	r25
     868:	8f 93       	push	r24
     86a:	1f 92       	push	r1
     86c:	82 e0       	ldi	r24, 0x02	; 2
     86e:	8f 93       	push	r24
     870:	32 de       	rcall	.-924    	; 0x4d6 <lcdWriteText>
     872:	8c e6       	ldi	r24, 0x6C	; 108
     874:	92 e0       	ldi	r25, 0x02	; 2
     876:	9f 93       	push	r25
     878:	8f 93       	push	r24
     87a:	1f 92       	push	r1
     87c:	83 e0       	ldi	r24, 0x03	; 3
     87e:	8f 93       	push	r24
     880:	2a de       	rcall	.-940    	; 0x4d6 <lcdWriteText>
     882:	8d b7       	in	r24, 0x3d	; 61
     884:	9e b7       	in	r25, 0x3e	; 62
     886:	40 96       	adiw	r24, 0x10	; 16
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	9e bf       	out	0x3e, r25	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	8d bf       	out	0x3d, r24	; 61
     892:	88 24       	eor	r8, r8
     894:	83 94       	inc	r8
     896:	c0 e0       	ldi	r28, 0x00	; 0
     898:	71 2c       	mov	r7, r1
     89a:	99 24       	eor	r9, r9
     89c:	93 94       	inc	r9
     89e:	d0 e0       	ldi	r29, 0x00	; 0
     8a0:	cc 24       	eor	r12, r12
     8a2:	c3 94       	inc	r12
     8a4:	d1 2c       	mov	r13, r1
     8a6:	e1 2c       	mov	r14, r1
     8a8:	68 94       	set
     8aa:	ff 24       	eor	r15, r15
     8ac:	f7 f8       	bld	r15, 7
     8ae:	66 24       	eor	r6, r6
     8b0:	63 94       	inc	r6
     8b2:	51 2c       	mov	r5, r1
     8b4:	09 e0       	ldi	r16, 0x09	; 9
     8b6:	11 e0       	ldi	r17, 0x01	; 1
     8b8:	0f 2e       	mov	r0, r31
     8ba:	f1 e8       	ldi	r31, 0x81	; 129
     8bc:	af 2e       	mov	r10, r31
     8be:	f2 e0       	ldi	r31, 0x02	; 2
     8c0:	bf 2e       	mov	r11, r31
     8c2:	f0 2d       	mov	r31, r0
     8c4:	0f 2e       	mov	r0, r31
     8c6:	f3 e0       	ldi	r31, 0x03	; 3
     8c8:	4f 2e       	mov	r4, r31
     8ca:	f0 2d       	mov	r31, r0
     8cc:	99 20       	and	r9, r9
     8ce:	49 f0       	breq	.+18     	; 0x8e2 <initBoard+0x134>
     8d0:	c7 01       	movw	r24, r14
     8d2:	0d 2e       	mov	r0, r29
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <initBoard+0x12c>
     8d6:	96 95       	lsr	r25
     8d8:	87 95       	ror	r24
     8da:	0a 94       	dec	r0
     8dc:	e2 f7       	brpl	.-8      	; 0x8d6 <initBoard+0x128>
     8de:	0e dd       	rcall	.-1508   	; 0x2fc <ledWriteAll>
     8e0:	08 c0       	rjmp	.+16     	; 0x8f2 <initBoard+0x144>
     8e2:	c6 01       	movw	r24, r12
     8e4:	0d 2e       	mov	r0, r29
     8e6:	02 c0       	rjmp	.+4      	; 0x8ec <initBoard+0x13e>
     8e8:	88 0f       	add	r24, r24
     8ea:	99 1f       	adc	r25, r25
     8ec:	0a 94       	dec	r0
     8ee:	e2 f7       	brpl	.-8      	; 0x8e8 <initBoard+0x13a>
     8f0:	05 dd       	rcall	.-1526   	; 0x2fc <ledWriteAll>
     8f2:	df 5f       	subi	r29, 0xFF	; 255
     8f4:	d1 31       	cpi	r29, 0x11	; 17
     8f6:	28 f0       	brcs	.+10     	; 0x902 <initBoard+0x154>
     8f8:	86 2d       	mov	r24, r6
     8fa:	91 10       	cpse	r9, r1
     8fc:	85 2d       	mov	r24, r5
     8fe:	98 2e       	mov	r9, r24
     900:	d0 e0       	ldi	r29, 0x00	; 0
     902:	88 20       	and	r8, r8
     904:	11 f0       	breq	.+4      	; 0x90a <initBoard+0x15c>
     906:	ce 5f       	subi	r28, 0xFE	; 254
     908:	01 c0       	rjmp	.+2      	; 0x90c <initBoard+0x15e>
     90a:	c2 50       	subi	r28, 0x02	; 2
     90c:	8c 2f       	mov	r24, r28
     90e:	60 dd       	rcall	.-1344   	; 0x3d0 <lcdLight>
     910:	ce 3f       	cpi	r28, 0xFE	; 254
     912:	21 f0       	breq	.+8      	; 0x91c <initBoard+0x16e>
     914:	c8 37       	cpi	r28, 0x78	; 120
     916:	19 f4       	brne	.+6      	; 0x91e <initBoard+0x170>
     918:	86 2c       	mov	r8, r6
     91a:	01 c0       	rjmp	.+2      	; 0x91e <initBoard+0x170>
     91c:	85 2c       	mov	r8, r5
     91e:	71 10       	cpse	r7, r1
     920:	3b c0       	rjmp	.+118    	; 0x998 <initBoard+0x1ea>
     922:	f8 01       	movw	r30, r16
     924:	80 81       	ld	r24, Z
     926:	83 7c       	andi	r24, 0xC3	; 195
     928:	91 f0       	breq	.+36     	; 0x94e <initBoard+0x1a0>
     92a:	40 e0       	ldi	r20, 0x00	; 0
     92c:	50 e0       	ldi	r21, 0x00	; 0
     92e:	66 e2       	ldi	r22, 0x26	; 38
     930:	72 e0       	ldi	r23, 0x02	; 2
     932:	8f ef       	ldi	r24, 0xFF	; 255
     934:	93 e0       	ldi	r25, 0x03	; 3
     936:	15 dd       	rcall	.-1494   	; 0x362 <rgbWrite>
     938:	bf 92       	push	r11
     93a:	af 92       	push	r10
     93c:	1f 92       	push	r1
     93e:	4f 92       	push	r4
     940:	ca dd       	rcall	.-1132   	; 0x4d6 <lcdWriteText>
     942:	0f 90       	pop	r0
     944:	0f 90       	pop	r0
     946:	0f 90       	pop	r0
     948:	0f 90       	pop	r0
     94a:	76 2c       	mov	r7, r6
     94c:	25 c0       	rjmp	.+74     	; 0x998 <initBoard+0x1ea>
     94e:	8f ef       	ldi	r24, 0xFF	; 255
     950:	9c e7       	ldi	r25, 0x7C	; 124
     952:	01 97       	sbiw	r24, 0x01	; 1
     954:	f1 f7       	brne	.-4      	; 0x952 <initBoard+0x1a4>
     956:	00 c0       	rjmp	.+0      	; 0x958 <initBoard+0x1aa>
     958:	00 00       	nop
     95a:	b8 cf       	rjmp	.-144    	; 0x8cc <initBoard+0x11e>
     95c:	f0 de       	rcall	.-544    	; 0x73e <lcdClear>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	37 dd       	rcall	.-1426   	; 0x3d0 <lcdLight>
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	ca dc       	rcall	.-1644   	; 0x2fc <ledWriteAll>
     968:	40 e0       	ldi	r20, 0x00	; 0
     96a:	50 e0       	ldi	r21, 0x00	; 0
     96c:	60 e0       	ldi	r22, 0x00	; 0
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	80 e0       	ldi	r24, 0x00	; 0
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	f6 dc       	rcall	.-1556   	; 0x362 <rgbWrite>
     976:	10 92 e7 02 	sts	0x02E7, r1	; 0x8002e7 <systemTimeMs>
     97a:	10 92 e8 02 	sts	0x02E8, r1	; 0x8002e8 <systemTimeMs+0x1>
     97e:	10 92 e9 02 	sts	0x02E9, r1	; 0x8002e9 <systemTimeMs+0x2>
     982:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <systemTimeMs+0x3>
     986:	10 92 eb 02 	sts	0x02EB, r1	; 0x8002eb <systemTimeMs+0x4>
     98a:	10 92 ec 02 	sts	0x02EC, r1	; 0x8002ec <systemTimeMs+0x5>
     98e:	10 92 ed 02 	sts	0x02ED, r1	; 0x8002ed <systemTimeMs+0x6>
     992:	10 92 ee 02 	sts	0x02EE, r1	; 0x8002ee <systemTimeMs+0x7>
     996:	05 c0       	rjmp	.+10     	; 0x9a2 <initBoard+0x1f4>
     998:	f8 01       	movw	r30, r16
     99a:	80 81       	ld	r24, Z
     99c:	83 7c       	andi	r24, 0xC3	; 195
     99e:	b9 f6       	brne	.-82     	; 0x94e <initBoard+0x1a0>
     9a0:	dd cf       	rjmp	.-70     	; 0x95c <initBoard+0x1ae>
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	df 90       	pop	r13
     9b0:	cf 90       	pop	r12
     9b2:	bf 90       	pop	r11
     9b4:	af 90       	pop	r10
     9b6:	9f 90       	pop	r9
     9b8:	8f 90       	pop	r8
     9ba:	7f 90       	pop	r7
     9bc:	6f 90       	pop	r6
     9be:	5f 90       	pop	r5
     9c0:	4f 90       	pop	r4
     9c2:	08 95       	ret

000009c4 <lcdLog>:
     9c4:	6f 92       	push	r6
     9c6:	7f 92       	push	r7
     9c8:	8f 92       	push	r8
     9ca:	9f 92       	push	r9
     9cc:	af 92       	push	r10
     9ce:	bf 92       	push	r11
     9d0:	cf 92       	push	r12
     9d2:	df 92       	push	r13
     9d4:	ef 92       	push	r14
     9d6:	ff 92       	push	r15
     9d8:	0f 93       	push	r16
     9da:	1f 93       	push	r17
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	cd b7       	in	r28, 0x3d	; 61
     9e2:	de b7       	in	r29, 0x3e	; 62
     9e4:	60 97       	sbiw	r28, 0x10	; 16
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	f8 94       	cli
     9ea:	de bf       	out	0x3e, r29	; 62
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	cd bf       	out	0x3d, r28	; 61
     9f0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     9f4:	88 23       	and	r24, r24
     9f6:	b1 f1       	breq	.+108    	; 0xa64 <lcdLog+0xa0>
     9f8:	a2 de       	rcall	.-700    	; 0x73e <lcdClear>
     9fa:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
     9fe:	10 92 e5 02 	sts	0x02E5, r1	; 0x8002e5 <nummer.2616+0x1>
     a02:	10 92 e4 02 	sts	0x02E4, r1	; 0x8002e4 <nummer.2616>
     a06:	0f 2e       	mov	r0, r31
     a08:	fc ed       	ldi	r31, 0xDC	; 220
     a0a:	8f 2e       	mov	r8, r31
     a0c:	f2 e0       	ldi	r31, 0x02	; 2
     a0e:	9f 2e       	mov	r9, r31
     a10:	f0 2d       	mov	r31, r0
     a12:	0c e9       	ldi	r16, 0x9C	; 156
     a14:	12 e0       	ldi	r17, 0x02	; 2
     a16:	a0 e0       	ldi	r26, 0x00	; 0
     a18:	b0 e0       	ldi	r27, 0x00	; 0
     a1a:	40 e2       	ldi	r20, 0x20	; 32
     a1c:	bd 01       	movw	r22, r26
     a1e:	f4 01       	movw	r30, r8
     a20:	11 92       	st	Z+, r1
     a22:	11 92       	st	Z+, r1
     a24:	4f 01       	movw	r8, r30
     a26:	f8 01       	movw	r30, r16
     a28:	41 93       	st	Z+, r20
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	13 c0       	rjmp	.+38     	; 0xa56 <lcdLog+0x92>
     a30:	62 95       	swap	r22
     a32:	72 95       	swap	r23
     a34:	70 7f       	andi	r23, 0xF0	; 240
     a36:	76 27       	eor	r23, r22
     a38:	60 7f       	andi	r22, 0xF0	; 240
     a3a:	76 27       	eor	r23, r22
     a3c:	64 56       	subi	r22, 0x64	; 100
     a3e:	7d 4f       	sbci	r23, 0xFD	; 253
     a40:	fb 01       	movw	r30, r22
     a42:	e2 0f       	add	r30, r18
     a44:	f3 1f       	adc	r31, r19
     a46:	10 82       	st	Z, r1
     a48:	11 96       	adiw	r26, 0x01	; 1
     a4a:	00 5f       	subi	r16, 0xF0	; 240
     a4c:	1f 4f       	sbci	r17, 0xFF	; 255
     a4e:	a4 30       	cpi	r26, 0x04	; 4
     a50:	b1 05       	cpc	r27, r1
     a52:	21 f7       	brne	.-56     	; 0xa1c <lcdLog+0x58>
     a54:	07 c0       	rjmp	.+14     	; 0xa64 <lcdLog+0xa0>
     a56:	9c 01       	movw	r18, r24
     a58:	41 93       	st	Z+, r20
     a5a:	01 96       	adiw	r24, 0x01	; 1
     a5c:	80 31       	cpi	r24, 0x10	; 16
     a5e:	91 05       	cpc	r25, r1
     a60:	d1 f7       	brne	.-12     	; 0xa56 <lcdLog+0x92>
     a62:	e6 cf       	rjmp	.-52     	; 0xa30 <lcdLog+0x6c>
     a64:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <nummer.2616>
     a68:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <nummer.2616+0x1>
     a6c:	01 96       	adiw	r24, 0x01	; 1
     a6e:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <nummer.2616+0x1>
     a72:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <nummer.2616>
     a76:	9e 01       	movw	r18, r28
     a78:	2c 5d       	subi	r18, 0xDC	; 220
     a7a:	3f 4f       	sbci	r19, 0xFF	; 255
     a7c:	4a a1       	ldd	r20, Y+34	; 0x22
     a7e:	5b a1       	ldd	r21, Y+35	; 0x23
     a80:	60 e1       	ldi	r22, 0x10	; 16
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	ce 01       	movw	r24, r28
     a86:	01 96       	adiw	r24, 0x01	; 1
     a88:	02 d2       	rcall	.+1028   	; 0xe8e <vsnprintf>
     a8a:	8e 01       	movw	r16, r28
     a8c:	0f 5f       	subi	r16, 0xFF	; 255
     a8e:	1f 4f       	sbci	r17, 0xFF	; 255
     a90:	4e 01       	movw	r8, r28
     a92:	f1 e1       	ldi	r31, 0x11	; 17
     a94:	8f 0e       	add	r8, r31
     a96:	91 1c       	adc	r9, r1
     a98:	f8 01       	movw	r30, r16
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	30 e2       	ldi	r19, 0x20	; 32
     a9e:	21 e0       	ldi	r18, 0x01	; 1
     aa0:	df 01       	movw	r26, r30
     aa2:	80 81       	ld	r24, Z
     aa4:	88 23       	and	r24, r24
     aa6:	19 f0       	breq	.+6      	; 0xaae <lcdLog+0xea>
     aa8:	99 23       	and	r25, r25
     aaa:	19 f0       	breq	.+6      	; 0xab2 <lcdLog+0xee>
     aac:	01 c0       	rjmp	.+2      	; 0xab0 <lcdLog+0xec>
     aae:	92 2f       	mov	r25, r18
     ab0:	3c 93       	st	X, r19
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	e8 15       	cp	r30, r8
     ab6:	f9 05       	cpc	r31, r9
     ab8:	99 f7       	brne	.-26     	; 0xaa0 <lcdLog+0xdc>
     aba:	18 8a       	std	Y+16, r1	; 0x10
     abc:	6c e9       	ldi	r22, 0x9C	; 156
     abe:	72 e0       	ldi	r23, 0x02	; 2
     ac0:	ce 01       	movw	r24, r28
     ac2:	01 96       	adiw	r24, 0x01	; 1
     ac4:	db d1       	rcall	.+950    	; 0xe7c <strcmp>
     ac6:	88 23       	and	r24, r24
     ac8:	09 f4       	brne	.+2      	; 0xacc <lcdLog+0x108>
     aca:	7e c0       	rjmp	.+252    	; 0xbc8 <lcdLog+0x204>
     acc:	0f 2e       	mov	r0, r31
     ace:	f2 ee       	ldi	r31, 0xE2	; 226
     ad0:	6f 2e       	mov	r6, r31
     ad2:	f2 e0       	ldi	r31, 0x02	; 2
     ad4:	7f 2e       	mov	r7, r31
     ad6:	f0 2d       	mov	r31, r0
     ad8:	6c ec       	ldi	r22, 0xCC	; 204
     ada:	72 e0       	ldi	r23, 0x02	; 2
     adc:	4c e9       	ldi	r20, 0x9C	; 156
     ade:	52 e0       	ldi	r21, 0x02	; 2
     ae0:	f3 01       	movw	r30, r6
     ae2:	92 91       	ld	r25, -Z
     ae4:	82 91       	ld	r24, -Z
     ae6:	3f 01       	movw	r6, r30
     ae8:	93 83       	std	Z+3, r25	; 0x03
     aea:	82 83       	std	Z+2, r24	; 0x02
     aec:	db 01       	movw	r26, r22
     aee:	50 97       	sbiw	r26, 0x10	; 16
     af0:	9b 01       	movw	r18, r22
     af2:	20 5f       	subi	r18, 0xF0	; 240
     af4:	3f 4f       	sbci	r19, 0xFF	; 255
     af6:	fb 01       	movw	r30, r22
     af8:	8d 91       	ld	r24, X+
     afa:	81 93       	st	Z+, r24
     afc:	e2 17       	cp	r30, r18
     afe:	f3 07       	cpc	r31, r19
     b00:	d9 f7       	brne	.-10     	; 0xaf8 <lcdLog+0x134>
     b02:	60 51       	subi	r22, 0x10	; 16
     b04:	71 09       	sbc	r23, r1
     b06:	64 17       	cp	r22, r20
     b08:	75 07       	cpc	r23, r21
     b0a:	51 f7       	brne	.-44     	; 0xae0 <lcdLog+0x11c>
     b0c:	f8 01       	movw	r30, r16
     b0e:	81 91       	ld	r24, Z+
     b10:	8f 01       	movw	r16, r30
     b12:	fa 01       	movw	r30, r20
     b14:	81 93       	st	Z+, r24
     b16:	af 01       	movw	r20, r30
     b18:	08 15       	cp	r16, r8
     b1a:	19 05       	cpc	r17, r9
     b1c:	b9 f7       	brne	.-18     	; 0xb0c <lcdLog+0x148>
     b1e:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <nummer.2616>
     b22:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <nummer.2616+0x1>
     b26:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <lcdPrintNr.2614+0x1>
     b2a:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <lcdPrintNr.2614>
     b2e:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <lcdLogZeilen>
     b32:	94 e0       	ldi	r25, 0x04	; 4
     b34:	d9 2e       	mov	r13, r25
     b36:	d8 1a       	sub	r13, r24
     b38:	f3 e0       	ldi	r31, 0x03	; 3
     b3a:	fd 15       	cp	r31, r13
     b3c:	08 f4       	brcc	.+2      	; 0xb40 <lcdLog+0x17c>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <lcdLog+0x232>
     b40:	83 e0       	ldi	r24, 0x03	; 3
     b42:	b8 2e       	mov	r11, r24
     b44:	bd 18       	sub	r11, r13
     b46:	0f 2e       	mov	r0, r31
     b48:	f5 e0       	ldi	r31, 0x05	; 5
     b4a:	6f 2e       	mov	r6, r31
     b4c:	f0 2d       	mov	r31, r0
     b4e:	0f 2e       	mov	r0, r31
     b50:	f6 e9       	ldi	r31, 0x96	; 150
     b52:	8f 2e       	mov	r8, r31
     b54:	f2 e0       	ldi	r31, 0x02	; 2
     b56:	9f 2e       	mov	r9, r31
     b58:	f0 2d       	mov	r31, r0
     b5a:	68 94       	set
     b5c:	77 24       	eor	r7, r7
     b5e:	72 f8       	bld	r7, 2
     b60:	0b 2d       	mov	r16, r11
     b62:	10 e0       	ldi	r17, 0x00	; 0
     b64:	c8 01       	movw	r24, r16
     b66:	82 95       	swap	r24
     b68:	92 95       	swap	r25
     b6a:	90 7f       	andi	r25, 0xF0	; 240
     b6c:	98 27       	eor	r25, r24
     b6e:	80 7f       	andi	r24, 0xF0	; 240
     b70:	98 27       	eor	r25, r24
     b72:	84 56       	subi	r24, 0x64	; 100
     b74:	9d 4f       	sbci	r25, 0xFD	; 253
     b76:	9f 93       	push	r25
     b78:	8f 93       	push	r24
     b7a:	6f 92       	push	r6
     b7c:	df 92       	push	r13
     b7e:	ab dc       	rcall	.-1706   	; 0x4d6 <lcdWriteText>
     b80:	9f 92       	push	r9
     b82:	8f 92       	push	r8
     b84:	7f 92       	push	r7
     b86:	df 92       	push	r13
     b88:	a6 dc       	rcall	.-1716   	; 0x4d6 <lcdWriteText>
     b8a:	00 0f       	add	r16, r16
     b8c:	11 1f       	adc	r17, r17
     b8e:	f8 01       	movw	r30, r16
     b90:	e4 52       	subi	r30, 0x24	; 36
     b92:	fd 4f       	sbci	r31, 0xFD	; 253
     b94:	00 81       	ld	r16, Z
     b96:	11 81       	ldd	r17, Z+1	; 0x01
     b98:	a1 2c       	mov	r10, r1
     b9a:	c7 2c       	mov	r12, r7
     b9c:	e0 2e       	mov	r14, r16
     b9e:	f1 2e       	mov	r15, r17
     ba0:	00 e0       	ldi	r16, 0x00	; 0
     ba2:	10 e0       	ldi	r17, 0x00	; 0
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	40 e0       	ldi	r20, 0x00	; 0
     baa:	50 e0       	ldi	r21, 0x00	; 0
     bac:	60 e0       	ldi	r22, 0x00	; 0
     bae:	8d 2d       	mov	r24, r13
     bb0:	ce dc       	rcall	.-1636   	; 0x54e <lcdWriteZahl>
     bb2:	d3 94       	inc	r13
     bb4:	ba 94       	dec	r11
     bb6:	0f b6       	in	r0, 0x3f	; 63
     bb8:	f8 94       	cli
     bba:	de bf       	out	0x3e, r29	; 62
     bbc:	0f be       	out	0x3f, r0	; 63
     bbe:	cd bf       	out	0x3d, r28	; 61
     bc0:	94 e0       	ldi	r25, 0x04	; 4
     bc2:	d9 12       	cpse	r13, r25
     bc4:	cd cf       	rjmp	.-102    	; 0xb60 <lcdLog+0x19c>
     bc6:	17 c0       	rjmp	.+46     	; 0xbf6 <lcdLog+0x232>
     bc8:	00 91 e4 02 	lds	r16, 0x02E4	; 0x8002e4 <nummer.2616>
     bcc:	10 91 e5 02 	lds	r17, 0x02E5	; 0x8002e5 <nummer.2616+0x1>
     bd0:	10 93 dd 02 	sts	0x02DD, r17	; 0x8002dd <lcdPrintNr.2614+0x1>
     bd4:	00 93 dc 02 	sts	0x02DC, r16	; 0x8002dc <lcdPrintNr.2614>
     bd8:	a1 2c       	mov	r10, r1
     bda:	68 94       	set
     bdc:	cc 24       	eor	r12, r12
     bde:	c2 f8       	bld	r12, 2
     be0:	e0 2e       	mov	r14, r16
     be2:	f1 2e       	mov	r15, r17
     be4:	00 e0       	ldi	r16, 0x00	; 0
     be6:	10 e0       	ldi	r17, 0x00	; 0
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	50 e0       	ldi	r21, 0x00	; 0
     bf0:	60 e0       	ldi	r22, 0x00	; 0
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	ac dc       	rcall	.-1704   	; 0x54e <lcdWriteZahl>
     bf6:	60 96       	adiw	r28, 0x10	; 16
     bf8:	0f b6       	in	r0, 0x3f	; 63
     bfa:	f8 94       	cli
     bfc:	de bf       	out	0x3e, r29	; 62
     bfe:	0f be       	out	0x3f, r0	; 63
     c00:	cd bf       	out	0x3d, r28	; 61
     c02:	df 91       	pop	r29
     c04:	cf 91       	pop	r28
     c06:	1f 91       	pop	r17
     c08:	0f 91       	pop	r16
     c0a:	ff 90       	pop	r15
     c0c:	ef 90       	pop	r14
     c0e:	df 90       	pop	r13
     c10:	cf 90       	pop	r12
     c12:	bf 90       	pop	r11
     c14:	af 90       	pop	r10
     c16:	9f 90       	pop	r9
     c18:	8f 90       	pop	r8
     c1a:	7f 90       	pop	r7
     c1c:	6f 90       	pop	r6
     c1e:	08 95       	ret

00000c20 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	cd b7       	in	r28, 0x3d	; 61
     c26:	de b7       	in	r29, 0x3e	; 62
     c28:	28 97       	sbiw	r28, 0x08	; 8
     c2a:	0f b6       	in	r0, 0x3f	; 63
     c2c:	f8 94       	cli
     c2e:	de bf       	out	0x3e, r29	; 62
     c30:	0f be       	out	0x3f, r0	; 63
     c32:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     c34:	88 e0       	ldi	r24, 0x08	; 8
     c36:	e2 e0       	ldi	r30, 0x02	; 2
     c38:	f2 e0       	ldi	r31, 0x02	; 2
     c3a:	de 01       	movw	r26, r28
     c3c:	11 96       	adiw	r26, 0x01	; 1
     c3e:	01 90       	ld	r0, Z+
     c40:	0d 92       	st	X+, r0
     c42:	8a 95       	dec	r24
     c44:	e1 f7       	brne	.-8      	; 0xc3e <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     c46:	e5 e0       	ldi	r30, 0x05	; 5
     c48:	f1 e0       	ldi	r31, 0x01	; 1
     c4a:	80 81       	ld	r24, Z
     c4c:	8f 7b       	andi	r24, 0xBF	; 191
     c4e:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     c50:	e0 91 9a 02 	lds	r30, 0x029A	; 0x80029a <Zeilen_Nr.2731>
     c54:	f0 91 9b 02 	lds	r31, 0x029B	; 0x80029b <Zeilen_Nr.2731+0x1>
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	8c 0f       	add	r24, r28
     c5e:	9d 1f       	adc	r25, r29
     c60:	e8 0f       	add	r30, r24
     c62:	f9 1f       	adc	r31, r25
     c64:	80 81       	ld	r24, Z
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <__data_end+0x1>
     c6c:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <__data_end>
     c70:	a0 e6       	ldi	r26, 0x60	; 96
     c72:	b3 e0       	ldi	r27, 0x03	; 3
     c74:	20 ef       	ldi	r18, 0xF0	; 240
     c76:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     c78:	e5 e0       	ldi	r30, 0x05	; 5
     c7a:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     c7c:	5e 91       	ld	r21, -X
     c7e:	4e 91       	ld	r20, -X
     c80:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <__data_end>
     c84:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <__data_end+0x1>
     c88:	84 23       	and	r24, r20
     c8a:	95 23       	and	r25, r21
     c8c:	89 2b       	or	r24, r25
     c8e:	21 f0       	breq	.+8      	; 0xc98 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     c90:	80 81       	ld	r24, Z
     c92:	80 62       	ori	r24, 0x20	; 32
     c94:	80 83       	st	Z, r24
     c96:	03 c0       	rjmp	.+6      	; 0xc9e <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     c98:	80 81       	ld	r24, Z
     c9a:	8f 7d       	andi	r24, 0xDF	; 223
     c9c:	80 83       	st	Z, r24
        }
        CLOCK_1;
     c9e:	80 81       	ld	r24, Z
     ca0:	80 61       	ori	r24, 0x10	; 16
     ca2:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     ca4:	80 81       	ld	r24, Z
     ca6:	8f 7e       	andi	r24, 0xEF	; 239
     ca8:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     caa:	a2 17       	cp	r26, r18
     cac:	b3 07       	cpc	r27, r19
     cae:	31 f7       	brne	.-52     	; 0xc7c <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     cb0:	e5 e0       	ldi	r30, 0x05	; 5
     cb2:	f1 e0       	ldi	r31, 0x01	; 1
     cb4:	80 81       	ld	r24, Z
     cb6:	87 7f       	andi	r24, 0xF7	; 247
     cb8:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     cba:	80 81       	ld	r24, Z
     cbc:	88 7f       	andi	r24, 0xF8	; 248
     cbe:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     cc0:	90 81       	ld	r25, Z
     cc2:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <Zeilen_Nr.2731>
     cc6:	89 2b       	or	r24, r25
     cc8:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     cca:	80 81       	ld	r24, Z
     ccc:	80 64       	ori	r24, 0x40	; 64
     cce:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     cd0:	80 81       	ld	r24, Z
     cd2:	88 60       	ori	r24, 0x08	; 8
     cd4:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     cd6:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <Zeilen_Nr.2731>
     cda:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <Zeilen_Nr.2731+0x1>
     cde:	87 30       	cpi	r24, 0x07	; 7
     ce0:	91 05       	cpc	r25, r1
     ce2:	30 f4       	brcc	.+12     	; 0xcf0 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     ce4:	01 96       	adiw	r24, 0x01	; 1
     ce6:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <Zeilen_Nr.2731+0x1>
     cea:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <Zeilen_Nr.2731>
     cee:	07 c0       	rjmp	.+14     	; 0xcfe <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     cf0:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <Zeilen_Nr.2731+0x1>
     cf4:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <Zeilen_Nr.2731>
        writeTextFinished = 1;
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <writeTextFinished>
    }
    
     cfe:	28 96       	adiw	r28, 0x08	; 8
     d00:	0f b6       	in	r0, 0x3f	; 63
     d02:	f8 94       	cli
     d04:	de bf       	out	0x3e, r29	; 62
     d06:	0f be       	out	0x3f, r0	; 63
     d08:	cd bf       	out	0x3d, r28	; 61
     d0a:	df 91       	pop	r29
     d0c:	cf 91       	pop	r28
     d0e:	08 95       	ret

00000d10 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     d10:	1f 92       	push	r1
     d12:	0f 92       	push	r0
     d14:	0f b6       	in	r0, 0x3f	; 63
     d16:	0f 92       	push	r0
     d18:	11 24       	eor	r1, r1
     d1a:	0b b6       	in	r0, 0x3b	; 59
     d1c:	0f 92       	push	r0
     d1e:	2f 93       	push	r18
     d20:	3f 93       	push	r19
     d22:	4f 93       	push	r20
     d24:	5f 93       	push	r21
     d26:	6f 93       	push	r22
     d28:	7f 93       	push	r23
     d2a:	8f 93       	push	r24
     d2c:	9f 93       	push	r25
     d2e:	af 93       	push	r26
     d30:	bf 93       	push	r27
     d32:	ef 93       	push	r30
     d34:	ff 93       	push	r31
    systemTimeMs += 1;
     d36:	20 91 e7 02 	lds	r18, 0x02E7	; 0x8002e7 <systemTimeMs>
     d3a:	30 91 e8 02 	lds	r19, 0x02E8	; 0x8002e8 <systemTimeMs+0x1>
     d3e:	40 91 e9 02 	lds	r20, 0x02E9	; 0x8002e9 <systemTimeMs+0x2>
     d42:	50 91 ea 02 	lds	r21, 0x02EA	; 0x8002ea <systemTimeMs+0x3>
     d46:	60 91 eb 02 	lds	r22, 0x02EB	; 0x8002eb <systemTimeMs+0x4>
     d4a:	70 91 ec 02 	lds	r23, 0x02EC	; 0x8002ec <systemTimeMs+0x5>
     d4e:	80 91 ed 02 	lds	r24, 0x02ED	; 0x8002ed <systemTimeMs+0x6>
     d52:	90 91 ee 02 	lds	r25, 0x02EE	; 0x8002ee <systemTimeMs+0x7>
     d56:	a1 e0       	ldi	r26, 0x01	; 1
     d58:	85 d0       	rcall	.+266    	; 0xe64 <__adddi3_s8>
     d5a:	20 93 e7 02 	sts	0x02E7, r18	; 0x8002e7 <systemTimeMs>
     d5e:	30 93 e8 02 	sts	0x02E8, r19	; 0x8002e8 <systemTimeMs+0x1>
     d62:	40 93 e9 02 	sts	0x02E9, r20	; 0x8002e9 <systemTimeMs+0x2>
     d66:	50 93 ea 02 	sts	0x02EA, r21	; 0x8002ea <systemTimeMs+0x3>
     d6a:	60 93 eb 02 	sts	0x02EB, r22	; 0x8002eb <systemTimeMs+0x4>
     d6e:	70 93 ec 02 	sts	0x02EC, r23	; 0x8002ec <systemTimeMs+0x5>
     d72:	80 93 ed 02 	sts	0x02ED, r24	; 0x8002ed <systemTimeMs+0x6>
     d76:	90 93 ee 02 	sts	0x02EE, r25	; 0x8002ee <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     d7a:	80 91 ef 02 	lds	r24, 0x02EF	; 0x8002ef <matrixRunning>
     d7e:	81 11       	cpse	r24, r1
     d80:	4f df       	rcall	.-354    	; 0xc20 <matrixWriteNextLine>
}
     d82:	ff 91       	pop	r31
     d84:	ef 91       	pop	r30
     d86:	bf 91       	pop	r27
     d88:	af 91       	pop	r26
     d8a:	9f 91       	pop	r25
     d8c:	8f 91       	pop	r24
     d8e:	7f 91       	pop	r23
     d90:	6f 91       	pop	r22
     d92:	5f 91       	pop	r21
     d94:	4f 91       	pop	r20
     d96:	3f 91       	pop	r19
     d98:	2f 91       	pop	r18
     d9a:	0f 90       	pop	r0
     d9c:	0b be       	out	0x3b, r0	; 59
     d9e:	0f 90       	pop	r0
     da0:	0f be       	out	0x3f, r0	; 63
     da2:	0f 90       	pop	r0
     da4:	1f 90       	pop	r1
     da6:	18 95       	reti

00000da8 <__umoddi3>:
     da8:	68 94       	set
     daa:	01 c0       	rjmp	.+2      	; 0xdae <__udivdi3_umoddi3>

00000dac <__udivdi3>:
     dac:	e8 94       	clt

00000dae <__udivdi3_umoddi3>:
     dae:	8f 92       	push	r8
     db0:	9f 92       	push	r9
     db2:	cf 93       	push	r28
     db4:	df 93       	push	r29
     db6:	05 d0       	rcall	.+10     	; 0xdc2 <__udivmod64>
     db8:	df 91       	pop	r29
     dba:	cf 91       	pop	r28
     dbc:	9f 90       	pop	r9
     dbe:	8f 90       	pop	r8
     dc0:	08 95       	ret

00000dc2 <__udivmod64>:
     dc2:	88 24       	eor	r8, r8
     dc4:	99 24       	eor	r9, r9
     dc6:	f4 01       	movw	r30, r8
     dc8:	e4 01       	movw	r28, r8
     dca:	b0 e4       	ldi	r27, 0x40	; 64
     dcc:	9f 93       	push	r25
     dce:	aa 27       	eor	r26, r26
     dd0:	9a 15       	cp	r25, r10
     dd2:	8b 04       	cpc	r8, r11
     dd4:	9c 04       	cpc	r9, r12
     dd6:	ed 05       	cpc	r30, r13
     dd8:	fe 05       	cpc	r31, r14
     dda:	cf 05       	cpc	r28, r15
     ddc:	d0 07       	cpc	r29, r16
     dde:	a1 07       	cpc	r26, r17
     de0:	98 f4       	brcc	.+38     	; 0xe08 <__udivmod64+0x46>
     de2:	ad 2f       	mov	r26, r29
     de4:	dc 2f       	mov	r29, r28
     de6:	cf 2f       	mov	r28, r31
     de8:	fe 2f       	mov	r31, r30
     dea:	e9 2d       	mov	r30, r9
     dec:	98 2c       	mov	r9, r8
     dee:	89 2e       	mov	r8, r25
     df0:	98 2f       	mov	r25, r24
     df2:	87 2f       	mov	r24, r23
     df4:	76 2f       	mov	r23, r22
     df6:	65 2f       	mov	r22, r21
     df8:	54 2f       	mov	r21, r20
     dfa:	43 2f       	mov	r20, r19
     dfc:	32 2f       	mov	r19, r18
     dfe:	22 27       	eor	r18, r18
     e00:	b8 50       	subi	r27, 0x08	; 8
     e02:	31 f7       	brne	.-52     	; 0xdd0 <__udivmod64+0xe>
     e04:	bf 91       	pop	r27
     e06:	27 c0       	rjmp	.+78     	; 0xe56 <__udivmod64+0x94>
     e08:	1b 2e       	mov	r1, r27
     e0a:	bf 91       	pop	r27
     e0c:	bb 27       	eor	r27, r27
     e0e:	22 0f       	add	r18, r18
     e10:	33 1f       	adc	r19, r19
     e12:	44 1f       	adc	r20, r20
     e14:	55 1f       	adc	r21, r21
     e16:	66 1f       	adc	r22, r22
     e18:	77 1f       	adc	r23, r23
     e1a:	88 1f       	adc	r24, r24
     e1c:	99 1f       	adc	r25, r25
     e1e:	88 1c       	adc	r8, r8
     e20:	99 1c       	adc	r9, r9
     e22:	ee 1f       	adc	r30, r30
     e24:	ff 1f       	adc	r31, r31
     e26:	cc 1f       	adc	r28, r28
     e28:	dd 1f       	adc	r29, r29
     e2a:	aa 1f       	adc	r26, r26
     e2c:	bb 1f       	adc	r27, r27
     e2e:	8a 14       	cp	r8, r10
     e30:	9b 04       	cpc	r9, r11
     e32:	ec 05       	cpc	r30, r12
     e34:	fd 05       	cpc	r31, r13
     e36:	ce 05       	cpc	r28, r14
     e38:	df 05       	cpc	r29, r15
     e3a:	a0 07       	cpc	r26, r16
     e3c:	b1 07       	cpc	r27, r17
     e3e:	48 f0       	brcs	.+18     	; 0xe52 <__udivmod64+0x90>
     e40:	8a 18       	sub	r8, r10
     e42:	9b 08       	sbc	r9, r11
     e44:	ec 09       	sbc	r30, r12
     e46:	fd 09       	sbc	r31, r13
     e48:	ce 09       	sbc	r28, r14
     e4a:	df 09       	sbc	r29, r15
     e4c:	a0 0b       	sbc	r26, r16
     e4e:	b1 0b       	sbc	r27, r17
     e50:	21 60       	ori	r18, 0x01	; 1
     e52:	1a 94       	dec	r1
     e54:	e1 f6       	brne	.-72     	; 0xe0e <__udivmod64+0x4c>
     e56:	2e f4       	brtc	.+10     	; 0xe62 <__udivmod64+0xa0>
     e58:	94 01       	movw	r18, r8
     e5a:	af 01       	movw	r20, r30
     e5c:	be 01       	movw	r22, r28
     e5e:	cd 01       	movw	r24, r26
     e60:	00 0c       	add	r0, r0
     e62:	08 95       	ret

00000e64 <__adddi3_s8>:
     e64:	00 24       	eor	r0, r0
     e66:	a7 fd       	sbrc	r26, 7
     e68:	00 94       	com	r0
     e6a:	2a 0f       	add	r18, r26
     e6c:	30 1d       	adc	r19, r0
     e6e:	40 1d       	adc	r20, r0
     e70:	50 1d       	adc	r21, r0
     e72:	60 1d       	adc	r22, r0
     e74:	70 1d       	adc	r23, r0
     e76:	80 1d       	adc	r24, r0
     e78:	90 1d       	adc	r25, r0
     e7a:	08 95       	ret

00000e7c <strcmp>:
     e7c:	fb 01       	movw	r30, r22
     e7e:	dc 01       	movw	r26, r24
     e80:	8d 91       	ld	r24, X+
     e82:	01 90       	ld	r0, Z+
     e84:	80 19       	sub	r24, r0
     e86:	01 10       	cpse	r0, r1
     e88:	d9 f3       	breq	.-10     	; 0xe80 <strcmp+0x4>
     e8a:	99 0b       	sbc	r25, r25
     e8c:	08 95       	ret

00000e8e <vsnprintf>:
     e8e:	0f 93       	push	r16
     e90:	1f 93       	push	r17
     e92:	cf 93       	push	r28
     e94:	df 93       	push	r29
     e96:	cd b7       	in	r28, 0x3d	; 61
     e98:	de b7       	in	r29, 0x3e	; 62
     e9a:	2e 97       	sbiw	r28, 0x0e	; 14
     e9c:	0f b6       	in	r0, 0x3f	; 63
     e9e:	f8 94       	cli
     ea0:	de bf       	out	0x3e, r29	; 62
     ea2:	0f be       	out	0x3f, r0	; 63
     ea4:	cd bf       	out	0x3d, r28	; 61
     ea6:	8c 01       	movw	r16, r24
     ea8:	fa 01       	movw	r30, r20
     eaa:	86 e0       	ldi	r24, 0x06	; 6
     eac:	8c 83       	std	Y+4, r24	; 0x04
     eae:	1a 83       	std	Y+2, r17	; 0x02
     eb0:	09 83       	std	Y+1, r16	; 0x01
     eb2:	77 ff       	sbrs	r23, 7
     eb4:	02 c0       	rjmp	.+4      	; 0xeba <vsnprintf+0x2c>
     eb6:	60 e0       	ldi	r22, 0x00	; 0
     eb8:	70 e8       	ldi	r23, 0x80	; 128
     eba:	cb 01       	movw	r24, r22
     ebc:	01 97       	sbiw	r24, 0x01	; 1
     ebe:	9e 83       	std	Y+6, r25	; 0x06
     ec0:	8d 83       	std	Y+5, r24	; 0x05
     ec2:	a9 01       	movw	r20, r18
     ec4:	bf 01       	movw	r22, r30
     ec6:	ce 01       	movw	r24, r28
     ec8:	01 96       	adiw	r24, 0x01	; 1
     eca:	19 d0       	rcall	.+50     	; 0xefe <vfprintf>
     ecc:	4d 81       	ldd	r20, Y+5	; 0x05
     ece:	5e 81       	ldd	r21, Y+6	; 0x06
     ed0:	57 fd       	sbrc	r21, 7
     ed2:	0a c0       	rjmp	.+20     	; 0xee8 <vsnprintf+0x5a>
     ed4:	2f 81       	ldd	r18, Y+7	; 0x07
     ed6:	38 85       	ldd	r19, Y+8	; 0x08
     ed8:	42 17       	cp	r20, r18
     eda:	53 07       	cpc	r21, r19
     edc:	0c f4       	brge	.+2      	; 0xee0 <vsnprintf+0x52>
     ede:	9a 01       	movw	r18, r20
     ee0:	f8 01       	movw	r30, r16
     ee2:	e2 0f       	add	r30, r18
     ee4:	f3 1f       	adc	r31, r19
     ee6:	10 82       	st	Z, r1
     ee8:	2e 96       	adiw	r28, 0x0e	; 14
     eea:	0f b6       	in	r0, 0x3f	; 63
     eec:	f8 94       	cli
     eee:	de bf       	out	0x3e, r29	; 62
     ef0:	0f be       	out	0x3f, r0	; 63
     ef2:	cd bf       	out	0x3d, r28	; 61
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	1f 91       	pop	r17
     efa:	0f 91       	pop	r16
     efc:	08 95       	ret

00000efe <vfprintf>:
     efe:	2f 92       	push	r2
     f00:	3f 92       	push	r3
     f02:	4f 92       	push	r4
     f04:	5f 92       	push	r5
     f06:	6f 92       	push	r6
     f08:	7f 92       	push	r7
     f0a:	8f 92       	push	r8
     f0c:	9f 92       	push	r9
     f0e:	af 92       	push	r10
     f10:	bf 92       	push	r11
     f12:	cf 92       	push	r12
     f14:	df 92       	push	r13
     f16:	ef 92       	push	r14
     f18:	ff 92       	push	r15
     f1a:	0f 93       	push	r16
     f1c:	1f 93       	push	r17
     f1e:	cf 93       	push	r28
     f20:	df 93       	push	r29
     f22:	cd b7       	in	r28, 0x3d	; 61
     f24:	de b7       	in	r29, 0x3e	; 62
     f26:	2b 97       	sbiw	r28, 0x0b	; 11
     f28:	0f b6       	in	r0, 0x3f	; 63
     f2a:	f8 94       	cli
     f2c:	de bf       	out	0x3e, r29	; 62
     f2e:	0f be       	out	0x3f, r0	; 63
     f30:	cd bf       	out	0x3d, r28	; 61
     f32:	6c 01       	movw	r12, r24
     f34:	7b 01       	movw	r14, r22
     f36:	8a 01       	movw	r16, r20
     f38:	fc 01       	movw	r30, r24
     f3a:	17 82       	std	Z+7, r1	; 0x07
     f3c:	16 82       	std	Z+6, r1	; 0x06
     f3e:	83 81       	ldd	r24, Z+3	; 0x03
     f40:	81 ff       	sbrs	r24, 1
     f42:	bf c1       	rjmp	.+894    	; 0x12c2 <vfprintf+0x3c4>
     f44:	ce 01       	movw	r24, r28
     f46:	01 96       	adiw	r24, 0x01	; 1
     f48:	3c 01       	movw	r6, r24
     f4a:	f6 01       	movw	r30, r12
     f4c:	93 81       	ldd	r25, Z+3	; 0x03
     f4e:	f7 01       	movw	r30, r14
     f50:	93 fd       	sbrc	r25, 3
     f52:	85 91       	lpm	r24, Z+
     f54:	93 ff       	sbrs	r25, 3
     f56:	81 91       	ld	r24, Z+
     f58:	7f 01       	movw	r14, r30
     f5a:	88 23       	and	r24, r24
     f5c:	09 f4       	brne	.+2      	; 0xf60 <vfprintf+0x62>
     f5e:	ad c1       	rjmp	.+858    	; 0x12ba <vfprintf+0x3bc>
     f60:	85 32       	cpi	r24, 0x25	; 37
     f62:	39 f4       	brne	.+14     	; 0xf72 <vfprintf+0x74>
     f64:	93 fd       	sbrc	r25, 3
     f66:	85 91       	lpm	r24, Z+
     f68:	93 ff       	sbrs	r25, 3
     f6a:	81 91       	ld	r24, Z+
     f6c:	7f 01       	movw	r14, r30
     f6e:	85 32       	cpi	r24, 0x25	; 37
     f70:	21 f4       	brne	.+8      	; 0xf7a <vfprintf+0x7c>
     f72:	b6 01       	movw	r22, r12
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	d6 d1       	rcall	.+940    	; 0x1324 <fputc>
     f78:	e8 cf       	rjmp	.-48     	; 0xf4a <vfprintf+0x4c>
     f7a:	91 2c       	mov	r9, r1
     f7c:	21 2c       	mov	r2, r1
     f7e:	31 2c       	mov	r3, r1
     f80:	ff e1       	ldi	r31, 0x1F	; 31
     f82:	f3 15       	cp	r31, r3
     f84:	d8 f0       	brcs	.+54     	; 0xfbc <vfprintf+0xbe>
     f86:	8b 32       	cpi	r24, 0x2B	; 43
     f88:	79 f0       	breq	.+30     	; 0xfa8 <vfprintf+0xaa>
     f8a:	38 f4       	brcc	.+14     	; 0xf9a <vfprintf+0x9c>
     f8c:	80 32       	cpi	r24, 0x20	; 32
     f8e:	79 f0       	breq	.+30     	; 0xfae <vfprintf+0xb0>
     f90:	83 32       	cpi	r24, 0x23	; 35
     f92:	a1 f4       	brne	.+40     	; 0xfbc <vfprintf+0xbe>
     f94:	23 2d       	mov	r18, r3
     f96:	20 61       	ori	r18, 0x10	; 16
     f98:	1d c0       	rjmp	.+58     	; 0xfd4 <vfprintf+0xd6>
     f9a:	8d 32       	cpi	r24, 0x2D	; 45
     f9c:	61 f0       	breq	.+24     	; 0xfb6 <vfprintf+0xb8>
     f9e:	80 33       	cpi	r24, 0x30	; 48
     fa0:	69 f4       	brne	.+26     	; 0xfbc <vfprintf+0xbe>
     fa2:	23 2d       	mov	r18, r3
     fa4:	21 60       	ori	r18, 0x01	; 1
     fa6:	16 c0       	rjmp	.+44     	; 0xfd4 <vfprintf+0xd6>
     fa8:	83 2d       	mov	r24, r3
     faa:	82 60       	ori	r24, 0x02	; 2
     fac:	38 2e       	mov	r3, r24
     fae:	e3 2d       	mov	r30, r3
     fb0:	e4 60       	ori	r30, 0x04	; 4
     fb2:	3e 2e       	mov	r3, r30
     fb4:	2a c0       	rjmp	.+84     	; 0x100a <vfprintf+0x10c>
     fb6:	f3 2d       	mov	r31, r3
     fb8:	f8 60       	ori	r31, 0x08	; 8
     fba:	1d c0       	rjmp	.+58     	; 0xff6 <vfprintf+0xf8>
     fbc:	37 fc       	sbrc	r3, 7
     fbe:	2d c0       	rjmp	.+90     	; 0x101a <vfprintf+0x11c>
     fc0:	20 ed       	ldi	r18, 0xD0	; 208
     fc2:	28 0f       	add	r18, r24
     fc4:	2a 30       	cpi	r18, 0x0A	; 10
     fc6:	40 f0       	brcs	.+16     	; 0xfd8 <vfprintf+0xda>
     fc8:	8e 32       	cpi	r24, 0x2E	; 46
     fca:	b9 f4       	brne	.+46     	; 0xffa <vfprintf+0xfc>
     fcc:	36 fc       	sbrc	r3, 6
     fce:	75 c1       	rjmp	.+746    	; 0x12ba <vfprintf+0x3bc>
     fd0:	23 2d       	mov	r18, r3
     fd2:	20 64       	ori	r18, 0x40	; 64
     fd4:	32 2e       	mov	r3, r18
     fd6:	19 c0       	rjmp	.+50     	; 0x100a <vfprintf+0x10c>
     fd8:	36 fe       	sbrs	r3, 6
     fda:	06 c0       	rjmp	.+12     	; 0xfe8 <vfprintf+0xea>
     fdc:	8a e0       	ldi	r24, 0x0A	; 10
     fde:	98 9e       	mul	r9, r24
     fe0:	20 0d       	add	r18, r0
     fe2:	11 24       	eor	r1, r1
     fe4:	92 2e       	mov	r9, r18
     fe6:	11 c0       	rjmp	.+34     	; 0x100a <vfprintf+0x10c>
     fe8:	ea e0       	ldi	r30, 0x0A	; 10
     fea:	2e 9e       	mul	r2, r30
     fec:	20 0d       	add	r18, r0
     fee:	11 24       	eor	r1, r1
     ff0:	22 2e       	mov	r2, r18
     ff2:	f3 2d       	mov	r31, r3
     ff4:	f0 62       	ori	r31, 0x20	; 32
     ff6:	3f 2e       	mov	r3, r31
     ff8:	08 c0       	rjmp	.+16     	; 0x100a <vfprintf+0x10c>
     ffa:	8c 36       	cpi	r24, 0x6C	; 108
     ffc:	21 f4       	brne	.+8      	; 0x1006 <vfprintf+0x108>
     ffe:	83 2d       	mov	r24, r3
    1000:	80 68       	ori	r24, 0x80	; 128
    1002:	38 2e       	mov	r3, r24
    1004:	02 c0       	rjmp	.+4      	; 0x100a <vfprintf+0x10c>
    1006:	88 36       	cpi	r24, 0x68	; 104
    1008:	41 f4       	brne	.+16     	; 0x101a <vfprintf+0x11c>
    100a:	f7 01       	movw	r30, r14
    100c:	93 fd       	sbrc	r25, 3
    100e:	85 91       	lpm	r24, Z+
    1010:	93 ff       	sbrs	r25, 3
    1012:	81 91       	ld	r24, Z+
    1014:	7f 01       	movw	r14, r30
    1016:	81 11       	cpse	r24, r1
    1018:	b3 cf       	rjmp	.-154    	; 0xf80 <vfprintf+0x82>
    101a:	98 2f       	mov	r25, r24
    101c:	9f 7d       	andi	r25, 0xDF	; 223
    101e:	95 54       	subi	r25, 0x45	; 69
    1020:	93 30       	cpi	r25, 0x03	; 3
    1022:	28 f4       	brcc	.+10     	; 0x102e <vfprintf+0x130>
    1024:	0c 5f       	subi	r16, 0xFC	; 252
    1026:	1f 4f       	sbci	r17, 0xFF	; 255
    1028:	9f e3       	ldi	r25, 0x3F	; 63
    102a:	99 83       	std	Y+1, r25	; 0x01
    102c:	0d c0       	rjmp	.+26     	; 0x1048 <vfprintf+0x14a>
    102e:	83 36       	cpi	r24, 0x63	; 99
    1030:	31 f0       	breq	.+12     	; 0x103e <vfprintf+0x140>
    1032:	83 37       	cpi	r24, 0x73	; 115
    1034:	71 f0       	breq	.+28     	; 0x1052 <vfprintf+0x154>
    1036:	83 35       	cpi	r24, 0x53	; 83
    1038:	09 f0       	breq	.+2      	; 0x103c <vfprintf+0x13e>
    103a:	55 c0       	rjmp	.+170    	; 0x10e6 <vfprintf+0x1e8>
    103c:	20 c0       	rjmp	.+64     	; 0x107e <vfprintf+0x180>
    103e:	f8 01       	movw	r30, r16
    1040:	80 81       	ld	r24, Z
    1042:	89 83       	std	Y+1, r24	; 0x01
    1044:	0e 5f       	subi	r16, 0xFE	; 254
    1046:	1f 4f       	sbci	r17, 0xFF	; 255
    1048:	88 24       	eor	r8, r8
    104a:	83 94       	inc	r8
    104c:	91 2c       	mov	r9, r1
    104e:	53 01       	movw	r10, r6
    1050:	12 c0       	rjmp	.+36     	; 0x1076 <vfprintf+0x178>
    1052:	28 01       	movw	r4, r16
    1054:	f2 e0       	ldi	r31, 0x02	; 2
    1056:	4f 0e       	add	r4, r31
    1058:	51 1c       	adc	r5, r1
    105a:	f8 01       	movw	r30, r16
    105c:	a0 80       	ld	r10, Z
    105e:	b1 80       	ldd	r11, Z+1	; 0x01
    1060:	36 fe       	sbrs	r3, 6
    1062:	03 c0       	rjmp	.+6      	; 0x106a <vfprintf+0x16c>
    1064:	69 2d       	mov	r22, r9
    1066:	70 e0       	ldi	r23, 0x00	; 0
    1068:	02 c0       	rjmp	.+4      	; 0x106e <vfprintf+0x170>
    106a:	6f ef       	ldi	r22, 0xFF	; 255
    106c:	7f ef       	ldi	r23, 0xFF	; 255
    106e:	c5 01       	movw	r24, r10
    1070:	4e d1       	rcall	.+668    	; 0x130e <strnlen>
    1072:	4c 01       	movw	r8, r24
    1074:	82 01       	movw	r16, r4
    1076:	f3 2d       	mov	r31, r3
    1078:	ff 77       	andi	r31, 0x7F	; 127
    107a:	3f 2e       	mov	r3, r31
    107c:	15 c0       	rjmp	.+42     	; 0x10a8 <vfprintf+0x1aa>
    107e:	28 01       	movw	r4, r16
    1080:	22 e0       	ldi	r18, 0x02	; 2
    1082:	42 0e       	add	r4, r18
    1084:	51 1c       	adc	r5, r1
    1086:	f8 01       	movw	r30, r16
    1088:	a0 80       	ld	r10, Z
    108a:	b1 80       	ldd	r11, Z+1	; 0x01
    108c:	36 fe       	sbrs	r3, 6
    108e:	03 c0       	rjmp	.+6      	; 0x1096 <vfprintf+0x198>
    1090:	69 2d       	mov	r22, r9
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	02 c0       	rjmp	.+4      	; 0x109a <vfprintf+0x19c>
    1096:	6f ef       	ldi	r22, 0xFF	; 255
    1098:	7f ef       	ldi	r23, 0xFF	; 255
    109a:	c5 01       	movw	r24, r10
    109c:	2d d1       	rcall	.+602    	; 0x12f8 <strnlen_P>
    109e:	4c 01       	movw	r8, r24
    10a0:	f3 2d       	mov	r31, r3
    10a2:	f0 68       	ori	r31, 0x80	; 128
    10a4:	3f 2e       	mov	r3, r31
    10a6:	82 01       	movw	r16, r4
    10a8:	33 fc       	sbrc	r3, 3
    10aa:	19 c0       	rjmp	.+50     	; 0x10de <vfprintf+0x1e0>
    10ac:	82 2d       	mov	r24, r2
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	88 16       	cp	r8, r24
    10b2:	99 06       	cpc	r9, r25
    10b4:	a0 f4       	brcc	.+40     	; 0x10de <vfprintf+0x1e0>
    10b6:	b6 01       	movw	r22, r12
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	33 d1       	rcall	.+614    	; 0x1324 <fputc>
    10be:	2a 94       	dec	r2
    10c0:	f5 cf       	rjmp	.-22     	; 0x10ac <vfprintf+0x1ae>
    10c2:	f5 01       	movw	r30, r10
    10c4:	37 fc       	sbrc	r3, 7
    10c6:	85 91       	lpm	r24, Z+
    10c8:	37 fe       	sbrs	r3, 7
    10ca:	81 91       	ld	r24, Z+
    10cc:	5f 01       	movw	r10, r30
    10ce:	b6 01       	movw	r22, r12
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	28 d1       	rcall	.+592    	; 0x1324 <fputc>
    10d4:	21 10       	cpse	r2, r1
    10d6:	2a 94       	dec	r2
    10d8:	21 e0       	ldi	r18, 0x01	; 1
    10da:	82 1a       	sub	r8, r18
    10dc:	91 08       	sbc	r9, r1
    10de:	81 14       	cp	r8, r1
    10e0:	91 04       	cpc	r9, r1
    10e2:	79 f7       	brne	.-34     	; 0x10c2 <vfprintf+0x1c4>
    10e4:	e1 c0       	rjmp	.+450    	; 0x12a8 <vfprintf+0x3aa>
    10e6:	84 36       	cpi	r24, 0x64	; 100
    10e8:	11 f0       	breq	.+4      	; 0x10ee <vfprintf+0x1f0>
    10ea:	89 36       	cpi	r24, 0x69	; 105
    10ec:	39 f5       	brne	.+78     	; 0x113c <vfprintf+0x23e>
    10ee:	f8 01       	movw	r30, r16
    10f0:	37 fe       	sbrs	r3, 7
    10f2:	07 c0       	rjmp	.+14     	; 0x1102 <vfprintf+0x204>
    10f4:	60 81       	ld	r22, Z
    10f6:	71 81       	ldd	r23, Z+1	; 0x01
    10f8:	82 81       	ldd	r24, Z+2	; 0x02
    10fa:	93 81       	ldd	r25, Z+3	; 0x03
    10fc:	0c 5f       	subi	r16, 0xFC	; 252
    10fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1100:	08 c0       	rjmp	.+16     	; 0x1112 <vfprintf+0x214>
    1102:	60 81       	ld	r22, Z
    1104:	71 81       	ldd	r23, Z+1	; 0x01
    1106:	07 2e       	mov	r0, r23
    1108:	00 0c       	add	r0, r0
    110a:	88 0b       	sbc	r24, r24
    110c:	99 0b       	sbc	r25, r25
    110e:	0e 5f       	subi	r16, 0xFE	; 254
    1110:	1f 4f       	sbci	r17, 0xFF	; 255
    1112:	f3 2d       	mov	r31, r3
    1114:	ff 76       	andi	r31, 0x6F	; 111
    1116:	3f 2e       	mov	r3, r31
    1118:	97 ff       	sbrs	r25, 7
    111a:	09 c0       	rjmp	.+18     	; 0x112e <vfprintf+0x230>
    111c:	90 95       	com	r25
    111e:	80 95       	com	r24
    1120:	70 95       	com	r23
    1122:	61 95       	neg	r22
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	8f 4f       	sbci	r24, 0xFF	; 255
    1128:	9f 4f       	sbci	r25, 0xFF	; 255
    112a:	f0 68       	ori	r31, 0x80	; 128
    112c:	3f 2e       	mov	r3, r31
    112e:	2a e0       	ldi	r18, 0x0A	; 10
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	a3 01       	movw	r20, r6
    1134:	33 d1       	rcall	.+614    	; 0x139c <__ultoa_invert>
    1136:	88 2e       	mov	r8, r24
    1138:	86 18       	sub	r8, r6
    113a:	44 c0       	rjmp	.+136    	; 0x11c4 <vfprintf+0x2c6>
    113c:	85 37       	cpi	r24, 0x75	; 117
    113e:	31 f4       	brne	.+12     	; 0x114c <vfprintf+0x24e>
    1140:	23 2d       	mov	r18, r3
    1142:	2f 7e       	andi	r18, 0xEF	; 239
    1144:	b2 2e       	mov	r11, r18
    1146:	2a e0       	ldi	r18, 0x0A	; 10
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	25 c0       	rjmp	.+74     	; 0x1196 <vfprintf+0x298>
    114c:	93 2d       	mov	r25, r3
    114e:	99 7f       	andi	r25, 0xF9	; 249
    1150:	b9 2e       	mov	r11, r25
    1152:	8f 36       	cpi	r24, 0x6F	; 111
    1154:	c1 f0       	breq	.+48     	; 0x1186 <vfprintf+0x288>
    1156:	18 f4       	brcc	.+6      	; 0x115e <vfprintf+0x260>
    1158:	88 35       	cpi	r24, 0x58	; 88
    115a:	79 f0       	breq	.+30     	; 0x117a <vfprintf+0x27c>
    115c:	ae c0       	rjmp	.+348    	; 0x12ba <vfprintf+0x3bc>
    115e:	80 37       	cpi	r24, 0x70	; 112
    1160:	19 f0       	breq	.+6      	; 0x1168 <vfprintf+0x26a>
    1162:	88 37       	cpi	r24, 0x78	; 120
    1164:	21 f0       	breq	.+8      	; 0x116e <vfprintf+0x270>
    1166:	a9 c0       	rjmp	.+338    	; 0x12ba <vfprintf+0x3bc>
    1168:	e9 2f       	mov	r30, r25
    116a:	e0 61       	ori	r30, 0x10	; 16
    116c:	be 2e       	mov	r11, r30
    116e:	b4 fe       	sbrs	r11, 4
    1170:	0d c0       	rjmp	.+26     	; 0x118c <vfprintf+0x28e>
    1172:	fb 2d       	mov	r31, r11
    1174:	f4 60       	ori	r31, 0x04	; 4
    1176:	bf 2e       	mov	r11, r31
    1178:	09 c0       	rjmp	.+18     	; 0x118c <vfprintf+0x28e>
    117a:	34 fe       	sbrs	r3, 4
    117c:	0a c0       	rjmp	.+20     	; 0x1192 <vfprintf+0x294>
    117e:	29 2f       	mov	r18, r25
    1180:	26 60       	ori	r18, 0x06	; 6
    1182:	b2 2e       	mov	r11, r18
    1184:	06 c0       	rjmp	.+12     	; 0x1192 <vfprintf+0x294>
    1186:	28 e0       	ldi	r18, 0x08	; 8
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	05 c0       	rjmp	.+10     	; 0x1196 <vfprintf+0x298>
    118c:	20 e1       	ldi	r18, 0x10	; 16
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	02 c0       	rjmp	.+4      	; 0x1196 <vfprintf+0x298>
    1192:	20 e1       	ldi	r18, 0x10	; 16
    1194:	32 e0       	ldi	r19, 0x02	; 2
    1196:	f8 01       	movw	r30, r16
    1198:	b7 fe       	sbrs	r11, 7
    119a:	07 c0       	rjmp	.+14     	; 0x11aa <vfprintf+0x2ac>
    119c:	60 81       	ld	r22, Z
    119e:	71 81       	ldd	r23, Z+1	; 0x01
    11a0:	82 81       	ldd	r24, Z+2	; 0x02
    11a2:	93 81       	ldd	r25, Z+3	; 0x03
    11a4:	0c 5f       	subi	r16, 0xFC	; 252
    11a6:	1f 4f       	sbci	r17, 0xFF	; 255
    11a8:	06 c0       	rjmp	.+12     	; 0x11b6 <vfprintf+0x2b8>
    11aa:	60 81       	ld	r22, Z
    11ac:	71 81       	ldd	r23, Z+1	; 0x01
    11ae:	80 e0       	ldi	r24, 0x00	; 0
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	0e 5f       	subi	r16, 0xFE	; 254
    11b4:	1f 4f       	sbci	r17, 0xFF	; 255
    11b6:	a3 01       	movw	r20, r6
    11b8:	f1 d0       	rcall	.+482    	; 0x139c <__ultoa_invert>
    11ba:	88 2e       	mov	r8, r24
    11bc:	86 18       	sub	r8, r6
    11be:	fb 2d       	mov	r31, r11
    11c0:	ff 77       	andi	r31, 0x7F	; 127
    11c2:	3f 2e       	mov	r3, r31
    11c4:	36 fe       	sbrs	r3, 6
    11c6:	0d c0       	rjmp	.+26     	; 0x11e2 <vfprintf+0x2e4>
    11c8:	23 2d       	mov	r18, r3
    11ca:	2e 7f       	andi	r18, 0xFE	; 254
    11cc:	a2 2e       	mov	r10, r18
    11ce:	89 14       	cp	r8, r9
    11d0:	58 f4       	brcc	.+22     	; 0x11e8 <vfprintf+0x2ea>
    11d2:	34 fe       	sbrs	r3, 4
    11d4:	0b c0       	rjmp	.+22     	; 0x11ec <vfprintf+0x2ee>
    11d6:	32 fc       	sbrc	r3, 2
    11d8:	09 c0       	rjmp	.+18     	; 0x11ec <vfprintf+0x2ee>
    11da:	83 2d       	mov	r24, r3
    11dc:	8e 7e       	andi	r24, 0xEE	; 238
    11de:	a8 2e       	mov	r10, r24
    11e0:	05 c0       	rjmp	.+10     	; 0x11ec <vfprintf+0x2ee>
    11e2:	b8 2c       	mov	r11, r8
    11e4:	a3 2c       	mov	r10, r3
    11e6:	03 c0       	rjmp	.+6      	; 0x11ee <vfprintf+0x2f0>
    11e8:	b8 2c       	mov	r11, r8
    11ea:	01 c0       	rjmp	.+2      	; 0x11ee <vfprintf+0x2f0>
    11ec:	b9 2c       	mov	r11, r9
    11ee:	a4 fe       	sbrs	r10, 4
    11f0:	0f c0       	rjmp	.+30     	; 0x1210 <vfprintf+0x312>
    11f2:	fe 01       	movw	r30, r28
    11f4:	e8 0d       	add	r30, r8
    11f6:	f1 1d       	adc	r31, r1
    11f8:	80 81       	ld	r24, Z
    11fa:	80 33       	cpi	r24, 0x30	; 48
    11fc:	21 f4       	brne	.+8      	; 0x1206 <vfprintf+0x308>
    11fe:	9a 2d       	mov	r25, r10
    1200:	99 7e       	andi	r25, 0xE9	; 233
    1202:	a9 2e       	mov	r10, r25
    1204:	09 c0       	rjmp	.+18     	; 0x1218 <vfprintf+0x31a>
    1206:	a2 fe       	sbrs	r10, 2
    1208:	06 c0       	rjmp	.+12     	; 0x1216 <vfprintf+0x318>
    120a:	b3 94       	inc	r11
    120c:	b3 94       	inc	r11
    120e:	04 c0       	rjmp	.+8      	; 0x1218 <vfprintf+0x31a>
    1210:	8a 2d       	mov	r24, r10
    1212:	86 78       	andi	r24, 0x86	; 134
    1214:	09 f0       	breq	.+2      	; 0x1218 <vfprintf+0x31a>
    1216:	b3 94       	inc	r11
    1218:	a3 fc       	sbrc	r10, 3
    121a:	10 c0       	rjmp	.+32     	; 0x123c <vfprintf+0x33e>
    121c:	a0 fe       	sbrs	r10, 0
    121e:	06 c0       	rjmp	.+12     	; 0x122c <vfprintf+0x32e>
    1220:	b2 14       	cp	r11, r2
    1222:	80 f4       	brcc	.+32     	; 0x1244 <vfprintf+0x346>
    1224:	28 0c       	add	r2, r8
    1226:	92 2c       	mov	r9, r2
    1228:	9b 18       	sub	r9, r11
    122a:	0d c0       	rjmp	.+26     	; 0x1246 <vfprintf+0x348>
    122c:	b2 14       	cp	r11, r2
    122e:	58 f4       	brcc	.+22     	; 0x1246 <vfprintf+0x348>
    1230:	b6 01       	movw	r22, r12
    1232:	80 e2       	ldi	r24, 0x20	; 32
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	76 d0       	rcall	.+236    	; 0x1324 <fputc>
    1238:	b3 94       	inc	r11
    123a:	f8 cf       	rjmp	.-16     	; 0x122c <vfprintf+0x32e>
    123c:	b2 14       	cp	r11, r2
    123e:	18 f4       	brcc	.+6      	; 0x1246 <vfprintf+0x348>
    1240:	2b 18       	sub	r2, r11
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <vfprintf+0x34a>
    1244:	98 2c       	mov	r9, r8
    1246:	21 2c       	mov	r2, r1
    1248:	a4 fe       	sbrs	r10, 4
    124a:	0f c0       	rjmp	.+30     	; 0x126a <vfprintf+0x36c>
    124c:	b6 01       	movw	r22, r12
    124e:	80 e3       	ldi	r24, 0x30	; 48
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	68 d0       	rcall	.+208    	; 0x1324 <fputc>
    1254:	a2 fe       	sbrs	r10, 2
    1256:	16 c0       	rjmp	.+44     	; 0x1284 <vfprintf+0x386>
    1258:	a1 fc       	sbrc	r10, 1
    125a:	03 c0       	rjmp	.+6      	; 0x1262 <vfprintf+0x364>
    125c:	88 e7       	ldi	r24, 0x78	; 120
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <vfprintf+0x368>
    1262:	88 e5       	ldi	r24, 0x58	; 88
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	b6 01       	movw	r22, r12
    1268:	0c c0       	rjmp	.+24     	; 0x1282 <vfprintf+0x384>
    126a:	8a 2d       	mov	r24, r10
    126c:	86 78       	andi	r24, 0x86	; 134
    126e:	51 f0       	breq	.+20     	; 0x1284 <vfprintf+0x386>
    1270:	a1 fe       	sbrs	r10, 1
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <vfprintf+0x37a>
    1274:	8b e2       	ldi	r24, 0x2B	; 43
    1276:	01 c0       	rjmp	.+2      	; 0x127a <vfprintf+0x37c>
    1278:	80 e2       	ldi	r24, 0x20	; 32
    127a:	a7 fc       	sbrc	r10, 7
    127c:	8d e2       	ldi	r24, 0x2D	; 45
    127e:	b6 01       	movw	r22, r12
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	50 d0       	rcall	.+160    	; 0x1324 <fputc>
    1284:	89 14       	cp	r8, r9
    1286:	30 f4       	brcc	.+12     	; 0x1294 <vfprintf+0x396>
    1288:	b6 01       	movw	r22, r12
    128a:	80 e3       	ldi	r24, 0x30	; 48
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	4a d0       	rcall	.+148    	; 0x1324 <fputc>
    1290:	9a 94       	dec	r9
    1292:	f8 cf       	rjmp	.-16     	; 0x1284 <vfprintf+0x386>
    1294:	8a 94       	dec	r8
    1296:	f3 01       	movw	r30, r6
    1298:	e8 0d       	add	r30, r8
    129a:	f1 1d       	adc	r31, r1
    129c:	80 81       	ld	r24, Z
    129e:	b6 01       	movw	r22, r12
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	40 d0       	rcall	.+128    	; 0x1324 <fputc>
    12a4:	81 10       	cpse	r8, r1
    12a6:	f6 cf       	rjmp	.-20     	; 0x1294 <vfprintf+0x396>
    12a8:	22 20       	and	r2, r2
    12aa:	09 f4       	brne	.+2      	; 0x12ae <vfprintf+0x3b0>
    12ac:	4e ce       	rjmp	.-868    	; 0xf4a <vfprintf+0x4c>
    12ae:	b6 01       	movw	r22, r12
    12b0:	80 e2       	ldi	r24, 0x20	; 32
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	37 d0       	rcall	.+110    	; 0x1324 <fputc>
    12b6:	2a 94       	dec	r2
    12b8:	f7 cf       	rjmp	.-18     	; 0x12a8 <vfprintf+0x3aa>
    12ba:	f6 01       	movw	r30, r12
    12bc:	86 81       	ldd	r24, Z+6	; 0x06
    12be:	97 81       	ldd	r25, Z+7	; 0x07
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <vfprintf+0x3c8>
    12c2:	8f ef       	ldi	r24, 0xFF	; 255
    12c4:	9f ef       	ldi	r25, 0xFF	; 255
    12c6:	2b 96       	adiw	r28, 0x0b	; 11
    12c8:	0f b6       	in	r0, 0x3f	; 63
    12ca:	f8 94       	cli
    12cc:	de bf       	out	0x3e, r29	; 62
    12ce:	0f be       	out	0x3f, r0	; 63
    12d0:	cd bf       	out	0x3d, r28	; 61
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	1f 91       	pop	r17
    12d8:	0f 91       	pop	r16
    12da:	ff 90       	pop	r15
    12dc:	ef 90       	pop	r14
    12de:	df 90       	pop	r13
    12e0:	cf 90       	pop	r12
    12e2:	bf 90       	pop	r11
    12e4:	af 90       	pop	r10
    12e6:	9f 90       	pop	r9
    12e8:	8f 90       	pop	r8
    12ea:	7f 90       	pop	r7
    12ec:	6f 90       	pop	r6
    12ee:	5f 90       	pop	r5
    12f0:	4f 90       	pop	r4
    12f2:	3f 90       	pop	r3
    12f4:	2f 90       	pop	r2
    12f6:	08 95       	ret

000012f8 <strnlen_P>:
    12f8:	fc 01       	movw	r30, r24
    12fa:	05 90       	lpm	r0, Z+
    12fc:	61 50       	subi	r22, 0x01	; 1
    12fe:	70 40       	sbci	r23, 0x00	; 0
    1300:	01 10       	cpse	r0, r1
    1302:	d8 f7       	brcc	.-10     	; 0x12fa <strnlen_P+0x2>
    1304:	80 95       	com	r24
    1306:	90 95       	com	r25
    1308:	8e 0f       	add	r24, r30
    130a:	9f 1f       	adc	r25, r31
    130c:	08 95       	ret

0000130e <strnlen>:
    130e:	fc 01       	movw	r30, r24
    1310:	61 50       	subi	r22, 0x01	; 1
    1312:	70 40       	sbci	r23, 0x00	; 0
    1314:	01 90       	ld	r0, Z+
    1316:	01 10       	cpse	r0, r1
    1318:	d8 f7       	brcc	.-10     	; 0x1310 <strnlen+0x2>
    131a:	80 95       	com	r24
    131c:	90 95       	com	r25
    131e:	8e 0f       	add	r24, r30
    1320:	9f 1f       	adc	r25, r31
    1322:	08 95       	ret

00001324 <fputc>:
    1324:	0f 93       	push	r16
    1326:	1f 93       	push	r17
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
    132c:	fb 01       	movw	r30, r22
    132e:	23 81       	ldd	r18, Z+3	; 0x03
    1330:	21 fd       	sbrc	r18, 1
    1332:	03 c0       	rjmp	.+6      	; 0x133a <fputc+0x16>
    1334:	8f ef       	ldi	r24, 0xFF	; 255
    1336:	9f ef       	ldi	r25, 0xFF	; 255
    1338:	2c c0       	rjmp	.+88     	; 0x1392 <fputc+0x6e>
    133a:	22 ff       	sbrs	r18, 2
    133c:	16 c0       	rjmp	.+44     	; 0x136a <fputc+0x46>
    133e:	46 81       	ldd	r20, Z+6	; 0x06
    1340:	57 81       	ldd	r21, Z+7	; 0x07
    1342:	24 81       	ldd	r18, Z+4	; 0x04
    1344:	35 81       	ldd	r19, Z+5	; 0x05
    1346:	42 17       	cp	r20, r18
    1348:	53 07       	cpc	r21, r19
    134a:	44 f4       	brge	.+16     	; 0x135c <fputc+0x38>
    134c:	a0 81       	ld	r26, Z
    134e:	b1 81       	ldd	r27, Z+1	; 0x01
    1350:	9d 01       	movw	r18, r26
    1352:	2f 5f       	subi	r18, 0xFF	; 255
    1354:	3f 4f       	sbci	r19, 0xFF	; 255
    1356:	31 83       	std	Z+1, r19	; 0x01
    1358:	20 83       	st	Z, r18
    135a:	8c 93       	st	X, r24
    135c:	26 81       	ldd	r18, Z+6	; 0x06
    135e:	37 81       	ldd	r19, Z+7	; 0x07
    1360:	2f 5f       	subi	r18, 0xFF	; 255
    1362:	3f 4f       	sbci	r19, 0xFF	; 255
    1364:	37 83       	std	Z+7, r19	; 0x07
    1366:	26 83       	std	Z+6, r18	; 0x06
    1368:	14 c0       	rjmp	.+40     	; 0x1392 <fputc+0x6e>
    136a:	8b 01       	movw	r16, r22
    136c:	ec 01       	movw	r28, r24
    136e:	fb 01       	movw	r30, r22
    1370:	00 84       	ldd	r0, Z+8	; 0x08
    1372:	f1 85       	ldd	r31, Z+9	; 0x09
    1374:	e0 2d       	mov	r30, r0
    1376:	19 95       	eicall
    1378:	89 2b       	or	r24, r25
    137a:	e1 f6       	brne	.-72     	; 0x1334 <fputc+0x10>
    137c:	d8 01       	movw	r26, r16
    137e:	16 96       	adiw	r26, 0x06	; 6
    1380:	8d 91       	ld	r24, X+
    1382:	9c 91       	ld	r25, X
    1384:	17 97       	sbiw	r26, 0x07	; 7
    1386:	01 96       	adiw	r24, 0x01	; 1
    1388:	17 96       	adiw	r26, 0x07	; 7
    138a:	9c 93       	st	X, r25
    138c:	8e 93       	st	-X, r24
    138e:	16 97       	sbiw	r26, 0x06	; 6
    1390:	ce 01       	movw	r24, r28
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	1f 91       	pop	r17
    1398:	0f 91       	pop	r16
    139a:	08 95       	ret

0000139c <__ultoa_invert>:
    139c:	fa 01       	movw	r30, r20
    139e:	aa 27       	eor	r26, r26
    13a0:	28 30       	cpi	r18, 0x08	; 8
    13a2:	51 f1       	breq	.+84     	; 0x13f8 <__ultoa_invert+0x5c>
    13a4:	20 31       	cpi	r18, 0x10	; 16
    13a6:	81 f1       	breq	.+96     	; 0x1408 <__ultoa_invert+0x6c>
    13a8:	e8 94       	clt
    13aa:	6f 93       	push	r22
    13ac:	6e 7f       	andi	r22, 0xFE	; 254
    13ae:	6e 5f       	subi	r22, 0xFE	; 254
    13b0:	7f 4f       	sbci	r23, 0xFF	; 255
    13b2:	8f 4f       	sbci	r24, 0xFF	; 255
    13b4:	9f 4f       	sbci	r25, 0xFF	; 255
    13b6:	af 4f       	sbci	r26, 0xFF	; 255
    13b8:	b1 e0       	ldi	r27, 0x01	; 1
    13ba:	3e d0       	rcall	.+124    	; 0x1438 <__ultoa_invert+0x9c>
    13bc:	b4 e0       	ldi	r27, 0x04	; 4
    13be:	3c d0       	rcall	.+120    	; 0x1438 <__ultoa_invert+0x9c>
    13c0:	67 0f       	add	r22, r23
    13c2:	78 1f       	adc	r23, r24
    13c4:	89 1f       	adc	r24, r25
    13c6:	9a 1f       	adc	r25, r26
    13c8:	a1 1d       	adc	r26, r1
    13ca:	68 0f       	add	r22, r24
    13cc:	79 1f       	adc	r23, r25
    13ce:	8a 1f       	adc	r24, r26
    13d0:	91 1d       	adc	r25, r1
    13d2:	a1 1d       	adc	r26, r1
    13d4:	6a 0f       	add	r22, r26
    13d6:	71 1d       	adc	r23, r1
    13d8:	81 1d       	adc	r24, r1
    13da:	91 1d       	adc	r25, r1
    13dc:	a1 1d       	adc	r26, r1
    13de:	20 d0       	rcall	.+64     	; 0x1420 <__ultoa_invert+0x84>
    13e0:	09 f4       	brne	.+2      	; 0x13e4 <__ultoa_invert+0x48>
    13e2:	68 94       	set
    13e4:	3f 91       	pop	r19
    13e6:	2a e0       	ldi	r18, 0x0A	; 10
    13e8:	26 9f       	mul	r18, r22
    13ea:	11 24       	eor	r1, r1
    13ec:	30 19       	sub	r19, r0
    13ee:	30 5d       	subi	r19, 0xD0	; 208
    13f0:	31 93       	st	Z+, r19
    13f2:	de f6       	brtc	.-74     	; 0x13aa <__ultoa_invert+0xe>
    13f4:	cf 01       	movw	r24, r30
    13f6:	08 95       	ret
    13f8:	46 2f       	mov	r20, r22
    13fa:	47 70       	andi	r20, 0x07	; 7
    13fc:	40 5d       	subi	r20, 0xD0	; 208
    13fe:	41 93       	st	Z+, r20
    1400:	b3 e0       	ldi	r27, 0x03	; 3
    1402:	0f d0       	rcall	.+30     	; 0x1422 <__ultoa_invert+0x86>
    1404:	c9 f7       	brne	.-14     	; 0x13f8 <__ultoa_invert+0x5c>
    1406:	f6 cf       	rjmp	.-20     	; 0x13f4 <__ultoa_invert+0x58>
    1408:	46 2f       	mov	r20, r22
    140a:	4f 70       	andi	r20, 0x0F	; 15
    140c:	40 5d       	subi	r20, 0xD0	; 208
    140e:	4a 33       	cpi	r20, 0x3A	; 58
    1410:	18 f0       	brcs	.+6      	; 0x1418 <__ultoa_invert+0x7c>
    1412:	49 5d       	subi	r20, 0xD9	; 217
    1414:	31 fd       	sbrc	r19, 1
    1416:	40 52       	subi	r20, 0x20	; 32
    1418:	41 93       	st	Z+, r20
    141a:	02 d0       	rcall	.+4      	; 0x1420 <__ultoa_invert+0x84>
    141c:	a9 f7       	brne	.-22     	; 0x1408 <__ultoa_invert+0x6c>
    141e:	ea cf       	rjmp	.-44     	; 0x13f4 <__ultoa_invert+0x58>
    1420:	b4 e0       	ldi	r27, 0x04	; 4
    1422:	a6 95       	lsr	r26
    1424:	97 95       	ror	r25
    1426:	87 95       	ror	r24
    1428:	77 95       	ror	r23
    142a:	67 95       	ror	r22
    142c:	ba 95       	dec	r27
    142e:	c9 f7       	brne	.-14     	; 0x1422 <__ultoa_invert+0x86>
    1430:	00 97       	sbiw	r24, 0x00	; 0
    1432:	61 05       	cpc	r22, r1
    1434:	71 05       	cpc	r23, r1
    1436:	08 95       	ret
    1438:	9b 01       	movw	r18, r22
    143a:	ac 01       	movw	r20, r24
    143c:	0a 2e       	mov	r0, r26
    143e:	06 94       	lsr	r0
    1440:	57 95       	ror	r21
    1442:	47 95       	ror	r20
    1444:	37 95       	ror	r19
    1446:	27 95       	ror	r18
    1448:	ba 95       	dec	r27
    144a:	c9 f7       	brne	.-14     	; 0x143e <__ultoa_invert+0xa2>
    144c:	62 0f       	add	r22, r18
    144e:	73 1f       	adc	r23, r19
    1450:	84 1f       	adc	r24, r20
    1452:	95 1f       	adc	r25, r21
    1454:	a0 1d       	adc	r26, r0
    1456:	08 95       	ret

00001458 <_exit>:
    1458:	f8 94       	cli

0000145a <__stop_program>:
    145a:	ff cf       	rjmp	.-2      	; 0x145a <__stop_program>
