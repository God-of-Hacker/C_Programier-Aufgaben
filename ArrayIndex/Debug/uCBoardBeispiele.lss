
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800200  0000131c  000013b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000131c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c8  00800294  00800294  00001444  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001444  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000014e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002580  00000000  00000000  000016c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001038  00000000  00000000  00003c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014a3  00000000  00000000  00004c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000068c  00000000  00000000  00006124  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cc3  00000000  00000000  000067b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ae9  00000000  00000000  00007473  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008f5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b9 c5       	rjmp	.+2930   	; 0xbd0 <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e1       	ldi	r30, 0x1C	; 28
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 39       	cpi	r26, 0x94	; 148
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a4 e9       	ldi	r26, 0x94	; 148
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ac 35       	cpi	r26, 0x5C	; 92
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:

#define ANZAHL  1000

//Hauptprogramm
int main(void)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	c8 5e       	subi	r28, 0xE8	; 232
     130:	d3 40       	sbci	r29, 0x03	; 3
     132:	0f b6       	in	r0, 0x3f	; 63
     134:	f8 94       	cli
     136:	de bf       	out	0x3e, r29	; 62
     138:	0f be       	out	0x3f, r0	; 63
     13a:	cd bf       	out	0x3d, r28	; 61
    uint8_t muster[ANZAHL];
    
    
    
    //Initialisieren
    initBoard(1);
     13c:	81 e0       	ldi	r24, 0x01	; 1
     13e:	97 d2       	rcall	.+1326   	; 0x66e <initBoard>
     140:	7e 01       	movw	r14, r28
     142:	87 e1       	ldi	r24, 0x17	; 23
     144:	e8 1a       	sub	r14, r24
     146:	8c ef       	ldi	r24, 0xFC	; 252
     148:	f8 0a       	sbc	r15, r24
     14a:	fe 01       	movw	r30, r28
     14c:	31 96       	adiw	r30, 0x01	; 1
    //alle Muster auf 0 setzen
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
    {
        muster[i] = 0;
     14e:	11 92       	st	Z+, r1
    
    
    //Initialisieren
    initBoard(1);
    //alle Muster auf 0 setzen
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
     150:	ee 15       	cp	r30, r14
     152:	ff 05       	cpc	r31, r15
     154:	e1 f7       	brne	.-8      	; 0x14e <main+0x28>
    {
        muster[i] = 0;
    }
    
    lcdLog("Start Aufzeichnung");
     156:	8a e0       	ldi	r24, 0x0A	; 10
     158:	92 e0       	ldi	r25, 0x02	; 2
     15a:	9f 93       	push	r25
     15c:	8f 93       	push	r24
     15e:	92 d3       	rcall	.+1828   	; 0x884 <lcdLog>
     160:	0f 90       	pop	r0
     162:	0f 90       	pop	r0
     164:	8e 01       	movw	r16, r28
     166:	0f 5f       	subi	r16, 0xFF	; 255
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
    {
        uint8_t schalter = switchReadAll();
     168:	1f 4f       	sbci	r17, 0xFF	; 255
     16a:	2e d0       	rcall	.+92     	; 0x1c8 <switchReadAll>
        muster[i] = schalter;
     16c:	f8 01       	movw	r30, r16
     16e:	81 93       	st	Z+, r24
        ledWriteAll(schalter);
     170:	8f 01       	movw	r16, r30
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	26 d0       	rcall	.+76     	; 0x1c2 <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     176:	8f e3       	ldi	r24, 0x3F	; 63
     178:	9c e9       	ldi	r25, 0x9C	; 156
     17a:	01 97       	sbiw	r24, 0x01	; 1
     17c:	f1 f7       	brne	.-4      	; 0x17a <main+0x54>
     17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x5a>
     180:	00 00       	nop
    {
        muster[i] = 0;
    }
    
    lcdLog("Start Aufzeichnung");
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
     182:	0e 15       	cp	r16, r14
     184:	1f 05       	cpc	r17, r15
     186:	89 f7       	brne	.-30     	; 0x16a <main+0x44>
    
    
    //Unendlichschlaufe
    while(1)
    {
        lcdLog("Wiedergabe");
     188:	0f 2e       	mov	r0, r31
     18a:	fd e1       	ldi	r31, 0x1D	; 29
     18c:	cf 2e       	mov	r12, r31
     18e:	f2 e0       	ldi	r31, 0x02	; 2
     190:	df 2e       	mov	r13, r31
     192:	f0 2d       	mov	r31, r0
     194:	df 92       	push	r13
     196:	cf 92       	push	r12
     198:	75 d3       	rcall	.+1770   	; 0x884 <lcdLog>
     19a:	0f 90       	pop	r0
     19c:	0f 90       	pop	r0
     19e:	8e 01       	movw	r16, r28
     1a0:	0f 5f       	subi	r16, 0xFF	; 255
     1a2:	1f 4f       	sbci	r17, 0xFF	; 255
        for (uint16_t i = 0; i < ANZAHL; i=i+1)
        {
            ledWriteAll(muster[i]);
     1a4:	f8 01       	movw	r30, r16
     1a6:	81 91       	ld	r24, Z+
     1a8:	8f 01       	movw	r16, r30
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	0a d0       	rcall	.+20     	; 0x1c2 <ledWriteAll>
     1ae:	8f e3       	ldi	r24, 0x3F	; 63
     1b0:	9c e9       	ldi	r25, 0x9C	; 156
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <main+0x8c>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <main+0x92>
     1b8:	00 00       	nop
     1ba:	0e 15       	cp	r16, r14
    
    //Unendlichschlaufe
    while(1)
    {
        lcdLog("Wiedergabe");
        for (uint16_t i = 0; i < ANZAHL; i=i+1)
     1bc:	1f 05       	cpc	r17, r15
     1be:	91 f7       	brne	.-28     	; 0x1a4 <main+0x7e>
     1c0:	e9 cf       	rjmp	.-46     	; 0x194 <main+0x6e>

000001c2 <ledWriteAll>:
     1c2:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     1c4:	95 b9       	out	0x05, r25	; 5
     1c6:	08 95       	ret

000001c8 <switchReadAll>:
     1c8:	86 b1       	in	r24, 0x06	; 6
     1ca:	08 95       	ret

000001cc <startSystemTimeMs>:
     1cc:	83 e0       	ldi	r24, 0x03	; 3
     1ce:	84 bd       	out	0x24, r24	; 36
     1d0:	8b e0       	ldi	r24, 0x0B	; 11
     1d2:	85 bd       	out	0x25, r24	; 37
     1d4:	81 e0       	ldi	r24, 0x01	; 1
     1d6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     1da:	89 ef       	ldi	r24, 0xF9	; 249
     1dc:	87 bd       	out	0x27, r24	; 39
     1de:	08 95       	ret

000001e0 <initAdc>:
     1e0:	11 ba       	out	0x11, r1	; 17
     1e2:	10 ba       	out	0x10, r1	; 16
     1e4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     1e8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     1ec:	80 e4       	ldi	r24, 0x40	; 64
     1ee:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     1f2:	8f e0       	ldi	r24, 0x0F	; 15
     1f4:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     1f8:	8f ef       	ldi	r24, 0xFF	; 255
     1fa:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     1fe:	ea e7       	ldi	r30, 0x7A	; 122
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	87 ea       	ldi	r24, 0xA7	; 167
     204:	80 83       	st	Z, r24
     206:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     20a:	80 81       	ld	r24, Z
     20c:	80 64       	ori	r24, 0x40	; 64
     20e:	80 83       	st	Z, r24
     210:	80 81       	ld	r24, Z
     212:	84 ff       	sbrs	r24, 4
     214:	fd cf       	rjmp	.-6      	; 0x210 <initAdc+0x30>
     216:	ea e7       	ldi	r30, 0x7A	; 122
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	80 81       	ld	r24, Z
     21c:	8f 7e       	andi	r24, 0xEF	; 239
     21e:	80 83       	st	Z, r24
     220:	08 95       	ret

00000222 <rgbWrite>:
     222:	2f ef       	ldi	r18, 0xFF	; 255
     224:	33 e0       	ldi	r19, 0x03	; 3
     226:	f9 01       	movw	r30, r18
     228:	e8 1b       	sub	r30, r24
     22a:	f9 0b       	sbc	r31, r25
     22c:	c9 01       	movw	r24, r18
     22e:	86 1b       	sub	r24, r22
     230:	97 0b       	sbc	r25, r23
     232:	24 1b       	sub	r18, r20
     234:	35 0b       	sbc	r19, r21
     236:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     23a:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     23e:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     242:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     246:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     24a:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     24e:	08 95       	ret

00000250 <initRgb>:
     250:	8e ef       	ldi	r24, 0xFE	; 254
     252:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     256:	8b e1       	ldi	r24, 0x1B	; 27
     258:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     25c:	83 e0       	ldi	r24, 0x03	; 3
     25e:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     262:	8f ef       	ldi	r24, 0xFF	; 255
     264:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	60 e0       	ldi	r22, 0x00	; 0
     26e:	70 e0       	ldi	r23, 0x00	; 0
     270:	80 e0       	ldi	r24, 0x00	; 0
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	d6 cf       	rjmp	.-84     	; 0x222 <rgbWrite>
     276:	08 95       	ret

00000278 <lcdSid>:
     278:	88 23       	and	r24, r24
     27a:	11 f0       	breq	.+4      	; 0x280 <lcdSid+0x8>
     27c:	a0 9a       	sbi	0x14, 0	; 20
     27e:	08 95       	ret
     280:	a0 98       	cbi	0x14, 0	; 20
     282:	08 95       	ret

00000284 <lcdSclk>:
     284:	88 23       	and	r24, r24
     286:	11 f0       	breq	.+4      	; 0x28c <lcdSclk+0x8>
     288:	a1 9a       	sbi	0x14, 1	; 20
     28a:	08 95       	ret
     28c:	a1 98       	cbi	0x14, 1	; 20
     28e:	08 95       	ret

00000290 <lcdLight>:
     290:	81 11       	cpse	r24, r1
     292:	04 c0       	rjmp	.+8      	; 0x29c <lcdLight+0xc>
     294:	84 b5       	in	r24, 0x24	; 36
     296:	8f 7d       	andi	r24, 0xDF	; 223
     298:	84 bd       	out	0x24, r24	; 36
     29a:	08 95       	ret
     29c:	94 b5       	in	r25, 0x24	; 36
     29e:	90 62       	ori	r25, 0x20	; 32
     2a0:	94 bd       	out	0x24, r25	; 36
     2a2:	88 bd       	out	0x28, r24	; 40
     2a4:	08 95       	ret

000002a6 <writeLcdF>:
     2a6:	ef 92       	push	r14
     2a8:	ff 92       	push	r15
     2aa:	0f 93       	push	r16
     2ac:	1f 93       	push	r17
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	7c 01       	movw	r14, r24
     2b4:	eb 01       	movw	r28, r22
     2b6:	81 e0       	ldi	r24, 0x01	; 1
     2b8:	df df       	rcall	.-66     	; 0x278 <lcdSid>
     2ba:	05 e0       	ldi	r16, 0x05	; 5
     2bc:	10 e0       	ldi	r17, 0x00	; 0
     2be:	80 e0       	ldi	r24, 0x00	; 0
     2c0:	e1 df       	rcall	.-62     	; 0x284 <lcdSclk>
     2c2:	81 e0       	ldi	r24, 0x01	; 1
     2c4:	df df       	rcall	.-66     	; 0x284 <lcdSclk>
     2c6:	01 50       	subi	r16, 0x01	; 1
     2c8:	11 09       	sbc	r17, r1
     2ca:	c9 f7       	brne	.-14     	; 0x2be <writeLcdF+0x18>
     2cc:	80 e0       	ldi	r24, 0x00	; 0
     2ce:	d4 df       	rcall	.-88     	; 0x278 <lcdSid>
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	d8 df       	rcall	.-80     	; 0x284 <lcdSclk>
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	d6 df       	rcall	.-84     	; 0x284 <lcdSclk>
     2d8:	83 e4       	ldi	r24, 0x43	; 67
     2da:	e8 16       	cp	r14, r24
     2dc:	f1 04       	cpc	r15, r1
     2de:	19 f4       	brne	.+6      	; 0x2e6 <writeLcdF+0x40>
     2e0:	80 e0       	ldi	r24, 0x00	; 0
     2e2:	ca df       	rcall	.-108    	; 0x278 <lcdSid>
     2e4:	02 c0       	rjmp	.+4      	; 0x2ea <writeLcdF+0x44>
     2e6:	81 e0       	ldi	r24, 0x01	; 1
     2e8:	c7 df       	rcall	.-114    	; 0x278 <lcdSid>
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	cb df       	rcall	.-106    	; 0x284 <lcdSclk>
     2ee:	81 e0       	ldi	r24, 0x01	; 1
     2f0:	c9 df       	rcall	.-110    	; 0x284 <lcdSclk>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	c1 df       	rcall	.-126    	; 0x278 <lcdSid>
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	c5 df       	rcall	.-118    	; 0x284 <lcdSclk>
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	c3 df       	rcall	.-122    	; 0x284 <lcdSclk>
     2fe:	04 e0       	ldi	r16, 0x04	; 4
     300:	10 e0       	ldi	r17, 0x00	; 0
     302:	80 e0       	ldi	r24, 0x00	; 0
     304:	bf df       	rcall	.-130    	; 0x284 <lcdSclk>
     306:	c0 ff       	sbrs	r28, 0
     308:	03 c0       	rjmp	.+6      	; 0x310 <writeLcdF+0x6a>
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	b5 df       	rcall	.-150    	; 0x278 <lcdSid>
     30e:	02 c0       	rjmp	.+4      	; 0x314 <writeLcdF+0x6e>
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	b2 df       	rcall	.-156    	; 0x278 <lcdSid>
     314:	d6 95       	lsr	r29
     316:	c7 95       	ror	r28
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	b4 df       	rcall	.-152    	; 0x284 <lcdSclk>
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	b2 df       	rcall	.-156    	; 0x284 <lcdSclk>
     320:	01 50       	subi	r16, 0x01	; 1
     322:	11 09       	sbc	r17, r1
     324:	71 f7       	brne	.-36     	; 0x302 <writeLcdF+0x5c>
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	a7 df       	rcall	.-178    	; 0x278 <lcdSid>
     32a:	04 e0       	ldi	r16, 0x04	; 4
     32c:	10 e0       	ldi	r17, 0x00	; 0
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	a9 df       	rcall	.-174    	; 0x284 <lcdSclk>
     332:	81 e0       	ldi	r24, 0x01	; 1
     334:	a7 df       	rcall	.-178    	; 0x284 <lcdSclk>
     336:	01 50       	subi	r16, 0x01	; 1
     338:	11 09       	sbc	r17, r1
     33a:	c9 f7       	brne	.-14     	; 0x32e <writeLcdF+0x88>
     33c:	04 e0       	ldi	r16, 0x04	; 4
     33e:	10 e0       	ldi	r17, 0x00	; 0
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	a0 df       	rcall	.-192    	; 0x284 <lcdSclk>
     344:	c0 ff       	sbrs	r28, 0
     346:	03 c0       	rjmp	.+6      	; 0x34e <writeLcdF+0xa8>
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	96 df       	rcall	.-212    	; 0x278 <lcdSid>
     34c:	02 c0       	rjmp	.+4      	; 0x352 <writeLcdF+0xac>
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	93 df       	rcall	.-218    	; 0x278 <lcdSid>
     352:	d6 95       	lsr	r29
     354:	c7 95       	ror	r28
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	95 df       	rcall	.-214    	; 0x284 <lcdSclk>
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	93 df       	rcall	.-218    	; 0x284 <lcdSclk>
     35e:	01 50       	subi	r16, 0x01	; 1
     360:	11 09       	sbc	r17, r1
     362:	71 f7       	brne	.-36     	; 0x340 <writeLcdF+0x9a>
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	88 df       	rcall	.-240    	; 0x278 <lcdSid>
     368:	c4 e0       	ldi	r28, 0x04	; 4
     36a:	d0 e0       	ldi	r29, 0x00	; 0
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	8a df       	rcall	.-236    	; 0x284 <lcdSclk>
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	88 df       	rcall	.-240    	; 0x284 <lcdSclk>
     374:	21 97       	sbiw	r28, 0x01	; 1
     376:	d1 f7       	brne	.-12     	; 0x36c <writeLcdF+0xc6>
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	7e df       	rcall	.-260    	; 0x278 <lcdSid>
     37c:	87 ec       	ldi	r24, 0xC7	; 199
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <writeLcdF+0xda>
     384:	00 c0       	rjmp	.+0      	; 0x386 <writeLcdF+0xe0>
     386:	00 00       	nop
     388:	df 91       	pop	r29
     38a:	cf 91       	pop	r28
     38c:	1f 91       	pop	r17
     38e:	0f 91       	pop	r16
     390:	ff 90       	pop	r15
     392:	ef 90       	pop	r14
     394:	08 95       	ret

00000396 <lcdWriteText>:
     396:	1f 93       	push	r17
     398:	cf 93       	push	r28
     39a:	df 93       	push	r29
     39c:	cd b7       	in	r28, 0x3d	; 61
     39e:	de b7       	in	r29, 0x3e	; 62
     3a0:	65 97       	sbiw	r28, 0x15	; 21
     3a2:	0f b6       	in	r0, 0x3f	; 63
     3a4:	f8 94       	cli
     3a6:	de bf       	out	0x3e, r29	; 62
     3a8:	0f be       	out	0x3f, r0	; 63
     3aa:	cd bf       	out	0x3d, r28	; 61
     3ac:	9e 01       	movw	r18, r28
     3ae:	20 5e       	subi	r18, 0xE0	; 224
     3b0:	3f 4f       	sbci	r19, 0xFF	; 255
     3b2:	4e 8d       	ldd	r20, Y+30	; 0x1e
     3b4:	5f 8d       	ldd	r21, Y+31	; 0x1f
     3b6:	65 e1       	ldi	r22, 0x15	; 21
     3b8:	70 e0       	ldi	r23, 0x00	; 0
     3ba:	ce 01       	movw	r24, r28
     3bc:	01 96       	adiw	r24, 0x01	; 1
     3be:	c7 d4       	rcall	.+2446   	; 0xd4e <vsnprintf>
     3c0:	6d 8d       	ldd	r22, Y+29	; 0x1d
     3c2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     3c4:	90 e2       	ldi	r25, 0x20	; 32
     3c6:	89 9f       	mul	r24, r25
     3c8:	60 0d       	add	r22, r0
     3ca:	11 24       	eor	r1, r1
     3cc:	60 68       	ori	r22, 0x80	; 128
     3ce:	70 e0       	ldi	r23, 0x00	; 0
     3d0:	83 e4       	ldi	r24, 0x43	; 67
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	68 df       	rcall	.-304    	; 0x2a6 <writeLcdF>
     3d6:	69 81       	ldd	r22, Y+1	; 0x01
     3d8:	66 23       	and	r22, r22
     3da:	79 f0       	breq	.+30     	; 0x3fa <lcdWriteText+0x64>
     3dc:	10 e0       	ldi	r17, 0x00	; 0
     3de:	1f 5f       	subi	r17, 0xFF	; 255
     3e0:	70 e0       	ldi	r23, 0x00	; 0
     3e2:	84 e4       	ldi	r24, 0x44	; 68
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	5f df       	rcall	.-322    	; 0x2a6 <writeLcdF>
     3e8:	e1 e0       	ldi	r30, 0x01	; 1
     3ea:	f0 e0       	ldi	r31, 0x00	; 0
     3ec:	ec 0f       	add	r30, r28
     3ee:	fd 1f       	adc	r31, r29
     3f0:	e1 0f       	add	r30, r17
     3f2:	f1 1d       	adc	r31, r1
     3f4:	60 81       	ld	r22, Z
     3f6:	61 11       	cpse	r22, r1
     3f8:	f2 cf       	rjmp	.-28     	; 0x3de <lcdWriteText+0x48>
     3fa:	65 96       	adiw	r28, 0x15	; 21
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	f8 94       	cli
     400:	de bf       	out	0x3e, r29	; 62
     402:	0f be       	out	0x3f, r0	; 63
     404:	cd bf       	out	0x3d, r28	; 61
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	1f 91       	pop	r17
     40c:	08 95       	ret

0000040e <lcdWriteZahl>:
     40e:	2f 92       	push	r2
     410:	3f 92       	push	r3
     412:	4f 92       	push	r4
     414:	5f 92       	push	r5
     416:	6f 92       	push	r6
     418:	7f 92       	push	r7
     41a:	8f 92       	push	r8
     41c:	9f 92       	push	r9
     41e:	af 92       	push	r10
     420:	bf 92       	push	r11
     422:	cf 92       	push	r12
     424:	df 92       	push	r13
     426:	ef 92       	push	r14
     428:	ff 92       	push	r15
     42a:	0f 93       	push	r16
     42c:	1f 93       	push	r17
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	cd b7       	in	r28, 0x3d	; 61
     434:	de b7       	in	r29, 0x3e	; 62
     436:	e3 97       	sbiw	r28, 0x33	; 51
     438:	0f b6       	in	r0, 0x3f	; 63
     43a:	f8 94       	cli
     43c:	de bf       	out	0x3e, r29	; 62
     43e:	0f be       	out	0x3f, r0	; 63
     440:	cd bf       	out	0x3d, r28	; 61
     442:	8a ab       	std	Y+50, r24	; 0x32
     444:	6b ab       	std	Y+51, r22	; 0x33
     446:	ed a6       	std	Y+45, r14	; 0x2d
     448:	fe a6       	std	Y+46, r15	; 0x2e
     44a:	70 2e       	mov	r7, r16
     44c:	61 2e       	mov	r6, r17
     44e:	52 2e       	mov	r5, r18
     450:	43 2e       	mov	r4, r19
     452:	cf a6       	std	Y+47, r12	; 0x2f
     454:	a8 aa       	std	Y+48, r10	; 0x30
     456:	8c 2d       	mov	r24, r12
     458:	8a 0d       	add	r24, r10
     45a:	89 ab       	std	Y+49, r24	; 0x31
     45c:	85 31       	cpi	r24, 0x15	; 21
     45e:	70 f0       	brcs	.+28     	; 0x47c <lcdWriteZahl+0x6e>
     460:	88 e2       	ldi	r24, 0x28	; 40
     462:	92 e0       	ldi	r25, 0x02	; 2
     464:	9f 93       	push	r25
     466:	8f 93       	push	r24
     468:	9b a9       	ldd	r25, Y+51	; 0x33
     46a:	9f 93       	push	r25
     46c:	ea a9       	ldd	r30, Y+50	; 0x32
     46e:	ef 93       	push	r30
     470:	92 df       	rcall	.-220    	; 0x396 <lcdWriteText>
     472:	0f 90       	pop	r0
     474:	0f 90       	pop	r0
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	a8 c0       	rjmp	.+336    	; 0x5cc <lcdWriteZahl+0x1be>
     47c:	4e 01       	movw	r8, r28
     47e:	f5 e1       	ldi	r31, 0x15	; 21
     480:	8f 0e       	add	r8, r31
     482:	91 1c       	adc	r9, r1
     484:	ce 01       	movw	r24, r28
     486:	01 96       	adiw	r24, 0x01	; 1
     488:	9c a7       	std	Y+44, r25	; 0x2c
     48a:	8b a7       	std	Y+43, r24	; 0x2b
     48c:	24 2e       	mov	r2, r20
     48e:	35 2e       	mov	r3, r21
     490:	0f 2e       	mov	r0, r31
     492:	fa e0       	ldi	r31, 0x0A	; 10
     494:	af 2e       	mov	r10, r31
     496:	f0 2d       	mov	r31, r0
     498:	b1 2c       	mov	r11, r1
     49a:	c1 2c       	mov	r12, r1
     49c:	d1 2c       	mov	r13, r1
     49e:	e1 2c       	mov	r14, r1
     4a0:	f1 2c       	mov	r15, r1
     4a2:	00 e0       	ldi	r16, 0x00	; 0
     4a4:	10 e0       	ldi	r17, 0x00	; 0
     4a6:	2d a5       	ldd	r18, Y+45	; 0x2d
     4a8:	3e a5       	ldd	r19, Y+46	; 0x2e
     4aa:	47 2d       	mov	r20, r7
     4ac:	56 2d       	mov	r21, r6
     4ae:	65 2d       	mov	r22, r5
     4b0:	74 2d       	mov	r23, r4
     4b2:	82 2d       	mov	r24, r2
     4b4:	93 2d       	mov	r25, r3
     4b6:	d8 d3       	rcall	.+1968   	; 0xc68 <__umoddi3>
     4b8:	20 5d       	subi	r18, 0xD0	; 208
     4ba:	f4 01       	movw	r30, r8
     4bc:	22 93       	st	-Z, r18
     4be:	4f 01       	movw	r8, r30
     4c0:	2d a5       	ldd	r18, Y+45	; 0x2d
     4c2:	3e a5       	ldd	r19, Y+46	; 0x2e
     4c4:	47 2d       	mov	r20, r7
     4c6:	56 2d       	mov	r21, r6
     4c8:	65 2d       	mov	r22, r5
     4ca:	74 2d       	mov	r23, r4
     4cc:	82 2d       	mov	r24, r2
     4ce:	93 2d       	mov	r25, r3
     4d0:	cd d3       	rcall	.+1946   	; 0xc6c <__udivdi3>
     4d2:	2d a7       	std	Y+45, r18	; 0x2d
     4d4:	3e a7       	std	Y+46, r19	; 0x2e
     4d6:	74 2e       	mov	r7, r20
     4d8:	65 2e       	mov	r6, r21
     4da:	56 2e       	mov	r5, r22
     4dc:	47 2e       	mov	r4, r23
     4de:	28 2e       	mov	r2, r24
     4e0:	39 2e       	mov	r3, r25
     4e2:	8b a5       	ldd	r24, Y+43	; 0x2b
     4e4:	9c a5       	ldd	r25, Y+44	; 0x2c
     4e6:	88 15       	cp	r24, r8
     4e8:	99 05       	cpc	r25, r9
     4ea:	91 f6       	brne	.-92     	; 0x490 <lcdWriteZahl+0x82>
     4ec:	84 e1       	ldi	r24, 0x14	; 20
     4ee:	99 a9       	ldd	r25, Y+49	; 0x31
     4f0:	89 1b       	sub	r24, r25
     4f2:	ef a5       	ldd	r30, Y+47	; 0x2f
     4f4:	ee 23       	and	r30, r30
     4f6:	89 f0       	breq	.+34     	; 0x51a <lcdWriteZahl+0x10c>
     4f8:	fe 01       	movw	r30, r28
     4fa:	75 96       	adiw	r30, 0x15	; 21
     4fc:	2f a5       	ldd	r18, Y+47	; 0x2f
     4fe:	28 0f       	add	r18, r24
     500:	a1 e0       	ldi	r26, 0x01	; 1
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	ac 0f       	add	r26, r28
     506:	bd 1f       	adc	r27, r29
     508:	a8 0f       	add	r26, r24
     50a:	b1 1d       	adc	r27, r1
     50c:	9c 91       	ld	r25, X
     50e:	91 93       	st	Z+, r25
     510:	8f 5f       	subi	r24, 0xFF	; 255
     512:	82 13       	cpse	r24, r18
     514:	f5 cf       	rjmp	.-22     	; 0x500 <lcdWriteZahl+0xf2>
     516:	3f a5       	ldd	r19, Y+47	; 0x2f
     518:	02 c0       	rjmp	.+4      	; 0x51e <lcdWriteZahl+0x110>
     51a:	28 2f       	mov	r18, r24
     51c:	3f a5       	ldd	r19, Y+47	; 0x2f
     51e:	f8 a9       	ldd	r31, Y+48	; 0x30
     520:	ff 23       	and	r31, r31
     522:	f1 f0       	breq	.+60     	; 0x560 <lcdWriteZahl+0x152>
     524:	fe 01       	movw	r30, r28
     526:	e3 0f       	add	r30, r19
     528:	f1 1d       	adc	r31, r1
     52a:	8e e2       	ldi	r24, 0x2E	; 46
     52c:	85 8b       	std	Z+21, r24	; 0x15
     52e:	91 e0       	ldi	r25, 0x01	; 1
     530:	93 0f       	add	r25, r19
     532:	38 a9       	ldd	r19, Y+48	; 0x30
     534:	39 0f       	add	r19, r25
     536:	89 2f       	mov	r24, r25
     538:	29 1b       	sub	r18, r25
     53a:	e5 e1       	ldi	r30, 0x15	; 21
     53c:	f0 e0       	ldi	r31, 0x00	; 0
     53e:	ec 0f       	add	r30, r28
     540:	fd 1f       	adc	r31, r29
     542:	e8 0f       	add	r30, r24
     544:	f1 1d       	adc	r31, r1
     546:	92 2f       	mov	r25, r18
     548:	98 0f       	add	r25, r24
     54a:	a1 e0       	ldi	r26, 0x01	; 1
     54c:	b0 e0       	ldi	r27, 0x00	; 0
     54e:	ac 0f       	add	r26, r28
     550:	bd 1f       	adc	r27, r29
     552:	a9 0f       	add	r26, r25
     554:	b1 1d       	adc	r27, r1
     556:	9c 91       	ld	r25, X
     558:	90 83       	st	Z, r25
     55a:	8f 5f       	subi	r24, 0xFF	; 255
     55c:	38 13       	cpse	r19, r24
     55e:	ed cf       	rjmp	.-38     	; 0x53a <lcdWriteZahl+0x12c>
     560:	fe 01       	movw	r30, r28
     562:	e3 0f       	add	r30, r19
     564:	f1 1d       	adc	r31, r1
     566:	15 8a       	std	Z+21, r1	; 0x15
     568:	8d 89       	ldd	r24, Y+21	; 0x15
     56a:	80 33       	cpi	r24, 0x30	; 48
     56c:	11 f5       	brne	.+68     	; 0x5b2 <lcdWriteZahl+0x1a4>
     56e:	8f a5       	ldd	r24, Y+47	; 0x2f
     570:	48 2f       	mov	r20, r24
     572:	50 e0       	ldi	r21, 0x00	; 0
     574:	41 50       	subi	r20, 0x01	; 1
     576:	51 09       	sbc	r21, r1
     578:	14 16       	cp	r1, r20
     57a:	15 06       	cpc	r1, r21
     57c:	d4 f4       	brge	.+52     	; 0x5b2 <lcdWriteZahl+0x1a4>
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	60 e2       	ldi	r22, 0x20	; 32
     586:	2f 5f       	subi	r18, 0xFF	; 255
     588:	e5 e1       	ldi	r30, 0x15	; 21
     58a:	f0 e0       	ldi	r31, 0x00	; 0
     58c:	ec 0f       	add	r30, r28
     58e:	fd 1f       	adc	r31, r29
     590:	e8 0f       	add	r30, r24
     592:	f9 1f       	adc	r31, r25
     594:	60 83       	st	Z, r22
     596:	82 2f       	mov	r24, r18
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	e5 e1       	ldi	r30, 0x15	; 21
     59c:	f0 e0       	ldi	r31, 0x00	; 0
     59e:	ec 0f       	add	r30, r28
     5a0:	fd 1f       	adc	r31, r29
     5a2:	e8 0f       	add	r30, r24
     5a4:	f9 1f       	adc	r31, r25
     5a6:	30 81       	ld	r19, Z
     5a8:	30 33       	cpi	r19, 0x30	; 48
     5aa:	19 f4       	brne	.+6      	; 0x5b2 <lcdWriteZahl+0x1a4>
     5ac:	84 17       	cp	r24, r20
     5ae:	95 07       	cpc	r25, r21
     5b0:	54 f3       	brlt	.-44     	; 0x586 <lcdWriteZahl+0x178>
     5b2:	ce 01       	movw	r24, r28
     5b4:	45 96       	adiw	r24, 0x15	; 21
     5b6:	9f 93       	push	r25
     5b8:	8f 93       	push	r24
     5ba:	9b a9       	ldd	r25, Y+51	; 0x33
     5bc:	9f 93       	push	r25
     5be:	ea a9       	ldd	r30, Y+50	; 0x32
     5c0:	ef 93       	push	r30
     5c2:	e9 de       	rcall	.-558    	; 0x396 <lcdWriteText>
     5c4:	0f 90       	pop	r0
     5c6:	0f 90       	pop	r0
     5c8:	0f 90       	pop	r0
     5ca:	0f 90       	pop	r0
     5cc:	e3 96       	adiw	r28, 0x33	; 51
     5ce:	0f b6       	in	r0, 0x3f	; 63
     5d0:	f8 94       	cli
     5d2:	de bf       	out	0x3e, r29	; 62
     5d4:	0f be       	out	0x3f, r0	; 63
     5d6:	cd bf       	out	0x3d, r28	; 61
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	ef 90       	pop	r14
     5e4:	df 90       	pop	r13
     5e6:	cf 90       	pop	r12
     5e8:	bf 90       	pop	r11
     5ea:	af 90       	pop	r10
     5ec:	9f 90       	pop	r9
     5ee:	8f 90       	pop	r8
     5f0:	7f 90       	pop	r7
     5f2:	6f 90       	pop	r6
     5f4:	5f 90       	pop	r5
     5f6:	4f 90       	pop	r4
     5f8:	3f 90       	pop	r3
     5fa:	2f 90       	pop	r2
     5fc:	08 95       	ret

000005fe <lcdClear>:
     5fe:	61 e0       	ldi	r22, 0x01	; 1
     600:	70 e0       	ldi	r23, 0x00	; 0
     602:	83 e4       	ldi	r24, 0x43	; 67
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	4f de       	rcall	.-866    	; 0x2a6 <writeLcdF>
     608:	8f e3       	ldi	r24, 0x3F	; 63
     60a:	9f e1       	ldi	r25, 0x1F	; 31
     60c:	01 97       	sbiw	r24, 0x01	; 1
     60e:	f1 f7       	brne	.-4      	; 0x60c <lcdClear+0xe>
     610:	00 c0       	rjmp	.+0      	; 0x612 <lcdClear+0x14>
     612:	00 00       	nop
     614:	80 e5       	ldi	r24, 0x50	; 80
     616:	92 e0       	ldi	r25, 0x02	; 2
     618:	9f 93       	push	r25
     61a:	8f 93       	push	r24
     61c:	1f 92       	push	r1
     61e:	1f 92       	push	r1
     620:	ba de       	rcall	.-652    	; 0x396 <lcdWriteText>
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	0f 90       	pop	r0
     62a:	08 95       	ret

0000062c <initLcd>:
     62c:	81 e0       	ldi	r24, 0x01	; 1
     62e:	2a de       	rcall	.-940    	; 0x284 <lcdSclk>
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	22 de       	rcall	.-956    	; 0x278 <lcdSid>
     634:	64 e3       	ldi	r22, 0x34	; 52
     636:	70 e0       	ldi	r23, 0x00	; 0
     638:	83 e4       	ldi	r24, 0x43	; 67
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	34 de       	rcall	.-920    	; 0x2a6 <writeLcdF>
     63e:	69 e0       	ldi	r22, 0x09	; 9
     640:	70 e0       	ldi	r23, 0x00	; 0
     642:	83 e4       	ldi	r24, 0x43	; 67
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	2f de       	rcall	.-930    	; 0x2a6 <writeLcdF>
     648:	60 e3       	ldi	r22, 0x30	; 48
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	83 e4       	ldi	r24, 0x43	; 67
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	2a de       	rcall	.-940    	; 0x2a6 <writeLcdF>
     652:	6c e0       	ldi	r22, 0x0C	; 12
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	83 e4       	ldi	r24, 0x43	; 67
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	25 de       	rcall	.-950    	; 0x2a6 <writeLcdF>
     65c:	d0 df       	rcall	.-96     	; 0x5fe <lcdClear>
     65e:	67 e0       	ldi	r22, 0x07	; 7
     660:	70 e0       	ldi	r23, 0x00	; 0
     662:	83 e4       	ldi	r24, 0x43	; 67
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	1f de       	rcall	.-962    	; 0x2a6 <writeLcdF>
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	12 ce       	rjmp	.-988    	; 0x290 <lcdLight>
     66c:	08 95       	ret

0000066e <initBoard>:
     66e:	4f 92       	push	r4
     670:	5f 92       	push	r5
     672:	6f 92       	push	r6
     674:	7f 92       	push	r7
     676:	8f 92       	push	r8
     678:	9f 92       	push	r9
     67a:	af 92       	push	r10
     67c:	bf 92       	push	r11
     67e:	cf 92       	push	r12
     680:	df 92       	push	r13
     682:	ef 92       	push	r14
     684:	ff 92       	push	r15
     686:	0f 93       	push	r16
     688:	1f 93       	push	r17
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	c8 2f       	mov	r28, r24
     690:	85 b7       	in	r24, 0x35	; 53
     692:	85 bf       	out	0x35, r24	; 53
     694:	12 b8       	out	0x02, r1	; 2
     696:	8f ef       	ldi	r24, 0xFF	; 255
     698:	81 b9       	out	0x01, r24	; 1
     69a:	15 b8       	out	0x05, r1	; 5
     69c:	84 b9       	out	0x04, r24	; 4
     69e:	88 b9       	out	0x08, r24	; 8
     6a0:	17 b8       	out	0x07, r1	; 7
     6a2:	8b b9       	out	0x0b, r24	; 11
     6a4:	1a b8       	out	0x0a, r1	; 10
     6a6:	8e b9       	out	0x0e, r24	; 14
     6a8:	1d b8       	out	0x0d, r1	; 13
     6aa:	72 98       	cbi	0x0e, 2	; 14
     6ac:	11 ba       	out	0x11, r1	; 17
     6ae:	10 ba       	out	0x10, r1	; 16
     6b0:	94 e0       	ldi	r25, 0x04	; 4
     6b2:	94 bb       	out	0x14, r25	; 20
     6b4:	93 b3       	in	r25, 0x13	; 19
     6b6:	93 60       	ori	r25, 0x03	; 3
     6b8:	93 bb       	out	0x13, r25	; 19
     6ba:	9d 9a       	sbi	0x13, 5	; 19
     6bc:	97 ec       	ldi	r25, 0xC7	; 199
     6be:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     6c2:	98 e3       	ldi	r25, 0x38	; 56
     6c4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     6c8:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     6cc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     6d0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     6d4:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     6d8:	8c e3       	ldi	r24, 0x3C	; 60
     6da:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     6de:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     6e2:	78 94       	sei
     6e4:	73 dd       	rcall	.-1306   	; 0x1cc <startSystemTimeMs>
     6e6:	a2 df       	rcall	.-188    	; 0x62c <initLcd>
     6e8:	7b dd       	rcall	.-1290   	; 0x1e0 <initAdc>
     6ea:	b2 dd       	rcall	.-1180   	; 0x250 <initRgb>
     6ec:	cc 23       	and	r28, r28
     6ee:	09 f4       	brne	.+2      	; 0x6f2 <initBoard+0x84>
     6f0:	b8 c0       	rjmp	.+368    	; 0x862 <initBoard+0x1f4>
     6f2:	8f ef       	ldi	r24, 0xFF	; 255
     6f4:	cd dd       	rcall	.-1126   	; 0x290 <lcdLight>
     6f6:	40 e0       	ldi	r20, 0x00	; 0
     6f8:	50 e0       	ldi	r21, 0x00	; 0
     6fa:	6f ef       	ldi	r22, 0xFF	; 255
     6fc:	73 e0       	ldi	r23, 0x03	; 3
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	8f dd       	rcall	.-1250   	; 0x222 <rgbWrite>
     704:	8d e3       	ldi	r24, 0x3D	; 61
     706:	92 e0       	ldi	r25, 0x02	; 2
     708:	9f 93       	push	r25
     70a:	8f 93       	push	r24
     70c:	1f 92       	push	r1
     70e:	1f 92       	push	r1
     710:	42 de       	rcall	.-892    	; 0x396 <lcdWriteText>
     712:	82 e5       	ldi	r24, 0x52	; 82
     714:	92 e0       	ldi	r25, 0x02	; 2
     716:	9f 93       	push	r25
     718:	8f 93       	push	r24
     71a:	1f 92       	push	r1
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	8f 93       	push	r24
     720:	3a de       	rcall	.-908    	; 0x396 <lcdWriteText>
     722:	88 e2       	ldi	r24, 0x28	; 40
     724:	92 e0       	ldi	r25, 0x02	; 2
     726:	9f 93       	push	r25
     728:	8f 93       	push	r24
     72a:	1f 92       	push	r1
     72c:	82 e0       	ldi	r24, 0x02	; 2
     72e:	8f 93       	push	r24
     730:	32 de       	rcall	.-924    	; 0x396 <lcdWriteText>
     732:	87 e6       	ldi	r24, 0x67	; 103
     734:	92 e0       	ldi	r25, 0x02	; 2
     736:	9f 93       	push	r25
     738:	8f 93       	push	r24
     73a:	1f 92       	push	r1
     73c:	83 e0       	ldi	r24, 0x03	; 3
     73e:	8f 93       	push	r24
     740:	2a de       	rcall	.-940    	; 0x396 <lcdWriteText>
     742:	8d b7       	in	r24, 0x3d	; 61
     744:	9e b7       	in	r25, 0x3e	; 62
     746:	40 96       	adiw	r24, 0x10	; 16
     748:	0f b6       	in	r0, 0x3f	; 63
     74a:	f8 94       	cli
     74c:	9e bf       	out	0x3e, r25	; 62
     74e:	0f be       	out	0x3f, r0	; 63
     750:	8d bf       	out	0x3d, r24	; 61
     752:	88 24       	eor	r8, r8
     754:	83 94       	inc	r8
     756:	c0 e0       	ldi	r28, 0x00	; 0
     758:	71 2c       	mov	r7, r1
     75a:	99 24       	eor	r9, r9
     75c:	93 94       	inc	r9
     75e:	d0 e0       	ldi	r29, 0x00	; 0
     760:	cc 24       	eor	r12, r12
     762:	c3 94       	inc	r12
     764:	d1 2c       	mov	r13, r1
     766:	e1 2c       	mov	r14, r1
     768:	68 94       	set
     76a:	ff 24       	eor	r15, r15
     76c:	f7 f8       	bld	r15, 7
     76e:	66 24       	eor	r6, r6
     770:	63 94       	inc	r6
     772:	51 2c       	mov	r5, r1
     774:	09 e0       	ldi	r16, 0x09	; 9
     776:	11 e0       	ldi	r17, 0x01	; 1
     778:	0f 2e       	mov	r0, r31
     77a:	fc e7       	ldi	r31, 0x7C	; 124
     77c:	af 2e       	mov	r10, r31
     77e:	f2 e0       	ldi	r31, 0x02	; 2
     780:	bf 2e       	mov	r11, r31
     782:	f0 2d       	mov	r31, r0
     784:	0f 2e       	mov	r0, r31
     786:	f3 e0       	ldi	r31, 0x03	; 3
     788:	4f 2e       	mov	r4, r31
     78a:	f0 2d       	mov	r31, r0
     78c:	99 20       	and	r9, r9
     78e:	49 f0       	breq	.+18     	; 0x7a2 <initBoard+0x134>
     790:	c7 01       	movw	r24, r14
     792:	0d 2e       	mov	r0, r29
     794:	02 c0       	rjmp	.+4      	; 0x79a <initBoard+0x12c>
     796:	96 95       	lsr	r25
     798:	87 95       	ror	r24
     79a:	0a 94       	dec	r0
     79c:	e2 f7       	brpl	.-8      	; 0x796 <initBoard+0x128>
     79e:	11 dd       	rcall	.-1502   	; 0x1c2 <ledWriteAll>
     7a0:	08 c0       	rjmp	.+16     	; 0x7b2 <initBoard+0x144>
     7a2:	c6 01       	movw	r24, r12
     7a4:	0d 2e       	mov	r0, r29
     7a6:	02 c0       	rjmp	.+4      	; 0x7ac <initBoard+0x13e>
     7a8:	88 0f       	add	r24, r24
     7aa:	99 1f       	adc	r25, r25
     7ac:	0a 94       	dec	r0
     7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <initBoard+0x13a>
     7b0:	08 dd       	rcall	.-1520   	; 0x1c2 <ledWriteAll>
     7b2:	df 5f       	subi	r29, 0xFF	; 255
     7b4:	d1 31       	cpi	r29, 0x11	; 17
     7b6:	28 f0       	brcs	.+10     	; 0x7c2 <initBoard+0x154>
     7b8:	86 2d       	mov	r24, r6
     7ba:	91 10       	cpse	r9, r1
     7bc:	85 2d       	mov	r24, r5
     7be:	98 2e       	mov	r9, r24
     7c0:	d0 e0       	ldi	r29, 0x00	; 0
     7c2:	88 20       	and	r8, r8
     7c4:	11 f0       	breq	.+4      	; 0x7ca <initBoard+0x15c>
     7c6:	ce 5f       	subi	r28, 0xFE	; 254
     7c8:	01 c0       	rjmp	.+2      	; 0x7cc <initBoard+0x15e>
     7ca:	c2 50       	subi	r28, 0x02	; 2
     7cc:	8c 2f       	mov	r24, r28
     7ce:	60 dd       	rcall	.-1344   	; 0x290 <lcdLight>
     7d0:	ce 3f       	cpi	r28, 0xFE	; 254
     7d2:	21 f0       	breq	.+8      	; 0x7dc <initBoard+0x16e>
     7d4:	c8 37       	cpi	r28, 0x78	; 120
     7d6:	19 f4       	brne	.+6      	; 0x7de <initBoard+0x170>
     7d8:	86 2c       	mov	r8, r6
     7da:	01 c0       	rjmp	.+2      	; 0x7de <initBoard+0x170>
     7dc:	85 2c       	mov	r8, r5
     7de:	71 10       	cpse	r7, r1
     7e0:	3b c0       	rjmp	.+118    	; 0x858 <initBoard+0x1ea>
     7e2:	f8 01       	movw	r30, r16
     7e4:	80 81       	ld	r24, Z
     7e6:	83 7c       	andi	r24, 0xC3	; 195
     7e8:	91 f0       	breq	.+36     	; 0x80e <initBoard+0x1a0>
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e0       	ldi	r21, 0x00	; 0
     7ee:	66 e2       	ldi	r22, 0x26	; 38
     7f0:	72 e0       	ldi	r23, 0x02	; 2
     7f2:	8f ef       	ldi	r24, 0xFF	; 255
     7f4:	93 e0       	ldi	r25, 0x03	; 3
     7f6:	15 dd       	rcall	.-1494   	; 0x222 <rgbWrite>
     7f8:	bf 92       	push	r11
     7fa:	af 92       	push	r10
     7fc:	1f 92       	push	r1
     7fe:	4f 92       	push	r4
     800:	ca dd       	rcall	.-1132   	; 0x396 <lcdWriteText>
     802:	0f 90       	pop	r0
     804:	0f 90       	pop	r0
     806:	0f 90       	pop	r0
     808:	0f 90       	pop	r0
     80a:	76 2c       	mov	r7, r6
     80c:	25 c0       	rjmp	.+74     	; 0x858 <initBoard+0x1ea>
     80e:	8f ef       	ldi	r24, 0xFF	; 255
     810:	9c e7       	ldi	r25, 0x7C	; 124
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <initBoard+0x1a4>
     816:	00 c0       	rjmp	.+0      	; 0x818 <initBoard+0x1aa>
     818:	00 00       	nop
     81a:	b8 cf       	rjmp	.-144    	; 0x78c <initBoard+0x11e>
     81c:	f0 de       	rcall	.-544    	; 0x5fe <lcdClear>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	37 dd       	rcall	.-1426   	; 0x290 <lcdLight>
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	cd dc       	rcall	.-1638   	; 0x1c2 <ledWriteAll>
     828:	40 e0       	ldi	r20, 0x00	; 0
     82a:	50 e0       	ldi	r21, 0x00	; 0
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	80 e0       	ldi	r24, 0x00	; 0
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	f6 dc       	rcall	.-1556   	; 0x222 <rgbWrite>
     836:	10 92 e3 02 	sts	0x02E3, r1	; 0x8002e3 <systemTimeMs>
     83a:	10 92 e4 02 	sts	0x02E4, r1	; 0x8002e4 <systemTimeMs+0x1>
     83e:	10 92 e5 02 	sts	0x02E5, r1	; 0x8002e5 <systemTimeMs+0x2>
     842:	10 92 e6 02 	sts	0x02E6, r1	; 0x8002e6 <systemTimeMs+0x3>
     846:	10 92 e7 02 	sts	0x02E7, r1	; 0x8002e7 <systemTimeMs+0x4>
     84a:	10 92 e8 02 	sts	0x02E8, r1	; 0x8002e8 <systemTimeMs+0x5>
     84e:	10 92 e9 02 	sts	0x02E9, r1	; 0x8002e9 <systemTimeMs+0x6>
     852:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <systemTimeMs+0x7>
     856:	05 c0       	rjmp	.+10     	; 0x862 <initBoard+0x1f4>
     858:	f8 01       	movw	r30, r16
     85a:	80 81       	ld	r24, Z
     85c:	83 7c       	andi	r24, 0xC3	; 195
     85e:	b9 f6       	brne	.-82     	; 0x80e <initBoard+0x1a0>
     860:	dd cf       	rjmp	.-70     	; 0x81c <initBoard+0x1ae>
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	1f 91       	pop	r17
     868:	0f 91       	pop	r16
     86a:	ff 90       	pop	r15
     86c:	ef 90       	pop	r14
     86e:	df 90       	pop	r13
     870:	cf 90       	pop	r12
     872:	bf 90       	pop	r11
     874:	af 90       	pop	r10
     876:	9f 90       	pop	r9
     878:	8f 90       	pop	r8
     87a:	7f 90       	pop	r7
     87c:	6f 90       	pop	r6
     87e:	5f 90       	pop	r5
     880:	4f 90       	pop	r4
     882:	08 95       	ret

00000884 <lcdLog>:
     884:	6f 92       	push	r6
     886:	7f 92       	push	r7
     888:	8f 92       	push	r8
     88a:	9f 92       	push	r9
     88c:	af 92       	push	r10
     88e:	bf 92       	push	r11
     890:	cf 92       	push	r12
     892:	df 92       	push	r13
     894:	ef 92       	push	r14
     896:	ff 92       	push	r15
     898:	0f 93       	push	r16
     89a:	1f 93       	push	r17
     89c:	cf 93       	push	r28
     89e:	df 93       	push	r29
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
     8a4:	60 97       	sbiw	r28, 0x10	; 16
     8a6:	0f b6       	in	r0, 0x3f	; 63
     8a8:	f8 94       	cli
     8aa:	de bf       	out	0x3e, r29	; 62
     8ac:	0f be       	out	0x3f, r0	; 63
     8ae:	cd bf       	out	0x3d, r28	; 61
     8b0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     8b4:	88 23       	and	r24, r24
     8b6:	b1 f1       	breq	.+108    	; 0x924 <lcdLog+0xa0>
     8b8:	a2 de       	rcall	.-700    	; 0x5fe <lcdClear>
     8ba:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
     8be:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <nummer.2616+0x1>
     8c2:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <nummer.2616>
     8c6:	0f 2e       	mov	r0, r31
     8c8:	f8 ed       	ldi	r31, 0xD8	; 216
     8ca:	8f 2e       	mov	r8, r31
     8cc:	f2 e0       	ldi	r31, 0x02	; 2
     8ce:	9f 2e       	mov	r9, r31
     8d0:	f0 2d       	mov	r31, r0
     8d2:	08 e9       	ldi	r16, 0x98	; 152
     8d4:	12 e0       	ldi	r17, 0x02	; 2
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	40 e2       	ldi	r20, 0x20	; 32
     8dc:	bd 01       	movw	r22, r26
     8de:	f4 01       	movw	r30, r8
     8e0:	11 92       	st	Z+, r1
     8e2:	11 92       	st	Z+, r1
     8e4:	4f 01       	movw	r8, r30
     8e6:	f8 01       	movw	r30, r16
     8e8:	41 93       	st	Z+, r20
     8ea:	81 e0       	ldi	r24, 0x01	; 1
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	13 c0       	rjmp	.+38     	; 0x916 <lcdLog+0x92>
     8f0:	62 95       	swap	r22
     8f2:	72 95       	swap	r23
     8f4:	70 7f       	andi	r23, 0xF0	; 240
     8f6:	76 27       	eor	r23, r22
     8f8:	60 7f       	andi	r22, 0xF0	; 240
     8fa:	76 27       	eor	r23, r22
     8fc:	68 56       	subi	r22, 0x68	; 104
     8fe:	7d 4f       	sbci	r23, 0xFD	; 253
     900:	fb 01       	movw	r30, r22
     902:	e2 0f       	add	r30, r18
     904:	f3 1f       	adc	r31, r19
     906:	10 82       	st	Z, r1
     908:	11 96       	adiw	r26, 0x01	; 1
     90a:	00 5f       	subi	r16, 0xF0	; 240
     90c:	1f 4f       	sbci	r17, 0xFF	; 255
     90e:	a4 30       	cpi	r26, 0x04	; 4
     910:	b1 05       	cpc	r27, r1
     912:	21 f7       	brne	.-56     	; 0x8dc <lcdLog+0x58>
     914:	07 c0       	rjmp	.+14     	; 0x924 <lcdLog+0xa0>
     916:	9c 01       	movw	r18, r24
     918:	41 93       	st	Z+, r20
     91a:	01 96       	adiw	r24, 0x01	; 1
     91c:	80 31       	cpi	r24, 0x10	; 16
     91e:	91 05       	cpc	r25, r1
     920:	d1 f7       	brne	.-12     	; 0x916 <lcdLog+0x92>
     922:	e6 cf       	rjmp	.-52     	; 0x8f0 <lcdLog+0x6c>
     924:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <nummer.2616>
     928:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <nummer.2616+0x1>
     92c:	01 96       	adiw	r24, 0x01	; 1
     92e:	90 93 e1 02 	sts	0x02E1, r25	; 0x8002e1 <nummer.2616+0x1>
     932:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <nummer.2616>
     936:	9e 01       	movw	r18, r28
     938:	2c 5d       	subi	r18, 0xDC	; 220
     93a:	3f 4f       	sbci	r19, 0xFF	; 255
     93c:	4a a1       	ldd	r20, Y+34	; 0x22
     93e:	5b a1       	ldd	r21, Y+35	; 0x23
     940:	60 e1       	ldi	r22, 0x10	; 16
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	ce 01       	movw	r24, r28
     946:	01 96       	adiw	r24, 0x01	; 1
     948:	02 d2       	rcall	.+1028   	; 0xd4e <vsnprintf>
     94a:	8e 01       	movw	r16, r28
     94c:	0f 5f       	subi	r16, 0xFF	; 255
     94e:	1f 4f       	sbci	r17, 0xFF	; 255
     950:	4e 01       	movw	r8, r28
     952:	f1 e1       	ldi	r31, 0x11	; 17
     954:	8f 0e       	add	r8, r31
     956:	91 1c       	adc	r9, r1
     958:	f8 01       	movw	r30, r16
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	30 e2       	ldi	r19, 0x20	; 32
     95e:	21 e0       	ldi	r18, 0x01	; 1
     960:	df 01       	movw	r26, r30
     962:	80 81       	ld	r24, Z
     964:	88 23       	and	r24, r24
     966:	19 f0       	breq	.+6      	; 0x96e <lcdLog+0xea>
     968:	99 23       	and	r25, r25
     96a:	19 f0       	breq	.+6      	; 0x972 <lcdLog+0xee>
     96c:	01 c0       	rjmp	.+2      	; 0x970 <lcdLog+0xec>
     96e:	92 2f       	mov	r25, r18
     970:	3c 93       	st	X, r19
     972:	31 96       	adiw	r30, 0x01	; 1
     974:	e8 15       	cp	r30, r8
     976:	f9 05       	cpc	r31, r9
     978:	99 f7       	brne	.-26     	; 0x960 <lcdLog+0xdc>
     97a:	18 8a       	std	Y+16, r1	; 0x10
     97c:	68 e9       	ldi	r22, 0x98	; 152
     97e:	72 e0       	ldi	r23, 0x02	; 2
     980:	ce 01       	movw	r24, r28
     982:	01 96       	adiw	r24, 0x01	; 1
     984:	db d1       	rcall	.+950    	; 0xd3c <strcmp>
     986:	88 23       	and	r24, r24
     988:	09 f4       	brne	.+2      	; 0x98c <lcdLog+0x108>
     98a:	7e c0       	rjmp	.+252    	; 0xa88 <lcdLog+0x204>
     98c:	0f 2e       	mov	r0, r31
     98e:	fe ed       	ldi	r31, 0xDE	; 222
     990:	6f 2e       	mov	r6, r31
     992:	f2 e0       	ldi	r31, 0x02	; 2
     994:	7f 2e       	mov	r7, r31
     996:	f0 2d       	mov	r31, r0
     998:	68 ec       	ldi	r22, 0xC8	; 200
     99a:	72 e0       	ldi	r23, 0x02	; 2
     99c:	48 e9       	ldi	r20, 0x98	; 152
     99e:	52 e0       	ldi	r21, 0x02	; 2
     9a0:	f3 01       	movw	r30, r6
     9a2:	92 91       	ld	r25, -Z
     9a4:	82 91       	ld	r24, -Z
     9a6:	3f 01       	movw	r6, r30
     9a8:	93 83       	std	Z+3, r25	; 0x03
     9aa:	82 83       	std	Z+2, r24	; 0x02
     9ac:	db 01       	movw	r26, r22
     9ae:	50 97       	sbiw	r26, 0x10	; 16
     9b0:	9b 01       	movw	r18, r22
     9b2:	20 5f       	subi	r18, 0xF0	; 240
     9b4:	3f 4f       	sbci	r19, 0xFF	; 255
     9b6:	fb 01       	movw	r30, r22
     9b8:	8d 91       	ld	r24, X+
     9ba:	81 93       	st	Z+, r24
     9bc:	e2 17       	cp	r30, r18
     9be:	f3 07       	cpc	r31, r19
     9c0:	d9 f7       	brne	.-10     	; 0x9b8 <lcdLog+0x134>
     9c2:	60 51       	subi	r22, 0x10	; 16
     9c4:	71 09       	sbc	r23, r1
     9c6:	64 17       	cp	r22, r20
     9c8:	75 07       	cpc	r23, r21
     9ca:	51 f7       	brne	.-44     	; 0x9a0 <lcdLog+0x11c>
     9cc:	f8 01       	movw	r30, r16
     9ce:	81 91       	ld	r24, Z+
     9d0:	8f 01       	movw	r16, r30
     9d2:	fa 01       	movw	r30, r20
     9d4:	81 93       	st	Z+, r24
     9d6:	af 01       	movw	r20, r30
     9d8:	08 15       	cp	r16, r8
     9da:	19 05       	cpc	r17, r9
     9dc:	b9 f7       	brne	.-18     	; 0x9cc <lcdLog+0x148>
     9de:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <nummer.2616>
     9e2:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <nummer.2616+0x1>
     9e6:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <lcdPrintNr.2614+0x1>
     9ea:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <lcdPrintNr.2614>
     9ee:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <lcdLogZeilen>
     9f2:	94 e0       	ldi	r25, 0x04	; 4
     9f4:	d9 2e       	mov	r13, r25
     9f6:	d8 1a       	sub	r13, r24
     9f8:	f3 e0       	ldi	r31, 0x03	; 3
     9fa:	fd 15       	cp	r31, r13
     9fc:	08 f4       	brcc	.+2      	; 0xa00 <lcdLog+0x17c>
     9fe:	5b c0       	rjmp	.+182    	; 0xab6 <lcdLog+0x232>
     a00:	83 e0       	ldi	r24, 0x03	; 3
     a02:	b8 2e       	mov	r11, r24
     a04:	bd 18       	sub	r11, r13
     a06:	0f 2e       	mov	r0, r31
     a08:	f5 e0       	ldi	r31, 0x05	; 5
     a0a:	6f 2e       	mov	r6, r31
     a0c:	f0 2d       	mov	r31, r0
     a0e:	0f 2e       	mov	r0, r31
     a10:	f1 e9       	ldi	r31, 0x91	; 145
     a12:	8f 2e       	mov	r8, r31
     a14:	f2 e0       	ldi	r31, 0x02	; 2
     a16:	9f 2e       	mov	r9, r31
     a18:	f0 2d       	mov	r31, r0
     a1a:	68 94       	set
     a1c:	77 24       	eor	r7, r7
     a1e:	72 f8       	bld	r7, 2
     a20:	0b 2d       	mov	r16, r11
     a22:	10 e0       	ldi	r17, 0x00	; 0
     a24:	c8 01       	movw	r24, r16
     a26:	82 95       	swap	r24
     a28:	92 95       	swap	r25
     a2a:	90 7f       	andi	r25, 0xF0	; 240
     a2c:	98 27       	eor	r25, r24
     a2e:	80 7f       	andi	r24, 0xF0	; 240
     a30:	98 27       	eor	r25, r24
     a32:	88 56       	subi	r24, 0x68	; 104
     a34:	9d 4f       	sbci	r25, 0xFD	; 253
     a36:	9f 93       	push	r25
     a38:	8f 93       	push	r24
     a3a:	6f 92       	push	r6
     a3c:	df 92       	push	r13
     a3e:	ab dc       	rcall	.-1706   	; 0x396 <lcdWriteText>
     a40:	9f 92       	push	r9
     a42:	8f 92       	push	r8
     a44:	7f 92       	push	r7
     a46:	df 92       	push	r13
     a48:	a6 dc       	rcall	.-1716   	; 0x396 <lcdWriteText>
     a4a:	00 0f       	add	r16, r16
     a4c:	11 1f       	adc	r17, r17
     a4e:	f8 01       	movw	r30, r16
     a50:	e8 52       	subi	r30, 0x28	; 40
     a52:	fd 4f       	sbci	r31, 0xFD	; 253
     a54:	00 81       	ld	r16, Z
     a56:	11 81       	ldd	r17, Z+1	; 0x01
     a58:	a1 2c       	mov	r10, r1
     a5a:	c7 2c       	mov	r12, r7
     a5c:	e0 2e       	mov	r14, r16
     a5e:	f1 2e       	mov	r15, r17
     a60:	00 e0       	ldi	r16, 0x00	; 0
     a62:	10 e0       	ldi	r17, 0x00	; 0
     a64:	20 e0       	ldi	r18, 0x00	; 0
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	40 e0       	ldi	r20, 0x00	; 0
     a6a:	50 e0       	ldi	r21, 0x00	; 0
     a6c:	60 e0       	ldi	r22, 0x00	; 0
     a6e:	8d 2d       	mov	r24, r13
     a70:	ce dc       	rcall	.-1636   	; 0x40e <lcdWriteZahl>
     a72:	d3 94       	inc	r13
     a74:	ba 94       	dec	r11
     a76:	0f b6       	in	r0, 0x3f	; 63
     a78:	f8 94       	cli
     a7a:	de bf       	out	0x3e, r29	; 62
     a7c:	0f be       	out	0x3f, r0	; 63
     a7e:	cd bf       	out	0x3d, r28	; 61
     a80:	94 e0       	ldi	r25, 0x04	; 4
     a82:	d9 12       	cpse	r13, r25
     a84:	cd cf       	rjmp	.-102    	; 0xa20 <lcdLog+0x19c>
     a86:	17 c0       	rjmp	.+46     	; 0xab6 <lcdLog+0x232>
     a88:	00 91 e0 02 	lds	r16, 0x02E0	; 0x8002e0 <nummer.2616>
     a8c:	10 91 e1 02 	lds	r17, 0x02E1	; 0x8002e1 <nummer.2616+0x1>
     a90:	10 93 d9 02 	sts	0x02D9, r17	; 0x8002d9 <lcdPrintNr.2614+0x1>
     a94:	00 93 d8 02 	sts	0x02D8, r16	; 0x8002d8 <lcdPrintNr.2614>
     a98:	a1 2c       	mov	r10, r1
     a9a:	68 94       	set
     a9c:	cc 24       	eor	r12, r12
     a9e:	c2 f8       	bld	r12, 2
     aa0:	e0 2e       	mov	r14, r16
     aa2:	f1 2e       	mov	r15, r17
     aa4:	00 e0       	ldi	r16, 0x00	; 0
     aa6:	10 e0       	ldi	r17, 0x00	; 0
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	60 e0       	ldi	r22, 0x00	; 0
     ab2:	83 e0       	ldi	r24, 0x03	; 3
     ab4:	ac dc       	rcall	.-1704   	; 0x40e <lcdWriteZahl>
     ab6:	60 96       	adiw	r28, 0x10	; 16
     ab8:	0f b6       	in	r0, 0x3f	; 63
     aba:	f8 94       	cli
     abc:	de bf       	out	0x3e, r29	; 62
     abe:	0f be       	out	0x3f, r0	; 63
     ac0:	cd bf       	out	0x3d, r28	; 61
     ac2:	df 91       	pop	r29
     ac4:	cf 91       	pop	r28
     ac6:	1f 91       	pop	r17
     ac8:	0f 91       	pop	r16
     aca:	ff 90       	pop	r15
     acc:	ef 90       	pop	r14
     ace:	df 90       	pop	r13
     ad0:	cf 90       	pop	r12
     ad2:	bf 90       	pop	r11
     ad4:	af 90       	pop	r10
     ad6:	9f 90       	pop	r9
     ad8:	8f 90       	pop	r8
     ada:	7f 90       	pop	r7
     adc:	6f 90       	pop	r6
     ade:	08 95       	ret

00000ae0 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
     ae4:	cd b7       	in	r28, 0x3d	; 61
     ae6:	de b7       	in	r29, 0x3e	; 62
     ae8:	28 97       	sbiw	r28, 0x08	; 8
     aea:	0f b6       	in	r0, 0x3f	; 63
     aec:	f8 94       	cli
     aee:	de bf       	out	0x3e, r29	; 62
     af0:	0f be       	out	0x3f, r0	; 63
     af2:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     af4:	88 e0       	ldi	r24, 0x08	; 8
     af6:	e2 e0       	ldi	r30, 0x02	; 2
     af8:	f2 e0       	ldi	r31, 0x02	; 2
     afa:	de 01       	movw	r26, r28
     afc:	11 96       	adiw	r26, 0x01	; 1
     afe:	01 90       	ld	r0, Z+
     b00:	0d 92       	st	X+, r0
     b02:	8a 95       	dec	r24
     b04:	e1 f7       	brne	.-8      	; 0xafe <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     b06:	e5 e0       	ldi	r30, 0x05	; 5
     b08:	f1 e0       	ldi	r31, 0x01	; 1
     b0a:	80 81       	ld	r24, Z
     b0c:	8f 7b       	andi	r24, 0xBF	; 191
     b0e:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     b10:	e0 91 96 02 	lds	r30, 0x0296	; 0x800296 <Zeilen_Nr.2731>
     b14:	f0 91 97 02 	lds	r31, 0x0297	; 0x800297 <Zeilen_Nr.2731+0x1>
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	8c 0f       	add	r24, r28
     b1e:	9d 1f       	adc	r25, r29
     b20:	e8 0f       	add	r30, r24
     b22:	f9 1f       	adc	r31, r25
     b24:	80 81       	ld	r24, Z
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <__data_end+0x1>
     b2c:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <__data_end>
     b30:	ac e5       	ldi	r26, 0x5C	; 92
     b32:	b3 e0       	ldi	r27, 0x03	; 3
     b34:	2c ee       	ldi	r18, 0xEC	; 236
     b36:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     b38:	e5 e0       	ldi	r30, 0x05	; 5
     b3a:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     b3c:	5e 91       	ld	r21, -X
     b3e:	4e 91       	ld	r20, -X
     b40:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end>
     b44:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <__data_end+0x1>
     b48:	84 23       	and	r24, r20
     b4a:	95 23       	and	r25, r21
     b4c:	89 2b       	or	r24, r25
     b4e:	21 f0       	breq	.+8      	; 0xb58 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     b50:	80 81       	ld	r24, Z
     b52:	80 62       	ori	r24, 0x20	; 32
     b54:	80 83       	st	Z, r24
     b56:	03 c0       	rjmp	.+6      	; 0xb5e <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     b58:	80 81       	ld	r24, Z
     b5a:	8f 7d       	andi	r24, 0xDF	; 223
     b5c:	80 83       	st	Z, r24
        }
        CLOCK_1;
     b5e:	80 81       	ld	r24, Z
     b60:	80 61       	ori	r24, 0x10	; 16
     b62:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     b64:	80 81       	ld	r24, Z
     b66:	8f 7e       	andi	r24, 0xEF	; 239
     b68:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     b6a:	a2 17       	cp	r26, r18
     b6c:	b3 07       	cpc	r27, r19
     b6e:	31 f7       	brne	.-52     	; 0xb3c <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     b70:	e5 e0       	ldi	r30, 0x05	; 5
     b72:	f1 e0       	ldi	r31, 0x01	; 1
     b74:	80 81       	ld	r24, Z
     b76:	87 7f       	andi	r24, 0xF7	; 247
     b78:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     b7a:	80 81       	ld	r24, Z
     b7c:	88 7f       	andi	r24, 0xF8	; 248
     b7e:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     b80:	90 81       	ld	r25, Z
     b82:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <Zeilen_Nr.2731>
     b86:	89 2b       	or	r24, r25
     b88:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     b8a:	80 81       	ld	r24, Z
     b8c:	80 64       	ori	r24, 0x40	; 64
     b8e:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     b90:	80 81       	ld	r24, Z
     b92:	88 60       	ori	r24, 0x08	; 8
     b94:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     b96:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <Zeilen_Nr.2731>
     b9a:	90 91 97 02 	lds	r25, 0x0297	; 0x800297 <Zeilen_Nr.2731+0x1>
     b9e:	87 30       	cpi	r24, 0x07	; 7
     ba0:	91 05       	cpc	r25, r1
     ba2:	30 f4       	brcc	.+12     	; 0xbb0 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     ba4:	01 96       	adiw	r24, 0x01	; 1
     ba6:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <Zeilen_Nr.2731+0x1>
     baa:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <Zeilen_Nr.2731>
     bae:	07 c0       	rjmp	.+14     	; 0xbbe <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     bb0:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <Zeilen_Nr.2731+0x1>
     bb4:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <Zeilen_Nr.2731>
        writeTextFinished = 1;
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <writeTextFinished>
    }
    
     bbe:	28 96       	adiw	r28, 0x08	; 8
     bc0:	0f b6       	in	r0, 0x3f	; 63
     bc2:	f8 94       	cli
     bc4:	de bf       	out	0x3e, r29	; 62
     bc6:	0f be       	out	0x3f, r0	; 63
     bc8:	cd bf       	out	0x3d, r28	; 61
     bca:	df 91       	pop	r29
     bcc:	cf 91       	pop	r28
     bce:	08 95       	ret

00000bd0 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     bd0:	1f 92       	push	r1
     bd2:	0f 92       	push	r0
     bd4:	0f b6       	in	r0, 0x3f	; 63
     bd6:	0f 92       	push	r0
     bd8:	11 24       	eor	r1, r1
     bda:	0b b6       	in	r0, 0x3b	; 59
     bdc:	0f 92       	push	r0
     bde:	2f 93       	push	r18
     be0:	3f 93       	push	r19
     be2:	4f 93       	push	r20
     be4:	5f 93       	push	r21
     be6:	6f 93       	push	r22
     be8:	7f 93       	push	r23
     bea:	8f 93       	push	r24
     bec:	9f 93       	push	r25
     bee:	af 93       	push	r26
     bf0:	bf 93       	push	r27
     bf2:	ef 93       	push	r30
     bf4:	ff 93       	push	r31
    systemTimeMs += 1;
     bf6:	20 91 e3 02 	lds	r18, 0x02E3	; 0x8002e3 <systemTimeMs>
     bfa:	30 91 e4 02 	lds	r19, 0x02E4	; 0x8002e4 <systemTimeMs+0x1>
     bfe:	40 91 e5 02 	lds	r20, 0x02E5	; 0x8002e5 <systemTimeMs+0x2>
     c02:	50 91 e6 02 	lds	r21, 0x02E6	; 0x8002e6 <systemTimeMs+0x3>
     c06:	60 91 e7 02 	lds	r22, 0x02E7	; 0x8002e7 <systemTimeMs+0x4>
     c0a:	70 91 e8 02 	lds	r23, 0x02E8	; 0x8002e8 <systemTimeMs+0x5>
     c0e:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <systemTimeMs+0x6>
     c12:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <systemTimeMs+0x7>
     c16:	a1 e0       	ldi	r26, 0x01	; 1
     c18:	85 d0       	rcall	.+266    	; 0xd24 <__adddi3_s8>
     c1a:	20 93 e3 02 	sts	0x02E3, r18	; 0x8002e3 <systemTimeMs>
     c1e:	30 93 e4 02 	sts	0x02E4, r19	; 0x8002e4 <systemTimeMs+0x1>
     c22:	40 93 e5 02 	sts	0x02E5, r20	; 0x8002e5 <systemTimeMs+0x2>
     c26:	50 93 e6 02 	sts	0x02E6, r21	; 0x8002e6 <systemTimeMs+0x3>
     c2a:	60 93 e7 02 	sts	0x02E7, r22	; 0x8002e7 <systemTimeMs+0x4>
     c2e:	70 93 e8 02 	sts	0x02E8, r23	; 0x8002e8 <systemTimeMs+0x5>
     c32:	80 93 e9 02 	sts	0x02E9, r24	; 0x8002e9 <systemTimeMs+0x6>
     c36:	90 93 ea 02 	sts	0x02EA, r25	; 0x8002ea <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     c3a:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <matrixRunning>
     c3e:	81 11       	cpse	r24, r1
     c40:	4f df       	rcall	.-354    	; 0xae0 <matrixWriteNextLine>
}
     c42:	ff 91       	pop	r31
     c44:	ef 91       	pop	r30
     c46:	bf 91       	pop	r27
     c48:	af 91       	pop	r26
     c4a:	9f 91       	pop	r25
     c4c:	8f 91       	pop	r24
     c4e:	7f 91       	pop	r23
     c50:	6f 91       	pop	r22
     c52:	5f 91       	pop	r21
     c54:	4f 91       	pop	r20
     c56:	3f 91       	pop	r19
     c58:	2f 91       	pop	r18
     c5a:	0f 90       	pop	r0
     c5c:	0b be       	out	0x3b, r0	; 59
     c5e:	0f 90       	pop	r0
     c60:	0f be       	out	0x3f, r0	; 63
     c62:	0f 90       	pop	r0
     c64:	1f 90       	pop	r1
     c66:	18 95       	reti

00000c68 <__umoddi3>:
     c68:	68 94       	set
     c6a:	01 c0       	rjmp	.+2      	; 0xc6e <__udivdi3_umoddi3>

00000c6c <__udivdi3>:
     c6c:	e8 94       	clt

00000c6e <__udivdi3_umoddi3>:
     c6e:	8f 92       	push	r8
     c70:	9f 92       	push	r9
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	05 d0       	rcall	.+10     	; 0xc82 <__udivmod64>
     c78:	df 91       	pop	r29
     c7a:	cf 91       	pop	r28
     c7c:	9f 90       	pop	r9
     c7e:	8f 90       	pop	r8
     c80:	08 95       	ret

00000c82 <__udivmod64>:
     c82:	88 24       	eor	r8, r8
     c84:	99 24       	eor	r9, r9
     c86:	f4 01       	movw	r30, r8
     c88:	e4 01       	movw	r28, r8
     c8a:	b0 e4       	ldi	r27, 0x40	; 64
     c8c:	9f 93       	push	r25
     c8e:	aa 27       	eor	r26, r26
     c90:	9a 15       	cp	r25, r10
     c92:	8b 04       	cpc	r8, r11
     c94:	9c 04       	cpc	r9, r12
     c96:	ed 05       	cpc	r30, r13
     c98:	fe 05       	cpc	r31, r14
     c9a:	cf 05       	cpc	r28, r15
     c9c:	d0 07       	cpc	r29, r16
     c9e:	a1 07       	cpc	r26, r17
     ca0:	98 f4       	brcc	.+38     	; 0xcc8 <__udivmod64+0x46>
     ca2:	ad 2f       	mov	r26, r29
     ca4:	dc 2f       	mov	r29, r28
     ca6:	cf 2f       	mov	r28, r31
     ca8:	fe 2f       	mov	r31, r30
     caa:	e9 2d       	mov	r30, r9
     cac:	98 2c       	mov	r9, r8
     cae:	89 2e       	mov	r8, r25
     cb0:	98 2f       	mov	r25, r24
     cb2:	87 2f       	mov	r24, r23
     cb4:	76 2f       	mov	r23, r22
     cb6:	65 2f       	mov	r22, r21
     cb8:	54 2f       	mov	r21, r20
     cba:	43 2f       	mov	r20, r19
     cbc:	32 2f       	mov	r19, r18
     cbe:	22 27       	eor	r18, r18
     cc0:	b8 50       	subi	r27, 0x08	; 8
     cc2:	31 f7       	brne	.-52     	; 0xc90 <__udivmod64+0xe>
     cc4:	bf 91       	pop	r27
     cc6:	27 c0       	rjmp	.+78     	; 0xd16 <__udivmod64+0x94>
     cc8:	1b 2e       	mov	r1, r27
     cca:	bf 91       	pop	r27
     ccc:	bb 27       	eor	r27, r27
     cce:	22 0f       	add	r18, r18
     cd0:	33 1f       	adc	r19, r19
     cd2:	44 1f       	adc	r20, r20
     cd4:	55 1f       	adc	r21, r21
     cd6:	66 1f       	adc	r22, r22
     cd8:	77 1f       	adc	r23, r23
     cda:	88 1f       	adc	r24, r24
     cdc:	99 1f       	adc	r25, r25
     cde:	88 1c       	adc	r8, r8
     ce0:	99 1c       	adc	r9, r9
     ce2:	ee 1f       	adc	r30, r30
     ce4:	ff 1f       	adc	r31, r31
     ce6:	cc 1f       	adc	r28, r28
     ce8:	dd 1f       	adc	r29, r29
     cea:	aa 1f       	adc	r26, r26
     cec:	bb 1f       	adc	r27, r27
     cee:	8a 14       	cp	r8, r10
     cf0:	9b 04       	cpc	r9, r11
     cf2:	ec 05       	cpc	r30, r12
     cf4:	fd 05       	cpc	r31, r13
     cf6:	ce 05       	cpc	r28, r14
     cf8:	df 05       	cpc	r29, r15
     cfa:	a0 07       	cpc	r26, r16
     cfc:	b1 07       	cpc	r27, r17
     cfe:	48 f0       	brcs	.+18     	; 0xd12 <__udivmod64+0x90>
     d00:	8a 18       	sub	r8, r10
     d02:	9b 08       	sbc	r9, r11
     d04:	ec 09       	sbc	r30, r12
     d06:	fd 09       	sbc	r31, r13
     d08:	ce 09       	sbc	r28, r14
     d0a:	df 09       	sbc	r29, r15
     d0c:	a0 0b       	sbc	r26, r16
     d0e:	b1 0b       	sbc	r27, r17
     d10:	21 60       	ori	r18, 0x01	; 1
     d12:	1a 94       	dec	r1
     d14:	e1 f6       	brne	.-72     	; 0xcce <__udivmod64+0x4c>
     d16:	2e f4       	brtc	.+10     	; 0xd22 <__udivmod64+0xa0>
     d18:	94 01       	movw	r18, r8
     d1a:	af 01       	movw	r20, r30
     d1c:	be 01       	movw	r22, r28
     d1e:	cd 01       	movw	r24, r26
     d20:	00 0c       	add	r0, r0
     d22:	08 95       	ret

00000d24 <__adddi3_s8>:
     d24:	00 24       	eor	r0, r0
     d26:	a7 fd       	sbrc	r26, 7
     d28:	00 94       	com	r0
     d2a:	2a 0f       	add	r18, r26
     d2c:	30 1d       	adc	r19, r0
     d2e:	40 1d       	adc	r20, r0
     d30:	50 1d       	adc	r21, r0
     d32:	60 1d       	adc	r22, r0
     d34:	70 1d       	adc	r23, r0
     d36:	80 1d       	adc	r24, r0
     d38:	90 1d       	adc	r25, r0
     d3a:	08 95       	ret

00000d3c <strcmp>:
     d3c:	fb 01       	movw	r30, r22
     d3e:	dc 01       	movw	r26, r24
     d40:	8d 91       	ld	r24, X+
     d42:	01 90       	ld	r0, Z+
     d44:	80 19       	sub	r24, r0
     d46:	01 10       	cpse	r0, r1
     d48:	d9 f3       	breq	.-10     	; 0xd40 <strcmp+0x4>
     d4a:	99 0b       	sbc	r25, r25
     d4c:	08 95       	ret

00000d4e <vsnprintf>:
     d4e:	0f 93       	push	r16
     d50:	1f 93       	push	r17
     d52:	cf 93       	push	r28
     d54:	df 93       	push	r29
     d56:	cd b7       	in	r28, 0x3d	; 61
     d58:	de b7       	in	r29, 0x3e	; 62
     d5a:	2e 97       	sbiw	r28, 0x0e	; 14
     d5c:	0f b6       	in	r0, 0x3f	; 63
     d5e:	f8 94       	cli
     d60:	de bf       	out	0x3e, r29	; 62
     d62:	0f be       	out	0x3f, r0	; 63
     d64:	cd bf       	out	0x3d, r28	; 61
     d66:	8c 01       	movw	r16, r24
     d68:	fa 01       	movw	r30, r20
     d6a:	86 e0       	ldi	r24, 0x06	; 6
     d6c:	8c 83       	std	Y+4, r24	; 0x04
     d6e:	1a 83       	std	Y+2, r17	; 0x02
     d70:	09 83       	std	Y+1, r16	; 0x01
     d72:	77 ff       	sbrs	r23, 7
     d74:	02 c0       	rjmp	.+4      	; 0xd7a <vsnprintf+0x2c>
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	70 e8       	ldi	r23, 0x80	; 128
     d7a:	cb 01       	movw	r24, r22
     d7c:	01 97       	sbiw	r24, 0x01	; 1
     d7e:	9e 83       	std	Y+6, r25	; 0x06
     d80:	8d 83       	std	Y+5, r24	; 0x05
     d82:	a9 01       	movw	r20, r18
     d84:	bf 01       	movw	r22, r30
     d86:	ce 01       	movw	r24, r28
     d88:	01 96       	adiw	r24, 0x01	; 1
     d8a:	19 d0       	rcall	.+50     	; 0xdbe <vfprintf>
     d8c:	4d 81       	ldd	r20, Y+5	; 0x05
     d8e:	5e 81       	ldd	r21, Y+6	; 0x06
     d90:	57 fd       	sbrc	r21, 7
     d92:	0a c0       	rjmp	.+20     	; 0xda8 <vsnprintf+0x5a>
     d94:	2f 81       	ldd	r18, Y+7	; 0x07
     d96:	38 85       	ldd	r19, Y+8	; 0x08
     d98:	42 17       	cp	r20, r18
     d9a:	53 07       	cpc	r21, r19
     d9c:	0c f4       	brge	.+2      	; 0xda0 <vsnprintf+0x52>
     d9e:	9a 01       	movw	r18, r20
     da0:	f8 01       	movw	r30, r16
     da2:	e2 0f       	add	r30, r18
     da4:	f3 1f       	adc	r31, r19
     da6:	10 82       	st	Z, r1
     da8:	2e 96       	adiw	r28, 0x0e	; 14
     daa:	0f b6       	in	r0, 0x3f	; 63
     dac:	f8 94       	cli
     dae:	de bf       	out	0x3e, r29	; 62
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	cd bf       	out	0x3d, r28	; 61
     db4:	df 91       	pop	r29
     db6:	cf 91       	pop	r28
     db8:	1f 91       	pop	r17
     dba:	0f 91       	pop	r16
     dbc:	08 95       	ret

00000dbe <vfprintf>:
     dbe:	2f 92       	push	r2
     dc0:	3f 92       	push	r3
     dc2:	4f 92       	push	r4
     dc4:	5f 92       	push	r5
     dc6:	6f 92       	push	r6
     dc8:	7f 92       	push	r7
     dca:	8f 92       	push	r8
     dcc:	9f 92       	push	r9
     dce:	af 92       	push	r10
     dd0:	bf 92       	push	r11
     dd2:	cf 92       	push	r12
     dd4:	df 92       	push	r13
     dd6:	ef 92       	push	r14
     dd8:	ff 92       	push	r15
     dda:	0f 93       	push	r16
     ddc:	1f 93       	push	r17
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
     de2:	cd b7       	in	r28, 0x3d	; 61
     de4:	de b7       	in	r29, 0x3e	; 62
     de6:	2b 97       	sbiw	r28, 0x0b	; 11
     de8:	0f b6       	in	r0, 0x3f	; 63
     dea:	f8 94       	cli
     dec:	de bf       	out	0x3e, r29	; 62
     dee:	0f be       	out	0x3f, r0	; 63
     df0:	cd bf       	out	0x3d, r28	; 61
     df2:	6c 01       	movw	r12, r24
     df4:	7b 01       	movw	r14, r22
     df6:	8a 01       	movw	r16, r20
     df8:	fc 01       	movw	r30, r24
     dfa:	17 82       	std	Z+7, r1	; 0x07
     dfc:	16 82       	std	Z+6, r1	; 0x06
     dfe:	83 81       	ldd	r24, Z+3	; 0x03
     e00:	81 ff       	sbrs	r24, 1
     e02:	bf c1       	rjmp	.+894    	; 0x1182 <vfprintf+0x3c4>
     e04:	ce 01       	movw	r24, r28
     e06:	01 96       	adiw	r24, 0x01	; 1
     e08:	3c 01       	movw	r6, r24
     e0a:	f6 01       	movw	r30, r12
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	f7 01       	movw	r30, r14
     e10:	93 fd       	sbrc	r25, 3
     e12:	85 91       	lpm	r24, Z+
     e14:	93 ff       	sbrs	r25, 3
     e16:	81 91       	ld	r24, Z+
     e18:	7f 01       	movw	r14, r30
     e1a:	88 23       	and	r24, r24
     e1c:	09 f4       	brne	.+2      	; 0xe20 <vfprintf+0x62>
     e1e:	ad c1       	rjmp	.+858    	; 0x117a <vfprintf+0x3bc>
     e20:	85 32       	cpi	r24, 0x25	; 37
     e22:	39 f4       	brne	.+14     	; 0xe32 <vfprintf+0x74>
     e24:	93 fd       	sbrc	r25, 3
     e26:	85 91       	lpm	r24, Z+
     e28:	93 ff       	sbrs	r25, 3
     e2a:	81 91       	ld	r24, Z+
     e2c:	7f 01       	movw	r14, r30
     e2e:	85 32       	cpi	r24, 0x25	; 37
     e30:	21 f4       	brne	.+8      	; 0xe3a <vfprintf+0x7c>
     e32:	b6 01       	movw	r22, r12
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	d6 d1       	rcall	.+940    	; 0x11e4 <fputc>
     e38:	e8 cf       	rjmp	.-48     	; 0xe0a <vfprintf+0x4c>
     e3a:	91 2c       	mov	r9, r1
     e3c:	21 2c       	mov	r2, r1
     e3e:	31 2c       	mov	r3, r1
     e40:	ff e1       	ldi	r31, 0x1F	; 31
     e42:	f3 15       	cp	r31, r3
     e44:	d8 f0       	brcs	.+54     	; 0xe7c <vfprintf+0xbe>
     e46:	8b 32       	cpi	r24, 0x2B	; 43
     e48:	79 f0       	breq	.+30     	; 0xe68 <vfprintf+0xaa>
     e4a:	38 f4       	brcc	.+14     	; 0xe5a <vfprintf+0x9c>
     e4c:	80 32       	cpi	r24, 0x20	; 32
     e4e:	79 f0       	breq	.+30     	; 0xe6e <vfprintf+0xb0>
     e50:	83 32       	cpi	r24, 0x23	; 35
     e52:	a1 f4       	brne	.+40     	; 0xe7c <vfprintf+0xbe>
     e54:	23 2d       	mov	r18, r3
     e56:	20 61       	ori	r18, 0x10	; 16
     e58:	1d c0       	rjmp	.+58     	; 0xe94 <vfprintf+0xd6>
     e5a:	8d 32       	cpi	r24, 0x2D	; 45
     e5c:	61 f0       	breq	.+24     	; 0xe76 <vfprintf+0xb8>
     e5e:	80 33       	cpi	r24, 0x30	; 48
     e60:	69 f4       	brne	.+26     	; 0xe7c <vfprintf+0xbe>
     e62:	23 2d       	mov	r18, r3
     e64:	21 60       	ori	r18, 0x01	; 1
     e66:	16 c0       	rjmp	.+44     	; 0xe94 <vfprintf+0xd6>
     e68:	83 2d       	mov	r24, r3
     e6a:	82 60       	ori	r24, 0x02	; 2
     e6c:	38 2e       	mov	r3, r24
     e6e:	e3 2d       	mov	r30, r3
     e70:	e4 60       	ori	r30, 0x04	; 4
     e72:	3e 2e       	mov	r3, r30
     e74:	2a c0       	rjmp	.+84     	; 0xeca <vfprintf+0x10c>
     e76:	f3 2d       	mov	r31, r3
     e78:	f8 60       	ori	r31, 0x08	; 8
     e7a:	1d c0       	rjmp	.+58     	; 0xeb6 <vfprintf+0xf8>
     e7c:	37 fc       	sbrc	r3, 7
     e7e:	2d c0       	rjmp	.+90     	; 0xeda <vfprintf+0x11c>
     e80:	20 ed       	ldi	r18, 0xD0	; 208
     e82:	28 0f       	add	r18, r24
     e84:	2a 30       	cpi	r18, 0x0A	; 10
     e86:	40 f0       	brcs	.+16     	; 0xe98 <vfprintf+0xda>
     e88:	8e 32       	cpi	r24, 0x2E	; 46
     e8a:	b9 f4       	brne	.+46     	; 0xeba <vfprintf+0xfc>
     e8c:	36 fc       	sbrc	r3, 6
     e8e:	75 c1       	rjmp	.+746    	; 0x117a <vfprintf+0x3bc>
     e90:	23 2d       	mov	r18, r3
     e92:	20 64       	ori	r18, 0x40	; 64
     e94:	32 2e       	mov	r3, r18
     e96:	19 c0       	rjmp	.+50     	; 0xeca <vfprintf+0x10c>
     e98:	36 fe       	sbrs	r3, 6
     e9a:	06 c0       	rjmp	.+12     	; 0xea8 <vfprintf+0xea>
     e9c:	8a e0       	ldi	r24, 0x0A	; 10
     e9e:	98 9e       	mul	r9, r24
     ea0:	20 0d       	add	r18, r0
     ea2:	11 24       	eor	r1, r1
     ea4:	92 2e       	mov	r9, r18
     ea6:	11 c0       	rjmp	.+34     	; 0xeca <vfprintf+0x10c>
     ea8:	ea e0       	ldi	r30, 0x0A	; 10
     eaa:	2e 9e       	mul	r2, r30
     eac:	20 0d       	add	r18, r0
     eae:	11 24       	eor	r1, r1
     eb0:	22 2e       	mov	r2, r18
     eb2:	f3 2d       	mov	r31, r3
     eb4:	f0 62       	ori	r31, 0x20	; 32
     eb6:	3f 2e       	mov	r3, r31
     eb8:	08 c0       	rjmp	.+16     	; 0xeca <vfprintf+0x10c>
     eba:	8c 36       	cpi	r24, 0x6C	; 108
     ebc:	21 f4       	brne	.+8      	; 0xec6 <vfprintf+0x108>
     ebe:	83 2d       	mov	r24, r3
     ec0:	80 68       	ori	r24, 0x80	; 128
     ec2:	38 2e       	mov	r3, r24
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <vfprintf+0x10c>
     ec6:	88 36       	cpi	r24, 0x68	; 104
     ec8:	41 f4       	brne	.+16     	; 0xeda <vfprintf+0x11c>
     eca:	f7 01       	movw	r30, r14
     ecc:	93 fd       	sbrc	r25, 3
     ece:	85 91       	lpm	r24, Z+
     ed0:	93 ff       	sbrs	r25, 3
     ed2:	81 91       	ld	r24, Z+
     ed4:	7f 01       	movw	r14, r30
     ed6:	81 11       	cpse	r24, r1
     ed8:	b3 cf       	rjmp	.-154    	; 0xe40 <vfprintf+0x82>
     eda:	98 2f       	mov	r25, r24
     edc:	9f 7d       	andi	r25, 0xDF	; 223
     ede:	95 54       	subi	r25, 0x45	; 69
     ee0:	93 30       	cpi	r25, 0x03	; 3
     ee2:	28 f4       	brcc	.+10     	; 0xeee <vfprintf+0x130>
     ee4:	0c 5f       	subi	r16, 0xFC	; 252
     ee6:	1f 4f       	sbci	r17, 0xFF	; 255
     ee8:	9f e3       	ldi	r25, 0x3F	; 63
     eea:	99 83       	std	Y+1, r25	; 0x01
     eec:	0d c0       	rjmp	.+26     	; 0xf08 <vfprintf+0x14a>
     eee:	83 36       	cpi	r24, 0x63	; 99
     ef0:	31 f0       	breq	.+12     	; 0xefe <vfprintf+0x140>
     ef2:	83 37       	cpi	r24, 0x73	; 115
     ef4:	71 f0       	breq	.+28     	; 0xf12 <vfprintf+0x154>
     ef6:	83 35       	cpi	r24, 0x53	; 83
     ef8:	09 f0       	breq	.+2      	; 0xefc <vfprintf+0x13e>
     efa:	55 c0       	rjmp	.+170    	; 0xfa6 <vfprintf+0x1e8>
     efc:	20 c0       	rjmp	.+64     	; 0xf3e <vfprintf+0x180>
     efe:	f8 01       	movw	r30, r16
     f00:	80 81       	ld	r24, Z
     f02:	89 83       	std	Y+1, r24	; 0x01
     f04:	0e 5f       	subi	r16, 0xFE	; 254
     f06:	1f 4f       	sbci	r17, 0xFF	; 255
     f08:	88 24       	eor	r8, r8
     f0a:	83 94       	inc	r8
     f0c:	91 2c       	mov	r9, r1
     f0e:	53 01       	movw	r10, r6
     f10:	12 c0       	rjmp	.+36     	; 0xf36 <vfprintf+0x178>
     f12:	28 01       	movw	r4, r16
     f14:	f2 e0       	ldi	r31, 0x02	; 2
     f16:	4f 0e       	add	r4, r31
     f18:	51 1c       	adc	r5, r1
     f1a:	f8 01       	movw	r30, r16
     f1c:	a0 80       	ld	r10, Z
     f1e:	b1 80       	ldd	r11, Z+1	; 0x01
     f20:	36 fe       	sbrs	r3, 6
     f22:	03 c0       	rjmp	.+6      	; 0xf2a <vfprintf+0x16c>
     f24:	69 2d       	mov	r22, r9
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <vfprintf+0x170>
     f2a:	6f ef       	ldi	r22, 0xFF	; 255
     f2c:	7f ef       	ldi	r23, 0xFF	; 255
     f2e:	c5 01       	movw	r24, r10
     f30:	4e d1       	rcall	.+668    	; 0x11ce <strnlen>
     f32:	4c 01       	movw	r8, r24
     f34:	82 01       	movw	r16, r4
     f36:	f3 2d       	mov	r31, r3
     f38:	ff 77       	andi	r31, 0x7F	; 127
     f3a:	3f 2e       	mov	r3, r31
     f3c:	15 c0       	rjmp	.+42     	; 0xf68 <vfprintf+0x1aa>
     f3e:	28 01       	movw	r4, r16
     f40:	22 e0       	ldi	r18, 0x02	; 2
     f42:	42 0e       	add	r4, r18
     f44:	51 1c       	adc	r5, r1
     f46:	f8 01       	movw	r30, r16
     f48:	a0 80       	ld	r10, Z
     f4a:	b1 80       	ldd	r11, Z+1	; 0x01
     f4c:	36 fe       	sbrs	r3, 6
     f4e:	03 c0       	rjmp	.+6      	; 0xf56 <vfprintf+0x198>
     f50:	69 2d       	mov	r22, r9
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <vfprintf+0x19c>
     f56:	6f ef       	ldi	r22, 0xFF	; 255
     f58:	7f ef       	ldi	r23, 0xFF	; 255
     f5a:	c5 01       	movw	r24, r10
     f5c:	2d d1       	rcall	.+602    	; 0x11b8 <strnlen_P>
     f5e:	4c 01       	movw	r8, r24
     f60:	f3 2d       	mov	r31, r3
     f62:	f0 68       	ori	r31, 0x80	; 128
     f64:	3f 2e       	mov	r3, r31
     f66:	82 01       	movw	r16, r4
     f68:	33 fc       	sbrc	r3, 3
     f6a:	19 c0       	rjmp	.+50     	; 0xf9e <vfprintf+0x1e0>
     f6c:	82 2d       	mov	r24, r2
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	88 16       	cp	r8, r24
     f72:	99 06       	cpc	r9, r25
     f74:	a0 f4       	brcc	.+40     	; 0xf9e <vfprintf+0x1e0>
     f76:	b6 01       	movw	r22, r12
     f78:	80 e2       	ldi	r24, 0x20	; 32
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	33 d1       	rcall	.+614    	; 0x11e4 <fputc>
     f7e:	2a 94       	dec	r2
     f80:	f5 cf       	rjmp	.-22     	; 0xf6c <vfprintf+0x1ae>
     f82:	f5 01       	movw	r30, r10
     f84:	37 fc       	sbrc	r3, 7
     f86:	85 91       	lpm	r24, Z+
     f88:	37 fe       	sbrs	r3, 7
     f8a:	81 91       	ld	r24, Z+
     f8c:	5f 01       	movw	r10, r30
     f8e:	b6 01       	movw	r22, r12
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	28 d1       	rcall	.+592    	; 0x11e4 <fputc>
     f94:	21 10       	cpse	r2, r1
     f96:	2a 94       	dec	r2
     f98:	21 e0       	ldi	r18, 0x01	; 1
     f9a:	82 1a       	sub	r8, r18
     f9c:	91 08       	sbc	r9, r1
     f9e:	81 14       	cp	r8, r1
     fa0:	91 04       	cpc	r9, r1
     fa2:	79 f7       	brne	.-34     	; 0xf82 <vfprintf+0x1c4>
     fa4:	e1 c0       	rjmp	.+450    	; 0x1168 <vfprintf+0x3aa>
     fa6:	84 36       	cpi	r24, 0x64	; 100
     fa8:	11 f0       	breq	.+4      	; 0xfae <vfprintf+0x1f0>
     faa:	89 36       	cpi	r24, 0x69	; 105
     fac:	39 f5       	brne	.+78     	; 0xffc <vfprintf+0x23e>
     fae:	f8 01       	movw	r30, r16
     fb0:	37 fe       	sbrs	r3, 7
     fb2:	07 c0       	rjmp	.+14     	; 0xfc2 <vfprintf+0x204>
     fb4:	60 81       	ld	r22, Z
     fb6:	71 81       	ldd	r23, Z+1	; 0x01
     fb8:	82 81       	ldd	r24, Z+2	; 0x02
     fba:	93 81       	ldd	r25, Z+3	; 0x03
     fbc:	0c 5f       	subi	r16, 0xFC	; 252
     fbe:	1f 4f       	sbci	r17, 0xFF	; 255
     fc0:	08 c0       	rjmp	.+16     	; 0xfd2 <vfprintf+0x214>
     fc2:	60 81       	ld	r22, Z
     fc4:	71 81       	ldd	r23, Z+1	; 0x01
     fc6:	07 2e       	mov	r0, r23
     fc8:	00 0c       	add	r0, r0
     fca:	88 0b       	sbc	r24, r24
     fcc:	99 0b       	sbc	r25, r25
     fce:	0e 5f       	subi	r16, 0xFE	; 254
     fd0:	1f 4f       	sbci	r17, 0xFF	; 255
     fd2:	f3 2d       	mov	r31, r3
     fd4:	ff 76       	andi	r31, 0x6F	; 111
     fd6:	3f 2e       	mov	r3, r31
     fd8:	97 ff       	sbrs	r25, 7
     fda:	09 c0       	rjmp	.+18     	; 0xfee <vfprintf+0x230>
     fdc:	90 95       	com	r25
     fde:	80 95       	com	r24
     fe0:	70 95       	com	r23
     fe2:	61 95       	neg	r22
     fe4:	7f 4f       	sbci	r23, 0xFF	; 255
     fe6:	8f 4f       	sbci	r24, 0xFF	; 255
     fe8:	9f 4f       	sbci	r25, 0xFF	; 255
     fea:	f0 68       	ori	r31, 0x80	; 128
     fec:	3f 2e       	mov	r3, r31
     fee:	2a e0       	ldi	r18, 0x0A	; 10
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	a3 01       	movw	r20, r6
     ff4:	33 d1       	rcall	.+614    	; 0x125c <__ultoa_invert>
     ff6:	88 2e       	mov	r8, r24
     ff8:	86 18       	sub	r8, r6
     ffa:	44 c0       	rjmp	.+136    	; 0x1084 <vfprintf+0x2c6>
     ffc:	85 37       	cpi	r24, 0x75	; 117
     ffe:	31 f4       	brne	.+12     	; 0x100c <vfprintf+0x24e>
    1000:	23 2d       	mov	r18, r3
    1002:	2f 7e       	andi	r18, 0xEF	; 239
    1004:	b2 2e       	mov	r11, r18
    1006:	2a e0       	ldi	r18, 0x0A	; 10
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	25 c0       	rjmp	.+74     	; 0x1056 <vfprintf+0x298>
    100c:	93 2d       	mov	r25, r3
    100e:	99 7f       	andi	r25, 0xF9	; 249
    1010:	b9 2e       	mov	r11, r25
    1012:	8f 36       	cpi	r24, 0x6F	; 111
    1014:	c1 f0       	breq	.+48     	; 0x1046 <vfprintf+0x288>
    1016:	18 f4       	brcc	.+6      	; 0x101e <vfprintf+0x260>
    1018:	88 35       	cpi	r24, 0x58	; 88
    101a:	79 f0       	breq	.+30     	; 0x103a <vfprintf+0x27c>
    101c:	ae c0       	rjmp	.+348    	; 0x117a <vfprintf+0x3bc>
    101e:	80 37       	cpi	r24, 0x70	; 112
    1020:	19 f0       	breq	.+6      	; 0x1028 <vfprintf+0x26a>
    1022:	88 37       	cpi	r24, 0x78	; 120
    1024:	21 f0       	breq	.+8      	; 0x102e <vfprintf+0x270>
    1026:	a9 c0       	rjmp	.+338    	; 0x117a <vfprintf+0x3bc>
    1028:	e9 2f       	mov	r30, r25
    102a:	e0 61       	ori	r30, 0x10	; 16
    102c:	be 2e       	mov	r11, r30
    102e:	b4 fe       	sbrs	r11, 4
    1030:	0d c0       	rjmp	.+26     	; 0x104c <vfprintf+0x28e>
    1032:	fb 2d       	mov	r31, r11
    1034:	f4 60       	ori	r31, 0x04	; 4
    1036:	bf 2e       	mov	r11, r31
    1038:	09 c0       	rjmp	.+18     	; 0x104c <vfprintf+0x28e>
    103a:	34 fe       	sbrs	r3, 4
    103c:	0a c0       	rjmp	.+20     	; 0x1052 <vfprintf+0x294>
    103e:	29 2f       	mov	r18, r25
    1040:	26 60       	ori	r18, 0x06	; 6
    1042:	b2 2e       	mov	r11, r18
    1044:	06 c0       	rjmp	.+12     	; 0x1052 <vfprintf+0x294>
    1046:	28 e0       	ldi	r18, 0x08	; 8
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	05 c0       	rjmp	.+10     	; 0x1056 <vfprintf+0x298>
    104c:	20 e1       	ldi	r18, 0x10	; 16
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <vfprintf+0x298>
    1052:	20 e1       	ldi	r18, 0x10	; 16
    1054:	32 e0       	ldi	r19, 0x02	; 2
    1056:	f8 01       	movw	r30, r16
    1058:	b7 fe       	sbrs	r11, 7
    105a:	07 c0       	rjmp	.+14     	; 0x106a <vfprintf+0x2ac>
    105c:	60 81       	ld	r22, Z
    105e:	71 81       	ldd	r23, Z+1	; 0x01
    1060:	82 81       	ldd	r24, Z+2	; 0x02
    1062:	93 81       	ldd	r25, Z+3	; 0x03
    1064:	0c 5f       	subi	r16, 0xFC	; 252
    1066:	1f 4f       	sbci	r17, 0xFF	; 255
    1068:	06 c0       	rjmp	.+12     	; 0x1076 <vfprintf+0x2b8>
    106a:	60 81       	ld	r22, Z
    106c:	71 81       	ldd	r23, Z+1	; 0x01
    106e:	80 e0       	ldi	r24, 0x00	; 0
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	0e 5f       	subi	r16, 0xFE	; 254
    1074:	1f 4f       	sbci	r17, 0xFF	; 255
    1076:	a3 01       	movw	r20, r6
    1078:	f1 d0       	rcall	.+482    	; 0x125c <__ultoa_invert>
    107a:	88 2e       	mov	r8, r24
    107c:	86 18       	sub	r8, r6
    107e:	fb 2d       	mov	r31, r11
    1080:	ff 77       	andi	r31, 0x7F	; 127
    1082:	3f 2e       	mov	r3, r31
    1084:	36 fe       	sbrs	r3, 6
    1086:	0d c0       	rjmp	.+26     	; 0x10a2 <vfprintf+0x2e4>
    1088:	23 2d       	mov	r18, r3
    108a:	2e 7f       	andi	r18, 0xFE	; 254
    108c:	a2 2e       	mov	r10, r18
    108e:	89 14       	cp	r8, r9
    1090:	58 f4       	brcc	.+22     	; 0x10a8 <vfprintf+0x2ea>
    1092:	34 fe       	sbrs	r3, 4
    1094:	0b c0       	rjmp	.+22     	; 0x10ac <vfprintf+0x2ee>
    1096:	32 fc       	sbrc	r3, 2
    1098:	09 c0       	rjmp	.+18     	; 0x10ac <vfprintf+0x2ee>
    109a:	83 2d       	mov	r24, r3
    109c:	8e 7e       	andi	r24, 0xEE	; 238
    109e:	a8 2e       	mov	r10, r24
    10a0:	05 c0       	rjmp	.+10     	; 0x10ac <vfprintf+0x2ee>
    10a2:	b8 2c       	mov	r11, r8
    10a4:	a3 2c       	mov	r10, r3
    10a6:	03 c0       	rjmp	.+6      	; 0x10ae <vfprintf+0x2f0>
    10a8:	b8 2c       	mov	r11, r8
    10aa:	01 c0       	rjmp	.+2      	; 0x10ae <vfprintf+0x2f0>
    10ac:	b9 2c       	mov	r11, r9
    10ae:	a4 fe       	sbrs	r10, 4
    10b0:	0f c0       	rjmp	.+30     	; 0x10d0 <vfprintf+0x312>
    10b2:	fe 01       	movw	r30, r28
    10b4:	e8 0d       	add	r30, r8
    10b6:	f1 1d       	adc	r31, r1
    10b8:	80 81       	ld	r24, Z
    10ba:	80 33       	cpi	r24, 0x30	; 48
    10bc:	21 f4       	brne	.+8      	; 0x10c6 <vfprintf+0x308>
    10be:	9a 2d       	mov	r25, r10
    10c0:	99 7e       	andi	r25, 0xE9	; 233
    10c2:	a9 2e       	mov	r10, r25
    10c4:	09 c0       	rjmp	.+18     	; 0x10d8 <vfprintf+0x31a>
    10c6:	a2 fe       	sbrs	r10, 2
    10c8:	06 c0       	rjmp	.+12     	; 0x10d6 <vfprintf+0x318>
    10ca:	b3 94       	inc	r11
    10cc:	b3 94       	inc	r11
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <vfprintf+0x31a>
    10d0:	8a 2d       	mov	r24, r10
    10d2:	86 78       	andi	r24, 0x86	; 134
    10d4:	09 f0       	breq	.+2      	; 0x10d8 <vfprintf+0x31a>
    10d6:	b3 94       	inc	r11
    10d8:	a3 fc       	sbrc	r10, 3
    10da:	10 c0       	rjmp	.+32     	; 0x10fc <vfprintf+0x33e>
    10dc:	a0 fe       	sbrs	r10, 0
    10de:	06 c0       	rjmp	.+12     	; 0x10ec <vfprintf+0x32e>
    10e0:	b2 14       	cp	r11, r2
    10e2:	80 f4       	brcc	.+32     	; 0x1104 <vfprintf+0x346>
    10e4:	28 0c       	add	r2, r8
    10e6:	92 2c       	mov	r9, r2
    10e8:	9b 18       	sub	r9, r11
    10ea:	0d c0       	rjmp	.+26     	; 0x1106 <vfprintf+0x348>
    10ec:	b2 14       	cp	r11, r2
    10ee:	58 f4       	brcc	.+22     	; 0x1106 <vfprintf+0x348>
    10f0:	b6 01       	movw	r22, r12
    10f2:	80 e2       	ldi	r24, 0x20	; 32
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	76 d0       	rcall	.+236    	; 0x11e4 <fputc>
    10f8:	b3 94       	inc	r11
    10fa:	f8 cf       	rjmp	.-16     	; 0x10ec <vfprintf+0x32e>
    10fc:	b2 14       	cp	r11, r2
    10fe:	18 f4       	brcc	.+6      	; 0x1106 <vfprintf+0x348>
    1100:	2b 18       	sub	r2, r11
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <vfprintf+0x34a>
    1104:	98 2c       	mov	r9, r8
    1106:	21 2c       	mov	r2, r1
    1108:	a4 fe       	sbrs	r10, 4
    110a:	0f c0       	rjmp	.+30     	; 0x112a <vfprintf+0x36c>
    110c:	b6 01       	movw	r22, r12
    110e:	80 e3       	ldi	r24, 0x30	; 48
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	68 d0       	rcall	.+208    	; 0x11e4 <fputc>
    1114:	a2 fe       	sbrs	r10, 2
    1116:	16 c0       	rjmp	.+44     	; 0x1144 <vfprintf+0x386>
    1118:	a1 fc       	sbrc	r10, 1
    111a:	03 c0       	rjmp	.+6      	; 0x1122 <vfprintf+0x364>
    111c:	88 e7       	ldi	r24, 0x78	; 120
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <vfprintf+0x368>
    1122:	88 e5       	ldi	r24, 0x58	; 88
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	b6 01       	movw	r22, r12
    1128:	0c c0       	rjmp	.+24     	; 0x1142 <vfprintf+0x384>
    112a:	8a 2d       	mov	r24, r10
    112c:	86 78       	andi	r24, 0x86	; 134
    112e:	51 f0       	breq	.+20     	; 0x1144 <vfprintf+0x386>
    1130:	a1 fe       	sbrs	r10, 1
    1132:	02 c0       	rjmp	.+4      	; 0x1138 <vfprintf+0x37a>
    1134:	8b e2       	ldi	r24, 0x2B	; 43
    1136:	01 c0       	rjmp	.+2      	; 0x113a <vfprintf+0x37c>
    1138:	80 e2       	ldi	r24, 0x20	; 32
    113a:	a7 fc       	sbrc	r10, 7
    113c:	8d e2       	ldi	r24, 0x2D	; 45
    113e:	b6 01       	movw	r22, r12
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	50 d0       	rcall	.+160    	; 0x11e4 <fputc>
    1144:	89 14       	cp	r8, r9
    1146:	30 f4       	brcc	.+12     	; 0x1154 <vfprintf+0x396>
    1148:	b6 01       	movw	r22, r12
    114a:	80 e3       	ldi	r24, 0x30	; 48
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	4a d0       	rcall	.+148    	; 0x11e4 <fputc>
    1150:	9a 94       	dec	r9
    1152:	f8 cf       	rjmp	.-16     	; 0x1144 <vfprintf+0x386>
    1154:	8a 94       	dec	r8
    1156:	f3 01       	movw	r30, r6
    1158:	e8 0d       	add	r30, r8
    115a:	f1 1d       	adc	r31, r1
    115c:	80 81       	ld	r24, Z
    115e:	b6 01       	movw	r22, r12
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	40 d0       	rcall	.+128    	; 0x11e4 <fputc>
    1164:	81 10       	cpse	r8, r1
    1166:	f6 cf       	rjmp	.-20     	; 0x1154 <vfprintf+0x396>
    1168:	22 20       	and	r2, r2
    116a:	09 f4       	brne	.+2      	; 0x116e <vfprintf+0x3b0>
    116c:	4e ce       	rjmp	.-868    	; 0xe0a <vfprintf+0x4c>
    116e:	b6 01       	movw	r22, r12
    1170:	80 e2       	ldi	r24, 0x20	; 32
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	37 d0       	rcall	.+110    	; 0x11e4 <fputc>
    1176:	2a 94       	dec	r2
    1178:	f7 cf       	rjmp	.-18     	; 0x1168 <vfprintf+0x3aa>
    117a:	f6 01       	movw	r30, r12
    117c:	86 81       	ldd	r24, Z+6	; 0x06
    117e:	97 81       	ldd	r25, Z+7	; 0x07
    1180:	02 c0       	rjmp	.+4      	; 0x1186 <vfprintf+0x3c8>
    1182:	8f ef       	ldi	r24, 0xFF	; 255
    1184:	9f ef       	ldi	r25, 0xFF	; 255
    1186:	2b 96       	adiw	r28, 0x0b	; 11
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	f8 94       	cli
    118c:	de bf       	out	0x3e, r29	; 62
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	cd bf       	out	0x3d, r28	; 61
    1192:	df 91       	pop	r29
    1194:	cf 91       	pop	r28
    1196:	1f 91       	pop	r17
    1198:	0f 91       	pop	r16
    119a:	ff 90       	pop	r15
    119c:	ef 90       	pop	r14
    119e:	df 90       	pop	r13
    11a0:	cf 90       	pop	r12
    11a2:	bf 90       	pop	r11
    11a4:	af 90       	pop	r10
    11a6:	9f 90       	pop	r9
    11a8:	8f 90       	pop	r8
    11aa:	7f 90       	pop	r7
    11ac:	6f 90       	pop	r6
    11ae:	5f 90       	pop	r5
    11b0:	4f 90       	pop	r4
    11b2:	3f 90       	pop	r3
    11b4:	2f 90       	pop	r2
    11b6:	08 95       	ret

000011b8 <strnlen_P>:
    11b8:	fc 01       	movw	r30, r24
    11ba:	05 90       	lpm	r0, Z+
    11bc:	61 50       	subi	r22, 0x01	; 1
    11be:	70 40       	sbci	r23, 0x00	; 0
    11c0:	01 10       	cpse	r0, r1
    11c2:	d8 f7       	brcc	.-10     	; 0x11ba <strnlen_P+0x2>
    11c4:	80 95       	com	r24
    11c6:	90 95       	com	r25
    11c8:	8e 0f       	add	r24, r30
    11ca:	9f 1f       	adc	r25, r31
    11cc:	08 95       	ret

000011ce <strnlen>:
    11ce:	fc 01       	movw	r30, r24
    11d0:	61 50       	subi	r22, 0x01	; 1
    11d2:	70 40       	sbci	r23, 0x00	; 0
    11d4:	01 90       	ld	r0, Z+
    11d6:	01 10       	cpse	r0, r1
    11d8:	d8 f7       	brcc	.-10     	; 0x11d0 <strnlen+0x2>
    11da:	80 95       	com	r24
    11dc:	90 95       	com	r25
    11de:	8e 0f       	add	r24, r30
    11e0:	9f 1f       	adc	r25, r31
    11e2:	08 95       	ret

000011e4 <fputc>:
    11e4:	0f 93       	push	r16
    11e6:	1f 93       	push	r17
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
    11ec:	fb 01       	movw	r30, r22
    11ee:	23 81       	ldd	r18, Z+3	; 0x03
    11f0:	21 fd       	sbrc	r18, 1
    11f2:	03 c0       	rjmp	.+6      	; 0x11fa <fputc+0x16>
    11f4:	8f ef       	ldi	r24, 0xFF	; 255
    11f6:	9f ef       	ldi	r25, 0xFF	; 255
    11f8:	2c c0       	rjmp	.+88     	; 0x1252 <fputc+0x6e>
    11fa:	22 ff       	sbrs	r18, 2
    11fc:	16 c0       	rjmp	.+44     	; 0x122a <fputc+0x46>
    11fe:	46 81       	ldd	r20, Z+6	; 0x06
    1200:	57 81       	ldd	r21, Z+7	; 0x07
    1202:	24 81       	ldd	r18, Z+4	; 0x04
    1204:	35 81       	ldd	r19, Z+5	; 0x05
    1206:	42 17       	cp	r20, r18
    1208:	53 07       	cpc	r21, r19
    120a:	44 f4       	brge	.+16     	; 0x121c <fputc+0x38>
    120c:	a0 81       	ld	r26, Z
    120e:	b1 81       	ldd	r27, Z+1	; 0x01
    1210:	9d 01       	movw	r18, r26
    1212:	2f 5f       	subi	r18, 0xFF	; 255
    1214:	3f 4f       	sbci	r19, 0xFF	; 255
    1216:	31 83       	std	Z+1, r19	; 0x01
    1218:	20 83       	st	Z, r18
    121a:	8c 93       	st	X, r24
    121c:	26 81       	ldd	r18, Z+6	; 0x06
    121e:	37 81       	ldd	r19, Z+7	; 0x07
    1220:	2f 5f       	subi	r18, 0xFF	; 255
    1222:	3f 4f       	sbci	r19, 0xFF	; 255
    1224:	37 83       	std	Z+7, r19	; 0x07
    1226:	26 83       	std	Z+6, r18	; 0x06
    1228:	14 c0       	rjmp	.+40     	; 0x1252 <fputc+0x6e>
    122a:	8b 01       	movw	r16, r22
    122c:	ec 01       	movw	r28, r24
    122e:	fb 01       	movw	r30, r22
    1230:	00 84       	ldd	r0, Z+8	; 0x08
    1232:	f1 85       	ldd	r31, Z+9	; 0x09
    1234:	e0 2d       	mov	r30, r0
    1236:	19 95       	eicall
    1238:	89 2b       	or	r24, r25
    123a:	e1 f6       	brne	.-72     	; 0x11f4 <fputc+0x10>
    123c:	d8 01       	movw	r26, r16
    123e:	16 96       	adiw	r26, 0x06	; 6
    1240:	8d 91       	ld	r24, X+
    1242:	9c 91       	ld	r25, X
    1244:	17 97       	sbiw	r26, 0x07	; 7
    1246:	01 96       	adiw	r24, 0x01	; 1
    1248:	17 96       	adiw	r26, 0x07	; 7
    124a:	9c 93       	st	X, r25
    124c:	8e 93       	st	-X, r24
    124e:	16 97       	sbiw	r26, 0x06	; 6
    1250:	ce 01       	movw	r24, r28
    1252:	df 91       	pop	r29
    1254:	cf 91       	pop	r28
    1256:	1f 91       	pop	r17
    1258:	0f 91       	pop	r16
    125a:	08 95       	ret

0000125c <__ultoa_invert>:
    125c:	fa 01       	movw	r30, r20
    125e:	aa 27       	eor	r26, r26
    1260:	28 30       	cpi	r18, 0x08	; 8
    1262:	51 f1       	breq	.+84     	; 0x12b8 <__ultoa_invert+0x5c>
    1264:	20 31       	cpi	r18, 0x10	; 16
    1266:	81 f1       	breq	.+96     	; 0x12c8 <__ultoa_invert+0x6c>
    1268:	e8 94       	clt
    126a:	6f 93       	push	r22
    126c:	6e 7f       	andi	r22, 0xFE	; 254
    126e:	6e 5f       	subi	r22, 0xFE	; 254
    1270:	7f 4f       	sbci	r23, 0xFF	; 255
    1272:	8f 4f       	sbci	r24, 0xFF	; 255
    1274:	9f 4f       	sbci	r25, 0xFF	; 255
    1276:	af 4f       	sbci	r26, 0xFF	; 255
    1278:	b1 e0       	ldi	r27, 0x01	; 1
    127a:	3e d0       	rcall	.+124    	; 0x12f8 <__ultoa_invert+0x9c>
    127c:	b4 e0       	ldi	r27, 0x04	; 4
    127e:	3c d0       	rcall	.+120    	; 0x12f8 <__ultoa_invert+0x9c>
    1280:	67 0f       	add	r22, r23
    1282:	78 1f       	adc	r23, r24
    1284:	89 1f       	adc	r24, r25
    1286:	9a 1f       	adc	r25, r26
    1288:	a1 1d       	adc	r26, r1
    128a:	68 0f       	add	r22, r24
    128c:	79 1f       	adc	r23, r25
    128e:	8a 1f       	adc	r24, r26
    1290:	91 1d       	adc	r25, r1
    1292:	a1 1d       	adc	r26, r1
    1294:	6a 0f       	add	r22, r26
    1296:	71 1d       	adc	r23, r1
    1298:	81 1d       	adc	r24, r1
    129a:	91 1d       	adc	r25, r1
    129c:	a1 1d       	adc	r26, r1
    129e:	20 d0       	rcall	.+64     	; 0x12e0 <__ultoa_invert+0x84>
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <__ultoa_invert+0x48>
    12a2:	68 94       	set
    12a4:	3f 91       	pop	r19
    12a6:	2a e0       	ldi	r18, 0x0A	; 10
    12a8:	26 9f       	mul	r18, r22
    12aa:	11 24       	eor	r1, r1
    12ac:	30 19       	sub	r19, r0
    12ae:	30 5d       	subi	r19, 0xD0	; 208
    12b0:	31 93       	st	Z+, r19
    12b2:	de f6       	brtc	.-74     	; 0x126a <__ultoa_invert+0xe>
    12b4:	cf 01       	movw	r24, r30
    12b6:	08 95       	ret
    12b8:	46 2f       	mov	r20, r22
    12ba:	47 70       	andi	r20, 0x07	; 7
    12bc:	40 5d       	subi	r20, 0xD0	; 208
    12be:	41 93       	st	Z+, r20
    12c0:	b3 e0       	ldi	r27, 0x03	; 3
    12c2:	0f d0       	rcall	.+30     	; 0x12e2 <__ultoa_invert+0x86>
    12c4:	c9 f7       	brne	.-14     	; 0x12b8 <__ultoa_invert+0x5c>
    12c6:	f6 cf       	rjmp	.-20     	; 0x12b4 <__ultoa_invert+0x58>
    12c8:	46 2f       	mov	r20, r22
    12ca:	4f 70       	andi	r20, 0x0F	; 15
    12cc:	40 5d       	subi	r20, 0xD0	; 208
    12ce:	4a 33       	cpi	r20, 0x3A	; 58
    12d0:	18 f0       	brcs	.+6      	; 0x12d8 <__ultoa_invert+0x7c>
    12d2:	49 5d       	subi	r20, 0xD9	; 217
    12d4:	31 fd       	sbrc	r19, 1
    12d6:	40 52       	subi	r20, 0x20	; 32
    12d8:	41 93       	st	Z+, r20
    12da:	02 d0       	rcall	.+4      	; 0x12e0 <__ultoa_invert+0x84>
    12dc:	a9 f7       	brne	.-22     	; 0x12c8 <__ultoa_invert+0x6c>
    12de:	ea cf       	rjmp	.-44     	; 0x12b4 <__ultoa_invert+0x58>
    12e0:	b4 e0       	ldi	r27, 0x04	; 4
    12e2:	a6 95       	lsr	r26
    12e4:	97 95       	ror	r25
    12e6:	87 95       	ror	r24
    12e8:	77 95       	ror	r23
    12ea:	67 95       	ror	r22
    12ec:	ba 95       	dec	r27
    12ee:	c9 f7       	brne	.-14     	; 0x12e2 <__ultoa_invert+0x86>
    12f0:	00 97       	sbiw	r24, 0x00	; 0
    12f2:	61 05       	cpc	r22, r1
    12f4:	71 05       	cpc	r23, r1
    12f6:	08 95       	ret
    12f8:	9b 01       	movw	r18, r22
    12fa:	ac 01       	movw	r20, r24
    12fc:	0a 2e       	mov	r0, r26
    12fe:	06 94       	lsr	r0
    1300:	57 95       	ror	r21
    1302:	47 95       	ror	r20
    1304:	37 95       	ror	r19
    1306:	27 95       	ror	r18
    1308:	ba 95       	dec	r27
    130a:	c9 f7       	brne	.-14     	; 0x12fe <__ultoa_invert+0xa2>
    130c:	62 0f       	add	r22, r18
    130e:	73 1f       	adc	r23, r19
    1310:	84 1f       	adc	r24, r20
    1312:	95 1f       	adc	r25, r21
    1314:	a0 1d       	adc	r26, r0
    1316:	08 95       	ret

00001318 <_exit>:
    1318:	f8 94       	cli

0000131a <__stop_program>:
    131a:	ff cf       	rjmp	.-2      	; 0x131a <__stop_program>
