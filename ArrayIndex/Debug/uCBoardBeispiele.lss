
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000082  00800200  0000130a  0000139e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000130a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c8  00800282  00800282  00001420  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001420  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000147c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000014bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002496  00000000  00000000  000016a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fdd  00000000  00000000  00003b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000141b  00000000  00000000  00004b17  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000068c  00000000  00000000  00005f34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ccb  00000000  00000000  000065c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a61  00000000  00000000  0000728b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008cec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b0 c5       	rjmp	.+2912   	; 0xbbe <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ea e0       	ldi	r30, 0x0A	; 10
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 38       	cpi	r26, 0x82	; 130
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a2 e8       	ldi	r26, 0x82	; 130
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	aa 34       	cpi	r26, 0x4A	; 74
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 83 09 	jmp	0x1306	; 0x1306 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:

#define ANZAHL 256

//Hauptprogramm
int main(void)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	d2 50       	subi	r29, 0x02	; 2
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
    //Speicherplatz für 255 Muster reserviert
    uint16_t muster [ANZAHL];
    
    uint8_t schalter=0;
    //Initialisieren
    initBoard(1);
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	8f d2       	rcall	.+1310   	; 0x65c <initBoard>
     13e:	ae 01       	movw	r20, r28
     140:	4f 5f       	subi	r20, 0xFF	; 255
     142:	5f 4f       	sbci	r21, 0xFF	; 255
     144:	ce 01       	movw	r24, r28
     146:	8f 5f       	subi	r24, 0xFF	; 255
     148:	9d 4f       	sbci	r25, 0xFD	; 253
     14a:	fa 01       	movw	r30, r20
    //alle Muster auf 0 setzen  
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
    {
        muster[i] = 0;
     14c:	11 92       	st	Z+, r1
     14e:	11 92       	st	Z+, r1
    
    uint8_t schalter=0;
    //Initialisieren
    initBoard(1);
    //alle Muster auf 0 setzen  
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
     150:	e8 17       	cp	r30, r24
     152:	f9 07       	cpc	r31, r25
     154:	d9 f7       	brne	.-10     	; 0x14c <main+0x26>
     156:	fa 01       	movw	r30, r20
    }
    
    //2er-Reihe in das Array abfühlen
    for ( uint16_t i = 0; i < ANZAHL; i=i+1)
    {
        muster[i]= i*2;
     158:	9f 01       	movw	r18, r30
     15a:	24 1b       	sub	r18, r20
     15c:	35 0b       	sbc	r19, r21
     15e:	21 93       	st	Z+, r18
     160:	31 93       	st	Z+, r19
    {
        muster[i] = 0;
    }
    
    //2er-Reihe in das Array abfühlen
    for ( uint16_t i = 0; i < ANZAHL; i=i+1)
     162:	e8 17       	cp	r30, r24
     164:	f9 07       	cpc	r31, r25
     166:	c1 f7       	brne	.-16     	; 0x158 <main+0x32>
    {
        //Eingabe------------------------------------------------------------------
        schalter = switchReadAll();
        //Verarbeitung-------------------------------------------------------------
        outLeds = muster[schalter];
        lcdLog("I: %u O: %u",schalter, outLeds);
     168:	0f 2e       	mov	r0, r31
     16a:	fa e0       	ldi	r31, 0x0A	; 10
     16c:	ef 2e       	mov	r14, r31
     16e:	f2 e0       	ldi	r31, 0x02	; 2
     170:	ff 2e       	mov	r15, r31
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        schalter = switchReadAll();
     172:	f0 2d       	mov	r31, r0
     174:	20 d0       	rcall	.+64     	; 0x1b6 <switchReadAll>
        //Verarbeitung-------------------------------------------------------------
        outLeds = muster[schalter];
     176:	e8 2f       	mov	r30, r24
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	ee 0f       	add	r30, r30
     17c:	ff 1f       	adc	r31, r31
     17e:	21 e0       	ldi	r18, 0x01	; 1
     180:	30 e0       	ldi	r19, 0x00	; 0
     182:	2c 0f       	add	r18, r28
     184:	3d 1f       	adc	r19, r29
     186:	e2 0f       	add	r30, r18
     188:	f3 1f       	adc	r31, r19
     18a:	00 81       	ld	r16, Z
     18c:	11 81       	ldd	r17, Z+1	; 0x01
        lcdLog("I: %u O: %u",schalter, outLeds);
     18e:	1f 93       	push	r17
     190:	0f 93       	push	r16
     192:	1f 92       	push	r1
     194:	8f 93       	push	r24
     196:	ff 92       	push	r15
     198:	ef 92       	push	r14
     19a:	6b d3       	rcall	.+1750   	; 0x872 <lcdLog>
        //Ausgabe------------------------------------------------------------------
        ledWriteAll(outLeds);
     19c:	80 2f       	mov	r24, r16
     19e:	91 2f       	mov	r25, r17
     1a0:	07 d0       	rcall	.+14     	; 0x1b0 <ledWriteAll>
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	0f 90       	pop	r0
     1ae:	e2 cf       	rjmp	.-60     	; 0x174 <main+0x4e>

000001b0 <ledWriteAll>:
     1b0:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     1b2:	95 b9       	out	0x05, r25	; 5
     1b4:	08 95       	ret

000001b6 <switchReadAll>:
     1b6:	86 b1       	in	r24, 0x06	; 6
     1b8:	08 95       	ret

000001ba <startSystemTimeMs>:
     1ba:	83 e0       	ldi	r24, 0x03	; 3
     1bc:	84 bd       	out	0x24, r24	; 36
     1be:	8b e0       	ldi	r24, 0x0B	; 11
     1c0:	85 bd       	out	0x25, r24	; 37
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     1c8:	89 ef       	ldi	r24, 0xF9	; 249
     1ca:	87 bd       	out	0x27, r24	; 39
     1cc:	08 95       	ret

000001ce <initAdc>:
     1ce:	11 ba       	out	0x11, r1	; 17
     1d0:	10 ba       	out	0x10, r1	; 16
     1d2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     1d6:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     1da:	80 e4       	ldi	r24, 0x40	; 64
     1dc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     1e0:	8f e0       	ldi	r24, 0x0F	; 15
     1e2:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     1e6:	8f ef       	ldi	r24, 0xFF	; 255
     1e8:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     1ec:	ea e7       	ldi	r30, 0x7A	; 122
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	87 ea       	ldi	r24, 0xA7	; 167
     1f2:	80 83       	st	Z, r24
     1f4:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     1f8:	80 81       	ld	r24, Z
     1fa:	80 64       	ori	r24, 0x40	; 64
     1fc:	80 83       	st	Z, r24
     1fe:	80 81       	ld	r24, Z
     200:	84 ff       	sbrs	r24, 4
     202:	fd cf       	rjmp	.-6      	; 0x1fe <initAdc+0x30>
     204:	ea e7       	ldi	r30, 0x7A	; 122
     206:	f0 e0       	ldi	r31, 0x00	; 0
     208:	80 81       	ld	r24, Z
     20a:	8f 7e       	andi	r24, 0xEF	; 239
     20c:	80 83       	st	Z, r24
     20e:	08 95       	ret

00000210 <rgbWrite>:
     210:	2f ef       	ldi	r18, 0xFF	; 255
     212:	33 e0       	ldi	r19, 0x03	; 3
     214:	f9 01       	movw	r30, r18
     216:	e8 1b       	sub	r30, r24
     218:	f9 0b       	sbc	r31, r25
     21a:	c9 01       	movw	r24, r18
     21c:	86 1b       	sub	r24, r22
     21e:	97 0b       	sbc	r25, r23
     220:	24 1b       	sub	r18, r20
     222:	35 0b       	sbc	r19, r21
     224:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     228:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     22c:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     230:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     234:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     238:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     23c:	08 95       	ret

0000023e <initRgb>:
     23e:	8e ef       	ldi	r24, 0xFE	; 254
     240:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     244:	8b e1       	ldi	r24, 0x1B	; 27
     246:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     24a:	83 e0       	ldi	r24, 0x03	; 3
     24c:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     250:	8f ef       	ldi	r24, 0xFF	; 255
     252:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     256:	40 e0       	ldi	r20, 0x00	; 0
     258:	50 e0       	ldi	r21, 0x00	; 0
     25a:	60 e0       	ldi	r22, 0x00	; 0
     25c:	70 e0       	ldi	r23, 0x00	; 0
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	d6 cf       	rjmp	.-84     	; 0x210 <rgbWrite>
     264:	08 95       	ret

00000266 <lcdSid>:
     266:	88 23       	and	r24, r24
     268:	11 f0       	breq	.+4      	; 0x26e <lcdSid+0x8>
     26a:	a0 9a       	sbi	0x14, 0	; 20
     26c:	08 95       	ret
     26e:	a0 98       	cbi	0x14, 0	; 20
     270:	08 95       	ret

00000272 <lcdSclk>:
     272:	88 23       	and	r24, r24
     274:	11 f0       	breq	.+4      	; 0x27a <lcdSclk+0x8>
     276:	a1 9a       	sbi	0x14, 1	; 20
     278:	08 95       	ret
     27a:	a1 98       	cbi	0x14, 1	; 20
     27c:	08 95       	ret

0000027e <lcdLight>:
     27e:	81 11       	cpse	r24, r1
     280:	04 c0       	rjmp	.+8      	; 0x28a <lcdLight+0xc>
     282:	84 b5       	in	r24, 0x24	; 36
     284:	8f 7d       	andi	r24, 0xDF	; 223
     286:	84 bd       	out	0x24, r24	; 36
     288:	08 95       	ret
     28a:	94 b5       	in	r25, 0x24	; 36
     28c:	90 62       	ori	r25, 0x20	; 32
     28e:	94 bd       	out	0x24, r25	; 36
     290:	88 bd       	out	0x28, r24	; 40
     292:	08 95       	ret

00000294 <writeLcdF>:
     294:	ef 92       	push	r14
     296:	ff 92       	push	r15
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	7c 01       	movw	r14, r24
     2a2:	eb 01       	movw	r28, r22
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	df df       	rcall	.-66     	; 0x266 <lcdSid>
     2a8:	05 e0       	ldi	r16, 0x05	; 5
     2aa:	10 e0       	ldi	r17, 0x00	; 0
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	e1 df       	rcall	.-62     	; 0x272 <lcdSclk>
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	df df       	rcall	.-66     	; 0x272 <lcdSclk>
     2b4:	01 50       	subi	r16, 0x01	; 1
     2b6:	11 09       	sbc	r17, r1
     2b8:	c9 f7       	brne	.-14     	; 0x2ac <writeLcdF+0x18>
     2ba:	80 e0       	ldi	r24, 0x00	; 0
     2bc:	d4 df       	rcall	.-88     	; 0x266 <lcdSid>
     2be:	80 e0       	ldi	r24, 0x00	; 0
     2c0:	d8 df       	rcall	.-80     	; 0x272 <lcdSclk>
     2c2:	81 e0       	ldi	r24, 0x01	; 1
     2c4:	d6 df       	rcall	.-84     	; 0x272 <lcdSclk>
     2c6:	83 e4       	ldi	r24, 0x43	; 67
     2c8:	e8 16       	cp	r14, r24
     2ca:	f1 04       	cpc	r15, r1
     2cc:	19 f4       	brne	.+6      	; 0x2d4 <writeLcdF+0x40>
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	ca df       	rcall	.-108    	; 0x266 <lcdSid>
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <writeLcdF+0x44>
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	c7 df       	rcall	.-114    	; 0x266 <lcdSid>
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	cb df       	rcall	.-106    	; 0x272 <lcdSclk>
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	c9 df       	rcall	.-110    	; 0x272 <lcdSclk>
     2e0:	80 e0       	ldi	r24, 0x00	; 0
     2e2:	c1 df       	rcall	.-126    	; 0x266 <lcdSid>
     2e4:	80 e0       	ldi	r24, 0x00	; 0
     2e6:	c5 df       	rcall	.-118    	; 0x272 <lcdSclk>
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	c3 df       	rcall	.-122    	; 0x272 <lcdSclk>
     2ec:	04 e0       	ldi	r16, 0x04	; 4
     2ee:	10 e0       	ldi	r17, 0x00	; 0
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	bf df       	rcall	.-130    	; 0x272 <lcdSclk>
     2f4:	c0 ff       	sbrs	r28, 0
     2f6:	03 c0       	rjmp	.+6      	; 0x2fe <writeLcdF+0x6a>
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	b5 df       	rcall	.-150    	; 0x266 <lcdSid>
     2fc:	02 c0       	rjmp	.+4      	; 0x302 <writeLcdF+0x6e>
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	b2 df       	rcall	.-156    	; 0x266 <lcdSid>
     302:	d6 95       	lsr	r29
     304:	c7 95       	ror	r28
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	b4 df       	rcall	.-152    	; 0x272 <lcdSclk>
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	b2 df       	rcall	.-156    	; 0x272 <lcdSclk>
     30e:	01 50       	subi	r16, 0x01	; 1
     310:	11 09       	sbc	r17, r1
     312:	71 f7       	brne	.-36     	; 0x2f0 <writeLcdF+0x5c>
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	a7 df       	rcall	.-178    	; 0x266 <lcdSid>
     318:	04 e0       	ldi	r16, 0x04	; 4
     31a:	10 e0       	ldi	r17, 0x00	; 0
     31c:	80 e0       	ldi	r24, 0x00	; 0
     31e:	a9 df       	rcall	.-174    	; 0x272 <lcdSclk>
     320:	81 e0       	ldi	r24, 0x01	; 1
     322:	a7 df       	rcall	.-178    	; 0x272 <lcdSclk>
     324:	01 50       	subi	r16, 0x01	; 1
     326:	11 09       	sbc	r17, r1
     328:	c9 f7       	brne	.-14     	; 0x31c <writeLcdF+0x88>
     32a:	04 e0       	ldi	r16, 0x04	; 4
     32c:	10 e0       	ldi	r17, 0x00	; 0
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	a0 df       	rcall	.-192    	; 0x272 <lcdSclk>
     332:	c0 ff       	sbrs	r28, 0
     334:	03 c0       	rjmp	.+6      	; 0x33c <writeLcdF+0xa8>
     336:	81 e0       	ldi	r24, 0x01	; 1
     338:	96 df       	rcall	.-212    	; 0x266 <lcdSid>
     33a:	02 c0       	rjmp	.+4      	; 0x340 <writeLcdF+0xac>
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	93 df       	rcall	.-218    	; 0x266 <lcdSid>
     340:	d6 95       	lsr	r29
     342:	c7 95       	ror	r28
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	95 df       	rcall	.-214    	; 0x272 <lcdSclk>
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	93 df       	rcall	.-218    	; 0x272 <lcdSclk>
     34c:	01 50       	subi	r16, 0x01	; 1
     34e:	11 09       	sbc	r17, r1
     350:	71 f7       	brne	.-36     	; 0x32e <writeLcdF+0x9a>
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	88 df       	rcall	.-240    	; 0x266 <lcdSid>
     356:	c4 e0       	ldi	r28, 0x04	; 4
     358:	d0 e0       	ldi	r29, 0x00	; 0
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	8a df       	rcall	.-236    	; 0x272 <lcdSclk>
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	88 df       	rcall	.-240    	; 0x272 <lcdSclk>
     362:	21 97       	sbiw	r28, 0x01	; 1
     364:	d1 f7       	brne	.-12     	; 0x35a <writeLcdF+0xc6>
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	7e df       	rcall	.-260    	; 0x266 <lcdSid>
     36a:	87 ec       	ldi	r24, 0xC7	; 199
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	f1 f7       	brne	.-4      	; 0x36e <writeLcdF+0xda>
     372:	00 c0       	rjmp	.+0      	; 0x374 <writeLcdF+0xe0>
     374:	00 00       	nop
     376:	df 91       	pop	r29
     378:	cf 91       	pop	r28
     37a:	1f 91       	pop	r17
     37c:	0f 91       	pop	r16
     37e:	ff 90       	pop	r15
     380:	ef 90       	pop	r14
     382:	08 95       	ret

00000384 <lcdWriteText>:
     384:	1f 93       	push	r17
     386:	cf 93       	push	r28
     388:	df 93       	push	r29
     38a:	cd b7       	in	r28, 0x3d	; 61
     38c:	de b7       	in	r29, 0x3e	; 62
     38e:	65 97       	sbiw	r28, 0x15	; 21
     390:	0f b6       	in	r0, 0x3f	; 63
     392:	f8 94       	cli
     394:	de bf       	out	0x3e, r29	; 62
     396:	0f be       	out	0x3f, r0	; 63
     398:	cd bf       	out	0x3d, r28	; 61
     39a:	9e 01       	movw	r18, r28
     39c:	20 5e       	subi	r18, 0xE0	; 224
     39e:	3f 4f       	sbci	r19, 0xFF	; 255
     3a0:	4e 8d       	ldd	r20, Y+30	; 0x1e
     3a2:	5f 8d       	ldd	r21, Y+31	; 0x1f
     3a4:	65 e1       	ldi	r22, 0x15	; 21
     3a6:	70 e0       	ldi	r23, 0x00	; 0
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	c7 d4       	rcall	.+2446   	; 0xd3c <vsnprintf>
     3ae:	6d 8d       	ldd	r22, Y+29	; 0x1d
     3b0:	8c 8d       	ldd	r24, Y+28	; 0x1c
     3b2:	90 e2       	ldi	r25, 0x20	; 32
     3b4:	89 9f       	mul	r24, r25
     3b6:	60 0d       	add	r22, r0
     3b8:	11 24       	eor	r1, r1
     3ba:	60 68       	ori	r22, 0x80	; 128
     3bc:	70 e0       	ldi	r23, 0x00	; 0
     3be:	83 e4       	ldi	r24, 0x43	; 67
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	68 df       	rcall	.-304    	; 0x294 <writeLcdF>
     3c4:	69 81       	ldd	r22, Y+1	; 0x01
     3c6:	66 23       	and	r22, r22
     3c8:	79 f0       	breq	.+30     	; 0x3e8 <lcdWriteText+0x64>
     3ca:	10 e0       	ldi	r17, 0x00	; 0
     3cc:	1f 5f       	subi	r17, 0xFF	; 255
     3ce:	70 e0       	ldi	r23, 0x00	; 0
     3d0:	84 e4       	ldi	r24, 0x44	; 68
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	5f df       	rcall	.-322    	; 0x294 <writeLcdF>
     3d6:	e1 e0       	ldi	r30, 0x01	; 1
     3d8:	f0 e0       	ldi	r31, 0x00	; 0
     3da:	ec 0f       	add	r30, r28
     3dc:	fd 1f       	adc	r31, r29
     3de:	e1 0f       	add	r30, r17
     3e0:	f1 1d       	adc	r31, r1
     3e2:	60 81       	ld	r22, Z
     3e4:	61 11       	cpse	r22, r1
     3e6:	f2 cf       	rjmp	.-28     	; 0x3cc <lcdWriteText+0x48>
     3e8:	65 96       	adiw	r28, 0x15	; 21
     3ea:	0f b6       	in	r0, 0x3f	; 63
     3ec:	f8 94       	cli
     3ee:	de bf       	out	0x3e, r29	; 62
     3f0:	0f be       	out	0x3f, r0	; 63
     3f2:	cd bf       	out	0x3d, r28	; 61
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	1f 91       	pop	r17
     3fa:	08 95       	ret

000003fc <lcdWriteZahl>:
     3fc:	2f 92       	push	r2
     3fe:	3f 92       	push	r3
     400:	4f 92       	push	r4
     402:	5f 92       	push	r5
     404:	6f 92       	push	r6
     406:	7f 92       	push	r7
     408:	8f 92       	push	r8
     40a:	9f 92       	push	r9
     40c:	af 92       	push	r10
     40e:	bf 92       	push	r11
     410:	cf 92       	push	r12
     412:	df 92       	push	r13
     414:	ef 92       	push	r14
     416:	ff 92       	push	r15
     418:	0f 93       	push	r16
     41a:	1f 93       	push	r17
     41c:	cf 93       	push	r28
     41e:	df 93       	push	r29
     420:	cd b7       	in	r28, 0x3d	; 61
     422:	de b7       	in	r29, 0x3e	; 62
     424:	e3 97       	sbiw	r28, 0x33	; 51
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	f8 94       	cli
     42a:	de bf       	out	0x3e, r29	; 62
     42c:	0f be       	out	0x3f, r0	; 63
     42e:	cd bf       	out	0x3d, r28	; 61
     430:	8a ab       	std	Y+50, r24	; 0x32
     432:	6b ab       	std	Y+51, r22	; 0x33
     434:	ed a6       	std	Y+45, r14	; 0x2d
     436:	fe a6       	std	Y+46, r15	; 0x2e
     438:	70 2e       	mov	r7, r16
     43a:	61 2e       	mov	r6, r17
     43c:	52 2e       	mov	r5, r18
     43e:	43 2e       	mov	r4, r19
     440:	cf a6       	std	Y+47, r12	; 0x2f
     442:	a8 aa       	std	Y+48, r10	; 0x30
     444:	8c 2d       	mov	r24, r12
     446:	8a 0d       	add	r24, r10
     448:	89 ab       	std	Y+49, r24	; 0x31
     44a:	85 31       	cpi	r24, 0x15	; 21
     44c:	70 f0       	brcs	.+28     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     44e:	86 e1       	ldi	r24, 0x16	; 22
     450:	92 e0       	ldi	r25, 0x02	; 2
     452:	9f 93       	push	r25
     454:	8f 93       	push	r24
     456:	9b a9       	ldd	r25, Y+51	; 0x33
     458:	9f 93       	push	r25
     45a:	ea a9       	ldd	r30, Y+50	; 0x32
     45c:	ef 93       	push	r30
     45e:	92 df       	rcall	.-220    	; 0x384 <lcdWriteText>
     460:	0f 90       	pop	r0
     462:	0f 90       	pop	r0
     464:	0f 90       	pop	r0
     466:	0f 90       	pop	r0
     468:	a8 c0       	rjmp	.+336    	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
     46a:	4e 01       	movw	r8, r28
     46c:	f5 e1       	ldi	r31, 0x15	; 21
     46e:	8f 0e       	add	r8, r31
     470:	91 1c       	adc	r9, r1
     472:	ce 01       	movw	r24, r28
     474:	01 96       	adiw	r24, 0x01	; 1
     476:	9c a7       	std	Y+44, r25	; 0x2c
     478:	8b a7       	std	Y+43, r24	; 0x2b
     47a:	24 2e       	mov	r2, r20
     47c:	35 2e       	mov	r3, r21
     47e:	0f 2e       	mov	r0, r31
     480:	fa e0       	ldi	r31, 0x0A	; 10
     482:	af 2e       	mov	r10, r31
     484:	f0 2d       	mov	r31, r0
     486:	b1 2c       	mov	r11, r1
     488:	c1 2c       	mov	r12, r1
     48a:	d1 2c       	mov	r13, r1
     48c:	e1 2c       	mov	r14, r1
     48e:	f1 2c       	mov	r15, r1
     490:	00 e0       	ldi	r16, 0x00	; 0
     492:	10 e0       	ldi	r17, 0x00	; 0
     494:	2d a5       	ldd	r18, Y+45	; 0x2d
     496:	3e a5       	ldd	r19, Y+46	; 0x2e
     498:	47 2d       	mov	r20, r7
     49a:	56 2d       	mov	r21, r6
     49c:	65 2d       	mov	r22, r5
     49e:	74 2d       	mov	r23, r4
     4a0:	82 2d       	mov	r24, r2
     4a2:	93 2d       	mov	r25, r3
     4a4:	d8 d3       	rcall	.+1968   	; 0xc56 <__umoddi3>
     4a6:	20 5d       	subi	r18, 0xD0	; 208
     4a8:	f4 01       	movw	r30, r8
     4aa:	22 93       	st	-Z, r18
     4ac:	4f 01       	movw	r8, r30
     4ae:	2d a5       	ldd	r18, Y+45	; 0x2d
     4b0:	3e a5       	ldd	r19, Y+46	; 0x2e
     4b2:	47 2d       	mov	r20, r7
     4b4:	56 2d       	mov	r21, r6
     4b6:	65 2d       	mov	r22, r5
     4b8:	74 2d       	mov	r23, r4
     4ba:	82 2d       	mov	r24, r2
     4bc:	93 2d       	mov	r25, r3
     4be:	cd d3       	rcall	.+1946   	; 0xc5a <__udivdi3>
     4c0:	2d a7       	std	Y+45, r18	; 0x2d
     4c2:	3e a7       	std	Y+46, r19	; 0x2e
     4c4:	74 2e       	mov	r7, r20
     4c6:	65 2e       	mov	r6, r21
     4c8:	56 2e       	mov	r5, r22
     4ca:	47 2e       	mov	r4, r23
     4cc:	28 2e       	mov	r2, r24
     4ce:	39 2e       	mov	r3, r25
     4d0:	8b a5       	ldd	r24, Y+43	; 0x2b
     4d2:	9c a5       	ldd	r25, Y+44	; 0x2c
     4d4:	88 15       	cp	r24, r8
     4d6:	99 05       	cpc	r25, r9
     4d8:	91 f6       	brne	.-92     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     4da:	84 e1       	ldi	r24, 0x14	; 20
     4dc:	99 a9       	ldd	r25, Y+49	; 0x31
     4de:	89 1b       	sub	r24, r25
     4e0:	ef a5       	ldd	r30, Y+47	; 0x2f
     4e2:	ee 23       	and	r30, r30
     4e4:	89 f0       	breq	.+34     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
     4e6:	fe 01       	movw	r30, r28
     4e8:	75 96       	adiw	r30, 0x15	; 21
     4ea:	2f a5       	ldd	r18, Y+47	; 0x2f
     4ec:	28 0f       	add	r18, r24
     4ee:	a1 e0       	ldi	r26, 0x01	; 1
     4f0:	b0 e0       	ldi	r27, 0x00	; 0
     4f2:	ac 0f       	add	r26, r28
     4f4:	bd 1f       	adc	r27, r29
     4f6:	a8 0f       	add	r26, r24
     4f8:	b1 1d       	adc	r27, r1
     4fa:	9c 91       	ld	r25, X
     4fc:	91 93       	st	Z+, r25
     4fe:	8f 5f       	subi	r24, 0xFF	; 255
     500:	82 13       	cpse	r24, r18
     502:	f5 cf       	rjmp	.-22     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
     504:	3f a5       	ldd	r19, Y+47	; 0x2f
     506:	02 c0       	rjmp	.+4      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     508:	28 2f       	mov	r18, r24
     50a:	3f a5       	ldd	r19, Y+47	; 0x2f
     50c:	f8 a9       	ldd	r31, Y+48	; 0x30
     50e:	ff 23       	and	r31, r31
     510:	f1 f0       	breq	.+60     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
     512:	fe 01       	movw	r30, r28
     514:	e3 0f       	add	r30, r19
     516:	f1 1d       	adc	r31, r1
     518:	8e e2       	ldi	r24, 0x2E	; 46
     51a:	85 8b       	std	Z+21, r24	; 0x15
     51c:	91 e0       	ldi	r25, 0x01	; 1
     51e:	93 0f       	add	r25, r19
     520:	38 a9       	ldd	r19, Y+48	; 0x30
     522:	39 0f       	add	r19, r25
     524:	89 2f       	mov	r24, r25
     526:	29 1b       	sub	r18, r25
     528:	e5 e1       	ldi	r30, 0x15	; 21
     52a:	f0 e0       	ldi	r31, 0x00	; 0
     52c:	ec 0f       	add	r30, r28
     52e:	fd 1f       	adc	r31, r29
     530:	e8 0f       	add	r30, r24
     532:	f1 1d       	adc	r31, r1
     534:	92 2f       	mov	r25, r18
     536:	98 0f       	add	r25, r24
     538:	a1 e0       	ldi	r26, 0x01	; 1
     53a:	b0 e0       	ldi	r27, 0x00	; 0
     53c:	ac 0f       	add	r26, r28
     53e:	bd 1f       	adc	r27, r29
     540:	a9 0f       	add	r26, r25
     542:	b1 1d       	adc	r27, r1
     544:	9c 91       	ld	r25, X
     546:	90 83       	st	Z, r25
     548:	8f 5f       	subi	r24, 0xFF	; 255
     54a:	38 13       	cpse	r19, r24
     54c:	ed cf       	rjmp	.-38     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
     54e:	fe 01       	movw	r30, r28
     550:	e3 0f       	add	r30, r19
     552:	f1 1d       	adc	r31, r1
     554:	15 8a       	std	Z+21, r1	; 0x15
     556:	8d 89       	ldd	r24, Y+21	; 0x15
     558:	80 33       	cpi	r24, 0x30	; 48
     55a:	11 f5       	brne	.+68     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
     55c:	8f a5       	ldd	r24, Y+47	; 0x2f
     55e:	48 2f       	mov	r20, r24
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	41 50       	subi	r20, 0x01	; 1
     564:	51 09       	sbc	r21, r1
     566:	14 16       	cp	r1, r20
     568:	15 06       	cpc	r1, r21
     56a:	d4 f4       	brge	.+52     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	60 e2       	ldi	r22, 0x20	; 32
     574:	2f 5f       	subi	r18, 0xFF	; 255
     576:	e5 e1       	ldi	r30, 0x15	; 21
     578:	f0 e0       	ldi	r31, 0x00	; 0
     57a:	ec 0f       	add	r30, r28
     57c:	fd 1f       	adc	r31, r29
     57e:	e8 0f       	add	r30, r24
     580:	f9 1f       	adc	r31, r25
     582:	60 83       	st	Z, r22
     584:	82 2f       	mov	r24, r18
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	e5 e1       	ldi	r30, 0x15	; 21
     58a:	f0 e0       	ldi	r31, 0x00	; 0
     58c:	ec 0f       	add	r30, r28
     58e:	fd 1f       	adc	r31, r29
     590:	e8 0f       	add	r30, r24
     592:	f9 1f       	adc	r31, r25
     594:	30 81       	ld	r19, Z
     596:	30 33       	cpi	r19, 0x30	; 48
     598:	19 f4       	brne	.+6      	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
     59a:	84 17       	cp	r24, r20
     59c:	95 07       	cpc	r25, r21
     59e:	54 f3       	brlt	.-44     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
     5a0:	ce 01       	movw	r24, r28
     5a2:	45 96       	adiw	r24, 0x15	; 21
     5a4:	9f 93       	push	r25
     5a6:	8f 93       	push	r24
     5a8:	9b a9       	ldd	r25, Y+51	; 0x33
     5aa:	9f 93       	push	r25
     5ac:	ea a9       	ldd	r30, Y+50	; 0x32
     5ae:	ef 93       	push	r30
     5b0:	e9 de       	rcall	.-558    	; 0x384 <lcdWriteText>
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	0f 90       	pop	r0
     5ba:	e3 96       	adiw	r28, 0x33	; 51
     5bc:	0f b6       	in	r0, 0x3f	; 63
     5be:	f8 94       	cli
     5c0:	de bf       	out	0x3e, r29	; 62
     5c2:	0f be       	out	0x3f, r0	; 63
     5c4:	cd bf       	out	0x3d, r28	; 61
     5c6:	df 91       	pop	r29
     5c8:	cf 91       	pop	r28
     5ca:	1f 91       	pop	r17
     5cc:	0f 91       	pop	r16
     5ce:	ff 90       	pop	r15
     5d0:	ef 90       	pop	r14
     5d2:	df 90       	pop	r13
     5d4:	cf 90       	pop	r12
     5d6:	bf 90       	pop	r11
     5d8:	af 90       	pop	r10
     5da:	9f 90       	pop	r9
     5dc:	8f 90       	pop	r8
     5de:	7f 90       	pop	r7
     5e0:	6f 90       	pop	r6
     5e2:	5f 90       	pop	r5
     5e4:	4f 90       	pop	r4
     5e6:	3f 90       	pop	r3
     5e8:	2f 90       	pop	r2
     5ea:	08 95       	ret

000005ec <lcdClear>:
     5ec:	61 e0       	ldi	r22, 0x01	; 1
     5ee:	70 e0       	ldi	r23, 0x00	; 0
     5f0:	83 e4       	ldi	r24, 0x43	; 67
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	4f de       	rcall	.-866    	; 0x294 <writeLcdF>
     5f6:	8f e3       	ldi	r24, 0x3F	; 63
     5f8:	9f e1       	ldi	r25, 0x1F	; 31
     5fa:	01 97       	sbiw	r24, 0x01	; 1
     5fc:	f1 f7       	brne	.-4      	; 0x5fa <lcdClear+0xe>
     5fe:	00 c0       	rjmp	.+0      	; 0x600 <lcdClear+0x14>
     600:	00 00       	nop
     602:	8e e3       	ldi	r24, 0x3E	; 62
     604:	92 e0       	ldi	r25, 0x02	; 2
     606:	9f 93       	push	r25
     608:	8f 93       	push	r24
     60a:	1f 92       	push	r1
     60c:	1f 92       	push	r1
     60e:	ba de       	rcall	.-652    	; 0x384 <lcdWriteText>
     610:	0f 90       	pop	r0
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	0f 90       	pop	r0
     618:	08 95       	ret

0000061a <initLcd>:
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	2a de       	rcall	.-940    	; 0x272 <lcdSclk>
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	22 de       	rcall	.-956    	; 0x266 <lcdSid>
     622:	64 e3       	ldi	r22, 0x34	; 52
     624:	70 e0       	ldi	r23, 0x00	; 0
     626:	83 e4       	ldi	r24, 0x43	; 67
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	34 de       	rcall	.-920    	; 0x294 <writeLcdF>
     62c:	69 e0       	ldi	r22, 0x09	; 9
     62e:	70 e0       	ldi	r23, 0x00	; 0
     630:	83 e4       	ldi	r24, 0x43	; 67
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	2f de       	rcall	.-930    	; 0x294 <writeLcdF>
     636:	60 e3       	ldi	r22, 0x30	; 48
     638:	70 e0       	ldi	r23, 0x00	; 0
     63a:	83 e4       	ldi	r24, 0x43	; 67
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	2a de       	rcall	.-940    	; 0x294 <writeLcdF>
     640:	6c e0       	ldi	r22, 0x0C	; 12
     642:	70 e0       	ldi	r23, 0x00	; 0
     644:	83 e4       	ldi	r24, 0x43	; 67
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	25 de       	rcall	.-950    	; 0x294 <writeLcdF>
     64a:	d0 df       	rcall	.-96     	; 0x5ec <lcdClear>
     64c:	67 e0       	ldi	r22, 0x07	; 7
     64e:	70 e0       	ldi	r23, 0x00	; 0
     650:	83 e4       	ldi	r24, 0x43	; 67
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	1f de       	rcall	.-962    	; 0x294 <writeLcdF>
     656:	80 e0       	ldi	r24, 0x00	; 0
     658:	12 ce       	rjmp	.-988    	; 0x27e <lcdLight>
     65a:	08 95       	ret

0000065c <initBoard>:
     65c:	4f 92       	push	r4
     65e:	5f 92       	push	r5
     660:	6f 92       	push	r6
     662:	7f 92       	push	r7
     664:	8f 92       	push	r8
     666:	9f 92       	push	r9
     668:	af 92       	push	r10
     66a:	bf 92       	push	r11
     66c:	cf 92       	push	r12
     66e:	df 92       	push	r13
     670:	ef 92       	push	r14
     672:	ff 92       	push	r15
     674:	0f 93       	push	r16
     676:	1f 93       	push	r17
     678:	cf 93       	push	r28
     67a:	df 93       	push	r29
     67c:	c8 2f       	mov	r28, r24
     67e:	85 b7       	in	r24, 0x35	; 53
     680:	85 bf       	out	0x35, r24	; 53
     682:	12 b8       	out	0x02, r1	; 2
     684:	8f ef       	ldi	r24, 0xFF	; 255
     686:	81 b9       	out	0x01, r24	; 1
     688:	15 b8       	out	0x05, r1	; 5
     68a:	84 b9       	out	0x04, r24	; 4
     68c:	88 b9       	out	0x08, r24	; 8
     68e:	17 b8       	out	0x07, r1	; 7
     690:	8b b9       	out	0x0b, r24	; 11
     692:	1a b8       	out	0x0a, r1	; 10
     694:	8e b9       	out	0x0e, r24	; 14
     696:	1d b8       	out	0x0d, r1	; 13
     698:	72 98       	cbi	0x0e, 2	; 14
     69a:	11 ba       	out	0x11, r1	; 17
     69c:	10 ba       	out	0x10, r1	; 16
     69e:	94 e0       	ldi	r25, 0x04	; 4
     6a0:	94 bb       	out	0x14, r25	; 20
     6a2:	93 b3       	in	r25, 0x13	; 19
     6a4:	93 60       	ori	r25, 0x03	; 3
     6a6:	93 bb       	out	0x13, r25	; 19
     6a8:	9d 9a       	sbi	0x13, 5	; 19
     6aa:	97 ec       	ldi	r25, 0xC7	; 199
     6ac:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     6b0:	98 e3       	ldi	r25, 0x38	; 56
     6b2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     6b6:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     6ba:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     6be:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     6c2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     6c6:	8c e3       	ldi	r24, 0x3C	; 60
     6c8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     6cc:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     6d0:	78 94       	sei
     6d2:	73 dd       	rcall	.-1306   	; 0x1ba <startSystemTimeMs>
     6d4:	a2 df       	rcall	.-188    	; 0x61a <initLcd>
     6d6:	7b dd       	rcall	.-1290   	; 0x1ce <initAdc>
     6d8:	b2 dd       	rcall	.-1180   	; 0x23e <initRgb>
     6da:	cc 23       	and	r28, r28
     6dc:	09 f4       	brne	.+2      	; 0x6e0 <initBoard+0x84>
     6de:	b8 c0       	rjmp	.+368    	; 0x850 <initBoard+0x1f4>
     6e0:	8f ef       	ldi	r24, 0xFF	; 255
     6e2:	cd dd       	rcall	.-1126   	; 0x27e <lcdLight>
     6e4:	40 e0       	ldi	r20, 0x00	; 0
     6e6:	50 e0       	ldi	r21, 0x00	; 0
     6e8:	6f ef       	ldi	r22, 0xFF	; 255
     6ea:	73 e0       	ldi	r23, 0x03	; 3
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	8f dd       	rcall	.-1250   	; 0x210 <rgbWrite>
     6f2:	8b e2       	ldi	r24, 0x2B	; 43
     6f4:	92 e0       	ldi	r25, 0x02	; 2
     6f6:	9f 93       	push	r25
     6f8:	8f 93       	push	r24
     6fa:	1f 92       	push	r1
     6fc:	1f 92       	push	r1
     6fe:	42 de       	rcall	.-892    	; 0x384 <lcdWriteText>
     700:	80 e4       	ldi	r24, 0x40	; 64
     702:	92 e0       	ldi	r25, 0x02	; 2
     704:	9f 93       	push	r25
     706:	8f 93       	push	r24
     708:	1f 92       	push	r1
     70a:	81 e0       	ldi	r24, 0x01	; 1
     70c:	8f 93       	push	r24
     70e:	3a de       	rcall	.-908    	; 0x384 <lcdWriteText>
     710:	86 e1       	ldi	r24, 0x16	; 22
     712:	92 e0       	ldi	r25, 0x02	; 2
     714:	9f 93       	push	r25
     716:	8f 93       	push	r24
     718:	1f 92       	push	r1
     71a:	82 e0       	ldi	r24, 0x02	; 2
     71c:	8f 93       	push	r24
     71e:	32 de       	rcall	.-924    	; 0x384 <lcdWriteText>
     720:	85 e5       	ldi	r24, 0x55	; 85
     722:	92 e0       	ldi	r25, 0x02	; 2
     724:	9f 93       	push	r25
     726:	8f 93       	push	r24
     728:	1f 92       	push	r1
     72a:	83 e0       	ldi	r24, 0x03	; 3
     72c:	8f 93       	push	r24
     72e:	2a de       	rcall	.-940    	; 0x384 <lcdWriteText>
     730:	8d b7       	in	r24, 0x3d	; 61
     732:	9e b7       	in	r25, 0x3e	; 62
     734:	40 96       	adiw	r24, 0x10	; 16
     736:	0f b6       	in	r0, 0x3f	; 63
     738:	f8 94       	cli
     73a:	9e bf       	out	0x3e, r25	; 62
     73c:	0f be       	out	0x3f, r0	; 63
     73e:	8d bf       	out	0x3d, r24	; 61
     740:	88 24       	eor	r8, r8
     742:	83 94       	inc	r8
     744:	c0 e0       	ldi	r28, 0x00	; 0
     746:	71 2c       	mov	r7, r1
     748:	99 24       	eor	r9, r9
     74a:	93 94       	inc	r9
     74c:	d0 e0       	ldi	r29, 0x00	; 0
     74e:	cc 24       	eor	r12, r12
     750:	c3 94       	inc	r12
     752:	d1 2c       	mov	r13, r1
     754:	e1 2c       	mov	r14, r1
     756:	68 94       	set
     758:	ff 24       	eor	r15, r15
     75a:	f7 f8       	bld	r15, 7
     75c:	66 24       	eor	r6, r6
     75e:	63 94       	inc	r6
     760:	51 2c       	mov	r5, r1
     762:	09 e0       	ldi	r16, 0x09	; 9
     764:	11 e0       	ldi	r17, 0x01	; 1
     766:	0f 2e       	mov	r0, r31
     768:	fa e6       	ldi	r31, 0x6A	; 106
     76a:	af 2e       	mov	r10, r31
     76c:	f2 e0       	ldi	r31, 0x02	; 2
     76e:	bf 2e       	mov	r11, r31
     770:	f0 2d       	mov	r31, r0
     772:	0f 2e       	mov	r0, r31
     774:	f3 e0       	ldi	r31, 0x03	; 3
     776:	4f 2e       	mov	r4, r31
     778:	f0 2d       	mov	r31, r0
     77a:	99 20       	and	r9, r9
     77c:	49 f0       	breq	.+18     	; 0x790 <initBoard+0x134>
     77e:	c7 01       	movw	r24, r14
     780:	0d 2e       	mov	r0, r29
     782:	02 c0       	rjmp	.+4      	; 0x788 <initBoard+0x12c>
     784:	96 95       	lsr	r25
     786:	87 95       	ror	r24
     788:	0a 94       	dec	r0
     78a:	e2 f7       	brpl	.-8      	; 0x784 <initBoard+0x128>
     78c:	11 dd       	rcall	.-1502   	; 0x1b0 <ledWriteAll>
     78e:	08 c0       	rjmp	.+16     	; 0x7a0 <initBoard+0x144>
     790:	c6 01       	movw	r24, r12
     792:	0d 2e       	mov	r0, r29
     794:	02 c0       	rjmp	.+4      	; 0x79a <initBoard+0x13e>
     796:	88 0f       	add	r24, r24
     798:	99 1f       	adc	r25, r25
     79a:	0a 94       	dec	r0
     79c:	e2 f7       	brpl	.-8      	; 0x796 <initBoard+0x13a>
     79e:	08 dd       	rcall	.-1520   	; 0x1b0 <ledWriteAll>
     7a0:	df 5f       	subi	r29, 0xFF	; 255
     7a2:	d1 31       	cpi	r29, 0x11	; 17
     7a4:	28 f0       	brcs	.+10     	; 0x7b0 <initBoard+0x154>
     7a6:	86 2d       	mov	r24, r6
     7a8:	91 10       	cpse	r9, r1
     7aa:	85 2d       	mov	r24, r5
     7ac:	98 2e       	mov	r9, r24
     7ae:	d0 e0       	ldi	r29, 0x00	; 0
     7b0:	88 20       	and	r8, r8
     7b2:	11 f0       	breq	.+4      	; 0x7b8 <initBoard+0x15c>
     7b4:	ce 5f       	subi	r28, 0xFE	; 254
     7b6:	01 c0       	rjmp	.+2      	; 0x7ba <initBoard+0x15e>
     7b8:	c2 50       	subi	r28, 0x02	; 2
     7ba:	8c 2f       	mov	r24, r28
     7bc:	60 dd       	rcall	.-1344   	; 0x27e <lcdLight>
     7be:	ce 3f       	cpi	r28, 0xFE	; 254
     7c0:	21 f0       	breq	.+8      	; 0x7ca <initBoard+0x16e>
     7c2:	c8 37       	cpi	r28, 0x78	; 120
     7c4:	19 f4       	brne	.+6      	; 0x7cc <initBoard+0x170>
     7c6:	86 2c       	mov	r8, r6
     7c8:	01 c0       	rjmp	.+2      	; 0x7cc <initBoard+0x170>
     7ca:	85 2c       	mov	r8, r5
     7cc:	71 10       	cpse	r7, r1
     7ce:	3b c0       	rjmp	.+118    	; 0x846 <initBoard+0x1ea>
     7d0:	f8 01       	movw	r30, r16
     7d2:	80 81       	ld	r24, Z
     7d4:	83 7c       	andi	r24, 0xC3	; 195
     7d6:	91 f0       	breq	.+36     	; 0x7fc <initBoard+0x1a0>
     7d8:	40 e0       	ldi	r20, 0x00	; 0
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	66 e2       	ldi	r22, 0x26	; 38
     7de:	72 e0       	ldi	r23, 0x02	; 2
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	93 e0       	ldi	r25, 0x03	; 3
     7e4:	15 dd       	rcall	.-1494   	; 0x210 <rgbWrite>
     7e6:	bf 92       	push	r11
     7e8:	af 92       	push	r10
     7ea:	1f 92       	push	r1
     7ec:	4f 92       	push	r4
     7ee:	ca dd       	rcall	.-1132   	; 0x384 <lcdWriteText>
     7f0:	0f 90       	pop	r0
     7f2:	0f 90       	pop	r0
     7f4:	0f 90       	pop	r0
     7f6:	0f 90       	pop	r0
     7f8:	76 2c       	mov	r7, r6
     7fa:	25 c0       	rjmp	.+74     	; 0x846 <initBoard+0x1ea>
     7fc:	8f ef       	ldi	r24, 0xFF	; 255
     7fe:	9c e7       	ldi	r25, 0x7C	; 124
     800:	01 97       	sbiw	r24, 0x01	; 1
     802:	f1 f7       	brne	.-4      	; 0x800 <initBoard+0x1a4>
     804:	00 c0       	rjmp	.+0      	; 0x806 <initBoard+0x1aa>
     806:	00 00       	nop
     808:	b8 cf       	rjmp	.-144    	; 0x77a <initBoard+0x11e>
     80a:	f0 de       	rcall	.-544    	; 0x5ec <lcdClear>
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	37 dd       	rcall	.-1426   	; 0x27e <lcdLight>
     810:	80 e0       	ldi	r24, 0x00	; 0
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	cd dc       	rcall	.-1638   	; 0x1b0 <ledWriteAll>
     816:	40 e0       	ldi	r20, 0x00	; 0
     818:	50 e0       	ldi	r21, 0x00	; 0
     81a:	60 e0       	ldi	r22, 0x00	; 0
     81c:	70 e0       	ldi	r23, 0x00	; 0
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	f6 dc       	rcall	.-1556   	; 0x210 <rgbWrite>
     824:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <systemTimeMs>
     828:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <systemTimeMs+0x1>
     82c:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <systemTimeMs+0x2>
     830:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <systemTimeMs+0x3>
     834:	10 92 d5 02 	sts	0x02D5, r1	; 0x8002d5 <systemTimeMs+0x4>
     838:	10 92 d6 02 	sts	0x02D6, r1	; 0x8002d6 <systemTimeMs+0x5>
     83c:	10 92 d7 02 	sts	0x02D7, r1	; 0x8002d7 <systemTimeMs+0x6>
     840:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <systemTimeMs+0x7>
     844:	05 c0       	rjmp	.+10     	; 0x850 <initBoard+0x1f4>
     846:	f8 01       	movw	r30, r16
     848:	80 81       	ld	r24, Z
     84a:	83 7c       	andi	r24, 0xC3	; 195
     84c:	b9 f6       	brne	.-82     	; 0x7fc <initBoard+0x1a0>
     84e:	dd cf       	rjmp	.-70     	; 0x80a <initBoard+0x1ae>
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	ff 90       	pop	r15
     85a:	ef 90       	pop	r14
     85c:	df 90       	pop	r13
     85e:	cf 90       	pop	r12
     860:	bf 90       	pop	r11
     862:	af 90       	pop	r10
     864:	9f 90       	pop	r9
     866:	8f 90       	pop	r8
     868:	7f 90       	pop	r7
     86a:	6f 90       	pop	r6
     86c:	5f 90       	pop	r5
     86e:	4f 90       	pop	r4
     870:	08 95       	ret

00000872 <lcdLog>:
     872:	6f 92       	push	r6
     874:	7f 92       	push	r7
     876:	8f 92       	push	r8
     878:	9f 92       	push	r9
     87a:	af 92       	push	r10
     87c:	bf 92       	push	r11
     87e:	cf 92       	push	r12
     880:	df 92       	push	r13
     882:	ef 92       	push	r14
     884:	ff 92       	push	r15
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	cd b7       	in	r28, 0x3d	; 61
     890:	de b7       	in	r29, 0x3e	; 62
     892:	60 97       	sbiw	r28, 0x10	; 16
     894:	0f b6       	in	r0, 0x3f	; 63
     896:	f8 94       	cli
     898:	de bf       	out	0x3e, r29	; 62
     89a:	0f be       	out	0x3f, r0	; 63
     89c:	cd bf       	out	0x3d, r28	; 61
     89e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     8a2:	88 23       	and	r24, r24
     8a4:	b1 f1       	breq	.+108    	; 0x912 <lcdLog+0xa0>
     8a6:	a2 de       	rcall	.-700    	; 0x5ec <lcdClear>
     8a8:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
     8ac:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <nummer.2616+0x1>
     8b0:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <nummer.2616>
     8b4:	0f 2e       	mov	r0, r31
     8b6:	f6 ec       	ldi	r31, 0xC6	; 198
     8b8:	8f 2e       	mov	r8, r31
     8ba:	f2 e0       	ldi	r31, 0x02	; 2
     8bc:	9f 2e       	mov	r9, r31
     8be:	f0 2d       	mov	r31, r0
     8c0:	06 e8       	ldi	r16, 0x86	; 134
     8c2:	12 e0       	ldi	r17, 0x02	; 2
     8c4:	a0 e0       	ldi	r26, 0x00	; 0
     8c6:	b0 e0       	ldi	r27, 0x00	; 0
     8c8:	40 e2       	ldi	r20, 0x20	; 32
     8ca:	bd 01       	movw	r22, r26
     8cc:	f4 01       	movw	r30, r8
     8ce:	11 92       	st	Z+, r1
     8d0:	11 92       	st	Z+, r1
     8d2:	4f 01       	movw	r8, r30
     8d4:	f8 01       	movw	r30, r16
     8d6:	41 93       	st	Z+, r20
     8d8:	81 e0       	ldi	r24, 0x01	; 1
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	13 c0       	rjmp	.+38     	; 0x904 <lcdLog+0x92>
     8de:	62 95       	swap	r22
     8e0:	72 95       	swap	r23
     8e2:	70 7f       	andi	r23, 0xF0	; 240
     8e4:	76 27       	eor	r23, r22
     8e6:	60 7f       	andi	r22, 0xF0	; 240
     8e8:	76 27       	eor	r23, r22
     8ea:	6a 57       	subi	r22, 0x7A	; 122
     8ec:	7d 4f       	sbci	r23, 0xFD	; 253
     8ee:	fb 01       	movw	r30, r22
     8f0:	e2 0f       	add	r30, r18
     8f2:	f3 1f       	adc	r31, r19
     8f4:	10 82       	st	Z, r1
     8f6:	11 96       	adiw	r26, 0x01	; 1
     8f8:	00 5f       	subi	r16, 0xF0	; 240
     8fa:	1f 4f       	sbci	r17, 0xFF	; 255
     8fc:	a4 30       	cpi	r26, 0x04	; 4
     8fe:	b1 05       	cpc	r27, r1
     900:	21 f7       	brne	.-56     	; 0x8ca <lcdLog+0x58>
     902:	07 c0       	rjmp	.+14     	; 0x912 <lcdLog+0xa0>
     904:	9c 01       	movw	r18, r24
     906:	41 93       	st	Z+, r20
     908:	01 96       	adiw	r24, 0x01	; 1
     90a:	80 31       	cpi	r24, 0x10	; 16
     90c:	91 05       	cpc	r25, r1
     90e:	d1 f7       	brne	.-12     	; 0x904 <lcdLog+0x92>
     910:	e6 cf       	rjmp	.-52     	; 0x8de <lcdLog+0x6c>
     912:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <nummer.2616>
     916:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <nummer.2616+0x1>
     91a:	01 96       	adiw	r24, 0x01	; 1
     91c:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <nummer.2616+0x1>
     920:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <nummer.2616>
     924:	9e 01       	movw	r18, r28
     926:	2c 5d       	subi	r18, 0xDC	; 220
     928:	3f 4f       	sbci	r19, 0xFF	; 255
     92a:	4a a1       	ldd	r20, Y+34	; 0x22
     92c:	5b a1       	ldd	r21, Y+35	; 0x23
     92e:	60 e1       	ldi	r22, 0x10	; 16
     930:	70 e0       	ldi	r23, 0x00	; 0
     932:	ce 01       	movw	r24, r28
     934:	01 96       	adiw	r24, 0x01	; 1
     936:	02 d2       	rcall	.+1028   	; 0xd3c <vsnprintf>
     938:	8e 01       	movw	r16, r28
     93a:	0f 5f       	subi	r16, 0xFF	; 255
     93c:	1f 4f       	sbci	r17, 0xFF	; 255
     93e:	4e 01       	movw	r8, r28
     940:	f1 e1       	ldi	r31, 0x11	; 17
     942:	8f 0e       	add	r8, r31
     944:	91 1c       	adc	r9, r1
     946:	f8 01       	movw	r30, r16
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	30 e2       	ldi	r19, 0x20	; 32
     94c:	21 e0       	ldi	r18, 0x01	; 1
     94e:	df 01       	movw	r26, r30
     950:	80 81       	ld	r24, Z
     952:	88 23       	and	r24, r24
     954:	19 f0       	breq	.+6      	; 0x95c <lcdLog+0xea>
     956:	99 23       	and	r25, r25
     958:	19 f0       	breq	.+6      	; 0x960 <lcdLog+0xee>
     95a:	01 c0       	rjmp	.+2      	; 0x95e <lcdLog+0xec>
     95c:	92 2f       	mov	r25, r18
     95e:	3c 93       	st	X, r19
     960:	31 96       	adiw	r30, 0x01	; 1
     962:	e8 15       	cp	r30, r8
     964:	f9 05       	cpc	r31, r9
     966:	99 f7       	brne	.-26     	; 0x94e <lcdLog+0xdc>
     968:	18 8a       	std	Y+16, r1	; 0x10
     96a:	66 e8       	ldi	r22, 0x86	; 134
     96c:	72 e0       	ldi	r23, 0x02	; 2
     96e:	ce 01       	movw	r24, r28
     970:	01 96       	adiw	r24, 0x01	; 1
     972:	db d1       	rcall	.+950    	; 0xd2a <strcmp>
     974:	88 23       	and	r24, r24
     976:	09 f4       	brne	.+2      	; 0x97a <lcdLog+0x108>
     978:	7e c0       	rjmp	.+252    	; 0xa76 <lcdLog+0x204>
     97a:	0f 2e       	mov	r0, r31
     97c:	fc ec       	ldi	r31, 0xCC	; 204
     97e:	6f 2e       	mov	r6, r31
     980:	f2 e0       	ldi	r31, 0x02	; 2
     982:	7f 2e       	mov	r7, r31
     984:	f0 2d       	mov	r31, r0
     986:	66 eb       	ldi	r22, 0xB6	; 182
     988:	72 e0       	ldi	r23, 0x02	; 2
     98a:	46 e8       	ldi	r20, 0x86	; 134
     98c:	52 e0       	ldi	r21, 0x02	; 2
     98e:	f3 01       	movw	r30, r6
     990:	92 91       	ld	r25, -Z
     992:	82 91       	ld	r24, -Z
     994:	3f 01       	movw	r6, r30
     996:	93 83       	std	Z+3, r25	; 0x03
     998:	82 83       	std	Z+2, r24	; 0x02
     99a:	db 01       	movw	r26, r22
     99c:	50 97       	sbiw	r26, 0x10	; 16
     99e:	9b 01       	movw	r18, r22
     9a0:	20 5f       	subi	r18, 0xF0	; 240
     9a2:	3f 4f       	sbci	r19, 0xFF	; 255
     9a4:	fb 01       	movw	r30, r22
     9a6:	8d 91       	ld	r24, X+
     9a8:	81 93       	st	Z+, r24
     9aa:	e2 17       	cp	r30, r18
     9ac:	f3 07       	cpc	r31, r19
     9ae:	d9 f7       	brne	.-10     	; 0x9a6 <lcdLog+0x134>
     9b0:	60 51       	subi	r22, 0x10	; 16
     9b2:	71 09       	sbc	r23, r1
     9b4:	64 17       	cp	r22, r20
     9b6:	75 07       	cpc	r23, r21
     9b8:	51 f7       	brne	.-44     	; 0x98e <lcdLog+0x11c>
     9ba:	f8 01       	movw	r30, r16
     9bc:	81 91       	ld	r24, Z+
     9be:	8f 01       	movw	r16, r30
     9c0:	fa 01       	movw	r30, r20
     9c2:	81 93       	st	Z+, r24
     9c4:	af 01       	movw	r20, r30
     9c6:	08 15       	cp	r16, r8
     9c8:	19 05       	cpc	r17, r9
     9ca:	b9 f7       	brne	.-18     	; 0x9ba <lcdLog+0x148>
     9cc:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <nummer.2616>
     9d0:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <nummer.2616+0x1>
     9d4:	90 93 c7 02 	sts	0x02C7, r25	; 0x8002c7 <lcdPrintNr.2614+0x1>
     9d8:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <lcdPrintNr.2614>
     9dc:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <lcdLogZeilen>
     9e0:	94 e0       	ldi	r25, 0x04	; 4
     9e2:	d9 2e       	mov	r13, r25
     9e4:	d8 1a       	sub	r13, r24
     9e6:	f3 e0       	ldi	r31, 0x03	; 3
     9e8:	fd 15       	cp	r31, r13
     9ea:	08 f4       	brcc	.+2      	; 0x9ee <lcdLog+0x17c>
     9ec:	5b c0       	rjmp	.+182    	; 0xaa4 <lcdLog+0x232>
     9ee:	83 e0       	ldi	r24, 0x03	; 3
     9f0:	b8 2e       	mov	r11, r24
     9f2:	bd 18       	sub	r11, r13
     9f4:	0f 2e       	mov	r0, r31
     9f6:	f5 e0       	ldi	r31, 0x05	; 5
     9f8:	6f 2e       	mov	r6, r31
     9fa:	f0 2d       	mov	r31, r0
     9fc:	0f 2e       	mov	r0, r31
     9fe:	ff e7       	ldi	r31, 0x7F	; 127
     a00:	8f 2e       	mov	r8, r31
     a02:	f2 e0       	ldi	r31, 0x02	; 2
     a04:	9f 2e       	mov	r9, r31
     a06:	f0 2d       	mov	r31, r0
     a08:	68 94       	set
     a0a:	77 24       	eor	r7, r7
     a0c:	72 f8       	bld	r7, 2
     a0e:	0b 2d       	mov	r16, r11
     a10:	10 e0       	ldi	r17, 0x00	; 0
     a12:	c8 01       	movw	r24, r16
     a14:	82 95       	swap	r24
     a16:	92 95       	swap	r25
     a18:	90 7f       	andi	r25, 0xF0	; 240
     a1a:	98 27       	eor	r25, r24
     a1c:	80 7f       	andi	r24, 0xF0	; 240
     a1e:	98 27       	eor	r25, r24
     a20:	8a 57       	subi	r24, 0x7A	; 122
     a22:	9d 4f       	sbci	r25, 0xFD	; 253
     a24:	9f 93       	push	r25
     a26:	8f 93       	push	r24
     a28:	6f 92       	push	r6
     a2a:	df 92       	push	r13
     a2c:	ab dc       	rcall	.-1706   	; 0x384 <lcdWriteText>
     a2e:	9f 92       	push	r9
     a30:	8f 92       	push	r8
     a32:	7f 92       	push	r7
     a34:	df 92       	push	r13
     a36:	a6 dc       	rcall	.-1716   	; 0x384 <lcdWriteText>
     a38:	00 0f       	add	r16, r16
     a3a:	11 1f       	adc	r17, r17
     a3c:	f8 01       	movw	r30, r16
     a3e:	ea 53       	subi	r30, 0x3A	; 58
     a40:	fd 4f       	sbci	r31, 0xFD	; 253
     a42:	00 81       	ld	r16, Z
     a44:	11 81       	ldd	r17, Z+1	; 0x01
     a46:	a1 2c       	mov	r10, r1
     a48:	c7 2c       	mov	r12, r7
     a4a:	e0 2e       	mov	r14, r16
     a4c:	f1 2e       	mov	r15, r17
     a4e:	00 e0       	ldi	r16, 0x00	; 0
     a50:	10 e0       	ldi	r17, 0x00	; 0
     a52:	20 e0       	ldi	r18, 0x00	; 0
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	40 e0       	ldi	r20, 0x00	; 0
     a58:	50 e0       	ldi	r21, 0x00	; 0
     a5a:	60 e0       	ldi	r22, 0x00	; 0
     a5c:	8d 2d       	mov	r24, r13
     a5e:	ce dc       	rcall	.-1636   	; 0x3fc <lcdWriteZahl>
     a60:	d3 94       	inc	r13
     a62:	ba 94       	dec	r11
     a64:	0f b6       	in	r0, 0x3f	; 63
     a66:	f8 94       	cli
     a68:	de bf       	out	0x3e, r29	; 62
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	cd bf       	out	0x3d, r28	; 61
     a6e:	94 e0       	ldi	r25, 0x04	; 4
     a70:	d9 12       	cpse	r13, r25
     a72:	cd cf       	rjmp	.-102    	; 0xa0e <lcdLog+0x19c>
     a74:	17 c0       	rjmp	.+46     	; 0xaa4 <lcdLog+0x232>
     a76:	00 91 ce 02 	lds	r16, 0x02CE	; 0x8002ce <nummer.2616>
     a7a:	10 91 cf 02 	lds	r17, 0x02CF	; 0x8002cf <nummer.2616+0x1>
     a7e:	10 93 c7 02 	sts	0x02C7, r17	; 0x8002c7 <lcdPrintNr.2614+0x1>
     a82:	00 93 c6 02 	sts	0x02C6, r16	; 0x8002c6 <lcdPrintNr.2614>
     a86:	a1 2c       	mov	r10, r1
     a88:	68 94       	set
     a8a:	cc 24       	eor	r12, r12
     a8c:	c2 f8       	bld	r12, 2
     a8e:	e0 2e       	mov	r14, r16
     a90:	f1 2e       	mov	r15, r17
     a92:	00 e0       	ldi	r16, 0x00	; 0
     a94:	10 e0       	ldi	r17, 0x00	; 0
     a96:	20 e0       	ldi	r18, 0x00	; 0
     a98:	30 e0       	ldi	r19, 0x00	; 0
     a9a:	40 e0       	ldi	r20, 0x00	; 0
     a9c:	50 e0       	ldi	r21, 0x00	; 0
     a9e:	60 e0       	ldi	r22, 0x00	; 0
     aa0:	83 e0       	ldi	r24, 0x03	; 3
     aa2:	ac dc       	rcall	.-1704   	; 0x3fc <lcdWriteZahl>
     aa4:	60 96       	adiw	r28, 0x10	; 16
     aa6:	0f b6       	in	r0, 0x3f	; 63
     aa8:	f8 94       	cli
     aaa:	de bf       	out	0x3e, r29	; 62
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	cd bf       	out	0x3d, r28	; 61
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	1f 91       	pop	r17
     ab6:	0f 91       	pop	r16
     ab8:	ff 90       	pop	r15
     aba:	ef 90       	pop	r14
     abc:	df 90       	pop	r13
     abe:	cf 90       	pop	r12
     ac0:	bf 90       	pop	r11
     ac2:	af 90       	pop	r10
     ac4:	9f 90       	pop	r9
     ac6:	8f 90       	pop	r8
     ac8:	7f 90       	pop	r7
     aca:	6f 90       	pop	r6
     acc:	08 95       	ret

00000ace <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     ace:	cf 93       	push	r28
     ad0:	df 93       	push	r29
     ad2:	cd b7       	in	r28, 0x3d	; 61
     ad4:	de b7       	in	r29, 0x3e	; 62
     ad6:	28 97       	sbiw	r28, 0x08	; 8
     ad8:	0f b6       	in	r0, 0x3f	; 63
     ada:	f8 94       	cli
     adc:	de bf       	out	0x3e, r29	; 62
     ade:	0f be       	out	0x3f, r0	; 63
     ae0:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     ae2:	88 e0       	ldi	r24, 0x08	; 8
     ae4:	e2 e0       	ldi	r30, 0x02	; 2
     ae6:	f2 e0       	ldi	r31, 0x02	; 2
     ae8:	de 01       	movw	r26, r28
     aea:	11 96       	adiw	r26, 0x01	; 1
     aec:	01 90       	ld	r0, Z+
     aee:	0d 92       	st	X+, r0
     af0:	8a 95       	dec	r24
     af2:	e1 f7       	brne	.-8      	; 0xaec <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     af4:	e5 e0       	ldi	r30, 0x05	; 5
     af6:	f1 e0       	ldi	r31, 0x01	; 1
     af8:	80 81       	ld	r24, Z
     afa:	8f 7b       	andi	r24, 0xBF	; 191
     afc:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     afe:	e0 91 84 02 	lds	r30, 0x0284	; 0x800284 <Zeilen_Nr.2731>
     b02:	f0 91 85 02 	lds	r31, 0x0285	; 0x800285 <Zeilen_Nr.2731+0x1>
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	8c 0f       	add	r24, r28
     b0c:	9d 1f       	adc	r25, r29
     b0e:	e8 0f       	add	r30, r24
     b10:	f9 1f       	adc	r31, r25
     b12:	80 81       	ld	r24, Z
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <__data_end+0x1>
     b1a:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <__data_end>
     b1e:	aa e4       	ldi	r26, 0x4A	; 74
     b20:	b3 e0       	ldi	r27, 0x03	; 3
     b22:	2a ed       	ldi	r18, 0xDA	; 218
     b24:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     b26:	e5 e0       	ldi	r30, 0x05	; 5
     b28:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     b2a:	5e 91       	ld	r21, -X
     b2c:	4e 91       	ld	r20, -X
     b2e:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <__data_end>
     b32:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <__data_end+0x1>
     b36:	84 23       	and	r24, r20
     b38:	95 23       	and	r25, r21
     b3a:	89 2b       	or	r24, r25
     b3c:	21 f0       	breq	.+8      	; 0xb46 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     b3e:	80 81       	ld	r24, Z
     b40:	80 62       	ori	r24, 0x20	; 32
     b42:	80 83       	st	Z, r24
     b44:	03 c0       	rjmp	.+6      	; 0xb4c <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     b46:	80 81       	ld	r24, Z
     b48:	8f 7d       	andi	r24, 0xDF	; 223
     b4a:	80 83       	st	Z, r24
        }
        CLOCK_1;
     b4c:	80 81       	ld	r24, Z
     b4e:	80 61       	ori	r24, 0x10	; 16
     b50:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     b52:	80 81       	ld	r24, Z
     b54:	8f 7e       	andi	r24, 0xEF	; 239
     b56:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     b58:	a2 17       	cp	r26, r18
     b5a:	b3 07       	cpc	r27, r19
     b5c:	31 f7       	brne	.-52     	; 0xb2a <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     b5e:	e5 e0       	ldi	r30, 0x05	; 5
     b60:	f1 e0       	ldi	r31, 0x01	; 1
     b62:	80 81       	ld	r24, Z
     b64:	87 7f       	andi	r24, 0xF7	; 247
     b66:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     b68:	80 81       	ld	r24, Z
     b6a:	88 7f       	andi	r24, 0xF8	; 248
     b6c:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     b6e:	90 81       	ld	r25, Z
     b70:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <Zeilen_Nr.2731>
     b74:	89 2b       	or	r24, r25
     b76:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     b78:	80 81       	ld	r24, Z
     b7a:	80 64       	ori	r24, 0x40	; 64
     b7c:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     b7e:	80 81       	ld	r24, Z
     b80:	88 60       	ori	r24, 0x08	; 8
     b82:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     b84:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <Zeilen_Nr.2731>
     b88:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <Zeilen_Nr.2731+0x1>
     b8c:	87 30       	cpi	r24, 0x07	; 7
     b8e:	91 05       	cpc	r25, r1
     b90:	30 f4       	brcc	.+12     	; 0xb9e <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     b92:	01 96       	adiw	r24, 0x01	; 1
     b94:	90 93 85 02 	sts	0x0285, r25	; 0x800285 <Zeilen_Nr.2731+0x1>
     b98:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <Zeilen_Nr.2731>
     b9c:	07 c0       	rjmp	.+14     	; 0xbac <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     b9e:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <Zeilen_Nr.2731+0x1>
     ba2:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <Zeilen_Nr.2731>
        writeTextFinished = 1;
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <writeTextFinished>
    }
    
     bac:	28 96       	adiw	r28, 0x08	; 8
     bae:	0f b6       	in	r0, 0x3f	; 63
     bb0:	f8 94       	cli
     bb2:	de bf       	out	0x3e, r29	; 62
     bb4:	0f be       	out	0x3f, r0	; 63
     bb6:	cd bf       	out	0x3d, r28	; 61
     bb8:	df 91       	pop	r29
     bba:	cf 91       	pop	r28
     bbc:	08 95       	ret

00000bbe <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     bbe:	1f 92       	push	r1
     bc0:	0f 92       	push	r0
     bc2:	0f b6       	in	r0, 0x3f	; 63
     bc4:	0f 92       	push	r0
     bc6:	11 24       	eor	r1, r1
     bc8:	0b b6       	in	r0, 0x3b	; 59
     bca:	0f 92       	push	r0
     bcc:	2f 93       	push	r18
     bce:	3f 93       	push	r19
     bd0:	4f 93       	push	r20
     bd2:	5f 93       	push	r21
     bd4:	6f 93       	push	r22
     bd6:	7f 93       	push	r23
     bd8:	8f 93       	push	r24
     bda:	9f 93       	push	r25
     bdc:	af 93       	push	r26
     bde:	bf 93       	push	r27
     be0:	ef 93       	push	r30
     be2:	ff 93       	push	r31
    systemTimeMs += 1;
     be4:	20 91 d1 02 	lds	r18, 0x02D1	; 0x8002d1 <systemTimeMs>
     be8:	30 91 d2 02 	lds	r19, 0x02D2	; 0x8002d2 <systemTimeMs+0x1>
     bec:	40 91 d3 02 	lds	r20, 0x02D3	; 0x8002d3 <systemTimeMs+0x2>
     bf0:	50 91 d4 02 	lds	r21, 0x02D4	; 0x8002d4 <systemTimeMs+0x3>
     bf4:	60 91 d5 02 	lds	r22, 0x02D5	; 0x8002d5 <systemTimeMs+0x4>
     bf8:	70 91 d6 02 	lds	r23, 0x02D6	; 0x8002d6 <systemTimeMs+0x5>
     bfc:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <systemTimeMs+0x6>
     c00:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <systemTimeMs+0x7>
     c04:	a1 e0       	ldi	r26, 0x01	; 1
     c06:	85 d0       	rcall	.+266    	; 0xd12 <__adddi3_s8>
     c08:	20 93 d1 02 	sts	0x02D1, r18	; 0x8002d1 <systemTimeMs>
     c0c:	30 93 d2 02 	sts	0x02D2, r19	; 0x8002d2 <systemTimeMs+0x1>
     c10:	40 93 d3 02 	sts	0x02D3, r20	; 0x8002d3 <systemTimeMs+0x2>
     c14:	50 93 d4 02 	sts	0x02D4, r21	; 0x8002d4 <systemTimeMs+0x3>
     c18:	60 93 d5 02 	sts	0x02D5, r22	; 0x8002d5 <systemTimeMs+0x4>
     c1c:	70 93 d6 02 	sts	0x02D6, r23	; 0x8002d6 <systemTimeMs+0x5>
     c20:	80 93 d7 02 	sts	0x02D7, r24	; 0x8002d7 <systemTimeMs+0x6>
     c24:	90 93 d8 02 	sts	0x02D8, r25	; 0x8002d8 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     c28:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <matrixRunning>
     c2c:	81 11       	cpse	r24, r1
     c2e:	4f df       	rcall	.-354    	; 0xace <matrixWriteNextLine>
}
     c30:	ff 91       	pop	r31
     c32:	ef 91       	pop	r30
     c34:	bf 91       	pop	r27
     c36:	af 91       	pop	r26
     c38:	9f 91       	pop	r25
     c3a:	8f 91       	pop	r24
     c3c:	7f 91       	pop	r23
     c3e:	6f 91       	pop	r22
     c40:	5f 91       	pop	r21
     c42:	4f 91       	pop	r20
     c44:	3f 91       	pop	r19
     c46:	2f 91       	pop	r18
     c48:	0f 90       	pop	r0
     c4a:	0b be       	out	0x3b, r0	; 59
     c4c:	0f 90       	pop	r0
     c4e:	0f be       	out	0x3f, r0	; 63
     c50:	0f 90       	pop	r0
     c52:	1f 90       	pop	r1
     c54:	18 95       	reti

00000c56 <__umoddi3>:
     c56:	68 94       	set
     c58:	01 c0       	rjmp	.+2      	; 0xc5c <__udivdi3_umoddi3>

00000c5a <__udivdi3>:
     c5a:	e8 94       	clt

00000c5c <__udivdi3_umoddi3>:
     c5c:	8f 92       	push	r8
     c5e:	9f 92       	push	r9
     c60:	cf 93       	push	r28
     c62:	df 93       	push	r29
     c64:	05 d0       	rcall	.+10     	; 0xc70 <__udivmod64>
     c66:	df 91       	pop	r29
     c68:	cf 91       	pop	r28
     c6a:	9f 90       	pop	r9
     c6c:	8f 90       	pop	r8
     c6e:	08 95       	ret

00000c70 <__udivmod64>:
     c70:	88 24       	eor	r8, r8
     c72:	99 24       	eor	r9, r9
     c74:	f4 01       	movw	r30, r8
     c76:	e4 01       	movw	r28, r8
     c78:	b0 e4       	ldi	r27, 0x40	; 64
     c7a:	9f 93       	push	r25
     c7c:	aa 27       	eor	r26, r26
     c7e:	9a 15       	cp	r25, r10
     c80:	8b 04       	cpc	r8, r11
     c82:	9c 04       	cpc	r9, r12
     c84:	ed 05       	cpc	r30, r13
     c86:	fe 05       	cpc	r31, r14
     c88:	cf 05       	cpc	r28, r15
     c8a:	d0 07       	cpc	r29, r16
     c8c:	a1 07       	cpc	r26, r17
     c8e:	98 f4       	brcc	.+38     	; 0xcb6 <__udivmod64+0x46>
     c90:	ad 2f       	mov	r26, r29
     c92:	dc 2f       	mov	r29, r28
     c94:	cf 2f       	mov	r28, r31
     c96:	fe 2f       	mov	r31, r30
     c98:	e9 2d       	mov	r30, r9
     c9a:	98 2c       	mov	r9, r8
     c9c:	89 2e       	mov	r8, r25
     c9e:	98 2f       	mov	r25, r24
     ca0:	87 2f       	mov	r24, r23
     ca2:	76 2f       	mov	r23, r22
     ca4:	65 2f       	mov	r22, r21
     ca6:	54 2f       	mov	r21, r20
     ca8:	43 2f       	mov	r20, r19
     caa:	32 2f       	mov	r19, r18
     cac:	22 27       	eor	r18, r18
     cae:	b8 50       	subi	r27, 0x08	; 8
     cb0:	31 f7       	brne	.-52     	; 0xc7e <__udivmod64+0xe>
     cb2:	bf 91       	pop	r27
     cb4:	27 c0       	rjmp	.+78     	; 0xd04 <__udivmod64+0x94>
     cb6:	1b 2e       	mov	r1, r27
     cb8:	bf 91       	pop	r27
     cba:	bb 27       	eor	r27, r27
     cbc:	22 0f       	add	r18, r18
     cbe:	33 1f       	adc	r19, r19
     cc0:	44 1f       	adc	r20, r20
     cc2:	55 1f       	adc	r21, r21
     cc4:	66 1f       	adc	r22, r22
     cc6:	77 1f       	adc	r23, r23
     cc8:	88 1f       	adc	r24, r24
     cca:	99 1f       	adc	r25, r25
     ccc:	88 1c       	adc	r8, r8
     cce:	99 1c       	adc	r9, r9
     cd0:	ee 1f       	adc	r30, r30
     cd2:	ff 1f       	adc	r31, r31
     cd4:	cc 1f       	adc	r28, r28
     cd6:	dd 1f       	adc	r29, r29
     cd8:	aa 1f       	adc	r26, r26
     cda:	bb 1f       	adc	r27, r27
     cdc:	8a 14       	cp	r8, r10
     cde:	9b 04       	cpc	r9, r11
     ce0:	ec 05       	cpc	r30, r12
     ce2:	fd 05       	cpc	r31, r13
     ce4:	ce 05       	cpc	r28, r14
     ce6:	df 05       	cpc	r29, r15
     ce8:	a0 07       	cpc	r26, r16
     cea:	b1 07       	cpc	r27, r17
     cec:	48 f0       	brcs	.+18     	; 0xd00 <__udivmod64+0x90>
     cee:	8a 18       	sub	r8, r10
     cf0:	9b 08       	sbc	r9, r11
     cf2:	ec 09       	sbc	r30, r12
     cf4:	fd 09       	sbc	r31, r13
     cf6:	ce 09       	sbc	r28, r14
     cf8:	df 09       	sbc	r29, r15
     cfa:	a0 0b       	sbc	r26, r16
     cfc:	b1 0b       	sbc	r27, r17
     cfe:	21 60       	ori	r18, 0x01	; 1
     d00:	1a 94       	dec	r1
     d02:	e1 f6       	brne	.-72     	; 0xcbc <__udivmod64+0x4c>
     d04:	2e f4       	brtc	.+10     	; 0xd10 <__udivmod64+0xa0>
     d06:	94 01       	movw	r18, r8
     d08:	af 01       	movw	r20, r30
     d0a:	be 01       	movw	r22, r28
     d0c:	cd 01       	movw	r24, r26
     d0e:	00 0c       	add	r0, r0
     d10:	08 95       	ret

00000d12 <__adddi3_s8>:
     d12:	00 24       	eor	r0, r0
     d14:	a7 fd       	sbrc	r26, 7
     d16:	00 94       	com	r0
     d18:	2a 0f       	add	r18, r26
     d1a:	30 1d       	adc	r19, r0
     d1c:	40 1d       	adc	r20, r0
     d1e:	50 1d       	adc	r21, r0
     d20:	60 1d       	adc	r22, r0
     d22:	70 1d       	adc	r23, r0
     d24:	80 1d       	adc	r24, r0
     d26:	90 1d       	adc	r25, r0
     d28:	08 95       	ret

00000d2a <strcmp>:
     d2a:	fb 01       	movw	r30, r22
     d2c:	dc 01       	movw	r26, r24
     d2e:	8d 91       	ld	r24, X+
     d30:	01 90       	ld	r0, Z+
     d32:	80 19       	sub	r24, r0
     d34:	01 10       	cpse	r0, r1
     d36:	d9 f3       	breq	.-10     	; 0xd2e <strcmp+0x4>
     d38:	99 0b       	sbc	r25, r25
     d3a:	08 95       	ret

00000d3c <vsnprintf>:
     d3c:	0f 93       	push	r16
     d3e:	1f 93       	push	r17
     d40:	cf 93       	push	r28
     d42:	df 93       	push	r29
     d44:	cd b7       	in	r28, 0x3d	; 61
     d46:	de b7       	in	r29, 0x3e	; 62
     d48:	2e 97       	sbiw	r28, 0x0e	; 14
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	8c 01       	movw	r16, r24
     d56:	fa 01       	movw	r30, r20
     d58:	86 e0       	ldi	r24, 0x06	; 6
     d5a:	8c 83       	std	Y+4, r24	; 0x04
     d5c:	1a 83       	std	Y+2, r17	; 0x02
     d5e:	09 83       	std	Y+1, r16	; 0x01
     d60:	77 ff       	sbrs	r23, 7
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <vsnprintf+0x2c>
     d64:	60 e0       	ldi	r22, 0x00	; 0
     d66:	70 e8       	ldi	r23, 0x80	; 128
     d68:	cb 01       	movw	r24, r22
     d6a:	01 97       	sbiw	r24, 0x01	; 1
     d6c:	9e 83       	std	Y+6, r25	; 0x06
     d6e:	8d 83       	std	Y+5, r24	; 0x05
     d70:	a9 01       	movw	r20, r18
     d72:	bf 01       	movw	r22, r30
     d74:	ce 01       	movw	r24, r28
     d76:	01 96       	adiw	r24, 0x01	; 1
     d78:	19 d0       	rcall	.+50     	; 0xdac <vfprintf>
     d7a:	4d 81       	ldd	r20, Y+5	; 0x05
     d7c:	5e 81       	ldd	r21, Y+6	; 0x06
     d7e:	57 fd       	sbrc	r21, 7
     d80:	0a c0       	rjmp	.+20     	; 0xd96 <vsnprintf+0x5a>
     d82:	2f 81       	ldd	r18, Y+7	; 0x07
     d84:	38 85       	ldd	r19, Y+8	; 0x08
     d86:	42 17       	cp	r20, r18
     d88:	53 07       	cpc	r21, r19
     d8a:	0c f4       	brge	.+2      	; 0xd8e <vsnprintf+0x52>
     d8c:	9a 01       	movw	r18, r20
     d8e:	f8 01       	movw	r30, r16
     d90:	e2 0f       	add	r30, r18
     d92:	f3 1f       	adc	r31, r19
     d94:	10 82       	st	Z, r1
     d96:	2e 96       	adiw	r28, 0x0e	; 14
     d98:	0f b6       	in	r0, 0x3f	; 63
     d9a:	f8 94       	cli
     d9c:	de bf       	out	0x3e, r29	; 62
     d9e:	0f be       	out	0x3f, r0	; 63
     da0:	cd bf       	out	0x3d, r28	; 61
     da2:	df 91       	pop	r29
     da4:	cf 91       	pop	r28
     da6:	1f 91       	pop	r17
     da8:	0f 91       	pop	r16
     daa:	08 95       	ret

00000dac <vfprintf>:
     dac:	2f 92       	push	r2
     dae:	3f 92       	push	r3
     db0:	4f 92       	push	r4
     db2:	5f 92       	push	r5
     db4:	6f 92       	push	r6
     db6:	7f 92       	push	r7
     db8:	8f 92       	push	r8
     dba:	9f 92       	push	r9
     dbc:	af 92       	push	r10
     dbe:	bf 92       	push	r11
     dc0:	cf 92       	push	r12
     dc2:	df 92       	push	r13
     dc4:	ef 92       	push	r14
     dc6:	ff 92       	push	r15
     dc8:	0f 93       	push	r16
     dca:	1f 93       	push	r17
     dcc:	cf 93       	push	r28
     dce:	df 93       	push	r29
     dd0:	cd b7       	in	r28, 0x3d	; 61
     dd2:	de b7       	in	r29, 0x3e	; 62
     dd4:	2b 97       	sbiw	r28, 0x0b	; 11
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	f8 94       	cli
     dda:	de bf       	out	0x3e, r29	; 62
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	cd bf       	out	0x3d, r28	; 61
     de0:	6c 01       	movw	r12, r24
     de2:	7b 01       	movw	r14, r22
     de4:	8a 01       	movw	r16, r20
     de6:	fc 01       	movw	r30, r24
     de8:	17 82       	std	Z+7, r1	; 0x07
     dea:	16 82       	std	Z+6, r1	; 0x06
     dec:	83 81       	ldd	r24, Z+3	; 0x03
     dee:	81 ff       	sbrs	r24, 1
     df0:	bf c1       	rjmp	.+894    	; 0x1170 <vfprintf+0x3c4>
     df2:	ce 01       	movw	r24, r28
     df4:	01 96       	adiw	r24, 0x01	; 1
     df6:	3c 01       	movw	r6, r24
     df8:	f6 01       	movw	r30, r12
     dfa:	93 81       	ldd	r25, Z+3	; 0x03
     dfc:	f7 01       	movw	r30, r14
     dfe:	93 fd       	sbrc	r25, 3
     e00:	85 91       	lpm	r24, Z+
     e02:	93 ff       	sbrs	r25, 3
     e04:	81 91       	ld	r24, Z+
     e06:	7f 01       	movw	r14, r30
     e08:	88 23       	and	r24, r24
     e0a:	09 f4       	brne	.+2      	; 0xe0e <vfprintf+0x62>
     e0c:	ad c1       	rjmp	.+858    	; 0x1168 <vfprintf+0x3bc>
     e0e:	85 32       	cpi	r24, 0x25	; 37
     e10:	39 f4       	brne	.+14     	; 0xe20 <vfprintf+0x74>
     e12:	93 fd       	sbrc	r25, 3
     e14:	85 91       	lpm	r24, Z+
     e16:	93 ff       	sbrs	r25, 3
     e18:	81 91       	ld	r24, Z+
     e1a:	7f 01       	movw	r14, r30
     e1c:	85 32       	cpi	r24, 0x25	; 37
     e1e:	21 f4       	brne	.+8      	; 0xe28 <vfprintf+0x7c>
     e20:	b6 01       	movw	r22, r12
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	d6 d1       	rcall	.+940    	; 0x11d2 <fputc>
     e26:	e8 cf       	rjmp	.-48     	; 0xdf8 <vfprintf+0x4c>
     e28:	91 2c       	mov	r9, r1
     e2a:	21 2c       	mov	r2, r1
     e2c:	31 2c       	mov	r3, r1
     e2e:	ff e1       	ldi	r31, 0x1F	; 31
     e30:	f3 15       	cp	r31, r3
     e32:	d8 f0       	brcs	.+54     	; 0xe6a <vfprintf+0xbe>
     e34:	8b 32       	cpi	r24, 0x2B	; 43
     e36:	79 f0       	breq	.+30     	; 0xe56 <vfprintf+0xaa>
     e38:	38 f4       	brcc	.+14     	; 0xe48 <vfprintf+0x9c>
     e3a:	80 32       	cpi	r24, 0x20	; 32
     e3c:	79 f0       	breq	.+30     	; 0xe5c <vfprintf+0xb0>
     e3e:	83 32       	cpi	r24, 0x23	; 35
     e40:	a1 f4       	brne	.+40     	; 0xe6a <vfprintf+0xbe>
     e42:	23 2d       	mov	r18, r3
     e44:	20 61       	ori	r18, 0x10	; 16
     e46:	1d c0       	rjmp	.+58     	; 0xe82 <vfprintf+0xd6>
     e48:	8d 32       	cpi	r24, 0x2D	; 45
     e4a:	61 f0       	breq	.+24     	; 0xe64 <vfprintf+0xb8>
     e4c:	80 33       	cpi	r24, 0x30	; 48
     e4e:	69 f4       	brne	.+26     	; 0xe6a <vfprintf+0xbe>
     e50:	23 2d       	mov	r18, r3
     e52:	21 60       	ori	r18, 0x01	; 1
     e54:	16 c0       	rjmp	.+44     	; 0xe82 <vfprintf+0xd6>
     e56:	83 2d       	mov	r24, r3
     e58:	82 60       	ori	r24, 0x02	; 2
     e5a:	38 2e       	mov	r3, r24
     e5c:	e3 2d       	mov	r30, r3
     e5e:	e4 60       	ori	r30, 0x04	; 4
     e60:	3e 2e       	mov	r3, r30
     e62:	2a c0       	rjmp	.+84     	; 0xeb8 <vfprintf+0x10c>
     e64:	f3 2d       	mov	r31, r3
     e66:	f8 60       	ori	r31, 0x08	; 8
     e68:	1d c0       	rjmp	.+58     	; 0xea4 <vfprintf+0xf8>
     e6a:	37 fc       	sbrc	r3, 7
     e6c:	2d c0       	rjmp	.+90     	; 0xec8 <vfprintf+0x11c>
     e6e:	20 ed       	ldi	r18, 0xD0	; 208
     e70:	28 0f       	add	r18, r24
     e72:	2a 30       	cpi	r18, 0x0A	; 10
     e74:	40 f0       	brcs	.+16     	; 0xe86 <vfprintf+0xda>
     e76:	8e 32       	cpi	r24, 0x2E	; 46
     e78:	b9 f4       	brne	.+46     	; 0xea8 <vfprintf+0xfc>
     e7a:	36 fc       	sbrc	r3, 6
     e7c:	75 c1       	rjmp	.+746    	; 0x1168 <vfprintf+0x3bc>
     e7e:	23 2d       	mov	r18, r3
     e80:	20 64       	ori	r18, 0x40	; 64
     e82:	32 2e       	mov	r3, r18
     e84:	19 c0       	rjmp	.+50     	; 0xeb8 <vfprintf+0x10c>
     e86:	36 fe       	sbrs	r3, 6
     e88:	06 c0       	rjmp	.+12     	; 0xe96 <vfprintf+0xea>
     e8a:	8a e0       	ldi	r24, 0x0A	; 10
     e8c:	98 9e       	mul	r9, r24
     e8e:	20 0d       	add	r18, r0
     e90:	11 24       	eor	r1, r1
     e92:	92 2e       	mov	r9, r18
     e94:	11 c0       	rjmp	.+34     	; 0xeb8 <vfprintf+0x10c>
     e96:	ea e0       	ldi	r30, 0x0A	; 10
     e98:	2e 9e       	mul	r2, r30
     e9a:	20 0d       	add	r18, r0
     e9c:	11 24       	eor	r1, r1
     e9e:	22 2e       	mov	r2, r18
     ea0:	f3 2d       	mov	r31, r3
     ea2:	f0 62       	ori	r31, 0x20	; 32
     ea4:	3f 2e       	mov	r3, r31
     ea6:	08 c0       	rjmp	.+16     	; 0xeb8 <vfprintf+0x10c>
     ea8:	8c 36       	cpi	r24, 0x6C	; 108
     eaa:	21 f4       	brne	.+8      	; 0xeb4 <vfprintf+0x108>
     eac:	83 2d       	mov	r24, r3
     eae:	80 68       	ori	r24, 0x80	; 128
     eb0:	38 2e       	mov	r3, r24
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <vfprintf+0x10c>
     eb4:	88 36       	cpi	r24, 0x68	; 104
     eb6:	41 f4       	brne	.+16     	; 0xec8 <vfprintf+0x11c>
     eb8:	f7 01       	movw	r30, r14
     eba:	93 fd       	sbrc	r25, 3
     ebc:	85 91       	lpm	r24, Z+
     ebe:	93 ff       	sbrs	r25, 3
     ec0:	81 91       	ld	r24, Z+
     ec2:	7f 01       	movw	r14, r30
     ec4:	81 11       	cpse	r24, r1
     ec6:	b3 cf       	rjmp	.-154    	; 0xe2e <vfprintf+0x82>
     ec8:	98 2f       	mov	r25, r24
     eca:	9f 7d       	andi	r25, 0xDF	; 223
     ecc:	95 54       	subi	r25, 0x45	; 69
     ece:	93 30       	cpi	r25, 0x03	; 3
     ed0:	28 f4       	brcc	.+10     	; 0xedc <vfprintf+0x130>
     ed2:	0c 5f       	subi	r16, 0xFC	; 252
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	9f e3       	ldi	r25, 0x3F	; 63
     ed8:	99 83       	std	Y+1, r25	; 0x01
     eda:	0d c0       	rjmp	.+26     	; 0xef6 <vfprintf+0x14a>
     edc:	83 36       	cpi	r24, 0x63	; 99
     ede:	31 f0       	breq	.+12     	; 0xeec <vfprintf+0x140>
     ee0:	83 37       	cpi	r24, 0x73	; 115
     ee2:	71 f0       	breq	.+28     	; 0xf00 <vfprintf+0x154>
     ee4:	83 35       	cpi	r24, 0x53	; 83
     ee6:	09 f0       	breq	.+2      	; 0xeea <vfprintf+0x13e>
     ee8:	55 c0       	rjmp	.+170    	; 0xf94 <vfprintf+0x1e8>
     eea:	20 c0       	rjmp	.+64     	; 0xf2c <vfprintf+0x180>
     eec:	f8 01       	movw	r30, r16
     eee:	80 81       	ld	r24, Z
     ef0:	89 83       	std	Y+1, r24	; 0x01
     ef2:	0e 5f       	subi	r16, 0xFE	; 254
     ef4:	1f 4f       	sbci	r17, 0xFF	; 255
     ef6:	88 24       	eor	r8, r8
     ef8:	83 94       	inc	r8
     efa:	91 2c       	mov	r9, r1
     efc:	53 01       	movw	r10, r6
     efe:	12 c0       	rjmp	.+36     	; 0xf24 <vfprintf+0x178>
     f00:	28 01       	movw	r4, r16
     f02:	f2 e0       	ldi	r31, 0x02	; 2
     f04:	4f 0e       	add	r4, r31
     f06:	51 1c       	adc	r5, r1
     f08:	f8 01       	movw	r30, r16
     f0a:	a0 80       	ld	r10, Z
     f0c:	b1 80       	ldd	r11, Z+1	; 0x01
     f0e:	36 fe       	sbrs	r3, 6
     f10:	03 c0       	rjmp	.+6      	; 0xf18 <vfprintf+0x16c>
     f12:	69 2d       	mov	r22, r9
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	02 c0       	rjmp	.+4      	; 0xf1c <vfprintf+0x170>
     f18:	6f ef       	ldi	r22, 0xFF	; 255
     f1a:	7f ef       	ldi	r23, 0xFF	; 255
     f1c:	c5 01       	movw	r24, r10
     f1e:	4e d1       	rcall	.+668    	; 0x11bc <strnlen>
     f20:	4c 01       	movw	r8, r24
     f22:	82 01       	movw	r16, r4
     f24:	f3 2d       	mov	r31, r3
     f26:	ff 77       	andi	r31, 0x7F	; 127
     f28:	3f 2e       	mov	r3, r31
     f2a:	15 c0       	rjmp	.+42     	; 0xf56 <vfprintf+0x1aa>
     f2c:	28 01       	movw	r4, r16
     f2e:	22 e0       	ldi	r18, 0x02	; 2
     f30:	42 0e       	add	r4, r18
     f32:	51 1c       	adc	r5, r1
     f34:	f8 01       	movw	r30, r16
     f36:	a0 80       	ld	r10, Z
     f38:	b1 80       	ldd	r11, Z+1	; 0x01
     f3a:	36 fe       	sbrs	r3, 6
     f3c:	03 c0       	rjmp	.+6      	; 0xf44 <vfprintf+0x198>
     f3e:	69 2d       	mov	r22, r9
     f40:	70 e0       	ldi	r23, 0x00	; 0
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <vfprintf+0x19c>
     f44:	6f ef       	ldi	r22, 0xFF	; 255
     f46:	7f ef       	ldi	r23, 0xFF	; 255
     f48:	c5 01       	movw	r24, r10
     f4a:	2d d1       	rcall	.+602    	; 0x11a6 <strnlen_P>
     f4c:	4c 01       	movw	r8, r24
     f4e:	f3 2d       	mov	r31, r3
     f50:	f0 68       	ori	r31, 0x80	; 128
     f52:	3f 2e       	mov	r3, r31
     f54:	82 01       	movw	r16, r4
     f56:	33 fc       	sbrc	r3, 3
     f58:	19 c0       	rjmp	.+50     	; 0xf8c <vfprintf+0x1e0>
     f5a:	82 2d       	mov	r24, r2
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	88 16       	cp	r8, r24
     f60:	99 06       	cpc	r9, r25
     f62:	a0 f4       	brcc	.+40     	; 0xf8c <vfprintf+0x1e0>
     f64:	b6 01       	movw	r22, r12
     f66:	80 e2       	ldi	r24, 0x20	; 32
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	33 d1       	rcall	.+614    	; 0x11d2 <fputc>
     f6c:	2a 94       	dec	r2
     f6e:	f5 cf       	rjmp	.-22     	; 0xf5a <vfprintf+0x1ae>
     f70:	f5 01       	movw	r30, r10
     f72:	37 fc       	sbrc	r3, 7
     f74:	85 91       	lpm	r24, Z+
     f76:	37 fe       	sbrs	r3, 7
     f78:	81 91       	ld	r24, Z+
     f7a:	5f 01       	movw	r10, r30
     f7c:	b6 01       	movw	r22, r12
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	28 d1       	rcall	.+592    	; 0x11d2 <fputc>
     f82:	21 10       	cpse	r2, r1
     f84:	2a 94       	dec	r2
     f86:	21 e0       	ldi	r18, 0x01	; 1
     f88:	82 1a       	sub	r8, r18
     f8a:	91 08       	sbc	r9, r1
     f8c:	81 14       	cp	r8, r1
     f8e:	91 04       	cpc	r9, r1
     f90:	79 f7       	brne	.-34     	; 0xf70 <vfprintf+0x1c4>
     f92:	e1 c0       	rjmp	.+450    	; 0x1156 <vfprintf+0x3aa>
     f94:	84 36       	cpi	r24, 0x64	; 100
     f96:	11 f0       	breq	.+4      	; 0xf9c <vfprintf+0x1f0>
     f98:	89 36       	cpi	r24, 0x69	; 105
     f9a:	39 f5       	brne	.+78     	; 0xfea <vfprintf+0x23e>
     f9c:	f8 01       	movw	r30, r16
     f9e:	37 fe       	sbrs	r3, 7
     fa0:	07 c0       	rjmp	.+14     	; 0xfb0 <vfprintf+0x204>
     fa2:	60 81       	ld	r22, Z
     fa4:	71 81       	ldd	r23, Z+1	; 0x01
     fa6:	82 81       	ldd	r24, Z+2	; 0x02
     fa8:	93 81       	ldd	r25, Z+3	; 0x03
     faa:	0c 5f       	subi	r16, 0xFC	; 252
     fac:	1f 4f       	sbci	r17, 0xFF	; 255
     fae:	08 c0       	rjmp	.+16     	; 0xfc0 <vfprintf+0x214>
     fb0:	60 81       	ld	r22, Z
     fb2:	71 81       	ldd	r23, Z+1	; 0x01
     fb4:	07 2e       	mov	r0, r23
     fb6:	00 0c       	add	r0, r0
     fb8:	88 0b       	sbc	r24, r24
     fba:	99 0b       	sbc	r25, r25
     fbc:	0e 5f       	subi	r16, 0xFE	; 254
     fbe:	1f 4f       	sbci	r17, 0xFF	; 255
     fc0:	f3 2d       	mov	r31, r3
     fc2:	ff 76       	andi	r31, 0x6F	; 111
     fc4:	3f 2e       	mov	r3, r31
     fc6:	97 ff       	sbrs	r25, 7
     fc8:	09 c0       	rjmp	.+18     	; 0xfdc <vfprintf+0x230>
     fca:	90 95       	com	r25
     fcc:	80 95       	com	r24
     fce:	70 95       	com	r23
     fd0:	61 95       	neg	r22
     fd2:	7f 4f       	sbci	r23, 0xFF	; 255
     fd4:	8f 4f       	sbci	r24, 0xFF	; 255
     fd6:	9f 4f       	sbci	r25, 0xFF	; 255
     fd8:	f0 68       	ori	r31, 0x80	; 128
     fda:	3f 2e       	mov	r3, r31
     fdc:	2a e0       	ldi	r18, 0x0A	; 10
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	a3 01       	movw	r20, r6
     fe2:	33 d1       	rcall	.+614    	; 0x124a <__ultoa_invert>
     fe4:	88 2e       	mov	r8, r24
     fe6:	86 18       	sub	r8, r6
     fe8:	44 c0       	rjmp	.+136    	; 0x1072 <vfprintf+0x2c6>
     fea:	85 37       	cpi	r24, 0x75	; 117
     fec:	31 f4       	brne	.+12     	; 0xffa <vfprintf+0x24e>
     fee:	23 2d       	mov	r18, r3
     ff0:	2f 7e       	andi	r18, 0xEF	; 239
     ff2:	b2 2e       	mov	r11, r18
     ff4:	2a e0       	ldi	r18, 0x0A	; 10
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	25 c0       	rjmp	.+74     	; 0x1044 <vfprintf+0x298>
     ffa:	93 2d       	mov	r25, r3
     ffc:	99 7f       	andi	r25, 0xF9	; 249
     ffe:	b9 2e       	mov	r11, r25
    1000:	8f 36       	cpi	r24, 0x6F	; 111
    1002:	c1 f0       	breq	.+48     	; 0x1034 <vfprintf+0x288>
    1004:	18 f4       	brcc	.+6      	; 0x100c <vfprintf+0x260>
    1006:	88 35       	cpi	r24, 0x58	; 88
    1008:	79 f0       	breq	.+30     	; 0x1028 <vfprintf+0x27c>
    100a:	ae c0       	rjmp	.+348    	; 0x1168 <vfprintf+0x3bc>
    100c:	80 37       	cpi	r24, 0x70	; 112
    100e:	19 f0       	breq	.+6      	; 0x1016 <vfprintf+0x26a>
    1010:	88 37       	cpi	r24, 0x78	; 120
    1012:	21 f0       	breq	.+8      	; 0x101c <vfprintf+0x270>
    1014:	a9 c0       	rjmp	.+338    	; 0x1168 <vfprintf+0x3bc>
    1016:	e9 2f       	mov	r30, r25
    1018:	e0 61       	ori	r30, 0x10	; 16
    101a:	be 2e       	mov	r11, r30
    101c:	b4 fe       	sbrs	r11, 4
    101e:	0d c0       	rjmp	.+26     	; 0x103a <vfprintf+0x28e>
    1020:	fb 2d       	mov	r31, r11
    1022:	f4 60       	ori	r31, 0x04	; 4
    1024:	bf 2e       	mov	r11, r31
    1026:	09 c0       	rjmp	.+18     	; 0x103a <vfprintf+0x28e>
    1028:	34 fe       	sbrs	r3, 4
    102a:	0a c0       	rjmp	.+20     	; 0x1040 <vfprintf+0x294>
    102c:	29 2f       	mov	r18, r25
    102e:	26 60       	ori	r18, 0x06	; 6
    1030:	b2 2e       	mov	r11, r18
    1032:	06 c0       	rjmp	.+12     	; 0x1040 <vfprintf+0x294>
    1034:	28 e0       	ldi	r18, 0x08	; 8
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	05 c0       	rjmp	.+10     	; 0x1044 <vfprintf+0x298>
    103a:	20 e1       	ldi	r18, 0x10	; 16
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0x298>
    1040:	20 e1       	ldi	r18, 0x10	; 16
    1042:	32 e0       	ldi	r19, 0x02	; 2
    1044:	f8 01       	movw	r30, r16
    1046:	b7 fe       	sbrs	r11, 7
    1048:	07 c0       	rjmp	.+14     	; 0x1058 <vfprintf+0x2ac>
    104a:	60 81       	ld	r22, Z
    104c:	71 81       	ldd	r23, Z+1	; 0x01
    104e:	82 81       	ldd	r24, Z+2	; 0x02
    1050:	93 81       	ldd	r25, Z+3	; 0x03
    1052:	0c 5f       	subi	r16, 0xFC	; 252
    1054:	1f 4f       	sbci	r17, 0xFF	; 255
    1056:	06 c0       	rjmp	.+12     	; 0x1064 <vfprintf+0x2b8>
    1058:	60 81       	ld	r22, Z
    105a:	71 81       	ldd	r23, Z+1	; 0x01
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	0e 5f       	subi	r16, 0xFE	; 254
    1062:	1f 4f       	sbci	r17, 0xFF	; 255
    1064:	a3 01       	movw	r20, r6
    1066:	f1 d0       	rcall	.+482    	; 0x124a <__ultoa_invert>
    1068:	88 2e       	mov	r8, r24
    106a:	86 18       	sub	r8, r6
    106c:	fb 2d       	mov	r31, r11
    106e:	ff 77       	andi	r31, 0x7F	; 127
    1070:	3f 2e       	mov	r3, r31
    1072:	36 fe       	sbrs	r3, 6
    1074:	0d c0       	rjmp	.+26     	; 0x1090 <vfprintf+0x2e4>
    1076:	23 2d       	mov	r18, r3
    1078:	2e 7f       	andi	r18, 0xFE	; 254
    107a:	a2 2e       	mov	r10, r18
    107c:	89 14       	cp	r8, r9
    107e:	58 f4       	brcc	.+22     	; 0x1096 <vfprintf+0x2ea>
    1080:	34 fe       	sbrs	r3, 4
    1082:	0b c0       	rjmp	.+22     	; 0x109a <vfprintf+0x2ee>
    1084:	32 fc       	sbrc	r3, 2
    1086:	09 c0       	rjmp	.+18     	; 0x109a <vfprintf+0x2ee>
    1088:	83 2d       	mov	r24, r3
    108a:	8e 7e       	andi	r24, 0xEE	; 238
    108c:	a8 2e       	mov	r10, r24
    108e:	05 c0       	rjmp	.+10     	; 0x109a <vfprintf+0x2ee>
    1090:	b8 2c       	mov	r11, r8
    1092:	a3 2c       	mov	r10, r3
    1094:	03 c0       	rjmp	.+6      	; 0x109c <vfprintf+0x2f0>
    1096:	b8 2c       	mov	r11, r8
    1098:	01 c0       	rjmp	.+2      	; 0x109c <vfprintf+0x2f0>
    109a:	b9 2c       	mov	r11, r9
    109c:	a4 fe       	sbrs	r10, 4
    109e:	0f c0       	rjmp	.+30     	; 0x10be <vfprintf+0x312>
    10a0:	fe 01       	movw	r30, r28
    10a2:	e8 0d       	add	r30, r8
    10a4:	f1 1d       	adc	r31, r1
    10a6:	80 81       	ld	r24, Z
    10a8:	80 33       	cpi	r24, 0x30	; 48
    10aa:	21 f4       	brne	.+8      	; 0x10b4 <vfprintf+0x308>
    10ac:	9a 2d       	mov	r25, r10
    10ae:	99 7e       	andi	r25, 0xE9	; 233
    10b0:	a9 2e       	mov	r10, r25
    10b2:	09 c0       	rjmp	.+18     	; 0x10c6 <vfprintf+0x31a>
    10b4:	a2 fe       	sbrs	r10, 2
    10b6:	06 c0       	rjmp	.+12     	; 0x10c4 <vfprintf+0x318>
    10b8:	b3 94       	inc	r11
    10ba:	b3 94       	inc	r11
    10bc:	04 c0       	rjmp	.+8      	; 0x10c6 <vfprintf+0x31a>
    10be:	8a 2d       	mov	r24, r10
    10c0:	86 78       	andi	r24, 0x86	; 134
    10c2:	09 f0       	breq	.+2      	; 0x10c6 <vfprintf+0x31a>
    10c4:	b3 94       	inc	r11
    10c6:	a3 fc       	sbrc	r10, 3
    10c8:	10 c0       	rjmp	.+32     	; 0x10ea <vfprintf+0x33e>
    10ca:	a0 fe       	sbrs	r10, 0
    10cc:	06 c0       	rjmp	.+12     	; 0x10da <vfprintf+0x32e>
    10ce:	b2 14       	cp	r11, r2
    10d0:	80 f4       	brcc	.+32     	; 0x10f2 <vfprintf+0x346>
    10d2:	28 0c       	add	r2, r8
    10d4:	92 2c       	mov	r9, r2
    10d6:	9b 18       	sub	r9, r11
    10d8:	0d c0       	rjmp	.+26     	; 0x10f4 <vfprintf+0x348>
    10da:	b2 14       	cp	r11, r2
    10dc:	58 f4       	brcc	.+22     	; 0x10f4 <vfprintf+0x348>
    10de:	b6 01       	movw	r22, r12
    10e0:	80 e2       	ldi	r24, 0x20	; 32
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	76 d0       	rcall	.+236    	; 0x11d2 <fputc>
    10e6:	b3 94       	inc	r11
    10e8:	f8 cf       	rjmp	.-16     	; 0x10da <vfprintf+0x32e>
    10ea:	b2 14       	cp	r11, r2
    10ec:	18 f4       	brcc	.+6      	; 0x10f4 <vfprintf+0x348>
    10ee:	2b 18       	sub	r2, r11
    10f0:	02 c0       	rjmp	.+4      	; 0x10f6 <vfprintf+0x34a>
    10f2:	98 2c       	mov	r9, r8
    10f4:	21 2c       	mov	r2, r1
    10f6:	a4 fe       	sbrs	r10, 4
    10f8:	0f c0       	rjmp	.+30     	; 0x1118 <vfprintf+0x36c>
    10fa:	b6 01       	movw	r22, r12
    10fc:	80 e3       	ldi	r24, 0x30	; 48
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	68 d0       	rcall	.+208    	; 0x11d2 <fputc>
    1102:	a2 fe       	sbrs	r10, 2
    1104:	16 c0       	rjmp	.+44     	; 0x1132 <vfprintf+0x386>
    1106:	a1 fc       	sbrc	r10, 1
    1108:	03 c0       	rjmp	.+6      	; 0x1110 <vfprintf+0x364>
    110a:	88 e7       	ldi	r24, 0x78	; 120
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	02 c0       	rjmp	.+4      	; 0x1114 <vfprintf+0x368>
    1110:	88 e5       	ldi	r24, 0x58	; 88
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	b6 01       	movw	r22, r12
    1116:	0c c0       	rjmp	.+24     	; 0x1130 <vfprintf+0x384>
    1118:	8a 2d       	mov	r24, r10
    111a:	86 78       	andi	r24, 0x86	; 134
    111c:	51 f0       	breq	.+20     	; 0x1132 <vfprintf+0x386>
    111e:	a1 fe       	sbrs	r10, 1
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <vfprintf+0x37a>
    1122:	8b e2       	ldi	r24, 0x2B	; 43
    1124:	01 c0       	rjmp	.+2      	; 0x1128 <vfprintf+0x37c>
    1126:	80 e2       	ldi	r24, 0x20	; 32
    1128:	a7 fc       	sbrc	r10, 7
    112a:	8d e2       	ldi	r24, 0x2D	; 45
    112c:	b6 01       	movw	r22, r12
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	50 d0       	rcall	.+160    	; 0x11d2 <fputc>
    1132:	89 14       	cp	r8, r9
    1134:	30 f4       	brcc	.+12     	; 0x1142 <vfprintf+0x396>
    1136:	b6 01       	movw	r22, r12
    1138:	80 e3       	ldi	r24, 0x30	; 48
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	4a d0       	rcall	.+148    	; 0x11d2 <fputc>
    113e:	9a 94       	dec	r9
    1140:	f8 cf       	rjmp	.-16     	; 0x1132 <vfprintf+0x386>
    1142:	8a 94       	dec	r8
    1144:	f3 01       	movw	r30, r6
    1146:	e8 0d       	add	r30, r8
    1148:	f1 1d       	adc	r31, r1
    114a:	80 81       	ld	r24, Z
    114c:	b6 01       	movw	r22, r12
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	40 d0       	rcall	.+128    	; 0x11d2 <fputc>
    1152:	81 10       	cpse	r8, r1
    1154:	f6 cf       	rjmp	.-20     	; 0x1142 <vfprintf+0x396>
    1156:	22 20       	and	r2, r2
    1158:	09 f4       	brne	.+2      	; 0x115c <vfprintf+0x3b0>
    115a:	4e ce       	rjmp	.-868    	; 0xdf8 <vfprintf+0x4c>
    115c:	b6 01       	movw	r22, r12
    115e:	80 e2       	ldi	r24, 0x20	; 32
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	37 d0       	rcall	.+110    	; 0x11d2 <fputc>
    1164:	2a 94       	dec	r2
    1166:	f7 cf       	rjmp	.-18     	; 0x1156 <vfprintf+0x3aa>
    1168:	f6 01       	movw	r30, r12
    116a:	86 81       	ldd	r24, Z+6	; 0x06
    116c:	97 81       	ldd	r25, Z+7	; 0x07
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <vfprintf+0x3c8>
    1170:	8f ef       	ldi	r24, 0xFF	; 255
    1172:	9f ef       	ldi	r25, 0xFF	; 255
    1174:	2b 96       	adiw	r28, 0x0b	; 11
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	df 91       	pop	r29
    1182:	cf 91       	pop	r28
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	ff 90       	pop	r15
    118a:	ef 90       	pop	r14
    118c:	df 90       	pop	r13
    118e:	cf 90       	pop	r12
    1190:	bf 90       	pop	r11
    1192:	af 90       	pop	r10
    1194:	9f 90       	pop	r9
    1196:	8f 90       	pop	r8
    1198:	7f 90       	pop	r7
    119a:	6f 90       	pop	r6
    119c:	5f 90       	pop	r5
    119e:	4f 90       	pop	r4
    11a0:	3f 90       	pop	r3
    11a2:	2f 90       	pop	r2
    11a4:	08 95       	ret

000011a6 <strnlen_P>:
    11a6:	fc 01       	movw	r30, r24
    11a8:	05 90       	lpm	r0, Z+
    11aa:	61 50       	subi	r22, 0x01	; 1
    11ac:	70 40       	sbci	r23, 0x00	; 0
    11ae:	01 10       	cpse	r0, r1
    11b0:	d8 f7       	brcc	.-10     	; 0x11a8 <strnlen_P+0x2>
    11b2:	80 95       	com	r24
    11b4:	90 95       	com	r25
    11b6:	8e 0f       	add	r24, r30
    11b8:	9f 1f       	adc	r25, r31
    11ba:	08 95       	ret

000011bc <strnlen>:
    11bc:	fc 01       	movw	r30, r24
    11be:	61 50       	subi	r22, 0x01	; 1
    11c0:	70 40       	sbci	r23, 0x00	; 0
    11c2:	01 90       	ld	r0, Z+
    11c4:	01 10       	cpse	r0, r1
    11c6:	d8 f7       	brcc	.-10     	; 0x11be <strnlen+0x2>
    11c8:	80 95       	com	r24
    11ca:	90 95       	com	r25
    11cc:	8e 0f       	add	r24, r30
    11ce:	9f 1f       	adc	r25, r31
    11d0:	08 95       	ret

000011d2 <fputc>:
    11d2:	0f 93       	push	r16
    11d4:	1f 93       	push	r17
    11d6:	cf 93       	push	r28
    11d8:	df 93       	push	r29
    11da:	fb 01       	movw	r30, r22
    11dc:	23 81       	ldd	r18, Z+3	; 0x03
    11de:	21 fd       	sbrc	r18, 1
    11e0:	03 c0       	rjmp	.+6      	; 0x11e8 <fputc+0x16>
    11e2:	8f ef       	ldi	r24, 0xFF	; 255
    11e4:	9f ef       	ldi	r25, 0xFF	; 255
    11e6:	2c c0       	rjmp	.+88     	; 0x1240 <fputc+0x6e>
    11e8:	22 ff       	sbrs	r18, 2
    11ea:	16 c0       	rjmp	.+44     	; 0x1218 <fputc+0x46>
    11ec:	46 81       	ldd	r20, Z+6	; 0x06
    11ee:	57 81       	ldd	r21, Z+7	; 0x07
    11f0:	24 81       	ldd	r18, Z+4	; 0x04
    11f2:	35 81       	ldd	r19, Z+5	; 0x05
    11f4:	42 17       	cp	r20, r18
    11f6:	53 07       	cpc	r21, r19
    11f8:	44 f4       	brge	.+16     	; 0x120a <fputc+0x38>
    11fa:	a0 81       	ld	r26, Z
    11fc:	b1 81       	ldd	r27, Z+1	; 0x01
    11fe:	9d 01       	movw	r18, r26
    1200:	2f 5f       	subi	r18, 0xFF	; 255
    1202:	3f 4f       	sbci	r19, 0xFF	; 255
    1204:	31 83       	std	Z+1, r19	; 0x01
    1206:	20 83       	st	Z, r18
    1208:	8c 93       	st	X, r24
    120a:	26 81       	ldd	r18, Z+6	; 0x06
    120c:	37 81       	ldd	r19, Z+7	; 0x07
    120e:	2f 5f       	subi	r18, 0xFF	; 255
    1210:	3f 4f       	sbci	r19, 0xFF	; 255
    1212:	37 83       	std	Z+7, r19	; 0x07
    1214:	26 83       	std	Z+6, r18	; 0x06
    1216:	14 c0       	rjmp	.+40     	; 0x1240 <fputc+0x6e>
    1218:	8b 01       	movw	r16, r22
    121a:	ec 01       	movw	r28, r24
    121c:	fb 01       	movw	r30, r22
    121e:	00 84       	ldd	r0, Z+8	; 0x08
    1220:	f1 85       	ldd	r31, Z+9	; 0x09
    1222:	e0 2d       	mov	r30, r0
    1224:	19 95       	eicall
    1226:	89 2b       	or	r24, r25
    1228:	e1 f6       	brne	.-72     	; 0x11e2 <fputc+0x10>
    122a:	d8 01       	movw	r26, r16
    122c:	16 96       	adiw	r26, 0x06	; 6
    122e:	8d 91       	ld	r24, X+
    1230:	9c 91       	ld	r25, X
    1232:	17 97       	sbiw	r26, 0x07	; 7
    1234:	01 96       	adiw	r24, 0x01	; 1
    1236:	17 96       	adiw	r26, 0x07	; 7
    1238:	9c 93       	st	X, r25
    123a:	8e 93       	st	-X, r24
    123c:	16 97       	sbiw	r26, 0x06	; 6
    123e:	ce 01       	movw	r24, r28
    1240:	df 91       	pop	r29
    1242:	cf 91       	pop	r28
    1244:	1f 91       	pop	r17
    1246:	0f 91       	pop	r16
    1248:	08 95       	ret

0000124a <__ultoa_invert>:
    124a:	fa 01       	movw	r30, r20
    124c:	aa 27       	eor	r26, r26
    124e:	28 30       	cpi	r18, 0x08	; 8
    1250:	51 f1       	breq	.+84     	; 0x12a6 <__ultoa_invert+0x5c>
    1252:	20 31       	cpi	r18, 0x10	; 16
    1254:	81 f1       	breq	.+96     	; 0x12b6 <__ultoa_invert+0x6c>
    1256:	e8 94       	clt
    1258:	6f 93       	push	r22
    125a:	6e 7f       	andi	r22, 0xFE	; 254
    125c:	6e 5f       	subi	r22, 0xFE	; 254
    125e:	7f 4f       	sbci	r23, 0xFF	; 255
    1260:	8f 4f       	sbci	r24, 0xFF	; 255
    1262:	9f 4f       	sbci	r25, 0xFF	; 255
    1264:	af 4f       	sbci	r26, 0xFF	; 255
    1266:	b1 e0       	ldi	r27, 0x01	; 1
    1268:	3e d0       	rcall	.+124    	; 0x12e6 <__ultoa_invert+0x9c>
    126a:	b4 e0       	ldi	r27, 0x04	; 4
    126c:	3c d0       	rcall	.+120    	; 0x12e6 <__ultoa_invert+0x9c>
    126e:	67 0f       	add	r22, r23
    1270:	78 1f       	adc	r23, r24
    1272:	89 1f       	adc	r24, r25
    1274:	9a 1f       	adc	r25, r26
    1276:	a1 1d       	adc	r26, r1
    1278:	68 0f       	add	r22, r24
    127a:	79 1f       	adc	r23, r25
    127c:	8a 1f       	adc	r24, r26
    127e:	91 1d       	adc	r25, r1
    1280:	a1 1d       	adc	r26, r1
    1282:	6a 0f       	add	r22, r26
    1284:	71 1d       	adc	r23, r1
    1286:	81 1d       	adc	r24, r1
    1288:	91 1d       	adc	r25, r1
    128a:	a1 1d       	adc	r26, r1
    128c:	20 d0       	rcall	.+64     	; 0x12ce <__ultoa_invert+0x84>
    128e:	09 f4       	brne	.+2      	; 0x1292 <__ultoa_invert+0x48>
    1290:	68 94       	set
    1292:	3f 91       	pop	r19
    1294:	2a e0       	ldi	r18, 0x0A	; 10
    1296:	26 9f       	mul	r18, r22
    1298:	11 24       	eor	r1, r1
    129a:	30 19       	sub	r19, r0
    129c:	30 5d       	subi	r19, 0xD0	; 208
    129e:	31 93       	st	Z+, r19
    12a0:	de f6       	brtc	.-74     	; 0x1258 <__ultoa_invert+0xe>
    12a2:	cf 01       	movw	r24, r30
    12a4:	08 95       	ret
    12a6:	46 2f       	mov	r20, r22
    12a8:	47 70       	andi	r20, 0x07	; 7
    12aa:	40 5d       	subi	r20, 0xD0	; 208
    12ac:	41 93       	st	Z+, r20
    12ae:	b3 e0       	ldi	r27, 0x03	; 3
    12b0:	0f d0       	rcall	.+30     	; 0x12d0 <__ultoa_invert+0x86>
    12b2:	c9 f7       	brne	.-14     	; 0x12a6 <__ultoa_invert+0x5c>
    12b4:	f6 cf       	rjmp	.-20     	; 0x12a2 <__ultoa_invert+0x58>
    12b6:	46 2f       	mov	r20, r22
    12b8:	4f 70       	andi	r20, 0x0F	; 15
    12ba:	40 5d       	subi	r20, 0xD0	; 208
    12bc:	4a 33       	cpi	r20, 0x3A	; 58
    12be:	18 f0       	brcs	.+6      	; 0x12c6 <__ultoa_invert+0x7c>
    12c0:	49 5d       	subi	r20, 0xD9	; 217
    12c2:	31 fd       	sbrc	r19, 1
    12c4:	40 52       	subi	r20, 0x20	; 32
    12c6:	41 93       	st	Z+, r20
    12c8:	02 d0       	rcall	.+4      	; 0x12ce <__ultoa_invert+0x84>
    12ca:	a9 f7       	brne	.-22     	; 0x12b6 <__ultoa_invert+0x6c>
    12cc:	ea cf       	rjmp	.-44     	; 0x12a2 <__ultoa_invert+0x58>
    12ce:	b4 e0       	ldi	r27, 0x04	; 4
    12d0:	a6 95       	lsr	r26
    12d2:	97 95       	ror	r25
    12d4:	87 95       	ror	r24
    12d6:	77 95       	ror	r23
    12d8:	67 95       	ror	r22
    12da:	ba 95       	dec	r27
    12dc:	c9 f7       	brne	.-14     	; 0x12d0 <__ultoa_invert+0x86>
    12de:	00 97       	sbiw	r24, 0x00	; 0
    12e0:	61 05       	cpc	r22, r1
    12e2:	71 05       	cpc	r23, r1
    12e4:	08 95       	ret
    12e6:	9b 01       	movw	r18, r22
    12e8:	ac 01       	movw	r20, r24
    12ea:	0a 2e       	mov	r0, r26
    12ec:	06 94       	lsr	r0
    12ee:	57 95       	ror	r21
    12f0:	47 95       	ror	r20
    12f2:	37 95       	ror	r19
    12f4:	27 95       	ror	r18
    12f6:	ba 95       	dec	r27
    12f8:	c9 f7       	brne	.-14     	; 0x12ec <__ultoa_invert+0xa2>
    12fa:	62 0f       	add	r22, r18
    12fc:	73 1f       	adc	r23, r19
    12fe:	84 1f       	adc	r24, r20
    1300:	95 1f       	adc	r25, r21
    1302:	a0 1d       	adc	r26, r0
    1304:	08 95       	ret

00001306 <_exit>:
    1306:	f8 94       	cli

00001308 <__stop_program>:
    1308:	ff cf       	rjmp	.-2      	; 0x1308 <__stop_program>
