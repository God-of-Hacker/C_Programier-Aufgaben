
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000082  00800200  00001362  000013f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001362  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c8  00800282  00800282  00001478  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001478  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00001514  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024af  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fe6  00000000  00000000  00003bab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001423  00000000  00000000  00004b91  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000068c  00000000  00000000  00005fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ccb  00000000  00000000  00006640  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a79  00000000  00000000  0000730b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008d84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	cd c5       	rjmp	.+2970   	; 0xbf8 <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e6       	ldi	r30, 0x62	; 98
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 38       	cpi	r26, 0x82	; 130
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a2 e8       	ldi	r26, 0x82	; 130
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	aa 34       	cpi	r26, 0x4A	; 74
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 af 09 	jmp	0x135e	; 0x135e <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:

#define ANZAHL 256

//Hauptprogramm
int main(void)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	d2 50       	subi	r29, 0x02	; 2
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
    //Speicherplatz für 255 Muster reserviert
    uint16_t muster [ANZAHL];
    
    uint8_t schalter=0;
    //Initialisieren
    initBoard(1);
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	ac d2       	rcall	.+1368   	; 0x696 <initBoard>
     13e:	ce 01       	movw	r24, r28
     140:	01 96       	adiw	r24, 0x01	; 1
     142:	7c 01       	movw	r14, r24
     144:	8e 01       	movw	r16, r28
     146:	0f 5f       	subi	r16, 0xFF	; 255
     148:	1d 4f       	sbci	r17, 0xFD	; 253
     14a:	fc 01       	movw	r30, r24
    //alle Muster auf 0 setzen  
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
    {
        muster[i] = 0;
     14c:	11 92       	st	Z+, r1
     14e:	11 92       	st	Z+, r1
    
    uint8_t schalter=0;
    //Initialisieren
    initBoard(1);
    //alle Muster auf 0 setzen  
    for (uint16_t i = 0; i < ANZAHL; i=i+1)
     150:	e0 17       	cp	r30, r16
     152:	f1 07       	cpc	r31, r17
     154:	d9 f7       	brne	.-10     	; 0x14c <main+0x26>
     156:	f7 01       	movw	r30, r14
     158:	af 01       	movw	r20, r30
     15a:	4e 19       	sub	r20, r14
     15c:	5f 09       	sbc	r21, r15
    //2er-Reihe in das Array abfühlen
    //falls die 2er-Reihezahl durch 10 Teilbar ist. auf 0 setztn
    for ( uint16_t i = 0; i < ANZAHL; i=i+1)
    {
        uint16_t zahl= i*2;
        if (zahl%10 )
     15e:	9a 01       	movw	r18, r20
     160:	ad ec       	ldi	r26, 0xCD	; 205
     162:	bc ec       	ldi	r27, 0xCC	; 204
     164:	95 d5       	rcall	.+2858   	; 0xc90 <__umulhisi3>
     166:	96 95       	lsr	r25
     168:	87 95       	ror	r24
     16a:	96 95       	lsr	r25
     16c:	87 95       	ror	r24
     16e:	96 95       	lsr	r25
     170:	87 95       	ror	r24
     172:	9c 01       	movw	r18, r24
     174:	22 0f       	add	r18, r18
     176:	33 1f       	adc	r19, r19
     178:	88 0f       	add	r24, r24
     17a:	99 1f       	adc	r25, r25
     17c:	88 0f       	add	r24, r24
     17e:	99 1f       	adc	r25, r25
     180:	88 0f       	add	r24, r24
     182:	99 1f       	adc	r25, r25
     184:	82 0f       	add	r24, r18
     186:	93 1f       	adc	r25, r19
     188:	48 17       	cp	r20, r24
     18a:	59 07       	cpc	r21, r25
     18c:	19 f0       	breq	.+6      	; 0x194 <main+0x6e>
        {
           muster[i] =zahl ;
     18e:	51 83       	std	Z+1, r21	; 0x01
     190:	40 83       	st	Z, r20
     192:	02 c0       	rjmp	.+4      	; 0x198 <main+0x72>
        }
        else
        {
            muster[i] = 0;
     194:	11 82       	std	Z+1, r1	; 0x01
     196:	10 82       	st	Z, r1
     198:	32 96       	adiw	r30, 0x02	; 2
        muster[i] = 0;
    }
    
    //2er-Reihe in das Array abfühlen
    //falls die 2er-Reihezahl durch 10 Teilbar ist. auf 0 setztn
    for ( uint16_t i = 0; i < ANZAHL; i=i+1)
     19a:	e0 17       	cp	r30, r16
     19c:	f1 07       	cpc	r31, r17
     19e:	e1 f6       	brne	.-72     	; 0x158 <main+0x32>
        //Verarbeitung-------------------------------------------------------------
        outLeds = muster[schalter];
        
        //Ausgabe------------------------------------------------------------------
        ledWriteAll(outLeds);
        lcdLog("I: %u O: %u",schalter, outLeds);
     1a0:	0f 2e       	mov	r0, r31
     1a2:	fa e0       	ldi	r31, 0x0A	; 10
     1a4:	ef 2e       	mov	r14, r31
     1a6:	f2 e0       	ldi	r31, 0x02	; 2
     1a8:	ff 2e       	mov	r15, r31
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        schalter = switchReadAll();
     1aa:	f0 2d       	mov	r31, r0
     1ac:	21 d0       	rcall	.+66     	; 0x1f0 <switchReadAll>
     1ae:	18 2f       	mov	r17, r24
        //Verarbeitung-------------------------------------------------------------
        outLeds = muster[schalter];
     1b0:	e8 2f       	mov	r30, r24
     1b2:	f0 e0       	ldi	r31, 0x00	; 0
     1b4:	ee 0f       	add	r30, r30
     1b6:	ff 1f       	adc	r31, r31
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	8c 0f       	add	r24, r28
     1be:	9d 1f       	adc	r25, r29
     1c0:	e8 0f       	add	r30, r24
     1c2:	f9 1f       	adc	r31, r25
     1c4:	00 81       	ld	r16, Z
        
        //Ausgabe------------------------------------------------------------------
        ledWriteAll(outLeds);
     1c6:	d1 80       	ldd	r13, Z+1	; 0x01
     1c8:	80 2f       	mov	r24, r16
     1ca:	9d 2d       	mov	r25, r13
     1cc:	0e d0       	rcall	.+28     	; 0x1ea <ledWriteAll>
        lcdLog("I: %u O: %u",schalter, outLeds);
     1ce:	df 92       	push	r13
     1d0:	0f 93       	push	r16
     1d2:	1f 92       	push	r1
     1d4:	1f 93       	push	r17
     1d6:	ff 92       	push	r15
     1d8:	ef 92       	push	r14
     1da:	68 d3       	rcall	.+1744   	; 0x8ac <lcdLog>
     1dc:	0f 90       	pop	r0
     1de:	0f 90       	pop	r0
     1e0:	0f 90       	pop	r0
     1e2:	0f 90       	pop	r0
     1e4:	0f 90       	pop	r0
     1e6:	0f 90       	pop	r0
     1e8:	e1 cf       	rjmp	.-62     	; 0x1ac <main+0x86>

000001ea <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     1ea:	82 b9       	out	0x02, r24	; 2
     1ec:	95 b9       	out	0x05, r25	; 5
     1ee:	08 95       	ret

000001f0 <switchReadAll>:
     1f0:	86 b1       	in	r24, 0x06	; 6
     1f2:	08 95       	ret

000001f4 <startSystemTimeMs>:
     1f4:	83 e0       	ldi	r24, 0x03	; 3
     1f6:	84 bd       	out	0x24, r24	; 36
     1f8:	8b e0       	ldi	r24, 0x0B	; 11
     1fa:	85 bd       	out	0x25, r24	; 37
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     202:	89 ef       	ldi	r24, 0xF9	; 249
     204:	87 bd       	out	0x27, r24	; 39
     206:	08 95       	ret

00000208 <initAdc>:
     208:	11 ba       	out	0x11, r1	; 17
     20a:	10 ba       	out	0x10, r1	; 16
     20c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     210:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     214:	80 e4       	ldi	r24, 0x40	; 64
     216:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     21a:	8f e0       	ldi	r24, 0x0F	; 15
     21c:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     220:	8f ef       	ldi	r24, 0xFF	; 255
     222:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     226:	ea e7       	ldi	r30, 0x7A	; 122
     228:	f0 e0       	ldi	r31, 0x00	; 0
     22a:	87 ea       	ldi	r24, 0xA7	; 167
     22c:	80 83       	st	Z, r24
     22e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     232:	80 81       	ld	r24, Z
     234:	80 64       	ori	r24, 0x40	; 64
     236:	80 83       	st	Z, r24
     238:	80 81       	ld	r24, Z
     23a:	84 ff       	sbrs	r24, 4
     23c:	fd cf       	rjmp	.-6      	; 0x238 <initAdc+0x30>
     23e:	ea e7       	ldi	r30, 0x7A	; 122
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 81       	ld	r24, Z
     244:	8f 7e       	andi	r24, 0xEF	; 239
     246:	80 83       	st	Z, r24
     248:	08 95       	ret

0000024a <rgbWrite>:
     24a:	2f ef       	ldi	r18, 0xFF	; 255
     24c:	33 e0       	ldi	r19, 0x03	; 3
     24e:	f9 01       	movw	r30, r18
     250:	e8 1b       	sub	r30, r24
     252:	f9 0b       	sbc	r31, r25
     254:	c9 01       	movw	r24, r18
     256:	86 1b       	sub	r24, r22
     258:	97 0b       	sbc	r25, r23
     25a:	24 1b       	sub	r18, r20
     25c:	35 0b       	sbc	r19, r21
     25e:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     262:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     266:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     26a:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     26e:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     272:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     276:	08 95       	ret

00000278 <initRgb>:
     278:	8e ef       	ldi	r24, 0xFE	; 254
     27a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     27e:	8b e1       	ldi	r24, 0x1B	; 27
     280:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     284:	83 e0       	ldi	r24, 0x03	; 3
     286:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     28a:	8f ef       	ldi	r24, 0xFF	; 255
     28c:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     290:	40 e0       	ldi	r20, 0x00	; 0
     292:	50 e0       	ldi	r21, 0x00	; 0
     294:	60 e0       	ldi	r22, 0x00	; 0
     296:	70 e0       	ldi	r23, 0x00	; 0
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	d6 cf       	rjmp	.-84     	; 0x24a <rgbWrite>
     29e:	08 95       	ret

000002a0 <lcdSid>:
     2a0:	88 23       	and	r24, r24
     2a2:	11 f0       	breq	.+4      	; 0x2a8 <lcdSid+0x8>
     2a4:	a0 9a       	sbi	0x14, 0	; 20
     2a6:	08 95       	ret
     2a8:	a0 98       	cbi	0x14, 0	; 20
     2aa:	08 95       	ret

000002ac <lcdSclk>:
     2ac:	88 23       	and	r24, r24
     2ae:	11 f0       	breq	.+4      	; 0x2b4 <lcdSclk+0x8>
     2b0:	a1 9a       	sbi	0x14, 1	; 20
     2b2:	08 95       	ret
     2b4:	a1 98       	cbi	0x14, 1	; 20
     2b6:	08 95       	ret

000002b8 <lcdLight>:
     2b8:	81 11       	cpse	r24, r1
     2ba:	04 c0       	rjmp	.+8      	; 0x2c4 <lcdLight+0xc>
     2bc:	84 b5       	in	r24, 0x24	; 36
     2be:	8f 7d       	andi	r24, 0xDF	; 223
     2c0:	84 bd       	out	0x24, r24	; 36
     2c2:	08 95       	ret
     2c4:	94 b5       	in	r25, 0x24	; 36
     2c6:	90 62       	ori	r25, 0x20	; 32
     2c8:	94 bd       	out	0x24, r25	; 36
     2ca:	88 bd       	out	0x28, r24	; 40
     2cc:	08 95       	ret

000002ce <writeLcdF>:
     2ce:	ef 92       	push	r14
     2d0:	ff 92       	push	r15
     2d2:	0f 93       	push	r16
     2d4:	1f 93       	push	r17
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	7c 01       	movw	r14, r24
     2dc:	eb 01       	movw	r28, r22
     2de:	81 e0       	ldi	r24, 0x01	; 1
     2e0:	df df       	rcall	.-66     	; 0x2a0 <lcdSid>
     2e2:	05 e0       	ldi	r16, 0x05	; 5
     2e4:	10 e0       	ldi	r17, 0x00	; 0
     2e6:	80 e0       	ldi	r24, 0x00	; 0
     2e8:	e1 df       	rcall	.-62     	; 0x2ac <lcdSclk>
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	df df       	rcall	.-66     	; 0x2ac <lcdSclk>
     2ee:	01 50       	subi	r16, 0x01	; 1
     2f0:	11 09       	sbc	r17, r1
     2f2:	c9 f7       	brne	.-14     	; 0x2e6 <writeLcdF+0x18>
     2f4:	80 e0       	ldi	r24, 0x00	; 0
     2f6:	d4 df       	rcall	.-88     	; 0x2a0 <lcdSid>
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	d8 df       	rcall	.-80     	; 0x2ac <lcdSclk>
     2fc:	81 e0       	ldi	r24, 0x01	; 1
     2fe:	d6 df       	rcall	.-84     	; 0x2ac <lcdSclk>
     300:	83 e4       	ldi	r24, 0x43	; 67
     302:	e8 16       	cp	r14, r24
     304:	f1 04       	cpc	r15, r1
     306:	19 f4       	brne	.+6      	; 0x30e <writeLcdF+0x40>
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	ca df       	rcall	.-108    	; 0x2a0 <lcdSid>
     30c:	02 c0       	rjmp	.+4      	; 0x312 <writeLcdF+0x44>
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	c7 df       	rcall	.-114    	; 0x2a0 <lcdSid>
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	cb df       	rcall	.-106    	; 0x2ac <lcdSclk>
     316:	81 e0       	ldi	r24, 0x01	; 1
     318:	c9 df       	rcall	.-110    	; 0x2ac <lcdSclk>
     31a:	80 e0       	ldi	r24, 0x00	; 0
     31c:	c1 df       	rcall	.-126    	; 0x2a0 <lcdSid>
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	c5 df       	rcall	.-118    	; 0x2ac <lcdSclk>
     322:	81 e0       	ldi	r24, 0x01	; 1
     324:	c3 df       	rcall	.-122    	; 0x2ac <lcdSclk>
     326:	04 e0       	ldi	r16, 0x04	; 4
     328:	10 e0       	ldi	r17, 0x00	; 0
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	bf df       	rcall	.-130    	; 0x2ac <lcdSclk>
     32e:	c0 ff       	sbrs	r28, 0
     330:	03 c0       	rjmp	.+6      	; 0x338 <writeLcdF+0x6a>
     332:	81 e0       	ldi	r24, 0x01	; 1
     334:	b5 df       	rcall	.-150    	; 0x2a0 <lcdSid>
     336:	02 c0       	rjmp	.+4      	; 0x33c <writeLcdF+0x6e>
     338:	80 e0       	ldi	r24, 0x00	; 0
     33a:	b2 df       	rcall	.-156    	; 0x2a0 <lcdSid>
     33c:	d6 95       	lsr	r29
     33e:	c7 95       	ror	r28
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	b4 df       	rcall	.-152    	; 0x2ac <lcdSclk>
     344:	81 e0       	ldi	r24, 0x01	; 1
     346:	b2 df       	rcall	.-156    	; 0x2ac <lcdSclk>
     348:	01 50       	subi	r16, 0x01	; 1
     34a:	11 09       	sbc	r17, r1
     34c:	71 f7       	brne	.-36     	; 0x32a <writeLcdF+0x5c>
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	a7 df       	rcall	.-178    	; 0x2a0 <lcdSid>
     352:	04 e0       	ldi	r16, 0x04	; 4
     354:	10 e0       	ldi	r17, 0x00	; 0
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	a9 df       	rcall	.-174    	; 0x2ac <lcdSclk>
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	a7 df       	rcall	.-178    	; 0x2ac <lcdSclk>
     35e:	01 50       	subi	r16, 0x01	; 1
     360:	11 09       	sbc	r17, r1
     362:	c9 f7       	brne	.-14     	; 0x356 <writeLcdF+0x88>
     364:	04 e0       	ldi	r16, 0x04	; 4
     366:	10 e0       	ldi	r17, 0x00	; 0
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	a0 df       	rcall	.-192    	; 0x2ac <lcdSclk>
     36c:	c0 ff       	sbrs	r28, 0
     36e:	03 c0       	rjmp	.+6      	; 0x376 <writeLcdF+0xa8>
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	96 df       	rcall	.-212    	; 0x2a0 <lcdSid>
     374:	02 c0       	rjmp	.+4      	; 0x37a <writeLcdF+0xac>
     376:	80 e0       	ldi	r24, 0x00	; 0
     378:	93 df       	rcall	.-218    	; 0x2a0 <lcdSid>
     37a:	d6 95       	lsr	r29
     37c:	c7 95       	ror	r28
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	95 df       	rcall	.-214    	; 0x2ac <lcdSclk>
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	93 df       	rcall	.-218    	; 0x2ac <lcdSclk>
     386:	01 50       	subi	r16, 0x01	; 1
     388:	11 09       	sbc	r17, r1
     38a:	71 f7       	brne	.-36     	; 0x368 <writeLcdF+0x9a>
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	88 df       	rcall	.-240    	; 0x2a0 <lcdSid>
     390:	c4 e0       	ldi	r28, 0x04	; 4
     392:	d0 e0       	ldi	r29, 0x00	; 0
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	8a df       	rcall	.-236    	; 0x2ac <lcdSclk>
     398:	81 e0       	ldi	r24, 0x01	; 1
     39a:	88 df       	rcall	.-240    	; 0x2ac <lcdSclk>
     39c:	21 97       	sbiw	r28, 0x01	; 1
     39e:	d1 f7       	brne	.-12     	; 0x394 <writeLcdF+0xc6>
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	7e df       	rcall	.-260    	; 0x2a0 <lcdSid>
     3a4:	87 ec       	ldi	r24, 0xC7	; 199
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	01 97       	sbiw	r24, 0x01	; 1
     3aa:	f1 f7       	brne	.-4      	; 0x3a8 <writeLcdF+0xda>
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <writeLcdF+0xe0>
     3ae:	00 00       	nop
     3b0:	df 91       	pop	r29
     3b2:	cf 91       	pop	r28
     3b4:	1f 91       	pop	r17
     3b6:	0f 91       	pop	r16
     3b8:	ff 90       	pop	r15
     3ba:	ef 90       	pop	r14
     3bc:	08 95       	ret

000003be <lcdWriteText>:
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	cd b7       	in	r28, 0x3d	; 61
     3c6:	de b7       	in	r29, 0x3e	; 62
     3c8:	65 97       	sbiw	r28, 0x15	; 21
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	f8 94       	cli
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	cd bf       	out	0x3d, r28	; 61
     3d4:	9e 01       	movw	r18, r28
     3d6:	20 5e       	subi	r18, 0xE0	; 224
     3d8:	3f 4f       	sbci	r19, 0xFF	; 255
     3da:	4e 8d       	ldd	r20, Y+30	; 0x1e
     3dc:	5f 8d       	ldd	r21, Y+31	; 0x1f
     3de:	65 e1       	ldi	r22, 0x15	; 21
     3e0:	70 e0       	ldi	r23, 0x00	; 0
     3e2:	ce 01       	movw	r24, r28
     3e4:	01 96       	adiw	r24, 0x01	; 1
     3e6:	d6 d4       	rcall	.+2476   	; 0xd94 <vsnprintf>
     3e8:	6d 8d       	ldd	r22, Y+29	; 0x1d
     3ea:	8c 8d       	ldd	r24, Y+28	; 0x1c
     3ec:	90 e2       	ldi	r25, 0x20	; 32
     3ee:	89 9f       	mul	r24, r25
     3f0:	60 0d       	add	r22, r0
     3f2:	11 24       	eor	r1, r1
     3f4:	60 68       	ori	r22, 0x80	; 128
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	83 e4       	ldi	r24, 0x43	; 67
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	68 df       	rcall	.-304    	; 0x2ce <writeLcdF>
     3fe:	69 81       	ldd	r22, Y+1	; 0x01
     400:	66 23       	and	r22, r22
     402:	79 f0       	breq	.+30     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     404:	10 e0       	ldi	r17, 0x00	; 0
     406:	1f 5f       	subi	r17, 0xFF	; 255
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	84 e4       	ldi	r24, 0x44	; 68
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	5f df       	rcall	.-322    	; 0x2ce <writeLcdF>
     410:	e1 e0       	ldi	r30, 0x01	; 1
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	ec 0f       	add	r30, r28
     416:	fd 1f       	adc	r31, r29
     418:	e1 0f       	add	r30, r17
     41a:	f1 1d       	adc	r31, r1
     41c:	60 81       	ld	r22, Z
     41e:	61 11       	cpse	r22, r1
     420:	f2 cf       	rjmp	.-28     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     422:	65 96       	adiw	r28, 0x15	; 21
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	f8 94       	cli
     428:	de bf       	out	0x3e, r29	; 62
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	cd bf       	out	0x3d, r28	; 61
     42e:	df 91       	pop	r29
     430:	cf 91       	pop	r28
     432:	1f 91       	pop	r17
     434:	08 95       	ret

00000436 <lcdWriteZahl>:
     436:	2f 92       	push	r2
     438:	3f 92       	push	r3
     43a:	4f 92       	push	r4
     43c:	5f 92       	push	r5
     43e:	6f 92       	push	r6
     440:	7f 92       	push	r7
     442:	8f 92       	push	r8
     444:	9f 92       	push	r9
     446:	af 92       	push	r10
     448:	bf 92       	push	r11
     44a:	cf 92       	push	r12
     44c:	df 92       	push	r13
     44e:	ef 92       	push	r14
     450:	ff 92       	push	r15
     452:	0f 93       	push	r16
     454:	1f 93       	push	r17
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	cd b7       	in	r28, 0x3d	; 61
     45c:	de b7       	in	r29, 0x3e	; 62
     45e:	e3 97       	sbiw	r28, 0x33	; 51
     460:	0f b6       	in	r0, 0x3f	; 63
     462:	f8 94       	cli
     464:	de bf       	out	0x3e, r29	; 62
     466:	0f be       	out	0x3f, r0	; 63
     468:	cd bf       	out	0x3d, r28	; 61
     46a:	8a ab       	std	Y+50, r24	; 0x32
     46c:	6b ab       	std	Y+51, r22	; 0x33
     46e:	ed a6       	std	Y+45, r14	; 0x2d
     470:	fe a6       	std	Y+46, r15	; 0x2e
     472:	70 2e       	mov	r7, r16
     474:	61 2e       	mov	r6, r17
     476:	52 2e       	mov	r5, r18
     478:	43 2e       	mov	r4, r19
     47a:	cf a6       	std	Y+47, r12	; 0x2f
     47c:	a8 aa       	std	Y+48, r10	; 0x30
     47e:	8c 2d       	mov	r24, r12
     480:	8a 0d       	add	r24, r10
     482:	89 ab       	std	Y+49, r24	; 0x31
     484:	85 31       	cpi	r24, 0x15	; 21
     486:	70 f0       	brcs	.+28     	; 0x4a4 <lcdWriteZahl+0x6e>
     488:	86 e1       	ldi	r24, 0x16	; 22
     48a:	92 e0       	ldi	r25, 0x02	; 2
     48c:	9f 93       	push	r25
     48e:	8f 93       	push	r24
     490:	9b a9       	ldd	r25, Y+51	; 0x33
     492:	9f 93       	push	r25
     494:	ea a9       	ldd	r30, Y+50	; 0x32
     496:	ef 93       	push	r30
     498:	92 df       	rcall	.-220    	; 0x3be <lcdWriteText>
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
     49e:	0f 90       	pop	r0
     4a0:	0f 90       	pop	r0
     4a2:	a8 c0       	rjmp	.+336    	; 0x5f4 <lcdWriteZahl+0x1be>
     4a4:	4e 01       	movw	r8, r28
     4a6:	f5 e1       	ldi	r31, 0x15	; 21
     4a8:	8f 0e       	add	r8, r31
     4aa:	91 1c       	adc	r9, r1
     4ac:	ce 01       	movw	r24, r28
     4ae:	01 96       	adiw	r24, 0x01	; 1
     4b0:	9c a7       	std	Y+44, r25	; 0x2c
     4b2:	8b a7       	std	Y+43, r24	; 0x2b
     4b4:	24 2e       	mov	r2, r20
     4b6:	35 2e       	mov	r3, r21
     4b8:	0f 2e       	mov	r0, r31
     4ba:	fa e0       	ldi	r31, 0x0A	; 10
     4bc:	af 2e       	mov	r10, r31
     4be:	f0 2d       	mov	r31, r0
     4c0:	b1 2c       	mov	r11, r1
     4c2:	c1 2c       	mov	r12, r1
     4c4:	d1 2c       	mov	r13, r1
     4c6:	e1 2c       	mov	r14, r1
     4c8:	f1 2c       	mov	r15, r1
     4ca:	00 e0       	ldi	r16, 0x00	; 0
     4cc:	10 e0       	ldi	r17, 0x00	; 0
     4ce:	2d a5       	ldd	r18, Y+45	; 0x2d
     4d0:	3e a5       	ldd	r19, Y+46	; 0x2e
     4d2:	47 2d       	mov	r20, r7
     4d4:	56 2d       	mov	r21, r6
     4d6:	65 2d       	mov	r22, r5
     4d8:	74 2d       	mov	r23, r4
     4da:	82 2d       	mov	r24, r2
     4dc:	93 2d       	mov	r25, r3
     4de:	e7 d3       	rcall	.+1998   	; 0xcae <__umoddi3>
     4e0:	20 5d       	subi	r18, 0xD0	; 208
     4e2:	f4 01       	movw	r30, r8
     4e4:	22 93       	st	-Z, r18
     4e6:	4f 01       	movw	r8, r30
     4e8:	2d a5       	ldd	r18, Y+45	; 0x2d
     4ea:	3e a5       	ldd	r19, Y+46	; 0x2e
     4ec:	47 2d       	mov	r20, r7
     4ee:	56 2d       	mov	r21, r6
     4f0:	65 2d       	mov	r22, r5
     4f2:	74 2d       	mov	r23, r4
     4f4:	82 2d       	mov	r24, r2
     4f6:	93 2d       	mov	r25, r3
     4f8:	dc d3       	rcall	.+1976   	; 0xcb2 <__udivdi3>
     4fa:	2d a7       	std	Y+45, r18	; 0x2d
     4fc:	3e a7       	std	Y+46, r19	; 0x2e
     4fe:	74 2e       	mov	r7, r20
     500:	65 2e       	mov	r6, r21
     502:	56 2e       	mov	r5, r22
     504:	47 2e       	mov	r4, r23
     506:	28 2e       	mov	r2, r24
     508:	39 2e       	mov	r3, r25
     50a:	8b a5       	ldd	r24, Y+43	; 0x2b
     50c:	9c a5       	ldd	r25, Y+44	; 0x2c
     50e:	88 15       	cp	r24, r8
     510:	99 05       	cpc	r25, r9
     512:	91 f6       	brne	.-92     	; 0x4b8 <lcdWriteZahl+0x82>
     514:	84 e1       	ldi	r24, 0x14	; 20
     516:	99 a9       	ldd	r25, Y+49	; 0x31
     518:	89 1b       	sub	r24, r25
     51a:	ef a5       	ldd	r30, Y+47	; 0x2f
     51c:	ee 23       	and	r30, r30
     51e:	89 f0       	breq	.+34     	; 0x542 <lcdWriteZahl+0x10c>
     520:	fe 01       	movw	r30, r28
     522:	75 96       	adiw	r30, 0x15	; 21
     524:	2f a5       	ldd	r18, Y+47	; 0x2f
     526:	28 0f       	add	r18, r24
     528:	a1 e0       	ldi	r26, 0x01	; 1
     52a:	b0 e0       	ldi	r27, 0x00	; 0
     52c:	ac 0f       	add	r26, r28
     52e:	bd 1f       	adc	r27, r29
     530:	a8 0f       	add	r26, r24
     532:	b1 1d       	adc	r27, r1
     534:	9c 91       	ld	r25, X
     536:	91 93       	st	Z+, r25
     538:	8f 5f       	subi	r24, 0xFF	; 255
     53a:	82 13       	cpse	r24, r18
     53c:	f5 cf       	rjmp	.-22     	; 0x528 <lcdWriteZahl+0xf2>
     53e:	3f a5       	ldd	r19, Y+47	; 0x2f
     540:	02 c0       	rjmp	.+4      	; 0x546 <lcdWriteZahl+0x110>
     542:	28 2f       	mov	r18, r24
     544:	3f a5       	ldd	r19, Y+47	; 0x2f
     546:	f8 a9       	ldd	r31, Y+48	; 0x30
     548:	ff 23       	and	r31, r31
     54a:	f1 f0       	breq	.+60     	; 0x588 <lcdWriteZahl+0x152>
     54c:	fe 01       	movw	r30, r28
     54e:	e3 0f       	add	r30, r19
     550:	f1 1d       	adc	r31, r1
     552:	8e e2       	ldi	r24, 0x2E	; 46
     554:	85 8b       	std	Z+21, r24	; 0x15
     556:	91 e0       	ldi	r25, 0x01	; 1
     558:	93 0f       	add	r25, r19
     55a:	38 a9       	ldd	r19, Y+48	; 0x30
     55c:	39 0f       	add	r19, r25
     55e:	89 2f       	mov	r24, r25
     560:	29 1b       	sub	r18, r25
     562:	e5 e1       	ldi	r30, 0x15	; 21
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	ec 0f       	add	r30, r28
     568:	fd 1f       	adc	r31, r29
     56a:	e8 0f       	add	r30, r24
     56c:	f1 1d       	adc	r31, r1
     56e:	92 2f       	mov	r25, r18
     570:	98 0f       	add	r25, r24
     572:	a1 e0       	ldi	r26, 0x01	; 1
     574:	b0 e0       	ldi	r27, 0x00	; 0
     576:	ac 0f       	add	r26, r28
     578:	bd 1f       	adc	r27, r29
     57a:	a9 0f       	add	r26, r25
     57c:	b1 1d       	adc	r27, r1
     57e:	9c 91       	ld	r25, X
     580:	90 83       	st	Z, r25
     582:	8f 5f       	subi	r24, 0xFF	; 255
     584:	38 13       	cpse	r19, r24
     586:	ed cf       	rjmp	.-38     	; 0x562 <lcdWriteZahl+0x12c>
     588:	fe 01       	movw	r30, r28
     58a:	e3 0f       	add	r30, r19
     58c:	f1 1d       	adc	r31, r1
     58e:	15 8a       	std	Z+21, r1	; 0x15
     590:	8d 89       	ldd	r24, Y+21	; 0x15
     592:	80 33       	cpi	r24, 0x30	; 48
     594:	11 f5       	brne	.+68     	; 0x5da <lcdWriteZahl+0x1a4>
     596:	8f a5       	ldd	r24, Y+47	; 0x2f
     598:	48 2f       	mov	r20, r24
     59a:	50 e0       	ldi	r21, 0x00	; 0
     59c:	41 50       	subi	r20, 0x01	; 1
     59e:	51 09       	sbc	r21, r1
     5a0:	14 16       	cp	r1, r20
     5a2:	15 06       	cpc	r1, r21
     5a4:	d4 f4       	brge	.+52     	; 0x5da <lcdWriteZahl+0x1a4>
     5a6:	80 e0       	ldi	r24, 0x00	; 0
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	60 e2       	ldi	r22, 0x20	; 32
     5ae:	2f 5f       	subi	r18, 0xFF	; 255
     5b0:	e5 e1       	ldi	r30, 0x15	; 21
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	ec 0f       	add	r30, r28
     5b6:	fd 1f       	adc	r31, r29
     5b8:	e8 0f       	add	r30, r24
     5ba:	f9 1f       	adc	r31, r25
     5bc:	60 83       	st	Z, r22
     5be:	82 2f       	mov	r24, r18
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	e5 e1       	ldi	r30, 0x15	; 21
     5c4:	f0 e0       	ldi	r31, 0x00	; 0
     5c6:	ec 0f       	add	r30, r28
     5c8:	fd 1f       	adc	r31, r29
     5ca:	e8 0f       	add	r30, r24
     5cc:	f9 1f       	adc	r31, r25
     5ce:	30 81       	ld	r19, Z
     5d0:	30 33       	cpi	r19, 0x30	; 48
     5d2:	19 f4       	brne	.+6      	; 0x5da <lcdWriteZahl+0x1a4>
     5d4:	84 17       	cp	r24, r20
     5d6:	95 07       	cpc	r25, r21
     5d8:	54 f3       	brlt	.-44     	; 0x5ae <lcdWriteZahl+0x178>
     5da:	ce 01       	movw	r24, r28
     5dc:	45 96       	adiw	r24, 0x15	; 21
     5de:	9f 93       	push	r25
     5e0:	8f 93       	push	r24
     5e2:	9b a9       	ldd	r25, Y+51	; 0x33
     5e4:	9f 93       	push	r25
     5e6:	ea a9       	ldd	r30, Y+50	; 0x32
     5e8:	ef 93       	push	r30
     5ea:	e9 de       	rcall	.-558    	; 0x3be <lcdWriteText>
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	e3 96       	adiw	r28, 0x33	; 51
     5f6:	0f b6       	in	r0, 0x3f	; 63
     5f8:	f8 94       	cli
     5fa:	de bf       	out	0x3e, r29	; 62
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	cd bf       	out	0x3d, r28	; 61
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	1f 91       	pop	r17
     606:	0f 91       	pop	r16
     608:	ff 90       	pop	r15
     60a:	ef 90       	pop	r14
     60c:	df 90       	pop	r13
     60e:	cf 90       	pop	r12
     610:	bf 90       	pop	r11
     612:	af 90       	pop	r10
     614:	9f 90       	pop	r9
     616:	8f 90       	pop	r8
     618:	7f 90       	pop	r7
     61a:	6f 90       	pop	r6
     61c:	5f 90       	pop	r5
     61e:	4f 90       	pop	r4
     620:	3f 90       	pop	r3
     622:	2f 90       	pop	r2
     624:	08 95       	ret

00000626 <lcdClear>:
     626:	61 e0       	ldi	r22, 0x01	; 1
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	83 e4       	ldi	r24, 0x43	; 67
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	4f de       	rcall	.-866    	; 0x2ce <writeLcdF>
     630:	8f e3       	ldi	r24, 0x3F	; 63
     632:	9f e1       	ldi	r25, 0x1F	; 31
     634:	01 97       	sbiw	r24, 0x01	; 1
     636:	f1 f7       	brne	.-4      	; 0x634 <lcdClear+0xe>
     638:	00 c0       	rjmp	.+0      	; 0x63a <lcdClear+0x14>
     63a:	00 00       	nop
     63c:	8e e3       	ldi	r24, 0x3E	; 62
     63e:	92 e0       	ldi	r25, 0x02	; 2
     640:	9f 93       	push	r25
     642:	8f 93       	push	r24
     644:	1f 92       	push	r1
     646:	1f 92       	push	r1
     648:	ba de       	rcall	.-652    	; 0x3be <lcdWriteText>
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	0f 90       	pop	r0
     652:	08 95       	ret

00000654 <initLcd>:
     654:	81 e0       	ldi	r24, 0x01	; 1
     656:	2a de       	rcall	.-940    	; 0x2ac <lcdSclk>
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	22 de       	rcall	.-956    	; 0x2a0 <lcdSid>
     65c:	64 e3       	ldi	r22, 0x34	; 52
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	83 e4       	ldi	r24, 0x43	; 67
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	34 de       	rcall	.-920    	; 0x2ce <writeLcdF>
     666:	69 e0       	ldi	r22, 0x09	; 9
     668:	70 e0       	ldi	r23, 0x00	; 0
     66a:	83 e4       	ldi	r24, 0x43	; 67
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	2f de       	rcall	.-930    	; 0x2ce <writeLcdF>
     670:	60 e3       	ldi	r22, 0x30	; 48
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	83 e4       	ldi	r24, 0x43	; 67
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	2a de       	rcall	.-940    	; 0x2ce <writeLcdF>
     67a:	6c e0       	ldi	r22, 0x0C	; 12
     67c:	70 e0       	ldi	r23, 0x00	; 0
     67e:	83 e4       	ldi	r24, 0x43	; 67
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	25 de       	rcall	.-950    	; 0x2ce <writeLcdF>
     684:	d0 df       	rcall	.-96     	; 0x626 <lcdClear>
     686:	67 e0       	ldi	r22, 0x07	; 7
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	83 e4       	ldi	r24, 0x43	; 67
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	1f de       	rcall	.-962    	; 0x2ce <writeLcdF>
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	12 ce       	rjmp	.-988    	; 0x2b8 <lcdLight>
     694:	08 95       	ret

00000696 <initBoard>:
     696:	4f 92       	push	r4
     698:	5f 92       	push	r5
     69a:	6f 92       	push	r6
     69c:	7f 92       	push	r7
     69e:	8f 92       	push	r8
     6a0:	9f 92       	push	r9
     6a2:	af 92       	push	r10
     6a4:	bf 92       	push	r11
     6a6:	cf 92       	push	r12
     6a8:	df 92       	push	r13
     6aa:	ef 92       	push	r14
     6ac:	ff 92       	push	r15
     6ae:	0f 93       	push	r16
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	c8 2f       	mov	r28, r24
     6b8:	85 b7       	in	r24, 0x35	; 53
     6ba:	85 bf       	out	0x35, r24	; 53
     6bc:	12 b8       	out	0x02, r1	; 2
     6be:	8f ef       	ldi	r24, 0xFF	; 255
     6c0:	81 b9       	out	0x01, r24	; 1
     6c2:	15 b8       	out	0x05, r1	; 5
     6c4:	84 b9       	out	0x04, r24	; 4
     6c6:	88 b9       	out	0x08, r24	; 8
     6c8:	17 b8       	out	0x07, r1	; 7
     6ca:	8b b9       	out	0x0b, r24	; 11
     6cc:	1a b8       	out	0x0a, r1	; 10
     6ce:	8e b9       	out	0x0e, r24	; 14
     6d0:	1d b8       	out	0x0d, r1	; 13
     6d2:	72 98       	cbi	0x0e, 2	; 14
     6d4:	11 ba       	out	0x11, r1	; 17
     6d6:	10 ba       	out	0x10, r1	; 16
     6d8:	94 e0       	ldi	r25, 0x04	; 4
     6da:	94 bb       	out	0x14, r25	; 20
     6dc:	93 b3       	in	r25, 0x13	; 19
     6de:	93 60       	ori	r25, 0x03	; 3
     6e0:	93 bb       	out	0x13, r25	; 19
     6e2:	9d 9a       	sbi	0x13, 5	; 19
     6e4:	97 ec       	ldi	r25, 0xC7	; 199
     6e6:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     6ea:	98 e3       	ldi	r25, 0x38	; 56
     6ec:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     6f0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     6f4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     6f8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     6fc:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     700:	8c e3       	ldi	r24, 0x3C	; 60
     702:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     706:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     70a:	78 94       	sei
     70c:	73 dd       	rcall	.-1306   	; 0x1f4 <startSystemTimeMs>
     70e:	a2 df       	rcall	.-188    	; 0x654 <initLcd>
     710:	7b dd       	rcall	.-1290   	; 0x208 <initAdc>
     712:	b2 dd       	rcall	.-1180   	; 0x278 <initRgb>
     714:	cc 23       	and	r28, r28
     716:	09 f4       	brne	.+2      	; 0x71a <initBoard+0x84>
     718:	b8 c0       	rjmp	.+368    	; 0x88a <initBoard+0x1f4>
     71a:	8f ef       	ldi	r24, 0xFF	; 255
     71c:	cd dd       	rcall	.-1126   	; 0x2b8 <lcdLight>
     71e:	40 e0       	ldi	r20, 0x00	; 0
     720:	50 e0       	ldi	r21, 0x00	; 0
     722:	6f ef       	ldi	r22, 0xFF	; 255
     724:	73 e0       	ldi	r23, 0x03	; 3
     726:	80 e0       	ldi	r24, 0x00	; 0
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	8f dd       	rcall	.-1250   	; 0x24a <rgbWrite>
     72c:	8b e2       	ldi	r24, 0x2B	; 43
     72e:	92 e0       	ldi	r25, 0x02	; 2
     730:	9f 93       	push	r25
     732:	8f 93       	push	r24
     734:	1f 92       	push	r1
     736:	1f 92       	push	r1
     738:	42 de       	rcall	.-892    	; 0x3be <lcdWriteText>
     73a:	80 e4       	ldi	r24, 0x40	; 64
     73c:	92 e0       	ldi	r25, 0x02	; 2
     73e:	9f 93       	push	r25
     740:	8f 93       	push	r24
     742:	1f 92       	push	r1
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	8f 93       	push	r24
     748:	3a de       	rcall	.-908    	; 0x3be <lcdWriteText>
     74a:	86 e1       	ldi	r24, 0x16	; 22
     74c:	92 e0       	ldi	r25, 0x02	; 2
     74e:	9f 93       	push	r25
     750:	8f 93       	push	r24
     752:	1f 92       	push	r1
     754:	82 e0       	ldi	r24, 0x02	; 2
     756:	8f 93       	push	r24
     758:	32 de       	rcall	.-924    	; 0x3be <lcdWriteText>
     75a:	85 e5       	ldi	r24, 0x55	; 85
     75c:	92 e0       	ldi	r25, 0x02	; 2
     75e:	9f 93       	push	r25
     760:	8f 93       	push	r24
     762:	1f 92       	push	r1
     764:	83 e0       	ldi	r24, 0x03	; 3
     766:	8f 93       	push	r24
     768:	2a de       	rcall	.-940    	; 0x3be <lcdWriteText>
     76a:	8d b7       	in	r24, 0x3d	; 61
     76c:	9e b7       	in	r25, 0x3e	; 62
     76e:	40 96       	adiw	r24, 0x10	; 16
     770:	0f b6       	in	r0, 0x3f	; 63
     772:	f8 94       	cli
     774:	9e bf       	out	0x3e, r25	; 62
     776:	0f be       	out	0x3f, r0	; 63
     778:	8d bf       	out	0x3d, r24	; 61
     77a:	88 24       	eor	r8, r8
     77c:	83 94       	inc	r8
     77e:	c0 e0       	ldi	r28, 0x00	; 0
     780:	71 2c       	mov	r7, r1
     782:	99 24       	eor	r9, r9
     784:	93 94       	inc	r9
     786:	d0 e0       	ldi	r29, 0x00	; 0
     788:	cc 24       	eor	r12, r12
     78a:	c3 94       	inc	r12
     78c:	d1 2c       	mov	r13, r1
     78e:	e1 2c       	mov	r14, r1
     790:	68 94       	set
     792:	ff 24       	eor	r15, r15
     794:	f7 f8       	bld	r15, 7
     796:	66 24       	eor	r6, r6
     798:	63 94       	inc	r6
     79a:	51 2c       	mov	r5, r1
     79c:	09 e0       	ldi	r16, 0x09	; 9
     79e:	11 e0       	ldi	r17, 0x01	; 1
     7a0:	0f 2e       	mov	r0, r31
     7a2:	fa e6       	ldi	r31, 0x6A	; 106
     7a4:	af 2e       	mov	r10, r31
     7a6:	f2 e0       	ldi	r31, 0x02	; 2
     7a8:	bf 2e       	mov	r11, r31
     7aa:	f0 2d       	mov	r31, r0
     7ac:	0f 2e       	mov	r0, r31
     7ae:	f3 e0       	ldi	r31, 0x03	; 3
     7b0:	4f 2e       	mov	r4, r31
     7b2:	f0 2d       	mov	r31, r0
     7b4:	99 20       	and	r9, r9
     7b6:	49 f0       	breq	.+18     	; 0x7ca <initBoard+0x134>
     7b8:	c7 01       	movw	r24, r14
     7ba:	0d 2e       	mov	r0, r29
     7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <initBoard+0x12c>
     7be:	96 95       	lsr	r25
     7c0:	87 95       	ror	r24
     7c2:	0a 94       	dec	r0
     7c4:	e2 f7       	brpl	.-8      	; 0x7be <initBoard+0x128>
     7c6:	11 dd       	rcall	.-1502   	; 0x1ea <ledWriteAll>
     7c8:	08 c0       	rjmp	.+16     	; 0x7da <initBoard+0x144>
     7ca:	c6 01       	movw	r24, r12
     7cc:	0d 2e       	mov	r0, r29
     7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <initBoard+0x13e>
     7d0:	88 0f       	add	r24, r24
     7d2:	99 1f       	adc	r25, r25
     7d4:	0a 94       	dec	r0
     7d6:	e2 f7       	brpl	.-8      	; 0x7d0 <initBoard+0x13a>
     7d8:	08 dd       	rcall	.-1520   	; 0x1ea <ledWriteAll>
     7da:	df 5f       	subi	r29, 0xFF	; 255
     7dc:	d1 31       	cpi	r29, 0x11	; 17
     7de:	28 f0       	brcs	.+10     	; 0x7ea <initBoard+0x154>
     7e0:	86 2d       	mov	r24, r6
     7e2:	91 10       	cpse	r9, r1
     7e4:	85 2d       	mov	r24, r5
     7e6:	98 2e       	mov	r9, r24
     7e8:	d0 e0       	ldi	r29, 0x00	; 0
     7ea:	88 20       	and	r8, r8
     7ec:	11 f0       	breq	.+4      	; 0x7f2 <initBoard+0x15c>
     7ee:	ce 5f       	subi	r28, 0xFE	; 254
     7f0:	01 c0       	rjmp	.+2      	; 0x7f4 <initBoard+0x15e>
     7f2:	c2 50       	subi	r28, 0x02	; 2
     7f4:	8c 2f       	mov	r24, r28
     7f6:	60 dd       	rcall	.-1344   	; 0x2b8 <lcdLight>
     7f8:	ce 3f       	cpi	r28, 0xFE	; 254
     7fa:	21 f0       	breq	.+8      	; 0x804 <initBoard+0x16e>
     7fc:	c8 37       	cpi	r28, 0x78	; 120
     7fe:	19 f4       	brne	.+6      	; 0x806 <initBoard+0x170>
     800:	86 2c       	mov	r8, r6
     802:	01 c0       	rjmp	.+2      	; 0x806 <initBoard+0x170>
     804:	85 2c       	mov	r8, r5
     806:	71 10       	cpse	r7, r1
     808:	3b c0       	rjmp	.+118    	; 0x880 <initBoard+0x1ea>
     80a:	f8 01       	movw	r30, r16
     80c:	80 81       	ld	r24, Z
     80e:	83 7c       	andi	r24, 0xC3	; 195
     810:	91 f0       	breq	.+36     	; 0x836 <initBoard+0x1a0>
     812:	40 e0       	ldi	r20, 0x00	; 0
     814:	50 e0       	ldi	r21, 0x00	; 0
     816:	66 e2       	ldi	r22, 0x26	; 38
     818:	72 e0       	ldi	r23, 0x02	; 2
     81a:	8f ef       	ldi	r24, 0xFF	; 255
     81c:	93 e0       	ldi	r25, 0x03	; 3
     81e:	15 dd       	rcall	.-1494   	; 0x24a <rgbWrite>
     820:	bf 92       	push	r11
     822:	af 92       	push	r10
     824:	1f 92       	push	r1
     826:	4f 92       	push	r4
     828:	ca dd       	rcall	.-1132   	; 0x3be <lcdWriteText>
     82a:	0f 90       	pop	r0
     82c:	0f 90       	pop	r0
     82e:	0f 90       	pop	r0
     830:	0f 90       	pop	r0
     832:	76 2c       	mov	r7, r6
     834:	25 c0       	rjmp	.+74     	; 0x880 <initBoard+0x1ea>
     836:	8f ef       	ldi	r24, 0xFF	; 255
     838:	9c e7       	ldi	r25, 0x7C	; 124
     83a:	01 97       	sbiw	r24, 0x01	; 1
     83c:	f1 f7       	brne	.-4      	; 0x83a <initBoard+0x1a4>
     83e:	00 c0       	rjmp	.+0      	; 0x840 <initBoard+0x1aa>
     840:	00 00       	nop
     842:	b8 cf       	rjmp	.-144    	; 0x7b4 <initBoard+0x11e>
     844:	f0 de       	rcall	.-544    	; 0x626 <lcdClear>
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	37 dd       	rcall	.-1426   	; 0x2b8 <lcdLight>
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	cd dc       	rcall	.-1638   	; 0x1ea <ledWriteAll>
     850:	40 e0       	ldi	r20, 0x00	; 0
     852:	50 e0       	ldi	r21, 0x00	; 0
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	f6 dc       	rcall	.-1556   	; 0x24a <rgbWrite>
     85e:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <systemTimeMs>
     862:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <systemTimeMs+0x1>
     866:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <systemTimeMs+0x2>
     86a:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <systemTimeMs+0x3>
     86e:	10 92 d5 02 	sts	0x02D5, r1	; 0x8002d5 <systemTimeMs+0x4>
     872:	10 92 d6 02 	sts	0x02D6, r1	; 0x8002d6 <systemTimeMs+0x5>
     876:	10 92 d7 02 	sts	0x02D7, r1	; 0x8002d7 <systemTimeMs+0x6>
     87a:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <systemTimeMs+0x7>
     87e:	05 c0       	rjmp	.+10     	; 0x88a <initBoard+0x1f4>
     880:	f8 01       	movw	r30, r16
     882:	80 81       	ld	r24, Z
     884:	83 7c       	andi	r24, 0xC3	; 195
     886:	b9 f6       	brne	.-82     	; 0x836 <initBoard+0x1a0>
     888:	dd cf       	rjmp	.-70     	; 0x844 <initBoard+0x1ae>
     88a:	df 91       	pop	r29
     88c:	cf 91       	pop	r28
     88e:	1f 91       	pop	r17
     890:	0f 91       	pop	r16
     892:	ff 90       	pop	r15
     894:	ef 90       	pop	r14
     896:	df 90       	pop	r13
     898:	cf 90       	pop	r12
     89a:	bf 90       	pop	r11
     89c:	af 90       	pop	r10
     89e:	9f 90       	pop	r9
     8a0:	8f 90       	pop	r8
     8a2:	7f 90       	pop	r7
     8a4:	6f 90       	pop	r6
     8a6:	5f 90       	pop	r5
     8a8:	4f 90       	pop	r4
     8aa:	08 95       	ret

000008ac <lcdLog>:
     8ac:	6f 92       	push	r6
     8ae:	7f 92       	push	r7
     8b0:	8f 92       	push	r8
     8b2:	9f 92       	push	r9
     8b4:	af 92       	push	r10
     8b6:	bf 92       	push	r11
     8b8:	cf 92       	push	r12
     8ba:	df 92       	push	r13
     8bc:	ef 92       	push	r14
     8be:	ff 92       	push	r15
     8c0:	0f 93       	push	r16
     8c2:	1f 93       	push	r17
     8c4:	cf 93       	push	r28
     8c6:	df 93       	push	r29
     8c8:	cd b7       	in	r28, 0x3d	; 61
     8ca:	de b7       	in	r29, 0x3e	; 62
     8cc:	60 97       	sbiw	r28, 0x10	; 16
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	f8 94       	cli
     8d2:	de bf       	out	0x3e, r29	; 62
     8d4:	0f be       	out	0x3f, r0	; 63
     8d6:	cd bf       	out	0x3d, r28	; 61
     8d8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     8dc:	88 23       	and	r24, r24
     8de:	b1 f1       	breq	.+108    	; 0x94c <lcdLog+0xa0>
     8e0:	a2 de       	rcall	.-700    	; 0x626 <lcdClear>
     8e2:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
     8e6:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <nummer.2616+0x1>
     8ea:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <nummer.2616>
     8ee:	0f 2e       	mov	r0, r31
     8f0:	f6 ec       	ldi	r31, 0xC6	; 198
     8f2:	8f 2e       	mov	r8, r31
     8f4:	f2 e0       	ldi	r31, 0x02	; 2
     8f6:	9f 2e       	mov	r9, r31
     8f8:	f0 2d       	mov	r31, r0
     8fa:	06 e8       	ldi	r16, 0x86	; 134
     8fc:	12 e0       	ldi	r17, 0x02	; 2
     8fe:	a0 e0       	ldi	r26, 0x00	; 0
     900:	b0 e0       	ldi	r27, 0x00	; 0
     902:	40 e2       	ldi	r20, 0x20	; 32
     904:	bd 01       	movw	r22, r26
     906:	f4 01       	movw	r30, r8
     908:	11 92       	st	Z+, r1
     90a:	11 92       	st	Z+, r1
     90c:	4f 01       	movw	r8, r30
     90e:	f8 01       	movw	r30, r16
     910:	41 93       	st	Z+, r20
     912:	81 e0       	ldi	r24, 0x01	; 1
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	13 c0       	rjmp	.+38     	; 0x93e <lcdLog+0x92>
     918:	62 95       	swap	r22
     91a:	72 95       	swap	r23
     91c:	70 7f       	andi	r23, 0xF0	; 240
     91e:	76 27       	eor	r23, r22
     920:	60 7f       	andi	r22, 0xF0	; 240
     922:	76 27       	eor	r23, r22
     924:	6a 57       	subi	r22, 0x7A	; 122
     926:	7d 4f       	sbci	r23, 0xFD	; 253
     928:	fb 01       	movw	r30, r22
     92a:	e2 0f       	add	r30, r18
     92c:	f3 1f       	adc	r31, r19
     92e:	10 82       	st	Z, r1
     930:	11 96       	adiw	r26, 0x01	; 1
     932:	00 5f       	subi	r16, 0xF0	; 240
     934:	1f 4f       	sbci	r17, 0xFF	; 255
     936:	a4 30       	cpi	r26, 0x04	; 4
     938:	b1 05       	cpc	r27, r1
     93a:	21 f7       	brne	.-56     	; 0x904 <lcdLog+0x58>
     93c:	07 c0       	rjmp	.+14     	; 0x94c <lcdLog+0xa0>
     93e:	9c 01       	movw	r18, r24
     940:	41 93       	st	Z+, r20
     942:	01 96       	adiw	r24, 0x01	; 1
     944:	80 31       	cpi	r24, 0x10	; 16
     946:	91 05       	cpc	r25, r1
     948:	d1 f7       	brne	.-12     	; 0x93e <lcdLog+0x92>
     94a:	e6 cf       	rjmp	.-52     	; 0x918 <lcdLog+0x6c>
     94c:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <nummer.2616>
     950:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <nummer.2616+0x1>
     954:	01 96       	adiw	r24, 0x01	; 1
     956:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <nummer.2616+0x1>
     95a:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <nummer.2616>
     95e:	9e 01       	movw	r18, r28
     960:	2c 5d       	subi	r18, 0xDC	; 220
     962:	3f 4f       	sbci	r19, 0xFF	; 255
     964:	4a a1       	ldd	r20, Y+34	; 0x22
     966:	5b a1       	ldd	r21, Y+35	; 0x23
     968:	60 e1       	ldi	r22, 0x10	; 16
     96a:	70 e0       	ldi	r23, 0x00	; 0
     96c:	ce 01       	movw	r24, r28
     96e:	01 96       	adiw	r24, 0x01	; 1
     970:	11 d2       	rcall	.+1058   	; 0xd94 <vsnprintf>
     972:	8e 01       	movw	r16, r28
     974:	0f 5f       	subi	r16, 0xFF	; 255
     976:	1f 4f       	sbci	r17, 0xFF	; 255
     978:	4e 01       	movw	r8, r28
     97a:	f1 e1       	ldi	r31, 0x11	; 17
     97c:	8f 0e       	add	r8, r31
     97e:	91 1c       	adc	r9, r1
     980:	f8 01       	movw	r30, r16
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	30 e2       	ldi	r19, 0x20	; 32
     986:	21 e0       	ldi	r18, 0x01	; 1
     988:	df 01       	movw	r26, r30
     98a:	80 81       	ld	r24, Z
     98c:	88 23       	and	r24, r24
     98e:	19 f0       	breq	.+6      	; 0x996 <lcdLog+0xea>
     990:	99 23       	and	r25, r25
     992:	19 f0       	breq	.+6      	; 0x99a <lcdLog+0xee>
     994:	01 c0       	rjmp	.+2      	; 0x998 <lcdLog+0xec>
     996:	92 2f       	mov	r25, r18
     998:	3c 93       	st	X, r19
     99a:	31 96       	adiw	r30, 0x01	; 1
     99c:	e8 15       	cp	r30, r8
     99e:	f9 05       	cpc	r31, r9
     9a0:	99 f7       	brne	.-26     	; 0x988 <lcdLog+0xdc>
     9a2:	18 8a       	std	Y+16, r1	; 0x10
     9a4:	66 e8       	ldi	r22, 0x86	; 134
     9a6:	72 e0       	ldi	r23, 0x02	; 2
     9a8:	ce 01       	movw	r24, r28
     9aa:	01 96       	adiw	r24, 0x01	; 1
     9ac:	ea d1       	rcall	.+980    	; 0xd82 <strcmp>
     9ae:	88 23       	and	r24, r24
     9b0:	09 f4       	brne	.+2      	; 0x9b4 <lcdLog+0x108>
     9b2:	7e c0       	rjmp	.+252    	; 0xab0 <lcdLog+0x204>
     9b4:	0f 2e       	mov	r0, r31
     9b6:	fc ec       	ldi	r31, 0xCC	; 204
     9b8:	6f 2e       	mov	r6, r31
     9ba:	f2 e0       	ldi	r31, 0x02	; 2
     9bc:	7f 2e       	mov	r7, r31
     9be:	f0 2d       	mov	r31, r0
     9c0:	66 eb       	ldi	r22, 0xB6	; 182
     9c2:	72 e0       	ldi	r23, 0x02	; 2
     9c4:	46 e8       	ldi	r20, 0x86	; 134
     9c6:	52 e0       	ldi	r21, 0x02	; 2
     9c8:	f3 01       	movw	r30, r6
     9ca:	92 91       	ld	r25, -Z
     9cc:	82 91       	ld	r24, -Z
     9ce:	3f 01       	movw	r6, r30
     9d0:	93 83       	std	Z+3, r25	; 0x03
     9d2:	82 83       	std	Z+2, r24	; 0x02
     9d4:	db 01       	movw	r26, r22
     9d6:	50 97       	sbiw	r26, 0x10	; 16
     9d8:	9b 01       	movw	r18, r22
     9da:	20 5f       	subi	r18, 0xF0	; 240
     9dc:	3f 4f       	sbci	r19, 0xFF	; 255
     9de:	fb 01       	movw	r30, r22
     9e0:	8d 91       	ld	r24, X+
     9e2:	81 93       	st	Z+, r24
     9e4:	e2 17       	cp	r30, r18
     9e6:	f3 07       	cpc	r31, r19
     9e8:	d9 f7       	brne	.-10     	; 0x9e0 <lcdLog+0x134>
     9ea:	60 51       	subi	r22, 0x10	; 16
     9ec:	71 09       	sbc	r23, r1
     9ee:	64 17       	cp	r22, r20
     9f0:	75 07       	cpc	r23, r21
     9f2:	51 f7       	brne	.-44     	; 0x9c8 <lcdLog+0x11c>
     9f4:	f8 01       	movw	r30, r16
     9f6:	81 91       	ld	r24, Z+
     9f8:	8f 01       	movw	r16, r30
     9fa:	fa 01       	movw	r30, r20
     9fc:	81 93       	st	Z+, r24
     9fe:	af 01       	movw	r20, r30
     a00:	08 15       	cp	r16, r8
     a02:	19 05       	cpc	r17, r9
     a04:	b9 f7       	brne	.-18     	; 0x9f4 <lcdLog+0x148>
     a06:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <nummer.2616>
     a0a:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <nummer.2616+0x1>
     a0e:	90 93 c7 02 	sts	0x02C7, r25	; 0x8002c7 <lcdPrintNr.2614+0x1>
     a12:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <lcdPrintNr.2614>
     a16:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <lcdLogZeilen>
     a1a:	94 e0       	ldi	r25, 0x04	; 4
     a1c:	d9 2e       	mov	r13, r25
     a1e:	d8 1a       	sub	r13, r24
     a20:	f3 e0       	ldi	r31, 0x03	; 3
     a22:	fd 15       	cp	r31, r13
     a24:	08 f4       	brcc	.+2      	; 0xa28 <lcdLog+0x17c>
     a26:	5b c0       	rjmp	.+182    	; 0xade <lcdLog+0x232>
     a28:	83 e0       	ldi	r24, 0x03	; 3
     a2a:	b8 2e       	mov	r11, r24
     a2c:	bd 18       	sub	r11, r13
     a2e:	0f 2e       	mov	r0, r31
     a30:	f5 e0       	ldi	r31, 0x05	; 5
     a32:	6f 2e       	mov	r6, r31
     a34:	f0 2d       	mov	r31, r0
     a36:	0f 2e       	mov	r0, r31
     a38:	ff e7       	ldi	r31, 0x7F	; 127
     a3a:	8f 2e       	mov	r8, r31
     a3c:	f2 e0       	ldi	r31, 0x02	; 2
     a3e:	9f 2e       	mov	r9, r31
     a40:	f0 2d       	mov	r31, r0
     a42:	68 94       	set
     a44:	77 24       	eor	r7, r7
     a46:	72 f8       	bld	r7, 2
     a48:	0b 2d       	mov	r16, r11
     a4a:	10 e0       	ldi	r17, 0x00	; 0
     a4c:	c8 01       	movw	r24, r16
     a4e:	82 95       	swap	r24
     a50:	92 95       	swap	r25
     a52:	90 7f       	andi	r25, 0xF0	; 240
     a54:	98 27       	eor	r25, r24
     a56:	80 7f       	andi	r24, 0xF0	; 240
     a58:	98 27       	eor	r25, r24
     a5a:	8a 57       	subi	r24, 0x7A	; 122
     a5c:	9d 4f       	sbci	r25, 0xFD	; 253
     a5e:	9f 93       	push	r25
     a60:	8f 93       	push	r24
     a62:	6f 92       	push	r6
     a64:	df 92       	push	r13
     a66:	ab dc       	rcall	.-1706   	; 0x3be <lcdWriteText>
     a68:	9f 92       	push	r9
     a6a:	8f 92       	push	r8
     a6c:	7f 92       	push	r7
     a6e:	df 92       	push	r13
     a70:	a6 dc       	rcall	.-1716   	; 0x3be <lcdWriteText>
     a72:	00 0f       	add	r16, r16
     a74:	11 1f       	adc	r17, r17
     a76:	f8 01       	movw	r30, r16
     a78:	ea 53       	subi	r30, 0x3A	; 58
     a7a:	fd 4f       	sbci	r31, 0xFD	; 253
     a7c:	00 81       	ld	r16, Z
     a7e:	11 81       	ldd	r17, Z+1	; 0x01
     a80:	a1 2c       	mov	r10, r1
     a82:	c7 2c       	mov	r12, r7
     a84:	e0 2e       	mov	r14, r16
     a86:	f1 2e       	mov	r15, r17
     a88:	00 e0       	ldi	r16, 0x00	; 0
     a8a:	10 e0       	ldi	r17, 0x00	; 0
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	40 e0       	ldi	r20, 0x00	; 0
     a92:	50 e0       	ldi	r21, 0x00	; 0
     a94:	60 e0       	ldi	r22, 0x00	; 0
     a96:	8d 2d       	mov	r24, r13
     a98:	ce dc       	rcall	.-1636   	; 0x436 <lcdWriteZahl>
     a9a:	d3 94       	inc	r13
     a9c:	ba 94       	dec	r11
     a9e:	0f b6       	in	r0, 0x3f	; 63
     aa0:	f8 94       	cli
     aa2:	de bf       	out	0x3e, r29	; 62
     aa4:	0f be       	out	0x3f, r0	; 63
     aa6:	cd bf       	out	0x3d, r28	; 61
     aa8:	94 e0       	ldi	r25, 0x04	; 4
     aaa:	d9 12       	cpse	r13, r25
     aac:	cd cf       	rjmp	.-102    	; 0xa48 <lcdLog+0x19c>
     aae:	17 c0       	rjmp	.+46     	; 0xade <lcdLog+0x232>
     ab0:	00 91 ce 02 	lds	r16, 0x02CE	; 0x8002ce <nummer.2616>
     ab4:	10 91 cf 02 	lds	r17, 0x02CF	; 0x8002cf <nummer.2616+0x1>
     ab8:	10 93 c7 02 	sts	0x02C7, r17	; 0x8002c7 <lcdPrintNr.2614+0x1>
     abc:	00 93 c6 02 	sts	0x02C6, r16	; 0x8002c6 <lcdPrintNr.2614>
     ac0:	a1 2c       	mov	r10, r1
     ac2:	68 94       	set
     ac4:	cc 24       	eor	r12, r12
     ac6:	c2 f8       	bld	r12, 2
     ac8:	e0 2e       	mov	r14, r16
     aca:	f1 2e       	mov	r15, r17
     acc:	00 e0       	ldi	r16, 0x00	; 0
     ace:	10 e0       	ldi	r17, 0x00	; 0
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	40 e0       	ldi	r20, 0x00	; 0
     ad6:	50 e0       	ldi	r21, 0x00	; 0
     ad8:	60 e0       	ldi	r22, 0x00	; 0
     ada:	83 e0       	ldi	r24, 0x03	; 3
     adc:	ac dc       	rcall	.-1704   	; 0x436 <lcdWriteZahl>
     ade:	60 96       	adiw	r28, 0x10	; 16
     ae0:	0f b6       	in	r0, 0x3f	; 63
     ae2:	f8 94       	cli
     ae4:	de bf       	out	0x3e, r29	; 62
     ae6:	0f be       	out	0x3f, r0	; 63
     ae8:	cd bf       	out	0x3d, r28	; 61
     aea:	df 91       	pop	r29
     aec:	cf 91       	pop	r28
     aee:	1f 91       	pop	r17
     af0:	0f 91       	pop	r16
     af2:	ff 90       	pop	r15
     af4:	ef 90       	pop	r14
     af6:	df 90       	pop	r13
     af8:	cf 90       	pop	r12
     afa:	bf 90       	pop	r11
     afc:	af 90       	pop	r10
     afe:	9f 90       	pop	r9
     b00:	8f 90       	pop	r8
     b02:	7f 90       	pop	r7
     b04:	6f 90       	pop	r6
     b06:	08 95       	ret

00000b08 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     b08:	cf 93       	push	r28
     b0a:	df 93       	push	r29
     b0c:	cd b7       	in	r28, 0x3d	; 61
     b0e:	de b7       	in	r29, 0x3e	; 62
     b10:	28 97       	sbiw	r28, 0x08	; 8
     b12:	0f b6       	in	r0, 0x3f	; 63
     b14:	f8 94       	cli
     b16:	de bf       	out	0x3e, r29	; 62
     b18:	0f be       	out	0x3f, r0	; 63
     b1a:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     b1c:	88 e0       	ldi	r24, 0x08	; 8
     b1e:	e2 e0       	ldi	r30, 0x02	; 2
     b20:	f2 e0       	ldi	r31, 0x02	; 2
     b22:	de 01       	movw	r26, r28
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	01 90       	ld	r0, Z+
     b28:	0d 92       	st	X+, r0
     b2a:	8a 95       	dec	r24
     b2c:	e1 f7       	brne	.-8      	; 0xb26 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     b2e:	e5 e0       	ldi	r30, 0x05	; 5
     b30:	f1 e0       	ldi	r31, 0x01	; 1
     b32:	80 81       	ld	r24, Z
     b34:	8f 7b       	andi	r24, 0xBF	; 191
     b36:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     b38:	e0 91 84 02 	lds	r30, 0x0284	; 0x800284 <Zeilen_Nr.2731>
     b3c:	f0 91 85 02 	lds	r31, 0x0285	; 0x800285 <Zeilen_Nr.2731+0x1>
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	8c 0f       	add	r24, r28
     b46:	9d 1f       	adc	r25, r29
     b48:	e8 0f       	add	r30, r24
     b4a:	f9 1f       	adc	r31, r25
     b4c:	80 81       	ld	r24, Z
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <__data_end+0x1>
     b54:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <__data_end>
     b58:	aa e4       	ldi	r26, 0x4A	; 74
     b5a:	b3 e0       	ldi	r27, 0x03	; 3
     b5c:	2a ed       	ldi	r18, 0xDA	; 218
     b5e:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     b60:	e5 e0       	ldi	r30, 0x05	; 5
     b62:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     b64:	5e 91       	ld	r21, -X
     b66:	4e 91       	ld	r20, -X
     b68:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <__data_end>
     b6c:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <__data_end+0x1>
     b70:	84 23       	and	r24, r20
     b72:	95 23       	and	r25, r21
     b74:	89 2b       	or	r24, r25
     b76:	21 f0       	breq	.+8      	; 0xb80 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     b78:	80 81       	ld	r24, Z
     b7a:	80 62       	ori	r24, 0x20	; 32
     b7c:	80 83       	st	Z, r24
     b7e:	03 c0       	rjmp	.+6      	; 0xb86 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     b80:	80 81       	ld	r24, Z
     b82:	8f 7d       	andi	r24, 0xDF	; 223
     b84:	80 83       	st	Z, r24
        }
        CLOCK_1;
     b86:	80 81       	ld	r24, Z
     b88:	80 61       	ori	r24, 0x10	; 16
     b8a:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     b8c:	80 81       	ld	r24, Z
     b8e:	8f 7e       	andi	r24, 0xEF	; 239
     b90:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     b92:	a2 17       	cp	r26, r18
     b94:	b3 07       	cpc	r27, r19
     b96:	31 f7       	brne	.-52     	; 0xb64 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     b98:	e5 e0       	ldi	r30, 0x05	; 5
     b9a:	f1 e0       	ldi	r31, 0x01	; 1
     b9c:	80 81       	ld	r24, Z
     b9e:	87 7f       	andi	r24, 0xF7	; 247
     ba0:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     ba2:	80 81       	ld	r24, Z
     ba4:	88 7f       	andi	r24, 0xF8	; 248
     ba6:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     ba8:	90 81       	ld	r25, Z
     baa:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <Zeilen_Nr.2731>
     bae:	89 2b       	or	r24, r25
     bb0:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     bb2:	80 81       	ld	r24, Z
     bb4:	80 64       	ori	r24, 0x40	; 64
     bb6:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     bb8:	80 81       	ld	r24, Z
     bba:	88 60       	ori	r24, 0x08	; 8
     bbc:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     bbe:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <Zeilen_Nr.2731>
     bc2:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <Zeilen_Nr.2731+0x1>
     bc6:	87 30       	cpi	r24, 0x07	; 7
     bc8:	91 05       	cpc	r25, r1
     bca:	30 f4       	brcc	.+12     	; 0xbd8 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     bcc:	01 96       	adiw	r24, 0x01	; 1
     bce:	90 93 85 02 	sts	0x0285, r25	; 0x800285 <Zeilen_Nr.2731+0x1>
     bd2:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <Zeilen_Nr.2731>
     bd6:	07 c0       	rjmp	.+14     	; 0xbe6 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     bd8:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <Zeilen_Nr.2731+0x1>
     bdc:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <Zeilen_Nr.2731>
        writeTextFinished = 1;
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <writeTextFinished>
    }
    
     be6:	28 96       	adiw	r28, 0x08	; 8
     be8:	0f b6       	in	r0, 0x3f	; 63
     bea:	f8 94       	cli
     bec:	de bf       	out	0x3e, r29	; 62
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	cd bf       	out	0x3d, r28	; 61
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	08 95       	ret

00000bf8 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     bf8:	1f 92       	push	r1
     bfa:	0f 92       	push	r0
     bfc:	0f b6       	in	r0, 0x3f	; 63
     bfe:	0f 92       	push	r0
     c00:	11 24       	eor	r1, r1
     c02:	0b b6       	in	r0, 0x3b	; 59
     c04:	0f 92       	push	r0
     c06:	2f 93       	push	r18
     c08:	3f 93       	push	r19
     c0a:	4f 93       	push	r20
     c0c:	5f 93       	push	r21
     c0e:	6f 93       	push	r22
     c10:	7f 93       	push	r23
     c12:	8f 93       	push	r24
     c14:	9f 93       	push	r25
     c16:	af 93       	push	r26
     c18:	bf 93       	push	r27
     c1a:	ef 93       	push	r30
     c1c:	ff 93       	push	r31
    systemTimeMs += 1;
     c1e:	20 91 d1 02 	lds	r18, 0x02D1	; 0x8002d1 <systemTimeMs>
     c22:	30 91 d2 02 	lds	r19, 0x02D2	; 0x8002d2 <systemTimeMs+0x1>
     c26:	40 91 d3 02 	lds	r20, 0x02D3	; 0x8002d3 <systemTimeMs+0x2>
     c2a:	50 91 d4 02 	lds	r21, 0x02D4	; 0x8002d4 <systemTimeMs+0x3>
     c2e:	60 91 d5 02 	lds	r22, 0x02D5	; 0x8002d5 <systemTimeMs+0x4>
     c32:	70 91 d6 02 	lds	r23, 0x02D6	; 0x8002d6 <systemTimeMs+0x5>
     c36:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <systemTimeMs+0x6>
     c3a:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <systemTimeMs+0x7>
     c3e:	a1 e0       	ldi	r26, 0x01	; 1
     c40:	94 d0       	rcall	.+296    	; 0xd6a <__adddi3_s8>
     c42:	20 93 d1 02 	sts	0x02D1, r18	; 0x8002d1 <systemTimeMs>
     c46:	30 93 d2 02 	sts	0x02D2, r19	; 0x8002d2 <systemTimeMs+0x1>
     c4a:	40 93 d3 02 	sts	0x02D3, r20	; 0x8002d3 <systemTimeMs+0x2>
     c4e:	50 93 d4 02 	sts	0x02D4, r21	; 0x8002d4 <systemTimeMs+0x3>
     c52:	60 93 d5 02 	sts	0x02D5, r22	; 0x8002d5 <systemTimeMs+0x4>
     c56:	70 93 d6 02 	sts	0x02D6, r23	; 0x8002d6 <systemTimeMs+0x5>
     c5a:	80 93 d7 02 	sts	0x02D7, r24	; 0x8002d7 <systemTimeMs+0x6>
     c5e:	90 93 d8 02 	sts	0x02D8, r25	; 0x8002d8 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     c62:	80 91 d9 02 	lds	r24, 0x02D9	; 0x8002d9 <matrixRunning>
     c66:	81 11       	cpse	r24, r1
     c68:	4f df       	rcall	.-354    	; 0xb08 <matrixWriteNextLine>
}
     c6a:	ff 91       	pop	r31
     c6c:	ef 91       	pop	r30
     c6e:	bf 91       	pop	r27
     c70:	af 91       	pop	r26
     c72:	9f 91       	pop	r25
     c74:	8f 91       	pop	r24
     c76:	7f 91       	pop	r23
     c78:	6f 91       	pop	r22
     c7a:	5f 91       	pop	r21
     c7c:	4f 91       	pop	r20
     c7e:	3f 91       	pop	r19
     c80:	2f 91       	pop	r18
     c82:	0f 90       	pop	r0
     c84:	0b be       	out	0x3b, r0	; 59
     c86:	0f 90       	pop	r0
     c88:	0f be       	out	0x3f, r0	; 63
     c8a:	0f 90       	pop	r0
     c8c:	1f 90       	pop	r1
     c8e:	18 95       	reti

00000c90 <__umulhisi3>:
     c90:	a2 9f       	mul	r26, r18
     c92:	b0 01       	movw	r22, r0
     c94:	b3 9f       	mul	r27, r19
     c96:	c0 01       	movw	r24, r0
     c98:	a3 9f       	mul	r26, r19
     c9a:	70 0d       	add	r23, r0
     c9c:	81 1d       	adc	r24, r1
     c9e:	11 24       	eor	r1, r1
     ca0:	91 1d       	adc	r25, r1
     ca2:	b2 9f       	mul	r27, r18
     ca4:	70 0d       	add	r23, r0
     ca6:	81 1d       	adc	r24, r1
     ca8:	11 24       	eor	r1, r1
     caa:	91 1d       	adc	r25, r1
     cac:	08 95       	ret

00000cae <__umoddi3>:
     cae:	68 94       	set
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <__udivdi3_umoddi3>

00000cb2 <__udivdi3>:
     cb2:	e8 94       	clt

00000cb4 <__udivdi3_umoddi3>:
     cb4:	8f 92       	push	r8
     cb6:	9f 92       	push	r9
     cb8:	cf 93       	push	r28
     cba:	df 93       	push	r29
     cbc:	05 d0       	rcall	.+10     	; 0xcc8 <__udivmod64>
     cbe:	df 91       	pop	r29
     cc0:	cf 91       	pop	r28
     cc2:	9f 90       	pop	r9
     cc4:	8f 90       	pop	r8
     cc6:	08 95       	ret

00000cc8 <__udivmod64>:
     cc8:	88 24       	eor	r8, r8
     cca:	99 24       	eor	r9, r9
     ccc:	f4 01       	movw	r30, r8
     cce:	e4 01       	movw	r28, r8
     cd0:	b0 e4       	ldi	r27, 0x40	; 64
     cd2:	9f 93       	push	r25
     cd4:	aa 27       	eor	r26, r26
     cd6:	9a 15       	cp	r25, r10
     cd8:	8b 04       	cpc	r8, r11
     cda:	9c 04       	cpc	r9, r12
     cdc:	ed 05       	cpc	r30, r13
     cde:	fe 05       	cpc	r31, r14
     ce0:	cf 05       	cpc	r28, r15
     ce2:	d0 07       	cpc	r29, r16
     ce4:	a1 07       	cpc	r26, r17
     ce6:	98 f4       	brcc	.+38     	; 0xd0e <__udivmod64+0x46>
     ce8:	ad 2f       	mov	r26, r29
     cea:	dc 2f       	mov	r29, r28
     cec:	cf 2f       	mov	r28, r31
     cee:	fe 2f       	mov	r31, r30
     cf0:	e9 2d       	mov	r30, r9
     cf2:	98 2c       	mov	r9, r8
     cf4:	89 2e       	mov	r8, r25
     cf6:	98 2f       	mov	r25, r24
     cf8:	87 2f       	mov	r24, r23
     cfa:	76 2f       	mov	r23, r22
     cfc:	65 2f       	mov	r22, r21
     cfe:	54 2f       	mov	r21, r20
     d00:	43 2f       	mov	r20, r19
     d02:	32 2f       	mov	r19, r18
     d04:	22 27       	eor	r18, r18
     d06:	b8 50       	subi	r27, 0x08	; 8
     d08:	31 f7       	brne	.-52     	; 0xcd6 <__udivmod64+0xe>
     d0a:	bf 91       	pop	r27
     d0c:	27 c0       	rjmp	.+78     	; 0xd5c <__udivmod64+0x94>
     d0e:	1b 2e       	mov	r1, r27
     d10:	bf 91       	pop	r27
     d12:	bb 27       	eor	r27, r27
     d14:	22 0f       	add	r18, r18
     d16:	33 1f       	adc	r19, r19
     d18:	44 1f       	adc	r20, r20
     d1a:	55 1f       	adc	r21, r21
     d1c:	66 1f       	adc	r22, r22
     d1e:	77 1f       	adc	r23, r23
     d20:	88 1f       	adc	r24, r24
     d22:	99 1f       	adc	r25, r25
     d24:	88 1c       	adc	r8, r8
     d26:	99 1c       	adc	r9, r9
     d28:	ee 1f       	adc	r30, r30
     d2a:	ff 1f       	adc	r31, r31
     d2c:	cc 1f       	adc	r28, r28
     d2e:	dd 1f       	adc	r29, r29
     d30:	aa 1f       	adc	r26, r26
     d32:	bb 1f       	adc	r27, r27
     d34:	8a 14       	cp	r8, r10
     d36:	9b 04       	cpc	r9, r11
     d38:	ec 05       	cpc	r30, r12
     d3a:	fd 05       	cpc	r31, r13
     d3c:	ce 05       	cpc	r28, r14
     d3e:	df 05       	cpc	r29, r15
     d40:	a0 07       	cpc	r26, r16
     d42:	b1 07       	cpc	r27, r17
     d44:	48 f0       	brcs	.+18     	; 0xd58 <__udivmod64+0x90>
     d46:	8a 18       	sub	r8, r10
     d48:	9b 08       	sbc	r9, r11
     d4a:	ec 09       	sbc	r30, r12
     d4c:	fd 09       	sbc	r31, r13
     d4e:	ce 09       	sbc	r28, r14
     d50:	df 09       	sbc	r29, r15
     d52:	a0 0b       	sbc	r26, r16
     d54:	b1 0b       	sbc	r27, r17
     d56:	21 60       	ori	r18, 0x01	; 1
     d58:	1a 94       	dec	r1
     d5a:	e1 f6       	brne	.-72     	; 0xd14 <__udivmod64+0x4c>
     d5c:	2e f4       	brtc	.+10     	; 0xd68 <__udivmod64+0xa0>
     d5e:	94 01       	movw	r18, r8
     d60:	af 01       	movw	r20, r30
     d62:	be 01       	movw	r22, r28
     d64:	cd 01       	movw	r24, r26
     d66:	00 0c       	add	r0, r0
     d68:	08 95       	ret

00000d6a <__adddi3_s8>:
     d6a:	00 24       	eor	r0, r0
     d6c:	a7 fd       	sbrc	r26, 7
     d6e:	00 94       	com	r0
     d70:	2a 0f       	add	r18, r26
     d72:	30 1d       	adc	r19, r0
     d74:	40 1d       	adc	r20, r0
     d76:	50 1d       	adc	r21, r0
     d78:	60 1d       	adc	r22, r0
     d7a:	70 1d       	adc	r23, r0
     d7c:	80 1d       	adc	r24, r0
     d7e:	90 1d       	adc	r25, r0
     d80:	08 95       	ret

00000d82 <strcmp>:
     d82:	fb 01       	movw	r30, r22
     d84:	dc 01       	movw	r26, r24
     d86:	8d 91       	ld	r24, X+
     d88:	01 90       	ld	r0, Z+
     d8a:	80 19       	sub	r24, r0
     d8c:	01 10       	cpse	r0, r1
     d8e:	d9 f3       	breq	.-10     	; 0xd86 <strcmp+0x4>
     d90:	99 0b       	sbc	r25, r25
     d92:	08 95       	ret

00000d94 <vsnprintf>:
     d94:	0f 93       	push	r16
     d96:	1f 93       	push	r17
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	cd b7       	in	r28, 0x3d	; 61
     d9e:	de b7       	in	r29, 0x3e	; 62
     da0:	2e 97       	sbiw	r28, 0x0e	; 14
     da2:	0f b6       	in	r0, 0x3f	; 63
     da4:	f8 94       	cli
     da6:	de bf       	out	0x3e, r29	; 62
     da8:	0f be       	out	0x3f, r0	; 63
     daa:	cd bf       	out	0x3d, r28	; 61
     dac:	8c 01       	movw	r16, r24
     dae:	fa 01       	movw	r30, r20
     db0:	86 e0       	ldi	r24, 0x06	; 6
     db2:	8c 83       	std	Y+4, r24	; 0x04
     db4:	1a 83       	std	Y+2, r17	; 0x02
     db6:	09 83       	std	Y+1, r16	; 0x01
     db8:	77 ff       	sbrs	r23, 7
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <vsnprintf+0x2c>
     dbc:	60 e0       	ldi	r22, 0x00	; 0
     dbe:	70 e8       	ldi	r23, 0x80	; 128
     dc0:	cb 01       	movw	r24, r22
     dc2:	01 97       	sbiw	r24, 0x01	; 1
     dc4:	9e 83       	std	Y+6, r25	; 0x06
     dc6:	8d 83       	std	Y+5, r24	; 0x05
     dc8:	a9 01       	movw	r20, r18
     dca:	bf 01       	movw	r22, r30
     dcc:	ce 01       	movw	r24, r28
     dce:	01 96       	adiw	r24, 0x01	; 1
     dd0:	19 d0       	rcall	.+50     	; 0xe04 <vfprintf>
     dd2:	4d 81       	ldd	r20, Y+5	; 0x05
     dd4:	5e 81       	ldd	r21, Y+6	; 0x06
     dd6:	57 fd       	sbrc	r21, 7
     dd8:	0a c0       	rjmp	.+20     	; 0xdee <vsnprintf+0x5a>
     dda:	2f 81       	ldd	r18, Y+7	; 0x07
     ddc:	38 85       	ldd	r19, Y+8	; 0x08
     dde:	42 17       	cp	r20, r18
     de0:	53 07       	cpc	r21, r19
     de2:	0c f4       	brge	.+2      	; 0xde6 <vsnprintf+0x52>
     de4:	9a 01       	movw	r18, r20
     de6:	f8 01       	movw	r30, r16
     de8:	e2 0f       	add	r30, r18
     dea:	f3 1f       	adc	r31, r19
     dec:	10 82       	st	Z, r1
     dee:	2e 96       	adiw	r28, 0x0e	; 14
     df0:	0f b6       	in	r0, 0x3f	; 63
     df2:	f8 94       	cli
     df4:	de bf       	out	0x3e, r29	; 62
     df6:	0f be       	out	0x3f, r0	; 63
     df8:	cd bf       	out	0x3d, r28	; 61
     dfa:	df 91       	pop	r29
     dfc:	cf 91       	pop	r28
     dfe:	1f 91       	pop	r17
     e00:	0f 91       	pop	r16
     e02:	08 95       	ret

00000e04 <vfprintf>:
     e04:	2f 92       	push	r2
     e06:	3f 92       	push	r3
     e08:	4f 92       	push	r4
     e0a:	5f 92       	push	r5
     e0c:	6f 92       	push	r6
     e0e:	7f 92       	push	r7
     e10:	8f 92       	push	r8
     e12:	9f 92       	push	r9
     e14:	af 92       	push	r10
     e16:	bf 92       	push	r11
     e18:	cf 92       	push	r12
     e1a:	df 92       	push	r13
     e1c:	ef 92       	push	r14
     e1e:	ff 92       	push	r15
     e20:	0f 93       	push	r16
     e22:	1f 93       	push	r17
     e24:	cf 93       	push	r28
     e26:	df 93       	push	r29
     e28:	cd b7       	in	r28, 0x3d	; 61
     e2a:	de b7       	in	r29, 0x3e	; 62
     e2c:	2b 97       	sbiw	r28, 0x0b	; 11
     e2e:	0f b6       	in	r0, 0x3f	; 63
     e30:	f8 94       	cli
     e32:	de bf       	out	0x3e, r29	; 62
     e34:	0f be       	out	0x3f, r0	; 63
     e36:	cd bf       	out	0x3d, r28	; 61
     e38:	6c 01       	movw	r12, r24
     e3a:	7b 01       	movw	r14, r22
     e3c:	8a 01       	movw	r16, r20
     e3e:	fc 01       	movw	r30, r24
     e40:	17 82       	std	Z+7, r1	; 0x07
     e42:	16 82       	std	Z+6, r1	; 0x06
     e44:	83 81       	ldd	r24, Z+3	; 0x03
     e46:	81 ff       	sbrs	r24, 1
     e48:	bf c1       	rjmp	.+894    	; 0x11c8 <vfprintf+0x3c4>
     e4a:	ce 01       	movw	r24, r28
     e4c:	01 96       	adiw	r24, 0x01	; 1
     e4e:	3c 01       	movw	r6, r24
     e50:	f6 01       	movw	r30, r12
     e52:	93 81       	ldd	r25, Z+3	; 0x03
     e54:	f7 01       	movw	r30, r14
     e56:	93 fd       	sbrc	r25, 3
     e58:	85 91       	lpm	r24, Z+
     e5a:	93 ff       	sbrs	r25, 3
     e5c:	81 91       	ld	r24, Z+
     e5e:	7f 01       	movw	r14, r30
     e60:	88 23       	and	r24, r24
     e62:	09 f4       	brne	.+2      	; 0xe66 <vfprintf+0x62>
     e64:	ad c1       	rjmp	.+858    	; 0x11c0 <vfprintf+0x3bc>
     e66:	85 32       	cpi	r24, 0x25	; 37
     e68:	39 f4       	brne	.+14     	; 0xe78 <vfprintf+0x74>
     e6a:	93 fd       	sbrc	r25, 3
     e6c:	85 91       	lpm	r24, Z+
     e6e:	93 ff       	sbrs	r25, 3
     e70:	81 91       	ld	r24, Z+
     e72:	7f 01       	movw	r14, r30
     e74:	85 32       	cpi	r24, 0x25	; 37
     e76:	21 f4       	brne	.+8      	; 0xe80 <vfprintf+0x7c>
     e78:	b6 01       	movw	r22, r12
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	d6 d1       	rcall	.+940    	; 0x122a <fputc>
     e7e:	e8 cf       	rjmp	.-48     	; 0xe50 <vfprintf+0x4c>
     e80:	91 2c       	mov	r9, r1
     e82:	21 2c       	mov	r2, r1
     e84:	31 2c       	mov	r3, r1
     e86:	ff e1       	ldi	r31, 0x1F	; 31
     e88:	f3 15       	cp	r31, r3
     e8a:	d8 f0       	brcs	.+54     	; 0xec2 <vfprintf+0xbe>
     e8c:	8b 32       	cpi	r24, 0x2B	; 43
     e8e:	79 f0       	breq	.+30     	; 0xeae <vfprintf+0xaa>
     e90:	38 f4       	brcc	.+14     	; 0xea0 <vfprintf+0x9c>
     e92:	80 32       	cpi	r24, 0x20	; 32
     e94:	79 f0       	breq	.+30     	; 0xeb4 <vfprintf+0xb0>
     e96:	83 32       	cpi	r24, 0x23	; 35
     e98:	a1 f4       	brne	.+40     	; 0xec2 <vfprintf+0xbe>
     e9a:	23 2d       	mov	r18, r3
     e9c:	20 61       	ori	r18, 0x10	; 16
     e9e:	1d c0       	rjmp	.+58     	; 0xeda <vfprintf+0xd6>
     ea0:	8d 32       	cpi	r24, 0x2D	; 45
     ea2:	61 f0       	breq	.+24     	; 0xebc <vfprintf+0xb8>
     ea4:	80 33       	cpi	r24, 0x30	; 48
     ea6:	69 f4       	brne	.+26     	; 0xec2 <vfprintf+0xbe>
     ea8:	23 2d       	mov	r18, r3
     eaa:	21 60       	ori	r18, 0x01	; 1
     eac:	16 c0       	rjmp	.+44     	; 0xeda <vfprintf+0xd6>
     eae:	83 2d       	mov	r24, r3
     eb0:	82 60       	ori	r24, 0x02	; 2
     eb2:	38 2e       	mov	r3, r24
     eb4:	e3 2d       	mov	r30, r3
     eb6:	e4 60       	ori	r30, 0x04	; 4
     eb8:	3e 2e       	mov	r3, r30
     eba:	2a c0       	rjmp	.+84     	; 0xf10 <vfprintf+0x10c>
     ebc:	f3 2d       	mov	r31, r3
     ebe:	f8 60       	ori	r31, 0x08	; 8
     ec0:	1d c0       	rjmp	.+58     	; 0xefc <vfprintf+0xf8>
     ec2:	37 fc       	sbrc	r3, 7
     ec4:	2d c0       	rjmp	.+90     	; 0xf20 <vfprintf+0x11c>
     ec6:	20 ed       	ldi	r18, 0xD0	; 208
     ec8:	28 0f       	add	r18, r24
     eca:	2a 30       	cpi	r18, 0x0A	; 10
     ecc:	40 f0       	brcs	.+16     	; 0xede <vfprintf+0xda>
     ece:	8e 32       	cpi	r24, 0x2E	; 46
     ed0:	b9 f4       	brne	.+46     	; 0xf00 <vfprintf+0xfc>
     ed2:	36 fc       	sbrc	r3, 6
     ed4:	75 c1       	rjmp	.+746    	; 0x11c0 <vfprintf+0x3bc>
     ed6:	23 2d       	mov	r18, r3
     ed8:	20 64       	ori	r18, 0x40	; 64
     eda:	32 2e       	mov	r3, r18
     edc:	19 c0       	rjmp	.+50     	; 0xf10 <vfprintf+0x10c>
     ede:	36 fe       	sbrs	r3, 6
     ee0:	06 c0       	rjmp	.+12     	; 0xeee <vfprintf+0xea>
     ee2:	8a e0       	ldi	r24, 0x0A	; 10
     ee4:	98 9e       	mul	r9, r24
     ee6:	20 0d       	add	r18, r0
     ee8:	11 24       	eor	r1, r1
     eea:	92 2e       	mov	r9, r18
     eec:	11 c0       	rjmp	.+34     	; 0xf10 <vfprintf+0x10c>
     eee:	ea e0       	ldi	r30, 0x0A	; 10
     ef0:	2e 9e       	mul	r2, r30
     ef2:	20 0d       	add	r18, r0
     ef4:	11 24       	eor	r1, r1
     ef6:	22 2e       	mov	r2, r18
     ef8:	f3 2d       	mov	r31, r3
     efa:	f0 62       	ori	r31, 0x20	; 32
     efc:	3f 2e       	mov	r3, r31
     efe:	08 c0       	rjmp	.+16     	; 0xf10 <vfprintf+0x10c>
     f00:	8c 36       	cpi	r24, 0x6C	; 108
     f02:	21 f4       	brne	.+8      	; 0xf0c <vfprintf+0x108>
     f04:	83 2d       	mov	r24, r3
     f06:	80 68       	ori	r24, 0x80	; 128
     f08:	38 2e       	mov	r3, r24
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <vfprintf+0x10c>
     f0c:	88 36       	cpi	r24, 0x68	; 104
     f0e:	41 f4       	brne	.+16     	; 0xf20 <vfprintf+0x11c>
     f10:	f7 01       	movw	r30, r14
     f12:	93 fd       	sbrc	r25, 3
     f14:	85 91       	lpm	r24, Z+
     f16:	93 ff       	sbrs	r25, 3
     f18:	81 91       	ld	r24, Z+
     f1a:	7f 01       	movw	r14, r30
     f1c:	81 11       	cpse	r24, r1
     f1e:	b3 cf       	rjmp	.-154    	; 0xe86 <vfprintf+0x82>
     f20:	98 2f       	mov	r25, r24
     f22:	9f 7d       	andi	r25, 0xDF	; 223
     f24:	95 54       	subi	r25, 0x45	; 69
     f26:	93 30       	cpi	r25, 0x03	; 3
     f28:	28 f4       	brcc	.+10     	; 0xf34 <vfprintf+0x130>
     f2a:	0c 5f       	subi	r16, 0xFC	; 252
     f2c:	1f 4f       	sbci	r17, 0xFF	; 255
     f2e:	9f e3       	ldi	r25, 0x3F	; 63
     f30:	99 83       	std	Y+1, r25	; 0x01
     f32:	0d c0       	rjmp	.+26     	; 0xf4e <vfprintf+0x14a>
     f34:	83 36       	cpi	r24, 0x63	; 99
     f36:	31 f0       	breq	.+12     	; 0xf44 <vfprintf+0x140>
     f38:	83 37       	cpi	r24, 0x73	; 115
     f3a:	71 f0       	breq	.+28     	; 0xf58 <vfprintf+0x154>
     f3c:	83 35       	cpi	r24, 0x53	; 83
     f3e:	09 f0       	breq	.+2      	; 0xf42 <vfprintf+0x13e>
     f40:	55 c0       	rjmp	.+170    	; 0xfec <vfprintf+0x1e8>
     f42:	20 c0       	rjmp	.+64     	; 0xf84 <vfprintf+0x180>
     f44:	f8 01       	movw	r30, r16
     f46:	80 81       	ld	r24, Z
     f48:	89 83       	std	Y+1, r24	; 0x01
     f4a:	0e 5f       	subi	r16, 0xFE	; 254
     f4c:	1f 4f       	sbci	r17, 0xFF	; 255
     f4e:	88 24       	eor	r8, r8
     f50:	83 94       	inc	r8
     f52:	91 2c       	mov	r9, r1
     f54:	53 01       	movw	r10, r6
     f56:	12 c0       	rjmp	.+36     	; 0xf7c <vfprintf+0x178>
     f58:	28 01       	movw	r4, r16
     f5a:	f2 e0       	ldi	r31, 0x02	; 2
     f5c:	4f 0e       	add	r4, r31
     f5e:	51 1c       	adc	r5, r1
     f60:	f8 01       	movw	r30, r16
     f62:	a0 80       	ld	r10, Z
     f64:	b1 80       	ldd	r11, Z+1	; 0x01
     f66:	36 fe       	sbrs	r3, 6
     f68:	03 c0       	rjmp	.+6      	; 0xf70 <vfprintf+0x16c>
     f6a:	69 2d       	mov	r22, r9
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	02 c0       	rjmp	.+4      	; 0xf74 <vfprintf+0x170>
     f70:	6f ef       	ldi	r22, 0xFF	; 255
     f72:	7f ef       	ldi	r23, 0xFF	; 255
     f74:	c5 01       	movw	r24, r10
     f76:	4e d1       	rcall	.+668    	; 0x1214 <strnlen>
     f78:	4c 01       	movw	r8, r24
     f7a:	82 01       	movw	r16, r4
     f7c:	f3 2d       	mov	r31, r3
     f7e:	ff 77       	andi	r31, 0x7F	; 127
     f80:	3f 2e       	mov	r3, r31
     f82:	15 c0       	rjmp	.+42     	; 0xfae <vfprintf+0x1aa>
     f84:	28 01       	movw	r4, r16
     f86:	22 e0       	ldi	r18, 0x02	; 2
     f88:	42 0e       	add	r4, r18
     f8a:	51 1c       	adc	r5, r1
     f8c:	f8 01       	movw	r30, r16
     f8e:	a0 80       	ld	r10, Z
     f90:	b1 80       	ldd	r11, Z+1	; 0x01
     f92:	36 fe       	sbrs	r3, 6
     f94:	03 c0       	rjmp	.+6      	; 0xf9c <vfprintf+0x198>
     f96:	69 2d       	mov	r22, r9
     f98:	70 e0       	ldi	r23, 0x00	; 0
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <vfprintf+0x19c>
     f9c:	6f ef       	ldi	r22, 0xFF	; 255
     f9e:	7f ef       	ldi	r23, 0xFF	; 255
     fa0:	c5 01       	movw	r24, r10
     fa2:	2d d1       	rcall	.+602    	; 0x11fe <strnlen_P>
     fa4:	4c 01       	movw	r8, r24
     fa6:	f3 2d       	mov	r31, r3
     fa8:	f0 68       	ori	r31, 0x80	; 128
     faa:	3f 2e       	mov	r3, r31
     fac:	82 01       	movw	r16, r4
     fae:	33 fc       	sbrc	r3, 3
     fb0:	19 c0       	rjmp	.+50     	; 0xfe4 <vfprintf+0x1e0>
     fb2:	82 2d       	mov	r24, r2
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	88 16       	cp	r8, r24
     fb8:	99 06       	cpc	r9, r25
     fba:	a0 f4       	brcc	.+40     	; 0xfe4 <vfprintf+0x1e0>
     fbc:	b6 01       	movw	r22, r12
     fbe:	80 e2       	ldi	r24, 0x20	; 32
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	33 d1       	rcall	.+614    	; 0x122a <fputc>
     fc4:	2a 94       	dec	r2
     fc6:	f5 cf       	rjmp	.-22     	; 0xfb2 <vfprintf+0x1ae>
     fc8:	f5 01       	movw	r30, r10
     fca:	37 fc       	sbrc	r3, 7
     fcc:	85 91       	lpm	r24, Z+
     fce:	37 fe       	sbrs	r3, 7
     fd0:	81 91       	ld	r24, Z+
     fd2:	5f 01       	movw	r10, r30
     fd4:	b6 01       	movw	r22, r12
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	28 d1       	rcall	.+592    	; 0x122a <fputc>
     fda:	21 10       	cpse	r2, r1
     fdc:	2a 94       	dec	r2
     fde:	21 e0       	ldi	r18, 0x01	; 1
     fe0:	82 1a       	sub	r8, r18
     fe2:	91 08       	sbc	r9, r1
     fe4:	81 14       	cp	r8, r1
     fe6:	91 04       	cpc	r9, r1
     fe8:	79 f7       	brne	.-34     	; 0xfc8 <vfprintf+0x1c4>
     fea:	e1 c0       	rjmp	.+450    	; 0x11ae <vfprintf+0x3aa>
     fec:	84 36       	cpi	r24, 0x64	; 100
     fee:	11 f0       	breq	.+4      	; 0xff4 <vfprintf+0x1f0>
     ff0:	89 36       	cpi	r24, 0x69	; 105
     ff2:	39 f5       	brne	.+78     	; 0x1042 <vfprintf+0x23e>
     ff4:	f8 01       	movw	r30, r16
     ff6:	37 fe       	sbrs	r3, 7
     ff8:	07 c0       	rjmp	.+14     	; 0x1008 <vfprintf+0x204>
     ffa:	60 81       	ld	r22, Z
     ffc:	71 81       	ldd	r23, Z+1	; 0x01
     ffe:	82 81       	ldd	r24, Z+2	; 0x02
    1000:	93 81       	ldd	r25, Z+3	; 0x03
    1002:	0c 5f       	subi	r16, 0xFC	; 252
    1004:	1f 4f       	sbci	r17, 0xFF	; 255
    1006:	08 c0       	rjmp	.+16     	; 0x1018 <vfprintf+0x214>
    1008:	60 81       	ld	r22, Z
    100a:	71 81       	ldd	r23, Z+1	; 0x01
    100c:	07 2e       	mov	r0, r23
    100e:	00 0c       	add	r0, r0
    1010:	88 0b       	sbc	r24, r24
    1012:	99 0b       	sbc	r25, r25
    1014:	0e 5f       	subi	r16, 0xFE	; 254
    1016:	1f 4f       	sbci	r17, 0xFF	; 255
    1018:	f3 2d       	mov	r31, r3
    101a:	ff 76       	andi	r31, 0x6F	; 111
    101c:	3f 2e       	mov	r3, r31
    101e:	97 ff       	sbrs	r25, 7
    1020:	09 c0       	rjmp	.+18     	; 0x1034 <vfprintf+0x230>
    1022:	90 95       	com	r25
    1024:	80 95       	com	r24
    1026:	70 95       	com	r23
    1028:	61 95       	neg	r22
    102a:	7f 4f       	sbci	r23, 0xFF	; 255
    102c:	8f 4f       	sbci	r24, 0xFF	; 255
    102e:	9f 4f       	sbci	r25, 0xFF	; 255
    1030:	f0 68       	ori	r31, 0x80	; 128
    1032:	3f 2e       	mov	r3, r31
    1034:	2a e0       	ldi	r18, 0x0A	; 10
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	a3 01       	movw	r20, r6
    103a:	33 d1       	rcall	.+614    	; 0x12a2 <__ultoa_invert>
    103c:	88 2e       	mov	r8, r24
    103e:	86 18       	sub	r8, r6
    1040:	44 c0       	rjmp	.+136    	; 0x10ca <vfprintf+0x2c6>
    1042:	85 37       	cpi	r24, 0x75	; 117
    1044:	31 f4       	brne	.+12     	; 0x1052 <vfprintf+0x24e>
    1046:	23 2d       	mov	r18, r3
    1048:	2f 7e       	andi	r18, 0xEF	; 239
    104a:	b2 2e       	mov	r11, r18
    104c:	2a e0       	ldi	r18, 0x0A	; 10
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	25 c0       	rjmp	.+74     	; 0x109c <vfprintf+0x298>
    1052:	93 2d       	mov	r25, r3
    1054:	99 7f       	andi	r25, 0xF9	; 249
    1056:	b9 2e       	mov	r11, r25
    1058:	8f 36       	cpi	r24, 0x6F	; 111
    105a:	c1 f0       	breq	.+48     	; 0x108c <vfprintf+0x288>
    105c:	18 f4       	brcc	.+6      	; 0x1064 <vfprintf+0x260>
    105e:	88 35       	cpi	r24, 0x58	; 88
    1060:	79 f0       	breq	.+30     	; 0x1080 <vfprintf+0x27c>
    1062:	ae c0       	rjmp	.+348    	; 0x11c0 <vfprintf+0x3bc>
    1064:	80 37       	cpi	r24, 0x70	; 112
    1066:	19 f0       	breq	.+6      	; 0x106e <vfprintf+0x26a>
    1068:	88 37       	cpi	r24, 0x78	; 120
    106a:	21 f0       	breq	.+8      	; 0x1074 <vfprintf+0x270>
    106c:	a9 c0       	rjmp	.+338    	; 0x11c0 <vfprintf+0x3bc>
    106e:	e9 2f       	mov	r30, r25
    1070:	e0 61       	ori	r30, 0x10	; 16
    1072:	be 2e       	mov	r11, r30
    1074:	b4 fe       	sbrs	r11, 4
    1076:	0d c0       	rjmp	.+26     	; 0x1092 <vfprintf+0x28e>
    1078:	fb 2d       	mov	r31, r11
    107a:	f4 60       	ori	r31, 0x04	; 4
    107c:	bf 2e       	mov	r11, r31
    107e:	09 c0       	rjmp	.+18     	; 0x1092 <vfprintf+0x28e>
    1080:	34 fe       	sbrs	r3, 4
    1082:	0a c0       	rjmp	.+20     	; 0x1098 <vfprintf+0x294>
    1084:	29 2f       	mov	r18, r25
    1086:	26 60       	ori	r18, 0x06	; 6
    1088:	b2 2e       	mov	r11, r18
    108a:	06 c0       	rjmp	.+12     	; 0x1098 <vfprintf+0x294>
    108c:	28 e0       	ldi	r18, 0x08	; 8
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	05 c0       	rjmp	.+10     	; 0x109c <vfprintf+0x298>
    1092:	20 e1       	ldi	r18, 0x10	; 16
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	02 c0       	rjmp	.+4      	; 0x109c <vfprintf+0x298>
    1098:	20 e1       	ldi	r18, 0x10	; 16
    109a:	32 e0       	ldi	r19, 0x02	; 2
    109c:	f8 01       	movw	r30, r16
    109e:	b7 fe       	sbrs	r11, 7
    10a0:	07 c0       	rjmp	.+14     	; 0x10b0 <vfprintf+0x2ac>
    10a2:	60 81       	ld	r22, Z
    10a4:	71 81       	ldd	r23, Z+1	; 0x01
    10a6:	82 81       	ldd	r24, Z+2	; 0x02
    10a8:	93 81       	ldd	r25, Z+3	; 0x03
    10aa:	0c 5f       	subi	r16, 0xFC	; 252
    10ac:	1f 4f       	sbci	r17, 0xFF	; 255
    10ae:	06 c0       	rjmp	.+12     	; 0x10bc <vfprintf+0x2b8>
    10b0:	60 81       	ld	r22, Z
    10b2:	71 81       	ldd	r23, Z+1	; 0x01
    10b4:	80 e0       	ldi	r24, 0x00	; 0
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	0e 5f       	subi	r16, 0xFE	; 254
    10ba:	1f 4f       	sbci	r17, 0xFF	; 255
    10bc:	a3 01       	movw	r20, r6
    10be:	f1 d0       	rcall	.+482    	; 0x12a2 <__ultoa_invert>
    10c0:	88 2e       	mov	r8, r24
    10c2:	86 18       	sub	r8, r6
    10c4:	fb 2d       	mov	r31, r11
    10c6:	ff 77       	andi	r31, 0x7F	; 127
    10c8:	3f 2e       	mov	r3, r31
    10ca:	36 fe       	sbrs	r3, 6
    10cc:	0d c0       	rjmp	.+26     	; 0x10e8 <vfprintf+0x2e4>
    10ce:	23 2d       	mov	r18, r3
    10d0:	2e 7f       	andi	r18, 0xFE	; 254
    10d2:	a2 2e       	mov	r10, r18
    10d4:	89 14       	cp	r8, r9
    10d6:	58 f4       	brcc	.+22     	; 0x10ee <vfprintf+0x2ea>
    10d8:	34 fe       	sbrs	r3, 4
    10da:	0b c0       	rjmp	.+22     	; 0x10f2 <vfprintf+0x2ee>
    10dc:	32 fc       	sbrc	r3, 2
    10de:	09 c0       	rjmp	.+18     	; 0x10f2 <vfprintf+0x2ee>
    10e0:	83 2d       	mov	r24, r3
    10e2:	8e 7e       	andi	r24, 0xEE	; 238
    10e4:	a8 2e       	mov	r10, r24
    10e6:	05 c0       	rjmp	.+10     	; 0x10f2 <vfprintf+0x2ee>
    10e8:	b8 2c       	mov	r11, r8
    10ea:	a3 2c       	mov	r10, r3
    10ec:	03 c0       	rjmp	.+6      	; 0x10f4 <vfprintf+0x2f0>
    10ee:	b8 2c       	mov	r11, r8
    10f0:	01 c0       	rjmp	.+2      	; 0x10f4 <vfprintf+0x2f0>
    10f2:	b9 2c       	mov	r11, r9
    10f4:	a4 fe       	sbrs	r10, 4
    10f6:	0f c0       	rjmp	.+30     	; 0x1116 <vfprintf+0x312>
    10f8:	fe 01       	movw	r30, r28
    10fa:	e8 0d       	add	r30, r8
    10fc:	f1 1d       	adc	r31, r1
    10fe:	80 81       	ld	r24, Z
    1100:	80 33       	cpi	r24, 0x30	; 48
    1102:	21 f4       	brne	.+8      	; 0x110c <vfprintf+0x308>
    1104:	9a 2d       	mov	r25, r10
    1106:	99 7e       	andi	r25, 0xE9	; 233
    1108:	a9 2e       	mov	r10, r25
    110a:	09 c0       	rjmp	.+18     	; 0x111e <vfprintf+0x31a>
    110c:	a2 fe       	sbrs	r10, 2
    110e:	06 c0       	rjmp	.+12     	; 0x111c <vfprintf+0x318>
    1110:	b3 94       	inc	r11
    1112:	b3 94       	inc	r11
    1114:	04 c0       	rjmp	.+8      	; 0x111e <vfprintf+0x31a>
    1116:	8a 2d       	mov	r24, r10
    1118:	86 78       	andi	r24, 0x86	; 134
    111a:	09 f0       	breq	.+2      	; 0x111e <vfprintf+0x31a>
    111c:	b3 94       	inc	r11
    111e:	a3 fc       	sbrc	r10, 3
    1120:	10 c0       	rjmp	.+32     	; 0x1142 <vfprintf+0x33e>
    1122:	a0 fe       	sbrs	r10, 0
    1124:	06 c0       	rjmp	.+12     	; 0x1132 <vfprintf+0x32e>
    1126:	b2 14       	cp	r11, r2
    1128:	80 f4       	brcc	.+32     	; 0x114a <vfprintf+0x346>
    112a:	28 0c       	add	r2, r8
    112c:	92 2c       	mov	r9, r2
    112e:	9b 18       	sub	r9, r11
    1130:	0d c0       	rjmp	.+26     	; 0x114c <vfprintf+0x348>
    1132:	b2 14       	cp	r11, r2
    1134:	58 f4       	brcc	.+22     	; 0x114c <vfprintf+0x348>
    1136:	b6 01       	movw	r22, r12
    1138:	80 e2       	ldi	r24, 0x20	; 32
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	76 d0       	rcall	.+236    	; 0x122a <fputc>
    113e:	b3 94       	inc	r11
    1140:	f8 cf       	rjmp	.-16     	; 0x1132 <vfprintf+0x32e>
    1142:	b2 14       	cp	r11, r2
    1144:	18 f4       	brcc	.+6      	; 0x114c <vfprintf+0x348>
    1146:	2b 18       	sub	r2, r11
    1148:	02 c0       	rjmp	.+4      	; 0x114e <vfprintf+0x34a>
    114a:	98 2c       	mov	r9, r8
    114c:	21 2c       	mov	r2, r1
    114e:	a4 fe       	sbrs	r10, 4
    1150:	0f c0       	rjmp	.+30     	; 0x1170 <vfprintf+0x36c>
    1152:	b6 01       	movw	r22, r12
    1154:	80 e3       	ldi	r24, 0x30	; 48
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	68 d0       	rcall	.+208    	; 0x122a <fputc>
    115a:	a2 fe       	sbrs	r10, 2
    115c:	16 c0       	rjmp	.+44     	; 0x118a <vfprintf+0x386>
    115e:	a1 fc       	sbrc	r10, 1
    1160:	03 c0       	rjmp	.+6      	; 0x1168 <vfprintf+0x364>
    1162:	88 e7       	ldi	r24, 0x78	; 120
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	02 c0       	rjmp	.+4      	; 0x116c <vfprintf+0x368>
    1168:	88 e5       	ldi	r24, 0x58	; 88
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	b6 01       	movw	r22, r12
    116e:	0c c0       	rjmp	.+24     	; 0x1188 <vfprintf+0x384>
    1170:	8a 2d       	mov	r24, r10
    1172:	86 78       	andi	r24, 0x86	; 134
    1174:	51 f0       	breq	.+20     	; 0x118a <vfprintf+0x386>
    1176:	a1 fe       	sbrs	r10, 1
    1178:	02 c0       	rjmp	.+4      	; 0x117e <vfprintf+0x37a>
    117a:	8b e2       	ldi	r24, 0x2B	; 43
    117c:	01 c0       	rjmp	.+2      	; 0x1180 <vfprintf+0x37c>
    117e:	80 e2       	ldi	r24, 0x20	; 32
    1180:	a7 fc       	sbrc	r10, 7
    1182:	8d e2       	ldi	r24, 0x2D	; 45
    1184:	b6 01       	movw	r22, r12
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	50 d0       	rcall	.+160    	; 0x122a <fputc>
    118a:	89 14       	cp	r8, r9
    118c:	30 f4       	brcc	.+12     	; 0x119a <vfprintf+0x396>
    118e:	b6 01       	movw	r22, r12
    1190:	80 e3       	ldi	r24, 0x30	; 48
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	4a d0       	rcall	.+148    	; 0x122a <fputc>
    1196:	9a 94       	dec	r9
    1198:	f8 cf       	rjmp	.-16     	; 0x118a <vfprintf+0x386>
    119a:	8a 94       	dec	r8
    119c:	f3 01       	movw	r30, r6
    119e:	e8 0d       	add	r30, r8
    11a0:	f1 1d       	adc	r31, r1
    11a2:	80 81       	ld	r24, Z
    11a4:	b6 01       	movw	r22, r12
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	40 d0       	rcall	.+128    	; 0x122a <fputc>
    11aa:	81 10       	cpse	r8, r1
    11ac:	f6 cf       	rjmp	.-20     	; 0x119a <vfprintf+0x396>
    11ae:	22 20       	and	r2, r2
    11b0:	09 f4       	brne	.+2      	; 0x11b4 <vfprintf+0x3b0>
    11b2:	4e ce       	rjmp	.-868    	; 0xe50 <vfprintf+0x4c>
    11b4:	b6 01       	movw	r22, r12
    11b6:	80 e2       	ldi	r24, 0x20	; 32
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	37 d0       	rcall	.+110    	; 0x122a <fputc>
    11bc:	2a 94       	dec	r2
    11be:	f7 cf       	rjmp	.-18     	; 0x11ae <vfprintf+0x3aa>
    11c0:	f6 01       	movw	r30, r12
    11c2:	86 81       	ldd	r24, Z+6	; 0x06
    11c4:	97 81       	ldd	r25, Z+7	; 0x07
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <vfprintf+0x3c8>
    11c8:	8f ef       	ldi	r24, 0xFF	; 255
    11ca:	9f ef       	ldi	r25, 0xFF	; 255
    11cc:	2b 96       	adiw	r28, 0x0b	; 11
    11ce:	0f b6       	in	r0, 0x3f	; 63
    11d0:	f8 94       	cli
    11d2:	de bf       	out	0x3e, r29	; 62
    11d4:	0f be       	out	0x3f, r0	; 63
    11d6:	cd bf       	out	0x3d, r28	; 61
    11d8:	df 91       	pop	r29
    11da:	cf 91       	pop	r28
    11dc:	1f 91       	pop	r17
    11de:	0f 91       	pop	r16
    11e0:	ff 90       	pop	r15
    11e2:	ef 90       	pop	r14
    11e4:	df 90       	pop	r13
    11e6:	cf 90       	pop	r12
    11e8:	bf 90       	pop	r11
    11ea:	af 90       	pop	r10
    11ec:	9f 90       	pop	r9
    11ee:	8f 90       	pop	r8
    11f0:	7f 90       	pop	r7
    11f2:	6f 90       	pop	r6
    11f4:	5f 90       	pop	r5
    11f6:	4f 90       	pop	r4
    11f8:	3f 90       	pop	r3
    11fa:	2f 90       	pop	r2
    11fc:	08 95       	ret

000011fe <strnlen_P>:
    11fe:	fc 01       	movw	r30, r24
    1200:	05 90       	lpm	r0, Z+
    1202:	61 50       	subi	r22, 0x01	; 1
    1204:	70 40       	sbci	r23, 0x00	; 0
    1206:	01 10       	cpse	r0, r1
    1208:	d8 f7       	brcc	.-10     	; 0x1200 <strnlen_P+0x2>
    120a:	80 95       	com	r24
    120c:	90 95       	com	r25
    120e:	8e 0f       	add	r24, r30
    1210:	9f 1f       	adc	r25, r31
    1212:	08 95       	ret

00001214 <strnlen>:
    1214:	fc 01       	movw	r30, r24
    1216:	61 50       	subi	r22, 0x01	; 1
    1218:	70 40       	sbci	r23, 0x00	; 0
    121a:	01 90       	ld	r0, Z+
    121c:	01 10       	cpse	r0, r1
    121e:	d8 f7       	brcc	.-10     	; 0x1216 <strnlen+0x2>
    1220:	80 95       	com	r24
    1222:	90 95       	com	r25
    1224:	8e 0f       	add	r24, r30
    1226:	9f 1f       	adc	r25, r31
    1228:	08 95       	ret

0000122a <fputc>:
    122a:	0f 93       	push	r16
    122c:	1f 93       	push	r17
    122e:	cf 93       	push	r28
    1230:	df 93       	push	r29
    1232:	fb 01       	movw	r30, r22
    1234:	23 81       	ldd	r18, Z+3	; 0x03
    1236:	21 fd       	sbrc	r18, 1
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <fputc+0x16>
    123a:	8f ef       	ldi	r24, 0xFF	; 255
    123c:	9f ef       	ldi	r25, 0xFF	; 255
    123e:	2c c0       	rjmp	.+88     	; 0x1298 <fputc+0x6e>
    1240:	22 ff       	sbrs	r18, 2
    1242:	16 c0       	rjmp	.+44     	; 0x1270 <fputc+0x46>
    1244:	46 81       	ldd	r20, Z+6	; 0x06
    1246:	57 81       	ldd	r21, Z+7	; 0x07
    1248:	24 81       	ldd	r18, Z+4	; 0x04
    124a:	35 81       	ldd	r19, Z+5	; 0x05
    124c:	42 17       	cp	r20, r18
    124e:	53 07       	cpc	r21, r19
    1250:	44 f4       	brge	.+16     	; 0x1262 <fputc+0x38>
    1252:	a0 81       	ld	r26, Z
    1254:	b1 81       	ldd	r27, Z+1	; 0x01
    1256:	9d 01       	movw	r18, r26
    1258:	2f 5f       	subi	r18, 0xFF	; 255
    125a:	3f 4f       	sbci	r19, 0xFF	; 255
    125c:	31 83       	std	Z+1, r19	; 0x01
    125e:	20 83       	st	Z, r18
    1260:	8c 93       	st	X, r24
    1262:	26 81       	ldd	r18, Z+6	; 0x06
    1264:	37 81       	ldd	r19, Z+7	; 0x07
    1266:	2f 5f       	subi	r18, 0xFF	; 255
    1268:	3f 4f       	sbci	r19, 0xFF	; 255
    126a:	37 83       	std	Z+7, r19	; 0x07
    126c:	26 83       	std	Z+6, r18	; 0x06
    126e:	14 c0       	rjmp	.+40     	; 0x1298 <fputc+0x6e>
    1270:	8b 01       	movw	r16, r22
    1272:	ec 01       	movw	r28, r24
    1274:	fb 01       	movw	r30, r22
    1276:	00 84       	ldd	r0, Z+8	; 0x08
    1278:	f1 85       	ldd	r31, Z+9	; 0x09
    127a:	e0 2d       	mov	r30, r0
    127c:	19 95       	eicall
    127e:	89 2b       	or	r24, r25
    1280:	e1 f6       	brne	.-72     	; 0x123a <fputc+0x10>
    1282:	d8 01       	movw	r26, r16
    1284:	16 96       	adiw	r26, 0x06	; 6
    1286:	8d 91       	ld	r24, X+
    1288:	9c 91       	ld	r25, X
    128a:	17 97       	sbiw	r26, 0x07	; 7
    128c:	01 96       	adiw	r24, 0x01	; 1
    128e:	17 96       	adiw	r26, 0x07	; 7
    1290:	9c 93       	st	X, r25
    1292:	8e 93       	st	-X, r24
    1294:	16 97       	sbiw	r26, 0x06	; 6
    1296:	ce 01       	movw	r24, r28
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	1f 91       	pop	r17
    129e:	0f 91       	pop	r16
    12a0:	08 95       	ret

000012a2 <__ultoa_invert>:
    12a2:	fa 01       	movw	r30, r20
    12a4:	aa 27       	eor	r26, r26
    12a6:	28 30       	cpi	r18, 0x08	; 8
    12a8:	51 f1       	breq	.+84     	; 0x12fe <__ultoa_invert+0x5c>
    12aa:	20 31       	cpi	r18, 0x10	; 16
    12ac:	81 f1       	breq	.+96     	; 0x130e <__ultoa_invert+0x6c>
    12ae:	e8 94       	clt
    12b0:	6f 93       	push	r22
    12b2:	6e 7f       	andi	r22, 0xFE	; 254
    12b4:	6e 5f       	subi	r22, 0xFE	; 254
    12b6:	7f 4f       	sbci	r23, 0xFF	; 255
    12b8:	8f 4f       	sbci	r24, 0xFF	; 255
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	af 4f       	sbci	r26, 0xFF	; 255
    12be:	b1 e0       	ldi	r27, 0x01	; 1
    12c0:	3e d0       	rcall	.+124    	; 0x133e <__ultoa_invert+0x9c>
    12c2:	b4 e0       	ldi	r27, 0x04	; 4
    12c4:	3c d0       	rcall	.+120    	; 0x133e <__ultoa_invert+0x9c>
    12c6:	67 0f       	add	r22, r23
    12c8:	78 1f       	adc	r23, r24
    12ca:	89 1f       	adc	r24, r25
    12cc:	9a 1f       	adc	r25, r26
    12ce:	a1 1d       	adc	r26, r1
    12d0:	68 0f       	add	r22, r24
    12d2:	79 1f       	adc	r23, r25
    12d4:	8a 1f       	adc	r24, r26
    12d6:	91 1d       	adc	r25, r1
    12d8:	a1 1d       	adc	r26, r1
    12da:	6a 0f       	add	r22, r26
    12dc:	71 1d       	adc	r23, r1
    12de:	81 1d       	adc	r24, r1
    12e0:	91 1d       	adc	r25, r1
    12e2:	a1 1d       	adc	r26, r1
    12e4:	20 d0       	rcall	.+64     	; 0x1326 <__ultoa_invert+0x84>
    12e6:	09 f4       	brne	.+2      	; 0x12ea <__ultoa_invert+0x48>
    12e8:	68 94       	set
    12ea:	3f 91       	pop	r19
    12ec:	2a e0       	ldi	r18, 0x0A	; 10
    12ee:	26 9f       	mul	r18, r22
    12f0:	11 24       	eor	r1, r1
    12f2:	30 19       	sub	r19, r0
    12f4:	30 5d       	subi	r19, 0xD0	; 208
    12f6:	31 93       	st	Z+, r19
    12f8:	de f6       	brtc	.-74     	; 0x12b0 <__ultoa_invert+0xe>
    12fa:	cf 01       	movw	r24, r30
    12fc:	08 95       	ret
    12fe:	46 2f       	mov	r20, r22
    1300:	47 70       	andi	r20, 0x07	; 7
    1302:	40 5d       	subi	r20, 0xD0	; 208
    1304:	41 93       	st	Z+, r20
    1306:	b3 e0       	ldi	r27, 0x03	; 3
    1308:	0f d0       	rcall	.+30     	; 0x1328 <__ultoa_invert+0x86>
    130a:	c9 f7       	brne	.-14     	; 0x12fe <__ultoa_invert+0x5c>
    130c:	f6 cf       	rjmp	.-20     	; 0x12fa <__ultoa_invert+0x58>
    130e:	46 2f       	mov	r20, r22
    1310:	4f 70       	andi	r20, 0x0F	; 15
    1312:	40 5d       	subi	r20, 0xD0	; 208
    1314:	4a 33       	cpi	r20, 0x3A	; 58
    1316:	18 f0       	brcs	.+6      	; 0x131e <__ultoa_invert+0x7c>
    1318:	49 5d       	subi	r20, 0xD9	; 217
    131a:	31 fd       	sbrc	r19, 1
    131c:	40 52       	subi	r20, 0x20	; 32
    131e:	41 93       	st	Z+, r20
    1320:	02 d0       	rcall	.+4      	; 0x1326 <__ultoa_invert+0x84>
    1322:	a9 f7       	brne	.-22     	; 0x130e <__ultoa_invert+0x6c>
    1324:	ea cf       	rjmp	.-44     	; 0x12fa <__ultoa_invert+0x58>
    1326:	b4 e0       	ldi	r27, 0x04	; 4
    1328:	a6 95       	lsr	r26
    132a:	97 95       	ror	r25
    132c:	87 95       	ror	r24
    132e:	77 95       	ror	r23
    1330:	67 95       	ror	r22
    1332:	ba 95       	dec	r27
    1334:	c9 f7       	brne	.-14     	; 0x1328 <__ultoa_invert+0x86>
    1336:	00 97       	sbiw	r24, 0x00	; 0
    1338:	61 05       	cpc	r22, r1
    133a:	71 05       	cpc	r23, r1
    133c:	08 95       	ret
    133e:	9b 01       	movw	r18, r22
    1340:	ac 01       	movw	r20, r24
    1342:	0a 2e       	mov	r0, r26
    1344:	06 94       	lsr	r0
    1346:	57 95       	ror	r21
    1348:	47 95       	ror	r20
    134a:	37 95       	ror	r19
    134c:	27 95       	ror	r18
    134e:	ba 95       	dec	r27
    1350:	c9 f7       	brne	.-14     	; 0x1344 <__ultoa_invert+0xa2>
    1352:	62 0f       	add	r22, r18
    1354:	73 1f       	adc	r23, r19
    1356:	84 1f       	adc	r24, r20
    1358:	95 1f       	adc	r25, r21
    135a:	a0 1d       	adc	r26, r0
    135c:	08 95       	ret

0000135e <_exit>:
    135e:	f8 94       	cli

00001360 <__stop_program>:
    1360:	ff cf       	rjmp	.-2      	; 0x1360 <__stop_program>
