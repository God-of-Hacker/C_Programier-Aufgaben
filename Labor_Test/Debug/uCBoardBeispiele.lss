
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000172  00800200  00001628  000016bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001628  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c8  00800372  00800372  0000182e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000182e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000188c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000018cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000267a  00000000  00000000  00001ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000faf  00000000  00000000  0000412e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014c9  00000000  00000000  000050dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  000065a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cec  00000000  00000000  00006c30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a92  00000000  00000000  0000791c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  000093ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0e c7       	rjmp	.+3612   	; 0xe7a <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 e2       	ldi	r30, 0x28	; 40
      fc:	f6 e1       	ldi	r31, 0x16	; 22
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 37       	cpi	r26, 0x72	; 114
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	24 e0       	ldi	r18, 0x04	; 4
     110:	a2 e7       	ldi	r26, 0x72	; 114
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	aa 33       	cpi	r26, 0x3A	; 58
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 12 0b 	jmp	0x1624	; 0x1624 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:
//uC-Board-Treiber hinzuf√ºgen
#include "ucBoardDriver.h"

//Hauptprogramm
int main(void)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	00 d0       	rcall	.+0      	; 0x12c <main+0x6>
     12c:	00 d0       	rcall	.+0      	; 0x12e <main+0x8>
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
    uint16_t spannung_mv = 0;
    uint16_t spannung_Messwert_mV = 0;
    uint16_t spannungWiederstand1_mV = 0;
    
    //Initialisieren
    initBoard(1);
     132:	81 e0       	ldi	r24, 0x01	; 1
     134:	f1 d3       	rcall	.+2018   	; 0x918 <initBoard>
    lcdLogSetLinesToUse(2);
     136:	82 e0       	ldi	r24, 0x02	; 2
     138:	a8 d3       	rcall	.+1872   	; 0x88a <lcdLogSetLinesToUse>
    lcdLog("Start");
     13a:	8a e0       	ldi	r24, 0x0A	; 10
     13c:	92 e0       	ldi	r25, 0x02	; 2
     13e:	9f 93       	push	r25
     140:	8f 93       	push	r24
     142:	f5 d4       	rcall	.+2538   	; 0xb2e <lcdLog>
     144:	0f 90       	pop	r0
     146:	0f 90       	pop	r0
        {
            spannungWiederstand1_mV = spannung_mv - spannung_Messwert_mV;
        }
        else
        {
            spannungWiederstand1_mV = 0;
     148:	61 2c       	mov	r6, r1
     14a:	71 2c       	mov	r7, r1
            }
        }
        else
        {
            rgbWrite(1023,1023,0);
            lcdWriteText(1,0,"Speisung nicht OK    "); // ok
     14c:	0f 2e       	mov	r0, r31
     14e:	fa ed       	ldi	r31, 0xDA	; 218
     150:	2f 2e       	mov	r2, r31
     152:	f2 e0       	ldi	r31, 0x02	; 2
     154:	3f 2e       	mov	r3, r31
     156:	f0 2d       	mov	r31, r0
        }
        //Verarbeitung-------------------------------------------------------------
        
        if (spannung_mv > 4000)
        {
            lcdWriteText(1,0,"Speisung  OK     ");
     158:	0f 2e       	mov	r0, r31
     15a:	f0 e1       	ldi	r31, 0x10	; 16
     15c:	4f 2e       	mov	r4, r31
     15e:	f2 e0       	ldi	r31, 0x02	; 2
     160:	5f 2e       	mov	r5, r31
     162:	f0 2d       	mov	r31, r0
               
           }
            if ((spannung_Messwert_mV >= 500) && (spannung_Messwert_mV <= 700)) // Rot LED
            {
                rgbWrite(1023,0,0);
                lcdWriteText(3,0,"V-Dioden: %5u mV ", spannung_Messwert_mV);
     164:	0f 2e       	mov	r0, r31
     166:	f2 e2       	ldi	r31, 0x22	; 34
     168:	cf 2e       	mov	r12, r31
     16a:	f2 e0       	ldi	r31, 0x02	; 2
     16c:	df 2e       	mov	r13, r31
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        spannung_mv = (uint32_t)adcRead(ADC_00_X4_PORTF_BIT0) * 5000 / 1023; // Eingang Speisung Extern
     16e:	f0 2d       	mov	r31, r0
     170:	80 e0       	ldi	r24, 0x00	; 0
     172:	68 d1       	rcall	.+720    	; 0x444 <adcRead>
     174:	9c 01       	movw	r18, r24
     176:	a8 e8       	ldi	r26, 0x88	; 136
     178:	b3 e1       	ldi	r27, 0x13	; 19
     17a:	ed d6       	rcall	.+3546   	; 0xf56 <__umulhisi3>
     17c:	2f ef       	ldi	r18, 0xFF	; 255
     17e:	33 e0       	ldi	r19, 0x03	; 3
     180:	40 e0       	ldi	r20, 0x00	; 0
     182:	50 e0       	ldi	r21, 0x00	; 0
     184:	c6 d6       	rcall	.+3468   	; 0xf12 <__udivmodsi4>
     186:	29 83       	std	Y+1, r18	; 0x01
     188:	3a 83       	std	Y+2, r19	; 0x02
     18a:	4b 83       	std	Y+3, r20	; 0x03
     18c:	5c 83       	std	Y+4, r21	; 0x04
     18e:	89 81       	ldd	r24, Y+1	; 0x01
     190:	9a 81       	ldd	r25, Y+2	; 0x02
     192:	9e 83       	std	Y+6, r25	; 0x06
        spannung_Messwert_mV = (uint32_t)adcRead(ADC_01_X4_PORTF_BIT1)  * 5000 / 1023; // Spanuung √ºber die LED
     194:	8d 83       	std	Y+5, r24	; 0x05
     196:	81 e0       	ldi	r24, 0x01	; 1
     198:	55 d1       	rcall	.+682    	; 0x444 <adcRead>
     19a:	9c 01       	movw	r18, r24
     19c:	a8 e8       	ldi	r26, 0x88	; 136
     19e:	b3 e1       	ldi	r27, 0x13	; 19
     1a0:	da d6       	rcall	.+3508   	; 0xf56 <__umulhisi3>
     1a2:	2f ef       	ldi	r18, 0xFF	; 255
     1a4:	33 e0       	ldi	r19, 0x03	; 3
     1a6:	40 e0       	ldi	r20, 0x00	; 0
     1a8:	50 e0       	ldi	r21, 0x00	; 0
     1aa:	b3 d6       	rcall	.+3430   	; 0xf12 <__udivmodsi4>
     1ac:	49 01       	movw	r8, r18
     1ae:	5a 01       	movw	r10, r20
     1b0:	89 01       	movw	r16, r18
     1b2:	8d 81       	ldd	r24, Y+5	; 0x05
        if (spannung_mv >= spannung_Messwert_mV )
     1b4:	9e 81       	ldd	r25, Y+6	; 0x06
     1b6:	82 17       	cp	r24, r18
     1b8:	93 07       	cpc	r25, r19
     1ba:	28 f0       	brcs	.+10     	; 0x1c6 <main+0xa0>
     1bc:	e9 80       	ldd	r14, Y+1	; 0x01
        {
            spannungWiederstand1_mV = spannung_mv - spannung_Messwert_mV;
     1be:	fa 80       	ldd	r15, Y+2	; 0x02
     1c0:	e2 1a       	sub	r14, r18
     1c2:	f3 0a       	sbc	r15, r19
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <main+0xa4>
     1c6:	e6 2c       	mov	r14, r6
        }
        else
        {
            spannungWiederstand1_mV = 0;
     1c8:	f7 2c       	mov	r15, r7
     1ca:	8d 81       	ldd	r24, Y+5	; 0x05
        }
        //Verarbeitung-------------------------------------------------------------
        
        if (spannung_mv > 4000)
     1cc:	9e 81       	ldd	r25, Y+6	; 0x06
     1ce:	81 3a       	cpi	r24, 0xA1	; 161
     1d0:	9f 40       	sbci	r25, 0x0F	; 15
     1d2:	08 f4       	brcc	.+2      	; 0x1d6 <main+0xb0>
     1d4:	ec c0       	rjmp	.+472    	; 0x3ae <main+0x288>
        {
            lcdWriteText(1,0,"Speisung  OK     ");
     1d6:	5f 92       	push	r5
     1d8:	4f 92       	push	r4
     1da:	1f 92       	push	r1
     1dc:	81 e0       	ldi	r24, 0x01	; 1
     1de:	8f 93       	push	r24
     1e0:	20 d2       	rcall	.+1088   	; 0x622 <lcdWriteText>
     1e2:	0f 90       	pop	r0
            
            //lcdWriteText(3,0,"V= %5u mV        ", spannung_mv);
           if ((spannung_Messwert_mV >= 2200) && (spannung_Messwert_mV <= 2700)) // gr√ºne LED
     1e4:	0f 90       	pop	r0
     1e6:	0f 90       	pop	r0
     1e8:	0f 90       	pop	r0
     1ea:	c4 01       	movw	r24, r8
     1ec:	88 59       	subi	r24, 0x98	; 152
     1ee:	98 40       	sbci	r25, 0x08	; 8
     1f0:	85 3f       	cpi	r24, 0xF5	; 245
     1f2:	91 40       	sbci	r25, 0x01	; 1
     1f4:	e0 f4       	brcc	.+56     	; 0x22e <main+0x108>
           {
               rgbWrite(0,1023,0);
     1f6:	46 2d       	mov	r20, r6
     1f8:	57 2d       	mov	r21, r7
     1fa:	6f ef       	ldi	r22, 0xFF	; 255
     1fc:	73 e0       	ldi	r23, 0x03	; 3
     1fe:	86 2d       	mov	r24, r6
     200:	97 2d       	mov	r25, r7
     202:	55 d1       	rcall	.+682    	; 0x4ae <rgbWrite>
               lcdWriteText(3,0,"V-Dioden: %5u mV ", spannung_Messwert_mV);
     204:	9f 92       	push	r9
     206:	8f 92       	push	r8
     208:	df 92       	push	r13
     20a:	cf 92       	push	r12
     20c:	1f 92       	push	r1
     20e:	83 e0       	ldi	r24, 0x03	; 3
     210:	8f 93       	push	r24
     212:	07 d2       	rcall	.+1038   	; 0x622 <lcdWriteText>
              lcdWriteText(2,0,"Resultat: Gr√ºn      ");
     214:	84 e3       	ldi	r24, 0x34	; 52
     216:	92 e0       	ldi	r25, 0x02	; 2
     218:	9f 93       	push	r25
     21a:	8f 93       	push	r24
     21c:	1f 92       	push	r1
     21e:	82 e0       	ldi	r24, 0x02	; 2
     220:	8f 93       	push	r24
     222:	ff d1       	rcall	.+1022   	; 0x622 <lcdWriteText>
     224:	0f b6       	in	r0, 0x3f	; 63
     226:	f8 94       	cli
     228:	de bf       	out	0x3e, r29	; 62
     22a:	0f be       	out	0x3f, r0	; 63
     22c:	cd bf       	out	0x3d, r28	; 61
           }
           if ((spannung_Messwert_mV >= 1700) && (spannung_Messwert_mV <= 2100)) // Rot LED
     22e:	c4 01       	movw	r24, r8
     230:	84 5a       	subi	r24, 0xA4	; 164
     232:	96 40       	sbci	r25, 0x06	; 6
     234:	81 39       	cpi	r24, 0x91	; 145
     236:	91 40       	sbci	r25, 0x01	; 1
     238:	e0 f4       	brcc	.+56     	; 0x272 <main+0x14c>
           {
               rgbWrite(1023,0,0);
     23a:	46 2d       	mov	r20, r6
     23c:	57 2d       	mov	r21, r7
     23e:	66 2d       	mov	r22, r6
     240:	77 2d       	mov	r23, r7
     242:	8f ef       	ldi	r24, 0xFF	; 255
     244:	93 e0       	ldi	r25, 0x03	; 3
     246:	33 d1       	rcall	.+614    	; 0x4ae <rgbWrite>
               lcdWriteText(3,0,"V-Dioden: %5u mV ", spannung_Messwert_mV);
     248:	9f 92       	push	r9
     24a:	8f 92       	push	r8
     24c:	df 92       	push	r13
     24e:	cf 92       	push	r12
     250:	1f 92       	push	r1
     252:	83 e0       	ldi	r24, 0x03	; 3
     254:	8f 93       	push	r24
     256:	e5 d1       	rcall	.+970    	; 0x622 <lcdWriteText>
               lcdWriteText(2,0,"Resultat: Rot       ");
     258:	8a e4       	ldi	r24, 0x4A	; 74
     25a:	92 e0       	ldi	r25, 0x02	; 2
     25c:	9f 93       	push	r25
     25e:	8f 93       	push	r24
     260:	1f 92       	push	r1
     262:	82 e0       	ldi	r24, 0x02	; 2
     264:	8f 93       	push	r24
     266:	dd d1       	rcall	.+954    	; 0x622 <lcdWriteText>
     268:	0f b6       	in	r0, 0x3f	; 63
     26a:	f8 94       	cli
     26c:	de bf       	out	0x3e, r29	; 62
     26e:	0f be       	out	0x3f, r0	; 63
     270:	cd bf       	out	0x3d, r28	; 61
               
           }
           if ((spannung_Messwert_mV >= 2700) && (spannung_Messwert_mV <= 3100)) // Rot LED
     272:	c4 01       	movw	r24, r8
     274:	8c 58       	subi	r24, 0x8C	; 140
     276:	9a 40       	sbci	r25, 0x0A	; 10
     278:	81 39       	cpi	r24, 0x91	; 145
     27a:	91 40       	sbci	r25, 0x01	; 1
           {
               rgbWrite(1023,0,0);
     27c:	e0 f4       	brcc	.+56     	; 0x2b6 <main+0x190>
     27e:	46 2d       	mov	r20, r6
     280:	57 2d       	mov	r21, r7
     282:	66 2d       	mov	r22, r6
     284:	77 2d       	mov	r23, r7
     286:	8f ef       	ldi	r24, 0xFF	; 255
     288:	93 e0       	ldi	r25, 0x03	; 3
               lcdWriteText(3,0,"V-Dioden: %5u mV ", spannung_Messwert_mV);
     28a:	11 d1       	rcall	.+546    	; 0x4ae <rgbWrite>
     28c:	9f 92       	push	r9
     28e:	8f 92       	push	r8
     290:	df 92       	push	r13
     292:	cf 92       	push	r12
     294:	1f 92       	push	r1
     296:	83 e0       	ldi	r24, 0x03	; 3
     298:	8f 93       	push	r24
     29a:	c3 d1       	rcall	.+902    	; 0x622 <lcdWriteText>
               lcdWriteText(2,0,"Resultat: Blau      ");
     29c:	8f e5       	ldi	r24, 0x5F	; 95
     29e:	92 e0       	ldi	r25, 0x02	; 2
     2a0:	9f 93       	push	r25
     2a2:	8f 93       	push	r24
     2a4:	1f 92       	push	r1
     2a6:	82 e0       	ldi	r24, 0x02	; 2
     2a8:	8f 93       	push	r24
     2aa:	bb d1       	rcall	.+886    	; 0x622 <lcdWriteText>
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
               
           }
           if ((spannung_Messwert_mV >= 3100) && (spannung_Messwert_mV <= 3400)) // Rot LED
     2b6:	c4 01       	movw	r24, r8
     2b8:	8c 51       	subi	r24, 0x1C	; 28
     2ba:	9c 40       	sbci	r25, 0x0C	; 12
     2bc:	8d 32       	cpi	r24, 0x2D	; 45
     2be:	91 40       	sbci	r25, 0x01	; 1
           {
               rgbWrite(1023,0,0);
     2c0:	e0 f4       	brcc	.+56     	; 0x2fa <main+0x1d4>
     2c2:	46 2d       	mov	r20, r6
     2c4:	57 2d       	mov	r21, r7
     2c6:	66 2d       	mov	r22, r6
     2c8:	77 2d       	mov	r23, r7
     2ca:	8f ef       	ldi	r24, 0xFF	; 255
     2cc:	93 e0       	ldi	r25, 0x03	; 3
               lcdWriteText(3,0,"V-Dioden: %5u mV ", spannung_Messwert_mV);
     2ce:	ef d0       	rcall	.+478    	; 0x4ae <rgbWrite>
     2d0:	9f 92       	push	r9
     2d2:	8f 92       	push	r8
     2d4:	df 92       	push	r13
     2d6:	cf 92       	push	r12
     2d8:	1f 92       	push	r1
     2da:	83 e0       	ldi	r24, 0x03	; 3
     2dc:	8f 93       	push	r24
     2de:	a1 d1       	rcall	.+834    	; 0x622 <lcdWriteText>
               lcdWriteText(2,0,"Resultat: Weiss     ");
     2e0:	84 e7       	ldi	r24, 0x74	; 116
     2e2:	92 e0       	ldi	r25, 0x02	; 2
     2e4:	9f 93       	push	r25
     2e6:	8f 93       	push	r24
     2e8:	1f 92       	push	r1
     2ea:	82 e0       	ldi	r24, 0x02	; 2
     2ec:	8f 93       	push	r24
     2ee:	99 d1       	rcall	.+818    	; 0x622 <lcdWriteText>
     2f0:	0f b6       	in	r0, 0x3f	; 63
     2f2:	f8 94       	cli
     2f4:	de bf       	out	0x3e, r29	; 62
     2f6:	0f be       	out	0x3f, r0	; 63
               
           }
            if ((spannung_Messwert_mV >= 500) && (spannung_Messwert_mV <= 700)) // Rot LED
     2f8:	cd bf       	out	0x3d, r28	; 61
     2fa:	c4 01       	movw	r24, r8
     2fc:	84 5f       	subi	r24, 0xF4	; 244
     2fe:	91 40       	sbci	r25, 0x01	; 1
     300:	89 3c       	cpi	r24, 0xC9	; 201
     302:	91 05       	cpc	r25, r1
            {
                rgbWrite(1023,0,0);
     304:	e0 f4       	brcc	.+56     	; 0x33e <main+0x218>
     306:	46 2d       	mov	r20, r6
     308:	57 2d       	mov	r21, r7
     30a:	66 2d       	mov	r22, r6
     30c:	77 2d       	mov	r23, r7
     30e:	8f ef       	ldi	r24, 0xFF	; 255
     310:	93 e0       	ldi	r25, 0x03	; 3
                lcdWriteText(3,0,"V-Dioden: %5u mV ", spannung_Messwert_mV);
     312:	cd d0       	rcall	.+410    	; 0x4ae <rgbWrite>
     314:	9f 92       	push	r9
     316:	8f 92       	push	r8
     318:	df 92       	push	r13
     31a:	cf 92       	push	r12
     31c:	1f 92       	push	r1
     31e:	83 e0       	ldi	r24, 0x03	; 3
     320:	8f 93       	push	r24
                lcdWriteText(2,0,"Resultat: Diode     ");
     322:	7f d1       	rcall	.+766    	; 0x622 <lcdWriteText>
     324:	89 e8       	ldi	r24, 0x89	; 137
     326:	92 e0       	ldi	r25, 0x02	; 2
     328:	9f 93       	push	r25
     32a:	8f 93       	push	r24
     32c:	1f 92       	push	r1
     32e:	82 e0       	ldi	r24, 0x02	; 2
     330:	8f 93       	push	r24
     332:	77 d1       	rcall	.+750    	; 0x622 <lcdWriteText>
     334:	0f b6       	in	r0, 0x3f	; 63
     336:	f8 94       	cli
     338:	de bf       	out	0x3e, r29	; 62
     33a:	0f be       	out	0x3f, r0	; 63
                
            }
            if (spannung_Messwert_mV < 100)
     33c:	cd bf       	out	0x3d, r28	; 61
     33e:	04 36       	cpi	r16, 0x64	; 100
            {
                rgbWrite(1023,0,1023);
     340:	11 05       	cpc	r17, r1
     342:	f0 f4       	brcc	.+60     	; 0x380 <main+0x25a>
     344:	4f ef       	ldi	r20, 0xFF	; 255
     346:	53 e0       	ldi	r21, 0x03	; 3
     348:	66 2d       	mov	r22, r6
     34a:	77 2d       	mov	r23, r7
     34c:	8f ef       	ldi	r24, 0xFF	; 255
     34e:	93 e0       	ldi	r25, 0x03	; 3
                lcdWriteText(1,0,"Status  Kurzschluss ");
     350:	ae d0       	rcall	.+348    	; 0x4ae <rgbWrite>
     352:	8e e9       	ldi	r24, 0x9E	; 158
     354:	92 e0       	ldi	r25, 0x02	; 2
     356:	9f 93       	push	r25
     358:	8f 93       	push	r24
     35a:	1f 92       	push	r1
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	8f 93       	push	r24
                lcdWriteText(2,0,"V= %5u mV        ", spannungWiederstand1_mV);
     360:	60 d1       	rcall	.+704    	; 0x622 <lcdWriteText>
     362:	ff 92       	push	r15
     364:	ef 92       	push	r14
     366:	83 eb       	ldi	r24, 0xB3	; 179
     368:	92 e0       	ldi	r25, 0x02	; 2
     36a:	9f 93       	push	r25
     36c:	8f 93       	push	r24
     36e:	1f 92       	push	r1
     370:	82 e0       	ldi	r24, 0x02	; 2
     372:	8f 93       	push	r24
     374:	56 d1       	rcall	.+684    	; 0x622 <lcdWriteText>
     376:	0f b6       	in	r0, 0x3f	; 63
     378:	f8 94       	cli
     37a:	de bf       	out	0x3e, r29	; 62
     37c:	0f be       	out	0x3f, r0	; 63
            }
            if (spannung_Messwert_mV > 4900)
     37e:	cd bf       	out	0x3d, r28	; 61
     380:	05 32       	cpi	r16, 0x25	; 37
            {
                rgbWrite(0,0,1023);
     382:	13 41       	sbci	r17, 0x13	; 19
     384:	28 f1       	brcs	.+74     	; 0x3d0 <main+0x2aa>
     386:	4f ef       	ldi	r20, 0xFF	; 255
     388:	53 e0       	ldi	r21, 0x03	; 3
     38a:	66 2d       	mov	r22, r6
     38c:	77 2d       	mov	r23, r7
     38e:	86 2d       	mov	r24, r6
                lcdWriteText(1,0,"Status: Unterbruch  ");// ok
     390:	97 2d       	mov	r25, r7
     392:	8d d0       	rcall	.+282    	; 0x4ae <rgbWrite>
     394:	85 ec       	ldi	r24, 0xC5	; 197
     396:	92 e0       	ldi	r25, 0x02	; 2
     398:	9f 93       	push	r25
     39a:	8f 93       	push	r24
     39c:	1f 92       	push	r1
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	8f 93       	push	r24
     3a2:	3f d1       	rcall	.+638    	; 0x622 <lcdWriteText>
     3a4:	0f 90       	pop	r0
     3a6:	0f 90       	pop	r0
     3a8:	0f 90       	pop	r0
                //lcdLog("Unterbruch");
            }
        }
        else
        {
            rgbWrite(1023,1023,0);
     3aa:	0f 90       	pop	r0
     3ac:	11 c0       	rjmp	.+34     	; 0x3d0 <main+0x2aa>
     3ae:	46 2d       	mov	r20, r6
     3b0:	57 2d       	mov	r21, r7
     3b2:	6f ef       	ldi	r22, 0xFF	; 255
     3b4:	73 e0       	ldi	r23, 0x03	; 3
     3b6:	8f ef       	ldi	r24, 0xFF	; 255
     3b8:	93 e0       	ldi	r25, 0x03	; 3
            lcdWriteText(1,0,"Speisung nicht OK    "); // ok
     3ba:	79 d0       	rcall	.+242    	; 0x4ae <rgbWrite>
     3bc:	3f 92       	push	r3
     3be:	2f 92       	push	r2
     3c0:	1f 92       	push	r1
     3c2:	81 e0       	ldi	r24, 0x01	; 1
     3c4:	8f 93       	push	r24
     3c6:	2d d1       	rcall	.+602    	; 0x622 <lcdWriteText>
     3c8:	0f 90       	pop	r0
     3ca:	0f 90       	pop	r0
     3cc:	0f 90       	pop	r0
     3ce:	0f 90       	pop	r0
        
        
        

        //Ausgabe------------------------------------------------------------------
        lcdWriteText(0,0,"LED-Tester V1.0 FR    " );
     3d0:	80 ef       	ldi	r24, 0xF0	; 240
     3d2:	92 e0       	ldi	r25, 0x02	; 2
     3d4:	9f 93       	push	r25
     3d6:	8f 93       	push	r24
     3d8:	1f 92       	push	r1
     3da:	1f 92       	push	r1
     3dc:	22 d1       	rcall	.+580    	; 0x622 <lcdWriteText>
     3de:	0f 90       	pop	r0
        
        
    }
     3e0:	0f 90       	pop	r0
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	c4 ce       	rjmp	.-632    	; 0x170 <main+0x4a>

000003e8 <ledWriteAll>:
     3e8:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position f√ºr das n√§chste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das n√§chste Zeichen richten
    }
}
     3ea:	95 b9       	out	0x05, r25	; 5
     3ec:	08 95       	ret

000003ee <startSystemTimeMs>:
     3ee:	83 e0       	ldi	r24, 0x03	; 3
     3f0:	84 bd       	out	0x24, r24	; 36
     3f2:	8b e0       	ldi	r24, 0x0B	; 11
     3f4:	85 bd       	out	0x25, r24	; 37
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     3fc:	89 ef       	ldi	r24, 0xF9	; 249
     3fe:	87 bd       	out	0x27, r24	; 39
     400:	08 95       	ret

00000402 <initAdc>:
     402:	11 ba       	out	0x11, r1	; 17
     404:	10 ba       	out	0x10, r1	; 16
     406:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     40a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     40e:	80 e4       	ldi	r24, 0x40	; 64
     410:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     414:	8f e0       	ldi	r24, 0x0F	; 15
     416:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     41a:	8f ef       	ldi	r24, 0xFF	; 255
     41c:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     420:	ea e7       	ldi	r30, 0x7A	; 122
     422:	f0 e0       	ldi	r31, 0x00	; 0
     424:	87 ea       	ldi	r24, 0xA7	; 167
     426:	80 83       	st	Z, r24
     428:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     42c:	80 81       	ld	r24, Z
     42e:	80 64       	ori	r24, 0x40	; 64
     430:	80 83       	st	Z, r24
     432:	80 81       	ld	r24, Z
     434:	84 ff       	sbrs	r24, 4
     436:	fd cf       	rjmp	.-6      	; 0x432 <initAdc+0x30>
     438:	ea e7       	ldi	r30, 0x7A	; 122
     43a:	f0 e0       	ldi	r31, 0x00	; 0
     43c:	80 81       	ld	r24, Z
     43e:	8f 7e       	andi	r24, 0xEF	; 239
     440:	80 83       	st	Z, r24
     442:	08 95       	ret

00000444 <adcRead>:
     444:	90 e4       	ldi	r25, 0x40	; 64
     446:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     44a:	88 30       	cpi	r24, 0x08	; 8
     44c:	60 f0       	brcs	.+24     	; 0x466 <adcRead+0x22>
     44e:	ec e7       	ldi	r30, 0x7C	; 124
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	90 81       	ld	r25, Z
     454:	88 50       	subi	r24, 0x08	; 8
     456:	89 2b       	or	r24, r25
     458:	80 83       	st	Z, r24
     45a:	eb e7       	ldi	r30, 0x7B	; 123
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	80 81       	ld	r24, Z
     460:	88 61       	ori	r24, 0x18	; 24
     462:	80 83       	st	Z, r24
     464:	0a c0       	rjmp	.+20     	; 0x47a <adcRead+0x36>
     466:	ec e7       	ldi	r30, 0x7C	; 124
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	90 81       	ld	r25, Z
     46c:	89 2b       	or	r24, r25
     46e:	80 83       	st	Z, r24
     470:	eb e7       	ldi	r30, 0x7B	; 123
     472:	f0 e0       	ldi	r31, 0x00	; 0
     474:	80 81       	ld	r24, Z
     476:	87 7e       	andi	r24, 0xE7	; 231
     478:	80 83       	st	Z, r24
     47a:	ea e7       	ldi	r30, 0x7A	; 122
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	80 81       	ld	r24, Z
     480:	80 64       	ori	r24, 0x40	; 64
     482:	80 83       	st	Z, r24
     484:	80 81       	ld	r24, Z
     486:	84 ff       	sbrs	r24, 4
     488:	fd cf       	rjmp	.-6      	; 0x484 <adcRead+0x40>
     48a:	8f ea       	ldi	r24, 0xAF	; 175
     48c:	94 e0       	ldi	r25, 0x04	; 4
     48e:	01 97       	sbiw	r24, 0x01	; 1
     490:	f1 f7       	brne	.-4      	; 0x48e <adcRead+0x4a>
     492:	00 c0       	rjmp	.+0      	; 0x494 <adcRead+0x50>
     494:	00 00       	nop
     496:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     49a:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     49e:	ea e7       	ldi	r30, 0x7A	; 122
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	90 81       	ld	r25, Z
     4a4:	9f 7e       	andi	r25, 0xEF	; 239
     4a6:	90 83       	st	Z, r25
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	92 2b       	or	r25, r18
     4ac:	08 95       	ret

000004ae <rgbWrite>:
     4ae:	2f ef       	ldi	r18, 0xFF	; 255
     4b0:	33 e0       	ldi	r19, 0x03	; 3
     4b2:	f9 01       	movw	r30, r18
     4b4:	e8 1b       	sub	r30, r24
     4b6:	f9 0b       	sbc	r31, r25
     4b8:	c9 01       	movw	r24, r18
     4ba:	86 1b       	sub	r24, r22
     4bc:	97 0b       	sbc	r25, r23
     4be:	24 1b       	sub	r18, r20
     4c0:	35 0b       	sbc	r19, r21
     4c2:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     4c6:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     4ca:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     4ce:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     4d2:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     4d6:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     4da:	08 95       	ret

000004dc <initRgb>:
     4dc:	8e ef       	ldi	r24, 0xFE	; 254
     4de:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     4e2:	8b e1       	ldi	r24, 0x1B	; 27
     4e4:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     4e8:	83 e0       	ldi	r24, 0x03	; 3
     4ea:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     4ee:	8f ef       	ldi	r24, 0xFF	; 255
     4f0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     4f4:	40 e0       	ldi	r20, 0x00	; 0
     4f6:	50 e0       	ldi	r21, 0x00	; 0
     4f8:	60 e0       	ldi	r22, 0x00	; 0
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	d6 cf       	rjmp	.-84     	; 0x4ae <rgbWrite>
     502:	08 95       	ret

00000504 <lcdSid>:
     504:	88 23       	and	r24, r24
     506:	11 f0       	breq	.+4      	; 0x50c <lcdSid+0x8>
     508:	a0 9a       	sbi	0x14, 0	; 20
     50a:	08 95       	ret
     50c:	a0 98       	cbi	0x14, 0	; 20
     50e:	08 95       	ret

00000510 <lcdSclk>:
     510:	88 23       	and	r24, r24
     512:	11 f0       	breq	.+4      	; 0x518 <lcdSclk+0x8>
     514:	a1 9a       	sbi	0x14, 1	; 20
     516:	08 95       	ret
     518:	a1 98       	cbi	0x14, 1	; 20
     51a:	08 95       	ret

0000051c <lcdLight>:
     51c:	81 11       	cpse	r24, r1
     51e:	04 c0       	rjmp	.+8      	; 0x528 <lcdLight+0xc>
     520:	84 b5       	in	r24, 0x24	; 36
     522:	8f 7d       	andi	r24, 0xDF	; 223
     524:	84 bd       	out	0x24, r24	; 36
     526:	08 95       	ret
     528:	94 b5       	in	r25, 0x24	; 36
     52a:	90 62       	ori	r25, 0x20	; 32
     52c:	94 bd       	out	0x24, r25	; 36
     52e:	88 bd       	out	0x28, r24	; 40
     530:	08 95       	ret

00000532 <writeLcdF>:
     532:	ef 92       	push	r14
     534:	ff 92       	push	r15
     536:	0f 93       	push	r16
     538:	1f 93       	push	r17
     53a:	cf 93       	push	r28
     53c:	df 93       	push	r29
     53e:	7c 01       	movw	r14, r24
     540:	eb 01       	movw	r28, r22
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	df df       	rcall	.-66     	; 0x504 <lcdSid>
     546:	05 e0       	ldi	r16, 0x05	; 5
     548:	10 e0       	ldi	r17, 0x00	; 0
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	e1 df       	rcall	.-62     	; 0x510 <lcdSclk>
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	df df       	rcall	.-66     	; 0x510 <lcdSclk>
     552:	01 50       	subi	r16, 0x01	; 1
     554:	11 09       	sbc	r17, r1
     556:	c9 f7       	brne	.-14     	; 0x54a <writeLcdF+0x18>
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	d4 df       	rcall	.-88     	; 0x504 <lcdSid>
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	d8 df       	rcall	.-80     	; 0x510 <lcdSclk>
     560:	81 e0       	ldi	r24, 0x01	; 1
     562:	d6 df       	rcall	.-84     	; 0x510 <lcdSclk>
     564:	83 e4       	ldi	r24, 0x43	; 67
     566:	e8 16       	cp	r14, r24
     568:	f1 04       	cpc	r15, r1
     56a:	19 f4       	brne	.+6      	; 0x572 <writeLcdF+0x40>
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	ca df       	rcall	.-108    	; 0x504 <lcdSid>
     570:	02 c0       	rjmp	.+4      	; 0x576 <writeLcdF+0x44>
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	c7 df       	rcall	.-114    	; 0x504 <lcdSid>
     576:	80 e0       	ldi	r24, 0x00	; 0
     578:	cb df       	rcall	.-106    	; 0x510 <lcdSclk>
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	c9 df       	rcall	.-110    	; 0x510 <lcdSclk>
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	c1 df       	rcall	.-126    	; 0x504 <lcdSid>
     582:	80 e0       	ldi	r24, 0x00	; 0
     584:	c5 df       	rcall	.-118    	; 0x510 <lcdSclk>
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	c3 df       	rcall	.-122    	; 0x510 <lcdSclk>
     58a:	04 e0       	ldi	r16, 0x04	; 4
     58c:	10 e0       	ldi	r17, 0x00	; 0
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	bf df       	rcall	.-130    	; 0x510 <lcdSclk>
     592:	c0 ff       	sbrs	r28, 0
     594:	03 c0       	rjmp	.+6      	; 0x59c <writeLcdF+0x6a>
     596:	81 e0       	ldi	r24, 0x01	; 1
     598:	b5 df       	rcall	.-150    	; 0x504 <lcdSid>
     59a:	02 c0       	rjmp	.+4      	; 0x5a0 <writeLcdF+0x6e>
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	b2 df       	rcall	.-156    	; 0x504 <lcdSid>
     5a0:	d6 95       	lsr	r29
     5a2:	c7 95       	ror	r28
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	b4 df       	rcall	.-152    	; 0x510 <lcdSclk>
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	b2 df       	rcall	.-156    	; 0x510 <lcdSclk>
     5ac:	01 50       	subi	r16, 0x01	; 1
     5ae:	11 09       	sbc	r17, r1
     5b0:	71 f7       	brne	.-36     	; 0x58e <writeLcdF+0x5c>
     5b2:	80 e0       	ldi	r24, 0x00	; 0
     5b4:	a7 df       	rcall	.-178    	; 0x504 <lcdSid>
     5b6:	04 e0       	ldi	r16, 0x04	; 4
     5b8:	10 e0       	ldi	r17, 0x00	; 0
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	a9 df       	rcall	.-174    	; 0x510 <lcdSclk>
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	a7 df       	rcall	.-178    	; 0x510 <lcdSclk>
     5c2:	01 50       	subi	r16, 0x01	; 1
     5c4:	11 09       	sbc	r17, r1
     5c6:	c9 f7       	brne	.-14     	; 0x5ba <writeLcdF+0x88>
     5c8:	04 e0       	ldi	r16, 0x04	; 4
     5ca:	10 e0       	ldi	r17, 0x00	; 0
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	a0 df       	rcall	.-192    	; 0x510 <lcdSclk>
     5d0:	c0 ff       	sbrs	r28, 0
     5d2:	03 c0       	rjmp	.+6      	; 0x5da <writeLcdF+0xa8>
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	96 df       	rcall	.-212    	; 0x504 <lcdSid>
     5d8:	02 c0       	rjmp	.+4      	; 0x5de <writeLcdF+0xac>
     5da:	80 e0       	ldi	r24, 0x00	; 0
     5dc:	93 df       	rcall	.-218    	; 0x504 <lcdSid>
     5de:	d6 95       	lsr	r29
     5e0:	c7 95       	ror	r28
     5e2:	80 e0       	ldi	r24, 0x00	; 0
     5e4:	95 df       	rcall	.-214    	; 0x510 <lcdSclk>
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	93 df       	rcall	.-218    	; 0x510 <lcdSclk>
     5ea:	01 50       	subi	r16, 0x01	; 1
     5ec:	11 09       	sbc	r17, r1
     5ee:	71 f7       	brne	.-36     	; 0x5cc <writeLcdF+0x9a>
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	88 df       	rcall	.-240    	; 0x504 <lcdSid>
     5f4:	c4 e0       	ldi	r28, 0x04	; 4
     5f6:	d0 e0       	ldi	r29, 0x00	; 0
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	8a df       	rcall	.-236    	; 0x510 <lcdSclk>
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	88 df       	rcall	.-240    	; 0x510 <lcdSclk>
     600:	21 97       	sbiw	r28, 0x01	; 1
     602:	d1 f7       	brne	.-12     	; 0x5f8 <writeLcdF+0xc6>
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	7e df       	rcall	.-260    	; 0x504 <lcdSid>
     608:	87 ec       	ldi	r24, 0xC7	; 199
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	01 97       	sbiw	r24, 0x01	; 1
     60e:	f1 f7       	brne	.-4      	; 0x60c <writeLcdF+0xda>
     610:	00 c0       	rjmp	.+0      	; 0x612 <writeLcdF+0xe0>
     612:	00 00       	nop
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	1f 91       	pop	r17
     61a:	0f 91       	pop	r16
     61c:	ff 90       	pop	r15
     61e:	ef 90       	pop	r14
     620:	08 95       	ret

00000622 <lcdWriteText>:
     622:	1f 93       	push	r17
     624:	cf 93       	push	r28
     626:	df 93       	push	r29
     628:	cd b7       	in	r28, 0x3d	; 61
     62a:	de b7       	in	r29, 0x3e	; 62
     62c:	65 97       	sbiw	r28, 0x15	; 21
     62e:	0f b6       	in	r0, 0x3f	; 63
     630:	f8 94       	cli
     632:	de bf       	out	0x3e, r29	; 62
     634:	0f be       	out	0x3f, r0	; 63
     636:	cd bf       	out	0x3d, r28	; 61
     638:	9e 01       	movw	r18, r28
     63a:	20 5e       	subi	r18, 0xE0	; 224
     63c:	3f 4f       	sbci	r19, 0xFF	; 255
     63e:	4e 8d       	ldd	r20, Y+30	; 0x1e
     640:	5f 8d       	ldd	r21, Y+31	; 0x1f
     642:	65 e1       	ldi	r22, 0x15	; 21
     644:	70 e0       	ldi	r23, 0x00	; 0
     646:	ce 01       	movw	r24, r28
     648:	01 96       	adiw	r24, 0x01	; 1
     64a:	07 d5       	rcall	.+2574   	; 0x105a <vsnprintf>
     64c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     64e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     650:	90 e2       	ldi	r25, 0x20	; 32
     652:	89 9f       	mul	r24, r25
     654:	60 0d       	add	r22, r0
     656:	11 24       	eor	r1, r1
     658:	60 68       	ori	r22, 0x80	; 128
     65a:	70 e0       	ldi	r23, 0x00	; 0
     65c:	83 e4       	ldi	r24, 0x43	; 67
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	68 df       	rcall	.-304    	; 0x532 <writeLcdF>
     662:	69 81       	ldd	r22, Y+1	; 0x01
     664:	66 23       	and	r22, r22
     666:	79 f0       	breq	.+30     	; 0x686 <lcdWriteText+0x64>
     668:	10 e0       	ldi	r17, 0x00	; 0
     66a:	1f 5f       	subi	r17, 0xFF	; 255
     66c:	70 e0       	ldi	r23, 0x00	; 0
     66e:	84 e4       	ldi	r24, 0x44	; 68
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	5f df       	rcall	.-322    	; 0x532 <writeLcdF>
     674:	e1 e0       	ldi	r30, 0x01	; 1
     676:	f0 e0       	ldi	r31, 0x00	; 0
     678:	ec 0f       	add	r30, r28
     67a:	fd 1f       	adc	r31, r29
     67c:	e1 0f       	add	r30, r17
     67e:	f1 1d       	adc	r31, r1
     680:	60 81       	ld	r22, Z
     682:	61 11       	cpse	r22, r1
     684:	f2 cf       	rjmp	.-28     	; 0x66a <lcdWriteText+0x48>
     686:	65 96       	adiw	r28, 0x15	; 21
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	f8 94       	cli
     68c:	de bf       	out	0x3e, r29	; 62
     68e:	0f be       	out	0x3f, r0	; 63
     690:	cd bf       	out	0x3d, r28	; 61
     692:	df 91       	pop	r29
     694:	cf 91       	pop	r28
     696:	1f 91       	pop	r17
     698:	08 95       	ret

0000069a <lcdWriteZahl>:
     69a:	2f 92       	push	r2
     69c:	3f 92       	push	r3
     69e:	4f 92       	push	r4
     6a0:	5f 92       	push	r5
     6a2:	6f 92       	push	r6
     6a4:	7f 92       	push	r7
     6a6:	8f 92       	push	r8
     6a8:	9f 92       	push	r9
     6aa:	af 92       	push	r10
     6ac:	bf 92       	push	r11
     6ae:	cf 92       	push	r12
     6b0:	df 92       	push	r13
     6b2:	ef 92       	push	r14
     6b4:	ff 92       	push	r15
     6b6:	0f 93       	push	r16
     6b8:	1f 93       	push	r17
     6ba:	cf 93       	push	r28
     6bc:	df 93       	push	r29
     6be:	cd b7       	in	r28, 0x3d	; 61
     6c0:	de b7       	in	r29, 0x3e	; 62
     6c2:	e3 97       	sbiw	r28, 0x33	; 51
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	f8 94       	cli
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	0f be       	out	0x3f, r0	; 63
     6cc:	cd bf       	out	0x3d, r28	; 61
     6ce:	8a ab       	std	Y+50, r24	; 0x32
     6d0:	6b ab       	std	Y+51, r22	; 0x33
     6d2:	ed a6       	std	Y+45, r14	; 0x2d
     6d4:	fe a6       	std	Y+46, r15	; 0x2e
     6d6:	70 2e       	mov	r7, r16
     6d8:	61 2e       	mov	r6, r17
     6da:	52 2e       	mov	r5, r18
     6dc:	43 2e       	mov	r4, r19
     6de:	cf a6       	std	Y+47, r12	; 0x2f
     6e0:	a8 aa       	std	Y+48, r10	; 0x30
     6e2:	8c 2d       	mov	r24, r12
     6e4:	8a 0d       	add	r24, r10
     6e6:	89 ab       	std	Y+49, r24	; 0x31
     6e8:	85 31       	cpi	r24, 0x15	; 21
     6ea:	70 f0       	brcs	.+28     	; 0x708 <lcdWriteZahl+0x6e>
     6ec:	87 e0       	ldi	r24, 0x07	; 7
     6ee:	93 e0       	ldi	r25, 0x03	; 3
     6f0:	9f 93       	push	r25
     6f2:	8f 93       	push	r24
     6f4:	9b a9       	ldd	r25, Y+51	; 0x33
     6f6:	9f 93       	push	r25
     6f8:	ea a9       	ldd	r30, Y+50	; 0x32
     6fa:	ef 93       	push	r30
     6fc:	92 df       	rcall	.-220    	; 0x622 <lcdWriteText>
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	0f 90       	pop	r0
     704:	0f 90       	pop	r0
     706:	a8 c0       	rjmp	.+336    	; 0x858 <lcdWriteZahl+0x1be>
     708:	4e 01       	movw	r8, r28
     70a:	f5 e1       	ldi	r31, 0x15	; 21
     70c:	8f 0e       	add	r8, r31
     70e:	91 1c       	adc	r9, r1
     710:	ce 01       	movw	r24, r28
     712:	01 96       	adiw	r24, 0x01	; 1
     714:	9c a7       	std	Y+44, r25	; 0x2c
     716:	8b a7       	std	Y+43, r24	; 0x2b
     718:	24 2e       	mov	r2, r20
     71a:	35 2e       	mov	r3, r21
     71c:	0f 2e       	mov	r0, r31
     71e:	fa e0       	ldi	r31, 0x0A	; 10
     720:	af 2e       	mov	r10, r31
     722:	f0 2d       	mov	r31, r0
     724:	b1 2c       	mov	r11, r1
     726:	c1 2c       	mov	r12, r1
     728:	d1 2c       	mov	r13, r1
     72a:	e1 2c       	mov	r14, r1
     72c:	f1 2c       	mov	r15, r1
     72e:	00 e0       	ldi	r16, 0x00	; 0
     730:	10 e0       	ldi	r17, 0x00	; 0
     732:	2d a5       	ldd	r18, Y+45	; 0x2d
     734:	3e a5       	ldd	r19, Y+46	; 0x2e
     736:	47 2d       	mov	r20, r7
     738:	56 2d       	mov	r21, r6
     73a:	65 2d       	mov	r22, r5
     73c:	74 2d       	mov	r23, r4
     73e:	82 2d       	mov	r24, r2
     740:	93 2d       	mov	r25, r3
     742:	18 d4       	rcall	.+2096   	; 0xf74 <__umoddi3>
     744:	20 5d       	subi	r18, 0xD0	; 208
     746:	f4 01       	movw	r30, r8
     748:	22 93       	st	-Z, r18
     74a:	4f 01       	movw	r8, r30
     74c:	2d a5       	ldd	r18, Y+45	; 0x2d
     74e:	3e a5       	ldd	r19, Y+46	; 0x2e
     750:	47 2d       	mov	r20, r7
     752:	56 2d       	mov	r21, r6
     754:	65 2d       	mov	r22, r5
     756:	74 2d       	mov	r23, r4
     758:	82 2d       	mov	r24, r2
     75a:	93 2d       	mov	r25, r3
     75c:	0d d4       	rcall	.+2074   	; 0xf78 <__udivdi3>
     75e:	2d a7       	std	Y+45, r18	; 0x2d
     760:	3e a7       	std	Y+46, r19	; 0x2e
     762:	74 2e       	mov	r7, r20
     764:	65 2e       	mov	r6, r21
     766:	56 2e       	mov	r5, r22
     768:	47 2e       	mov	r4, r23
     76a:	28 2e       	mov	r2, r24
     76c:	39 2e       	mov	r3, r25
     76e:	8b a5       	ldd	r24, Y+43	; 0x2b
     770:	9c a5       	ldd	r25, Y+44	; 0x2c
     772:	88 15       	cp	r24, r8
     774:	99 05       	cpc	r25, r9
     776:	91 f6       	brne	.-92     	; 0x71c <lcdWriteZahl+0x82>
     778:	84 e1       	ldi	r24, 0x14	; 20
     77a:	99 a9       	ldd	r25, Y+49	; 0x31
     77c:	89 1b       	sub	r24, r25
     77e:	ef a5       	ldd	r30, Y+47	; 0x2f
     780:	ee 23       	and	r30, r30
     782:	89 f0       	breq	.+34     	; 0x7a6 <lcdWriteZahl+0x10c>
     784:	fe 01       	movw	r30, r28
     786:	75 96       	adiw	r30, 0x15	; 21
     788:	2f a5       	ldd	r18, Y+47	; 0x2f
     78a:	28 0f       	add	r18, r24
     78c:	a1 e0       	ldi	r26, 0x01	; 1
     78e:	b0 e0       	ldi	r27, 0x00	; 0
     790:	ac 0f       	add	r26, r28
     792:	bd 1f       	adc	r27, r29
     794:	a8 0f       	add	r26, r24
     796:	b1 1d       	adc	r27, r1
     798:	9c 91       	ld	r25, X
     79a:	91 93       	st	Z+, r25
     79c:	8f 5f       	subi	r24, 0xFF	; 255
     79e:	82 13       	cpse	r24, r18
     7a0:	f5 cf       	rjmp	.-22     	; 0x78c <lcdWriteZahl+0xf2>
     7a2:	3f a5       	ldd	r19, Y+47	; 0x2f
     7a4:	02 c0       	rjmp	.+4      	; 0x7aa <lcdWriteZahl+0x110>
     7a6:	28 2f       	mov	r18, r24
     7a8:	3f a5       	ldd	r19, Y+47	; 0x2f
     7aa:	f8 a9       	ldd	r31, Y+48	; 0x30
     7ac:	ff 23       	and	r31, r31
     7ae:	f1 f0       	breq	.+60     	; 0x7ec <lcdWriteZahl+0x152>
     7b0:	fe 01       	movw	r30, r28
     7b2:	e3 0f       	add	r30, r19
     7b4:	f1 1d       	adc	r31, r1
     7b6:	8e e2       	ldi	r24, 0x2E	; 46
     7b8:	85 8b       	std	Z+21, r24	; 0x15
     7ba:	91 e0       	ldi	r25, 0x01	; 1
     7bc:	93 0f       	add	r25, r19
     7be:	38 a9       	ldd	r19, Y+48	; 0x30
     7c0:	39 0f       	add	r19, r25
     7c2:	89 2f       	mov	r24, r25
     7c4:	29 1b       	sub	r18, r25
     7c6:	e5 e1       	ldi	r30, 0x15	; 21
     7c8:	f0 e0       	ldi	r31, 0x00	; 0
     7ca:	ec 0f       	add	r30, r28
     7cc:	fd 1f       	adc	r31, r29
     7ce:	e8 0f       	add	r30, r24
     7d0:	f1 1d       	adc	r31, r1
     7d2:	92 2f       	mov	r25, r18
     7d4:	98 0f       	add	r25, r24
     7d6:	a1 e0       	ldi	r26, 0x01	; 1
     7d8:	b0 e0       	ldi	r27, 0x00	; 0
     7da:	ac 0f       	add	r26, r28
     7dc:	bd 1f       	adc	r27, r29
     7de:	a9 0f       	add	r26, r25
     7e0:	b1 1d       	adc	r27, r1
     7e2:	9c 91       	ld	r25, X
     7e4:	90 83       	st	Z, r25
     7e6:	8f 5f       	subi	r24, 0xFF	; 255
     7e8:	38 13       	cpse	r19, r24
     7ea:	ed cf       	rjmp	.-38     	; 0x7c6 <lcdWriteZahl+0x12c>
     7ec:	fe 01       	movw	r30, r28
     7ee:	e3 0f       	add	r30, r19
     7f0:	f1 1d       	adc	r31, r1
     7f2:	15 8a       	std	Z+21, r1	; 0x15
     7f4:	8d 89       	ldd	r24, Y+21	; 0x15
     7f6:	80 33       	cpi	r24, 0x30	; 48
     7f8:	11 f5       	brne	.+68     	; 0x83e <lcdWriteZahl+0x1a4>
     7fa:	8f a5       	ldd	r24, Y+47	; 0x2f
     7fc:	48 2f       	mov	r20, r24
     7fe:	50 e0       	ldi	r21, 0x00	; 0
     800:	41 50       	subi	r20, 0x01	; 1
     802:	51 09       	sbc	r21, r1
     804:	14 16       	cp	r1, r20
     806:	15 06       	cpc	r1, r21
     808:	d4 f4       	brge	.+52     	; 0x83e <lcdWriteZahl+0x1a4>
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	20 e0       	ldi	r18, 0x00	; 0
     810:	60 e2       	ldi	r22, 0x20	; 32
     812:	2f 5f       	subi	r18, 0xFF	; 255
     814:	e5 e1       	ldi	r30, 0x15	; 21
     816:	f0 e0       	ldi	r31, 0x00	; 0
     818:	ec 0f       	add	r30, r28
     81a:	fd 1f       	adc	r31, r29
     81c:	e8 0f       	add	r30, r24
     81e:	f9 1f       	adc	r31, r25
     820:	60 83       	st	Z, r22
     822:	82 2f       	mov	r24, r18
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	e5 e1       	ldi	r30, 0x15	; 21
     828:	f0 e0       	ldi	r31, 0x00	; 0
     82a:	ec 0f       	add	r30, r28
     82c:	fd 1f       	adc	r31, r29
     82e:	e8 0f       	add	r30, r24
     830:	f9 1f       	adc	r31, r25
     832:	30 81       	ld	r19, Z
     834:	30 33       	cpi	r19, 0x30	; 48
     836:	19 f4       	brne	.+6      	; 0x83e <lcdWriteZahl+0x1a4>
     838:	84 17       	cp	r24, r20
     83a:	95 07       	cpc	r25, r21
     83c:	54 f3       	brlt	.-44     	; 0x812 <lcdWriteZahl+0x178>
     83e:	ce 01       	movw	r24, r28
     840:	45 96       	adiw	r24, 0x15	; 21
     842:	9f 93       	push	r25
     844:	8f 93       	push	r24
     846:	9b a9       	ldd	r25, Y+51	; 0x33
     848:	9f 93       	push	r25
     84a:	ea a9       	ldd	r30, Y+50	; 0x32
     84c:	ef 93       	push	r30
     84e:	e9 de       	rcall	.-558    	; 0x622 <lcdWriteText>
     850:	0f 90       	pop	r0
     852:	0f 90       	pop	r0
     854:	0f 90       	pop	r0
     856:	0f 90       	pop	r0
     858:	e3 96       	adiw	r28, 0x33	; 51
     85a:	0f b6       	in	r0, 0x3f	; 63
     85c:	f8 94       	cli
     85e:	de bf       	out	0x3e, r29	; 62
     860:	0f be       	out	0x3f, r0	; 63
     862:	cd bf       	out	0x3d, r28	; 61
     864:	df 91       	pop	r29
     866:	cf 91       	pop	r28
     868:	1f 91       	pop	r17
     86a:	0f 91       	pop	r16
     86c:	ff 90       	pop	r15
     86e:	ef 90       	pop	r14
     870:	df 90       	pop	r13
     872:	cf 90       	pop	r12
     874:	bf 90       	pop	r11
     876:	af 90       	pop	r10
     878:	9f 90       	pop	r9
     87a:	8f 90       	pop	r8
     87c:	7f 90       	pop	r7
     87e:	6f 90       	pop	r6
     880:	5f 90       	pop	r5
     882:	4f 90       	pop	r4
     884:	3f 90       	pop	r3
     886:	2f 90       	pop	r2
     888:	08 95       	ret

0000088a <lcdLogSetLinesToUse>:
     88a:	9d ec       	ldi	r25, 0xCD	; 205
     88c:	89 9f       	mul	r24, r25
     88e:	91 2d       	mov	r25, r1
     890:	11 24       	eor	r1, r1
     892:	96 95       	lsr	r25
     894:	96 95       	lsr	r25
     896:	29 2f       	mov	r18, r25
     898:	22 0f       	add	r18, r18
     89a:	22 0f       	add	r18, r18
     89c:	92 0f       	add	r25, r18
     89e:	89 1b       	sub	r24, r25
     8a0:	11 f0       	breq	.+4      	; 0x8a6 <lcdLogSetLinesToUse+0x1c>
     8a2:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <lcdLogZeilen>
     8a6:	08 95       	ret

000008a8 <lcdClear>:
     8a8:	61 e0       	ldi	r22, 0x01	; 1
     8aa:	70 e0       	ldi	r23, 0x00	; 0
     8ac:	83 e4       	ldi	r24, 0x43	; 67
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	40 de       	rcall	.-896    	; 0x532 <writeLcdF>
     8b2:	8f e3       	ldi	r24, 0x3F	; 63
     8b4:	9f e1       	ldi	r25, 0x1F	; 31
     8b6:	01 97       	sbiw	r24, 0x01	; 1
     8b8:	f1 f7       	brne	.-4      	; 0x8b6 <lcdClear+0xe>
     8ba:	00 c0       	rjmp	.+0      	; 0x8bc <lcdClear+0x14>
     8bc:	00 00       	nop
     8be:	83 ec       	ldi	r24, 0xC3	; 195
     8c0:	92 e0       	ldi	r25, 0x02	; 2
     8c2:	9f 93       	push	r25
     8c4:	8f 93       	push	r24
     8c6:	1f 92       	push	r1
     8c8:	1f 92       	push	r1
     8ca:	ab de       	rcall	.-682    	; 0x622 <lcdWriteText>
     8cc:	0f 90       	pop	r0
     8ce:	0f 90       	pop	r0
     8d0:	0f 90       	pop	r0
     8d2:	0f 90       	pop	r0
     8d4:	08 95       	ret

000008d6 <initLcd>:
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	1b de       	rcall	.-970    	; 0x510 <lcdSclk>
     8da:	80 e0       	ldi	r24, 0x00	; 0
     8dc:	13 de       	rcall	.-986    	; 0x504 <lcdSid>
     8de:	64 e3       	ldi	r22, 0x34	; 52
     8e0:	70 e0       	ldi	r23, 0x00	; 0
     8e2:	83 e4       	ldi	r24, 0x43	; 67
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	25 de       	rcall	.-950    	; 0x532 <writeLcdF>
     8e8:	69 e0       	ldi	r22, 0x09	; 9
     8ea:	70 e0       	ldi	r23, 0x00	; 0
     8ec:	83 e4       	ldi	r24, 0x43	; 67
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	20 de       	rcall	.-960    	; 0x532 <writeLcdF>
     8f2:	60 e3       	ldi	r22, 0x30	; 48
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	83 e4       	ldi	r24, 0x43	; 67
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	1b de       	rcall	.-970    	; 0x532 <writeLcdF>
     8fc:	6c e0       	ldi	r22, 0x0C	; 12
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	83 e4       	ldi	r24, 0x43	; 67
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	16 de       	rcall	.-980    	; 0x532 <writeLcdF>
     906:	d0 df       	rcall	.-96     	; 0x8a8 <lcdClear>
     908:	67 e0       	ldi	r22, 0x07	; 7
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	83 e4       	ldi	r24, 0x43	; 67
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	10 de       	rcall	.-992    	; 0x532 <writeLcdF>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	03 ce       	rjmp	.-1018   	; 0x51c <lcdLight>
     916:	08 95       	ret

00000918 <initBoard>:
     918:	4f 92       	push	r4
     91a:	5f 92       	push	r5
     91c:	6f 92       	push	r6
     91e:	7f 92       	push	r7
     920:	8f 92       	push	r8
     922:	9f 92       	push	r9
     924:	af 92       	push	r10
     926:	bf 92       	push	r11
     928:	cf 92       	push	r12
     92a:	df 92       	push	r13
     92c:	ef 92       	push	r14
     92e:	ff 92       	push	r15
     930:	0f 93       	push	r16
     932:	1f 93       	push	r17
     934:	cf 93       	push	r28
     936:	df 93       	push	r29
     938:	c8 2f       	mov	r28, r24
     93a:	85 b7       	in	r24, 0x35	; 53
     93c:	85 bf       	out	0x35, r24	; 53
     93e:	12 b8       	out	0x02, r1	; 2
     940:	8f ef       	ldi	r24, 0xFF	; 255
     942:	81 b9       	out	0x01, r24	; 1
     944:	15 b8       	out	0x05, r1	; 5
     946:	84 b9       	out	0x04, r24	; 4
     948:	88 b9       	out	0x08, r24	; 8
     94a:	17 b8       	out	0x07, r1	; 7
     94c:	8b b9       	out	0x0b, r24	; 11
     94e:	1a b8       	out	0x0a, r1	; 10
     950:	8e b9       	out	0x0e, r24	; 14
     952:	1d b8       	out	0x0d, r1	; 13
     954:	72 98       	cbi	0x0e, 2	; 14
     956:	11 ba       	out	0x11, r1	; 17
     958:	10 ba       	out	0x10, r1	; 16
     95a:	94 e0       	ldi	r25, 0x04	; 4
     95c:	94 bb       	out	0x14, r25	; 20
     95e:	93 b3       	in	r25, 0x13	; 19
     960:	93 60       	ori	r25, 0x03	; 3
     962:	93 bb       	out	0x13, r25	; 19
     964:	9d 9a       	sbi	0x13, 5	; 19
     966:	97 ec       	ldi	r25, 0xC7	; 199
     968:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     96c:	98 e3       	ldi	r25, 0x38	; 56
     96e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     972:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     976:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     97a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     97e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     982:	8c e3       	ldi	r24, 0x3C	; 60
     984:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     988:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     98c:	78 94       	sei
     98e:	2f dd       	rcall	.-1442   	; 0x3ee <startSystemTimeMs>
     990:	a2 df       	rcall	.-188    	; 0x8d6 <initLcd>
     992:	37 dd       	rcall	.-1426   	; 0x402 <initAdc>
     994:	a3 dd       	rcall	.-1210   	; 0x4dc <initRgb>
     996:	cc 23       	and	r28, r28
     998:	09 f4       	brne	.+2      	; 0x99c <initBoard+0x84>
     99a:	b8 c0       	rjmp	.+368    	; 0xb0c <initBoard+0x1f4>
     99c:	8f ef       	ldi	r24, 0xFF	; 255
     99e:	be dd       	rcall	.-1156   	; 0x51c <lcdLight>
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	50 e0       	ldi	r21, 0x00	; 0
     9a4:	6f ef       	ldi	r22, 0xFF	; 255
     9a6:	73 e0       	ldi	r23, 0x03	; 3
     9a8:	80 e0       	ldi	r24, 0x00	; 0
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	80 dd       	rcall	.-1280   	; 0x4ae <rgbWrite>
     9ae:	8c e1       	ldi	r24, 0x1C	; 28
     9b0:	93 e0       	ldi	r25, 0x03	; 3
     9b2:	9f 93       	push	r25
     9b4:	8f 93       	push	r24
     9b6:	1f 92       	push	r1
     9b8:	1f 92       	push	r1
     9ba:	33 de       	rcall	.-922    	; 0x622 <lcdWriteText>
     9bc:	81 e3       	ldi	r24, 0x31	; 49
     9be:	93 e0       	ldi	r25, 0x03	; 3
     9c0:	9f 93       	push	r25
     9c2:	8f 93       	push	r24
     9c4:	1f 92       	push	r1
     9c6:	81 e0       	ldi	r24, 0x01	; 1
     9c8:	8f 93       	push	r24
     9ca:	2b de       	rcall	.-938    	; 0x622 <lcdWriteText>
     9cc:	87 e0       	ldi	r24, 0x07	; 7
     9ce:	93 e0       	ldi	r25, 0x03	; 3
     9d0:	9f 93       	push	r25
     9d2:	8f 93       	push	r24
     9d4:	1f 92       	push	r1
     9d6:	82 e0       	ldi	r24, 0x02	; 2
     9d8:	8f 93       	push	r24
     9da:	23 de       	rcall	.-954    	; 0x622 <lcdWriteText>
     9dc:	86 e4       	ldi	r24, 0x46	; 70
     9de:	93 e0       	ldi	r25, 0x03	; 3
     9e0:	9f 93       	push	r25
     9e2:	8f 93       	push	r24
     9e4:	1f 92       	push	r1
     9e6:	83 e0       	ldi	r24, 0x03	; 3
     9e8:	8f 93       	push	r24
     9ea:	1b de       	rcall	.-970    	; 0x622 <lcdWriteText>
     9ec:	8d b7       	in	r24, 0x3d	; 61
     9ee:	9e b7       	in	r25, 0x3e	; 62
     9f0:	40 96       	adiw	r24, 0x10	; 16
     9f2:	0f b6       	in	r0, 0x3f	; 63
     9f4:	f8 94       	cli
     9f6:	9e bf       	out	0x3e, r25	; 62
     9f8:	0f be       	out	0x3f, r0	; 63
     9fa:	8d bf       	out	0x3d, r24	; 61
     9fc:	88 24       	eor	r8, r8
     9fe:	83 94       	inc	r8
     a00:	c0 e0       	ldi	r28, 0x00	; 0
     a02:	71 2c       	mov	r7, r1
     a04:	99 24       	eor	r9, r9
     a06:	93 94       	inc	r9
     a08:	d0 e0       	ldi	r29, 0x00	; 0
     a0a:	cc 24       	eor	r12, r12
     a0c:	c3 94       	inc	r12
     a0e:	d1 2c       	mov	r13, r1
     a10:	e1 2c       	mov	r14, r1
     a12:	68 94       	set
     a14:	ff 24       	eor	r15, r15
     a16:	f7 f8       	bld	r15, 7
     a18:	66 24       	eor	r6, r6
     a1a:	63 94       	inc	r6
     a1c:	51 2c       	mov	r5, r1
     a1e:	09 e0       	ldi	r16, 0x09	; 9
     a20:	11 e0       	ldi	r17, 0x01	; 1
     a22:	0f 2e       	mov	r0, r31
     a24:	fb e5       	ldi	r31, 0x5B	; 91
     a26:	af 2e       	mov	r10, r31
     a28:	f3 e0       	ldi	r31, 0x03	; 3
     a2a:	bf 2e       	mov	r11, r31
     a2c:	f0 2d       	mov	r31, r0
     a2e:	0f 2e       	mov	r0, r31
     a30:	f3 e0       	ldi	r31, 0x03	; 3
     a32:	4f 2e       	mov	r4, r31
     a34:	f0 2d       	mov	r31, r0
     a36:	99 20       	and	r9, r9
     a38:	49 f0       	breq	.+18     	; 0xa4c <initBoard+0x134>
     a3a:	c7 01       	movw	r24, r14
     a3c:	0d 2e       	mov	r0, r29
     a3e:	02 c0       	rjmp	.+4      	; 0xa44 <initBoard+0x12c>
     a40:	96 95       	lsr	r25
     a42:	87 95       	ror	r24
     a44:	0a 94       	dec	r0
     a46:	e2 f7       	brpl	.-8      	; 0xa40 <initBoard+0x128>
     a48:	cf dc       	rcall	.-1634   	; 0x3e8 <ledWriteAll>
     a4a:	08 c0       	rjmp	.+16     	; 0xa5c <initBoard+0x144>
     a4c:	c6 01       	movw	r24, r12
     a4e:	0d 2e       	mov	r0, r29
     a50:	02 c0       	rjmp	.+4      	; 0xa56 <initBoard+0x13e>
     a52:	88 0f       	add	r24, r24
     a54:	99 1f       	adc	r25, r25
     a56:	0a 94       	dec	r0
     a58:	e2 f7       	brpl	.-8      	; 0xa52 <initBoard+0x13a>
     a5a:	c6 dc       	rcall	.-1652   	; 0x3e8 <ledWriteAll>
     a5c:	df 5f       	subi	r29, 0xFF	; 255
     a5e:	d1 31       	cpi	r29, 0x11	; 17
     a60:	28 f0       	brcs	.+10     	; 0xa6c <initBoard+0x154>
     a62:	86 2d       	mov	r24, r6
     a64:	91 10       	cpse	r9, r1
     a66:	85 2d       	mov	r24, r5
     a68:	98 2e       	mov	r9, r24
     a6a:	d0 e0       	ldi	r29, 0x00	; 0
     a6c:	88 20       	and	r8, r8
     a6e:	11 f0       	breq	.+4      	; 0xa74 <initBoard+0x15c>
     a70:	ce 5f       	subi	r28, 0xFE	; 254
     a72:	01 c0       	rjmp	.+2      	; 0xa76 <initBoard+0x15e>
     a74:	c2 50       	subi	r28, 0x02	; 2
     a76:	8c 2f       	mov	r24, r28
     a78:	51 dd       	rcall	.-1374   	; 0x51c <lcdLight>
     a7a:	ce 3f       	cpi	r28, 0xFE	; 254
     a7c:	21 f0       	breq	.+8      	; 0xa86 <initBoard+0x16e>
     a7e:	c8 37       	cpi	r28, 0x78	; 120
     a80:	19 f4       	brne	.+6      	; 0xa88 <initBoard+0x170>
     a82:	86 2c       	mov	r8, r6
     a84:	01 c0       	rjmp	.+2      	; 0xa88 <initBoard+0x170>
     a86:	85 2c       	mov	r8, r5
     a88:	71 10       	cpse	r7, r1
     a8a:	3b c0       	rjmp	.+118    	; 0xb02 <initBoard+0x1ea>
     a8c:	f8 01       	movw	r30, r16
     a8e:	80 81       	ld	r24, Z
     a90:	83 7c       	andi	r24, 0xC3	; 195
     a92:	91 f0       	breq	.+36     	; 0xab8 <initBoard+0x1a0>
     a94:	40 e0       	ldi	r20, 0x00	; 0
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	66 e2       	ldi	r22, 0x26	; 38
     a9a:	72 e0       	ldi	r23, 0x02	; 2
     a9c:	8f ef       	ldi	r24, 0xFF	; 255
     a9e:	93 e0       	ldi	r25, 0x03	; 3
     aa0:	06 dd       	rcall	.-1524   	; 0x4ae <rgbWrite>
     aa2:	bf 92       	push	r11
     aa4:	af 92       	push	r10
     aa6:	1f 92       	push	r1
     aa8:	4f 92       	push	r4
     aaa:	bb dd       	rcall	.-1162   	; 0x622 <lcdWriteText>
     aac:	0f 90       	pop	r0
     aae:	0f 90       	pop	r0
     ab0:	0f 90       	pop	r0
     ab2:	0f 90       	pop	r0
     ab4:	76 2c       	mov	r7, r6
     ab6:	25 c0       	rjmp	.+74     	; 0xb02 <initBoard+0x1ea>
     ab8:	8f ef       	ldi	r24, 0xFF	; 255
     aba:	9c e7       	ldi	r25, 0x7C	; 124
     abc:	01 97       	sbiw	r24, 0x01	; 1
     abe:	f1 f7       	brne	.-4      	; 0xabc <initBoard+0x1a4>
     ac0:	00 c0       	rjmp	.+0      	; 0xac2 <initBoard+0x1aa>
     ac2:	00 00       	nop
     ac4:	b8 cf       	rjmp	.-144    	; 0xa36 <initBoard+0x11e>
     ac6:	f0 de       	rcall	.-544    	; 0x8a8 <lcdClear>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	28 dd       	rcall	.-1456   	; 0x51c <lcdLight>
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	8b dc       	rcall	.-1770   	; 0x3e8 <ledWriteAll>
     ad2:	40 e0       	ldi	r20, 0x00	; 0
     ad4:	50 e0       	ldi	r21, 0x00	; 0
     ad6:	60 e0       	ldi	r22, 0x00	; 0
     ad8:	70 e0       	ldi	r23, 0x00	; 0
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	e7 dc       	rcall	.-1586   	; 0x4ae <rgbWrite>
     ae0:	10 92 c1 03 	sts	0x03C1, r1	; 0x8003c1 <systemTimeMs>
     ae4:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <systemTimeMs+0x1>
     ae8:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <systemTimeMs+0x2>
     aec:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <systemTimeMs+0x3>
     af0:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <systemTimeMs+0x4>
     af4:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <systemTimeMs+0x5>
     af8:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <systemTimeMs+0x6>
     afc:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <systemTimeMs+0x7>
     b00:	05 c0       	rjmp	.+10     	; 0xb0c <initBoard+0x1f4>
     b02:	f8 01       	movw	r30, r16
     b04:	80 81       	ld	r24, Z
     b06:	83 7c       	andi	r24, 0xC3	; 195
     b08:	b9 f6       	brne	.-82     	; 0xab8 <initBoard+0x1a0>
     b0a:	dd cf       	rjmp	.-70     	; 0xac6 <initBoard+0x1ae>
     b0c:	df 91       	pop	r29
     b0e:	cf 91       	pop	r28
     b10:	1f 91       	pop	r17
     b12:	0f 91       	pop	r16
     b14:	ff 90       	pop	r15
     b16:	ef 90       	pop	r14
     b18:	df 90       	pop	r13
     b1a:	cf 90       	pop	r12
     b1c:	bf 90       	pop	r11
     b1e:	af 90       	pop	r10
     b20:	9f 90       	pop	r9
     b22:	8f 90       	pop	r8
     b24:	7f 90       	pop	r7
     b26:	6f 90       	pop	r6
     b28:	5f 90       	pop	r5
     b2a:	4f 90       	pop	r4
     b2c:	08 95       	ret

00000b2e <lcdLog>:
     b2e:	6f 92       	push	r6
     b30:	7f 92       	push	r7
     b32:	8f 92       	push	r8
     b34:	9f 92       	push	r9
     b36:	af 92       	push	r10
     b38:	bf 92       	push	r11
     b3a:	cf 92       	push	r12
     b3c:	df 92       	push	r13
     b3e:	ef 92       	push	r14
     b40:	ff 92       	push	r15
     b42:	0f 93       	push	r16
     b44:	1f 93       	push	r17
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	60 97       	sbiw	r28, 0x10	; 16
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	f8 94       	cli
     b54:	de bf       	out	0x3e, r29	; 62
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	cd bf       	out	0x3d, r28	; 61
     b5a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     b5e:	88 23       	and	r24, r24
     b60:	b1 f1       	breq	.+108    	; 0xbce <lcdLog+0xa0>
     b62:	a2 de       	rcall	.-700    	; 0x8a8 <lcdClear>
     b64:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
     b68:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <nummer.2616+0x1>
     b6c:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <nummer.2616>
     b70:	0f 2e       	mov	r0, r31
     b72:	f6 eb       	ldi	r31, 0xB6	; 182
     b74:	8f 2e       	mov	r8, r31
     b76:	f3 e0       	ldi	r31, 0x03	; 3
     b78:	9f 2e       	mov	r9, r31
     b7a:	f0 2d       	mov	r31, r0
     b7c:	06 e7       	ldi	r16, 0x76	; 118
     b7e:	13 e0       	ldi	r17, 0x03	; 3
     b80:	a0 e0       	ldi	r26, 0x00	; 0
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	40 e2       	ldi	r20, 0x20	; 32
     b86:	bd 01       	movw	r22, r26
     b88:	f4 01       	movw	r30, r8
     b8a:	11 92       	st	Z+, r1
     b8c:	11 92       	st	Z+, r1
     b8e:	4f 01       	movw	r8, r30
     b90:	f8 01       	movw	r30, r16
     b92:	41 93       	st	Z+, r20
     b94:	81 e0       	ldi	r24, 0x01	; 1
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	13 c0       	rjmp	.+38     	; 0xbc0 <lcdLog+0x92>
     b9a:	62 95       	swap	r22
     b9c:	72 95       	swap	r23
     b9e:	70 7f       	andi	r23, 0xF0	; 240
     ba0:	76 27       	eor	r23, r22
     ba2:	60 7f       	andi	r22, 0xF0	; 240
     ba4:	76 27       	eor	r23, r22
     ba6:	6a 58       	subi	r22, 0x8A	; 138
     ba8:	7c 4f       	sbci	r23, 0xFC	; 252
     baa:	fb 01       	movw	r30, r22
     bac:	e2 0f       	add	r30, r18
     bae:	f3 1f       	adc	r31, r19
     bb0:	10 82       	st	Z, r1
     bb2:	11 96       	adiw	r26, 0x01	; 1
     bb4:	00 5f       	subi	r16, 0xF0	; 240
     bb6:	1f 4f       	sbci	r17, 0xFF	; 255
     bb8:	a4 30       	cpi	r26, 0x04	; 4
     bba:	b1 05       	cpc	r27, r1
     bbc:	21 f7       	brne	.-56     	; 0xb86 <lcdLog+0x58>
     bbe:	07 c0       	rjmp	.+14     	; 0xbce <lcdLog+0xa0>
     bc0:	9c 01       	movw	r18, r24
     bc2:	41 93       	st	Z+, r20
     bc4:	01 96       	adiw	r24, 0x01	; 1
     bc6:	80 31       	cpi	r24, 0x10	; 16
     bc8:	91 05       	cpc	r25, r1
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <lcdLog+0x92>
     bcc:	e6 cf       	rjmp	.-52     	; 0xb9a <lcdLog+0x6c>
     bce:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <nummer.2616>
     bd2:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <nummer.2616+0x1>
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	90 93 bf 03 	sts	0x03BF, r25	; 0x8003bf <nummer.2616+0x1>
     bdc:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <nummer.2616>
     be0:	9e 01       	movw	r18, r28
     be2:	2c 5d       	subi	r18, 0xDC	; 220
     be4:	3f 4f       	sbci	r19, 0xFF	; 255
     be6:	4a a1       	ldd	r20, Y+34	; 0x22
     be8:	5b a1       	ldd	r21, Y+35	; 0x23
     bea:	60 e1       	ldi	r22, 0x10	; 16
     bec:	70 e0       	ldi	r23, 0x00	; 0
     bee:	ce 01       	movw	r24, r28
     bf0:	01 96       	adiw	r24, 0x01	; 1
     bf2:	33 d2       	rcall	.+1126   	; 0x105a <vsnprintf>
     bf4:	8e 01       	movw	r16, r28
     bf6:	0f 5f       	subi	r16, 0xFF	; 255
     bf8:	1f 4f       	sbci	r17, 0xFF	; 255
     bfa:	4e 01       	movw	r8, r28
     bfc:	f1 e1       	ldi	r31, 0x11	; 17
     bfe:	8f 0e       	add	r8, r31
     c00:	91 1c       	adc	r9, r1
     c02:	f8 01       	movw	r30, r16
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	30 e2       	ldi	r19, 0x20	; 32
     c08:	21 e0       	ldi	r18, 0x01	; 1
     c0a:	df 01       	movw	r26, r30
     c0c:	80 81       	ld	r24, Z
     c0e:	88 23       	and	r24, r24
     c10:	19 f0       	breq	.+6      	; 0xc18 <lcdLog+0xea>
     c12:	99 23       	and	r25, r25
     c14:	19 f0       	breq	.+6      	; 0xc1c <lcdLog+0xee>
     c16:	01 c0       	rjmp	.+2      	; 0xc1a <lcdLog+0xec>
     c18:	92 2f       	mov	r25, r18
     c1a:	3c 93       	st	X, r19
     c1c:	31 96       	adiw	r30, 0x01	; 1
     c1e:	e8 15       	cp	r30, r8
     c20:	f9 05       	cpc	r31, r9
     c22:	99 f7       	brne	.-26     	; 0xc0a <lcdLog+0xdc>
     c24:	18 8a       	std	Y+16, r1	; 0x10
     c26:	66 e7       	ldi	r22, 0x76	; 118
     c28:	73 e0       	ldi	r23, 0x03	; 3
     c2a:	ce 01       	movw	r24, r28
     c2c:	01 96       	adiw	r24, 0x01	; 1
     c2e:	0c d2       	rcall	.+1048   	; 0x1048 <strcmp>
     c30:	88 23       	and	r24, r24
     c32:	09 f4       	brne	.+2      	; 0xc36 <lcdLog+0x108>
     c34:	7e c0       	rjmp	.+252    	; 0xd32 <lcdLog+0x204>
     c36:	0f 2e       	mov	r0, r31
     c38:	fc eb       	ldi	r31, 0xBC	; 188
     c3a:	6f 2e       	mov	r6, r31
     c3c:	f3 e0       	ldi	r31, 0x03	; 3
     c3e:	7f 2e       	mov	r7, r31
     c40:	f0 2d       	mov	r31, r0
     c42:	66 ea       	ldi	r22, 0xA6	; 166
     c44:	73 e0       	ldi	r23, 0x03	; 3
     c46:	46 e7       	ldi	r20, 0x76	; 118
     c48:	53 e0       	ldi	r21, 0x03	; 3
     c4a:	f3 01       	movw	r30, r6
     c4c:	92 91       	ld	r25, -Z
     c4e:	82 91       	ld	r24, -Z
     c50:	3f 01       	movw	r6, r30
     c52:	93 83       	std	Z+3, r25	; 0x03
     c54:	82 83       	std	Z+2, r24	; 0x02
     c56:	db 01       	movw	r26, r22
     c58:	50 97       	sbiw	r26, 0x10	; 16
     c5a:	9b 01       	movw	r18, r22
     c5c:	20 5f       	subi	r18, 0xF0	; 240
     c5e:	3f 4f       	sbci	r19, 0xFF	; 255
     c60:	fb 01       	movw	r30, r22
     c62:	8d 91       	ld	r24, X+
     c64:	81 93       	st	Z+, r24
     c66:	e2 17       	cp	r30, r18
     c68:	f3 07       	cpc	r31, r19
     c6a:	d9 f7       	brne	.-10     	; 0xc62 <lcdLog+0x134>
     c6c:	60 51       	subi	r22, 0x10	; 16
     c6e:	71 09       	sbc	r23, r1
     c70:	64 17       	cp	r22, r20
     c72:	75 07       	cpc	r23, r21
     c74:	51 f7       	brne	.-44     	; 0xc4a <lcdLog+0x11c>
     c76:	f8 01       	movw	r30, r16
     c78:	81 91       	ld	r24, Z+
     c7a:	8f 01       	movw	r16, r30
     c7c:	fa 01       	movw	r30, r20
     c7e:	81 93       	st	Z+, r24
     c80:	af 01       	movw	r20, r30
     c82:	08 15       	cp	r16, r8
     c84:	19 05       	cpc	r17, r9
     c86:	b9 f7       	brne	.-18     	; 0xc76 <lcdLog+0x148>
     c88:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <nummer.2616>
     c8c:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <nummer.2616+0x1>
     c90:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <lcdPrintNr.2614+0x1>
     c94:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <lcdPrintNr.2614>
     c98:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <lcdLogZeilen>
     c9c:	94 e0       	ldi	r25, 0x04	; 4
     c9e:	d9 2e       	mov	r13, r25
     ca0:	d8 1a       	sub	r13, r24
     ca2:	f3 e0       	ldi	r31, 0x03	; 3
     ca4:	fd 15       	cp	r31, r13
     ca6:	08 f4       	brcc	.+2      	; 0xcaa <lcdLog+0x17c>
     ca8:	5b c0       	rjmp	.+182    	; 0xd60 <lcdLog+0x232>
     caa:	83 e0       	ldi	r24, 0x03	; 3
     cac:	b8 2e       	mov	r11, r24
     cae:	bd 18       	sub	r11, r13
     cb0:	0f 2e       	mov	r0, r31
     cb2:	f5 e0       	ldi	r31, 0x05	; 5
     cb4:	6f 2e       	mov	r6, r31
     cb6:	f0 2d       	mov	r31, r0
     cb8:	0f 2e       	mov	r0, r31
     cba:	f0 e7       	ldi	r31, 0x70	; 112
     cbc:	8f 2e       	mov	r8, r31
     cbe:	f3 e0       	ldi	r31, 0x03	; 3
     cc0:	9f 2e       	mov	r9, r31
     cc2:	f0 2d       	mov	r31, r0
     cc4:	68 94       	set
     cc6:	77 24       	eor	r7, r7
     cc8:	72 f8       	bld	r7, 2
     cca:	0b 2d       	mov	r16, r11
     ccc:	10 e0       	ldi	r17, 0x00	; 0
     cce:	c8 01       	movw	r24, r16
     cd0:	82 95       	swap	r24
     cd2:	92 95       	swap	r25
     cd4:	90 7f       	andi	r25, 0xF0	; 240
     cd6:	98 27       	eor	r25, r24
     cd8:	80 7f       	andi	r24, 0xF0	; 240
     cda:	98 27       	eor	r25, r24
     cdc:	8a 58       	subi	r24, 0x8A	; 138
     cde:	9c 4f       	sbci	r25, 0xFC	; 252
     ce0:	9f 93       	push	r25
     ce2:	8f 93       	push	r24
     ce4:	6f 92       	push	r6
     ce6:	df 92       	push	r13
     ce8:	9c dc       	rcall	.-1736   	; 0x622 <lcdWriteText>
     cea:	9f 92       	push	r9
     cec:	8f 92       	push	r8
     cee:	7f 92       	push	r7
     cf0:	df 92       	push	r13
     cf2:	97 dc       	rcall	.-1746   	; 0x622 <lcdWriteText>
     cf4:	00 0f       	add	r16, r16
     cf6:	11 1f       	adc	r17, r17
     cf8:	f8 01       	movw	r30, r16
     cfa:	ea 54       	subi	r30, 0x4A	; 74
     cfc:	fc 4f       	sbci	r31, 0xFC	; 252
     cfe:	00 81       	ld	r16, Z
     d00:	11 81       	ldd	r17, Z+1	; 0x01
     d02:	a1 2c       	mov	r10, r1
     d04:	c7 2c       	mov	r12, r7
     d06:	e0 2e       	mov	r14, r16
     d08:	f1 2e       	mov	r15, r17
     d0a:	00 e0       	ldi	r16, 0x00	; 0
     d0c:	10 e0       	ldi	r17, 0x00	; 0
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	40 e0       	ldi	r20, 0x00	; 0
     d14:	50 e0       	ldi	r21, 0x00	; 0
     d16:	60 e0       	ldi	r22, 0x00	; 0
     d18:	8d 2d       	mov	r24, r13
     d1a:	bf dc       	rcall	.-1666   	; 0x69a <lcdWriteZahl>
     d1c:	d3 94       	inc	r13
     d1e:	ba 94       	dec	r11
     d20:	0f b6       	in	r0, 0x3f	; 63
     d22:	f8 94       	cli
     d24:	de bf       	out	0x3e, r29	; 62
     d26:	0f be       	out	0x3f, r0	; 63
     d28:	cd bf       	out	0x3d, r28	; 61
     d2a:	94 e0       	ldi	r25, 0x04	; 4
     d2c:	d9 12       	cpse	r13, r25
     d2e:	cd cf       	rjmp	.-102    	; 0xcca <lcdLog+0x19c>
     d30:	17 c0       	rjmp	.+46     	; 0xd60 <lcdLog+0x232>
     d32:	00 91 be 03 	lds	r16, 0x03BE	; 0x8003be <nummer.2616>
     d36:	10 91 bf 03 	lds	r17, 0x03BF	; 0x8003bf <nummer.2616+0x1>
     d3a:	10 93 b7 03 	sts	0x03B7, r17	; 0x8003b7 <lcdPrintNr.2614+0x1>
     d3e:	00 93 b6 03 	sts	0x03B6, r16	; 0x8003b6 <lcdPrintNr.2614>
     d42:	a1 2c       	mov	r10, r1
     d44:	68 94       	set
     d46:	cc 24       	eor	r12, r12
     d48:	c2 f8       	bld	r12, 2
     d4a:	e0 2e       	mov	r14, r16
     d4c:	f1 2e       	mov	r15, r17
     d4e:	00 e0       	ldi	r16, 0x00	; 0
     d50:	10 e0       	ldi	r17, 0x00	; 0
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	40 e0       	ldi	r20, 0x00	; 0
     d58:	50 e0       	ldi	r21, 0x00	; 0
     d5a:	60 e0       	ldi	r22, 0x00	; 0
     d5c:	83 e0       	ldi	r24, 0x03	; 3
     d5e:	9d dc       	rcall	.-1734   	; 0x69a <lcdWriteZahl>
     d60:	60 96       	adiw	r28, 0x10	; 16
     d62:	0f b6       	in	r0, 0x3f	; 63
     d64:	f8 94       	cli
     d66:	de bf       	out	0x3e, r29	; 62
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	cd bf       	out	0x3d, r28	; 61
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28
     d70:	1f 91       	pop	r17
     d72:	0f 91       	pop	r16
     d74:	ff 90       	pop	r15
     d76:	ef 90       	pop	r14
     d78:	df 90       	pop	r13
     d7a:	cf 90       	pop	r12
     d7c:	bf 90       	pop	r11
     d7e:	af 90       	pop	r10
     d80:	9f 90       	pop	r9
     d82:	8f 90       	pop	r8
     d84:	7f 90       	pop	r7
     d86:	6f 90       	pop	r6
     d88:	08 95       	ret

00000d8a <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	cd b7       	in	r28, 0x3d	; 61
     d90:	de b7       	in	r29, 0x3e	; 62
     d92:	28 97       	sbiw	r28, 0x08	; 8
     d94:	0f b6       	in	r0, 0x3f	; 63
     d96:	f8 94       	cli
     d98:	de bf       	out	0x3e, r29	; 62
     d9a:	0f be       	out	0x3f, r0	; 63
     d9c:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     d9e:	88 e0       	ldi	r24, 0x08	; 8
     da0:	e2 e0       	ldi	r30, 0x02	; 2
     da2:	f2 e0       	ldi	r31, 0x02	; 2
     da4:	de 01       	movw	r26, r28
     da6:	11 96       	adiw	r26, 0x01	; 1
     da8:	01 90       	ld	r0, Z+
     daa:	0d 92       	st	X+, r0
     dac:	8a 95       	dec	r24
     dae:	e1 f7       	brne	.-8      	; 0xda8 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     db0:	e5 e0       	ldi	r30, 0x05	; 5
     db2:	f1 e0       	ldi	r31, 0x01	; 1
     db4:	80 81       	ld	r24, Z
     db6:	8f 7b       	andi	r24, 0xBF	; 191
     db8:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     dba:	e0 91 74 03 	lds	r30, 0x0374	; 0x800374 <Zeilen_Nr.2731>
     dbe:	f0 91 75 03 	lds	r31, 0x0375	; 0x800375 <Zeilen_Nr.2731+0x1>
     dc2:	81 e0       	ldi	r24, 0x01	; 1
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	8c 0f       	add	r24, r28
     dc8:	9d 1f       	adc	r25, r29
     dca:	e8 0f       	add	r30, r24
     dcc:	f9 1f       	adc	r31, r25
     dce:	80 81       	ld	r24, Z
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	90 93 73 03 	sts	0x0373, r25	; 0x800373 <__data_end+0x1>
     dd6:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <__data_end>
     dda:	aa e3       	ldi	r26, 0x3A	; 58
     ddc:	b4 e0       	ldi	r27, 0x04	; 4
     dde:	2a ec       	ldi	r18, 0xCA	; 202
     de0:	33 e0       	ldi	r19, 0x03	; 3
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     de2:	e5 e0       	ldi	r30, 0x05	; 5
     de4:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und √ºberp√ºfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     de6:	5e 91       	ld	r21, -X
     de8:	4e 91       	ld	r20, -X
     dea:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <__data_end>
     dee:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <__data_end+0x1>
     df2:	84 23       	and	r24, r20
     df4:	95 23       	and	r25, r21
     df6:	89 2b       	or	r24, r25
     df8:	21 f0       	breq	.+8      	; 0xe02 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     dfa:	80 81       	ld	r24, Z
     dfc:	80 62       	ori	r24, 0x20	; 32
     dfe:	80 83       	st	Z, r24
     e00:	03 c0       	rjmp	.+6      	; 0xe08 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     e02:	80 81       	ld	r24, Z
     e04:	8f 7d       	andi	r24, 0xDF	; 223
     e06:	80 83       	st	Z, r24
        }
        CLOCK_1;
     e08:	80 81       	ld	r24, Z
     e0a:	80 61       	ori	r24, 0x10	; 16
     e0c:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals √ºbernommen
     e0e:	80 81       	ld	r24, Z
     e10:	8f 7e       	andi	r24, 0xEF	; 239
     e12:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und √ºberp√ºfen, ob Bit gesetzt ist
     e14:	a2 17       	cp	r26, r18
     e16:	b3 07       	cpc	r27, r19
     e18:	31 f7       	brne	.-52     	; 0xde6 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals √ºbernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     e1a:	e5 e0       	ldi	r30, 0x05	; 5
     e1c:	f1 e0       	ldi	r31, 0x01	; 1
     e1e:	80 81       	ld	r24, Z
     e20:	87 7f       	andi	r24, 0xF7	; 247
     e22:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     e24:	80 81       	ld	r24, Z
     e26:	88 7f       	andi	r24, 0xF8	; 248
     e28:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gew√ºnschte Zeile einstellen
     e2a:	90 81       	ld	r25, Z
     e2c:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <Zeilen_Nr.2731>
     e30:	89 2b       	or	r24, r25
     e32:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     e34:	80 81       	ld	r24, Z
     e36:	80 64       	ori	r24, 0x40	; 64
     e38:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     e3a:	80 81       	ld	r24, Z
     e3c:	88 60       	ori	r24, 0x08	; 8
     e3e:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     e40:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <Zeilen_Nr.2731>
     e44:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <Zeilen_Nr.2731+0x1>
     e48:	87 30       	cpi	r24, 0x07	; 7
     e4a:	91 05       	cpc	r25, r1
     e4c:	30 f4       	brcc	.+12     	; 0xe5a <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <Zeilen_Nr.2731+0x1>
     e54:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <Zeilen_Nr.2731>
     e58:	07 c0       	rjmp	.+14     	; 0xe68 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     e5a:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <Zeilen_Nr.2731+0x1>
     e5e:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <Zeilen_Nr.2731>
        writeTextFinished = 1;
     e62:	81 e0       	ldi	r24, 0x01	; 1
     e64:	80 93 c0 03 	sts	0x03C0, r24	; 0x8003c0 <writeTextFinished>
    }
    
     e68:	28 96       	adiw	r28, 0x08	; 8
     e6a:	0f b6       	in	r0, 0x3f	; 63
     e6c:	f8 94       	cli
     e6e:	de bf       	out	0x3e, r29	; 62
     e70:	0f be       	out	0x3f, r0	; 63
     e72:	cd bf       	out	0x3d, r28	; 61
     e74:	df 91       	pop	r29
     e76:	cf 91       	pop	r28
     e78:	08 95       	ret

00000e7a <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     e7a:	1f 92       	push	r1
     e7c:	0f 92       	push	r0
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	0f 92       	push	r0
     e82:	11 24       	eor	r1, r1
     e84:	0b b6       	in	r0, 0x3b	; 59
     e86:	0f 92       	push	r0
     e88:	2f 93       	push	r18
     e8a:	3f 93       	push	r19
     e8c:	4f 93       	push	r20
     e8e:	5f 93       	push	r21
     e90:	6f 93       	push	r22
     e92:	7f 93       	push	r23
     e94:	8f 93       	push	r24
     e96:	9f 93       	push	r25
     e98:	af 93       	push	r26
     e9a:	bf 93       	push	r27
     e9c:	ef 93       	push	r30
     e9e:	ff 93       	push	r31
    systemTimeMs += 1;
     ea0:	20 91 c1 03 	lds	r18, 0x03C1	; 0x8003c1 <systemTimeMs>
     ea4:	30 91 c2 03 	lds	r19, 0x03C2	; 0x8003c2 <systemTimeMs+0x1>
     ea8:	40 91 c3 03 	lds	r20, 0x03C3	; 0x8003c3 <systemTimeMs+0x2>
     eac:	50 91 c4 03 	lds	r21, 0x03C4	; 0x8003c4 <systemTimeMs+0x3>
     eb0:	60 91 c5 03 	lds	r22, 0x03C5	; 0x8003c5 <systemTimeMs+0x4>
     eb4:	70 91 c6 03 	lds	r23, 0x03C6	; 0x8003c6 <systemTimeMs+0x5>
     eb8:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <systemTimeMs+0x6>
     ebc:	90 91 c8 03 	lds	r25, 0x03C8	; 0x8003c8 <systemTimeMs+0x7>
     ec0:	a1 e0       	ldi	r26, 0x01	; 1
     ec2:	b6 d0       	rcall	.+364    	; 0x1030 <__adddi3_s8>
     ec4:	20 93 c1 03 	sts	0x03C1, r18	; 0x8003c1 <systemTimeMs>
     ec8:	30 93 c2 03 	sts	0x03C2, r19	; 0x8003c2 <systemTimeMs+0x1>
     ecc:	40 93 c3 03 	sts	0x03C3, r20	; 0x8003c3 <systemTimeMs+0x2>
     ed0:	50 93 c4 03 	sts	0x03C4, r21	; 0x8003c4 <systemTimeMs+0x3>
     ed4:	60 93 c5 03 	sts	0x03C5, r22	; 0x8003c5 <systemTimeMs+0x4>
     ed8:	70 93 c6 03 	sts	0x03C6, r23	; 0x8003c6 <systemTimeMs+0x5>
     edc:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <systemTimeMs+0x6>
     ee0:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
     ee4:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <matrixRunning>
     ee8:	81 11       	cpse	r24, r1
     eea:	4f df       	rcall	.-354    	; 0xd8a <matrixWriteNextLine>
}
     eec:	ff 91       	pop	r31
     eee:	ef 91       	pop	r30
     ef0:	bf 91       	pop	r27
     ef2:	af 91       	pop	r26
     ef4:	9f 91       	pop	r25
     ef6:	8f 91       	pop	r24
     ef8:	7f 91       	pop	r23
     efa:	6f 91       	pop	r22
     efc:	5f 91       	pop	r21
     efe:	4f 91       	pop	r20
     f00:	3f 91       	pop	r19
     f02:	2f 91       	pop	r18
     f04:	0f 90       	pop	r0
     f06:	0b be       	out	0x3b, r0	; 59
     f08:	0f 90       	pop	r0
     f0a:	0f be       	out	0x3f, r0	; 63
     f0c:	0f 90       	pop	r0
     f0e:	1f 90       	pop	r1
     f10:	18 95       	reti

00000f12 <__udivmodsi4>:
     f12:	a1 e2       	ldi	r26, 0x21	; 33
     f14:	1a 2e       	mov	r1, r26
     f16:	aa 1b       	sub	r26, r26
     f18:	bb 1b       	sub	r27, r27
     f1a:	fd 01       	movw	r30, r26
     f1c:	0d c0       	rjmp	.+26     	; 0xf38 <__udivmodsi4_ep>

00000f1e <__udivmodsi4_loop>:
     f1e:	aa 1f       	adc	r26, r26
     f20:	bb 1f       	adc	r27, r27
     f22:	ee 1f       	adc	r30, r30
     f24:	ff 1f       	adc	r31, r31
     f26:	a2 17       	cp	r26, r18
     f28:	b3 07       	cpc	r27, r19
     f2a:	e4 07       	cpc	r30, r20
     f2c:	f5 07       	cpc	r31, r21
     f2e:	20 f0       	brcs	.+8      	; 0xf38 <__udivmodsi4_ep>
     f30:	a2 1b       	sub	r26, r18
     f32:	b3 0b       	sbc	r27, r19
     f34:	e4 0b       	sbc	r30, r20
     f36:	f5 0b       	sbc	r31, r21

00000f38 <__udivmodsi4_ep>:
     f38:	66 1f       	adc	r22, r22
     f3a:	77 1f       	adc	r23, r23
     f3c:	88 1f       	adc	r24, r24
     f3e:	99 1f       	adc	r25, r25
     f40:	1a 94       	dec	r1
     f42:	69 f7       	brne	.-38     	; 0xf1e <__udivmodsi4_loop>
     f44:	60 95       	com	r22
     f46:	70 95       	com	r23
     f48:	80 95       	com	r24
     f4a:	90 95       	com	r25
     f4c:	9b 01       	movw	r18, r22
     f4e:	ac 01       	movw	r20, r24
     f50:	bd 01       	movw	r22, r26
     f52:	cf 01       	movw	r24, r30
     f54:	08 95       	ret

00000f56 <__umulhisi3>:
     f56:	a2 9f       	mul	r26, r18
     f58:	b0 01       	movw	r22, r0
     f5a:	b3 9f       	mul	r27, r19
     f5c:	c0 01       	movw	r24, r0
     f5e:	a3 9f       	mul	r26, r19
     f60:	70 0d       	add	r23, r0
     f62:	81 1d       	adc	r24, r1
     f64:	11 24       	eor	r1, r1
     f66:	91 1d       	adc	r25, r1
     f68:	b2 9f       	mul	r27, r18
     f6a:	70 0d       	add	r23, r0
     f6c:	81 1d       	adc	r24, r1
     f6e:	11 24       	eor	r1, r1
     f70:	91 1d       	adc	r25, r1
     f72:	08 95       	ret

00000f74 <__umoddi3>:
     f74:	68 94       	set
     f76:	01 c0       	rjmp	.+2      	; 0xf7a <__udivdi3_umoddi3>

00000f78 <__udivdi3>:
     f78:	e8 94       	clt

00000f7a <__udivdi3_umoddi3>:
     f7a:	8f 92       	push	r8
     f7c:	9f 92       	push	r9
     f7e:	cf 93       	push	r28
     f80:	df 93       	push	r29
     f82:	05 d0       	rcall	.+10     	; 0xf8e <__udivmod64>
     f84:	df 91       	pop	r29
     f86:	cf 91       	pop	r28
     f88:	9f 90       	pop	r9
     f8a:	8f 90       	pop	r8
     f8c:	08 95       	ret

00000f8e <__udivmod64>:
     f8e:	88 24       	eor	r8, r8
     f90:	99 24       	eor	r9, r9
     f92:	f4 01       	movw	r30, r8
     f94:	e4 01       	movw	r28, r8
     f96:	b0 e4       	ldi	r27, 0x40	; 64
     f98:	9f 93       	push	r25
     f9a:	aa 27       	eor	r26, r26
     f9c:	9a 15       	cp	r25, r10
     f9e:	8b 04       	cpc	r8, r11
     fa0:	9c 04       	cpc	r9, r12
     fa2:	ed 05       	cpc	r30, r13
     fa4:	fe 05       	cpc	r31, r14
     fa6:	cf 05       	cpc	r28, r15
     fa8:	d0 07       	cpc	r29, r16
     faa:	a1 07       	cpc	r26, r17
     fac:	98 f4       	brcc	.+38     	; 0xfd4 <__udivmod64+0x46>
     fae:	ad 2f       	mov	r26, r29
     fb0:	dc 2f       	mov	r29, r28
     fb2:	cf 2f       	mov	r28, r31
     fb4:	fe 2f       	mov	r31, r30
     fb6:	e9 2d       	mov	r30, r9
     fb8:	98 2c       	mov	r9, r8
     fba:	89 2e       	mov	r8, r25
     fbc:	98 2f       	mov	r25, r24
     fbe:	87 2f       	mov	r24, r23
     fc0:	76 2f       	mov	r23, r22
     fc2:	65 2f       	mov	r22, r21
     fc4:	54 2f       	mov	r21, r20
     fc6:	43 2f       	mov	r20, r19
     fc8:	32 2f       	mov	r19, r18
     fca:	22 27       	eor	r18, r18
     fcc:	b8 50       	subi	r27, 0x08	; 8
     fce:	31 f7       	brne	.-52     	; 0xf9c <__udivmod64+0xe>
     fd0:	bf 91       	pop	r27
     fd2:	27 c0       	rjmp	.+78     	; 0x1022 <__udivmod64+0x94>
     fd4:	1b 2e       	mov	r1, r27
     fd6:	bf 91       	pop	r27
     fd8:	bb 27       	eor	r27, r27
     fda:	22 0f       	add	r18, r18
     fdc:	33 1f       	adc	r19, r19
     fde:	44 1f       	adc	r20, r20
     fe0:	55 1f       	adc	r21, r21
     fe2:	66 1f       	adc	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	88 1f       	adc	r24, r24
     fe8:	99 1f       	adc	r25, r25
     fea:	88 1c       	adc	r8, r8
     fec:	99 1c       	adc	r9, r9
     fee:	ee 1f       	adc	r30, r30
     ff0:	ff 1f       	adc	r31, r31
     ff2:	cc 1f       	adc	r28, r28
     ff4:	dd 1f       	adc	r29, r29
     ff6:	aa 1f       	adc	r26, r26
     ff8:	bb 1f       	adc	r27, r27
     ffa:	8a 14       	cp	r8, r10
     ffc:	9b 04       	cpc	r9, r11
     ffe:	ec 05       	cpc	r30, r12
    1000:	fd 05       	cpc	r31, r13
    1002:	ce 05       	cpc	r28, r14
    1004:	df 05       	cpc	r29, r15
    1006:	a0 07       	cpc	r26, r16
    1008:	b1 07       	cpc	r27, r17
    100a:	48 f0       	brcs	.+18     	; 0x101e <__udivmod64+0x90>
    100c:	8a 18       	sub	r8, r10
    100e:	9b 08       	sbc	r9, r11
    1010:	ec 09       	sbc	r30, r12
    1012:	fd 09       	sbc	r31, r13
    1014:	ce 09       	sbc	r28, r14
    1016:	df 09       	sbc	r29, r15
    1018:	a0 0b       	sbc	r26, r16
    101a:	b1 0b       	sbc	r27, r17
    101c:	21 60       	ori	r18, 0x01	; 1
    101e:	1a 94       	dec	r1
    1020:	e1 f6       	brne	.-72     	; 0xfda <__udivmod64+0x4c>
    1022:	2e f4       	brtc	.+10     	; 0x102e <__udivmod64+0xa0>
    1024:	94 01       	movw	r18, r8
    1026:	af 01       	movw	r20, r30
    1028:	be 01       	movw	r22, r28
    102a:	cd 01       	movw	r24, r26
    102c:	00 0c       	add	r0, r0
    102e:	08 95       	ret

00001030 <__adddi3_s8>:
    1030:	00 24       	eor	r0, r0
    1032:	a7 fd       	sbrc	r26, 7
    1034:	00 94       	com	r0
    1036:	2a 0f       	add	r18, r26
    1038:	30 1d       	adc	r19, r0
    103a:	40 1d       	adc	r20, r0
    103c:	50 1d       	adc	r21, r0
    103e:	60 1d       	adc	r22, r0
    1040:	70 1d       	adc	r23, r0
    1042:	80 1d       	adc	r24, r0
    1044:	90 1d       	adc	r25, r0
    1046:	08 95       	ret

00001048 <strcmp>:
    1048:	fb 01       	movw	r30, r22
    104a:	dc 01       	movw	r26, r24
    104c:	8d 91       	ld	r24, X+
    104e:	01 90       	ld	r0, Z+
    1050:	80 19       	sub	r24, r0
    1052:	01 10       	cpse	r0, r1
    1054:	d9 f3       	breq	.-10     	; 0x104c <strcmp+0x4>
    1056:	99 0b       	sbc	r25, r25
    1058:	08 95       	ret

0000105a <vsnprintf>:
    105a:	0f 93       	push	r16
    105c:	1f 93       	push	r17
    105e:	cf 93       	push	r28
    1060:	df 93       	push	r29
    1062:	cd b7       	in	r28, 0x3d	; 61
    1064:	de b7       	in	r29, 0x3e	; 62
    1066:	2e 97       	sbiw	r28, 0x0e	; 14
    1068:	0f b6       	in	r0, 0x3f	; 63
    106a:	f8 94       	cli
    106c:	de bf       	out	0x3e, r29	; 62
    106e:	0f be       	out	0x3f, r0	; 63
    1070:	cd bf       	out	0x3d, r28	; 61
    1072:	8c 01       	movw	r16, r24
    1074:	fa 01       	movw	r30, r20
    1076:	86 e0       	ldi	r24, 0x06	; 6
    1078:	8c 83       	std	Y+4, r24	; 0x04
    107a:	1a 83       	std	Y+2, r17	; 0x02
    107c:	09 83       	std	Y+1, r16	; 0x01
    107e:	77 ff       	sbrs	r23, 7
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <vsnprintf+0x2c>
    1082:	60 e0       	ldi	r22, 0x00	; 0
    1084:	70 e8       	ldi	r23, 0x80	; 128
    1086:	cb 01       	movw	r24, r22
    1088:	01 97       	sbiw	r24, 0x01	; 1
    108a:	9e 83       	std	Y+6, r25	; 0x06
    108c:	8d 83       	std	Y+5, r24	; 0x05
    108e:	a9 01       	movw	r20, r18
    1090:	bf 01       	movw	r22, r30
    1092:	ce 01       	movw	r24, r28
    1094:	01 96       	adiw	r24, 0x01	; 1
    1096:	19 d0       	rcall	.+50     	; 0x10ca <vfprintf>
    1098:	4d 81       	ldd	r20, Y+5	; 0x05
    109a:	5e 81       	ldd	r21, Y+6	; 0x06
    109c:	57 fd       	sbrc	r21, 7
    109e:	0a c0       	rjmp	.+20     	; 0x10b4 <vsnprintf+0x5a>
    10a0:	2f 81       	ldd	r18, Y+7	; 0x07
    10a2:	38 85       	ldd	r19, Y+8	; 0x08
    10a4:	42 17       	cp	r20, r18
    10a6:	53 07       	cpc	r21, r19
    10a8:	0c f4       	brge	.+2      	; 0x10ac <vsnprintf+0x52>
    10aa:	9a 01       	movw	r18, r20
    10ac:	f8 01       	movw	r30, r16
    10ae:	e2 0f       	add	r30, r18
    10b0:	f3 1f       	adc	r31, r19
    10b2:	10 82       	st	Z, r1
    10b4:	2e 96       	adiw	r28, 0x0e	; 14
    10b6:	0f b6       	in	r0, 0x3f	; 63
    10b8:	f8 94       	cli
    10ba:	de bf       	out	0x3e, r29	; 62
    10bc:	0f be       	out	0x3f, r0	; 63
    10be:	cd bf       	out	0x3d, r28	; 61
    10c0:	df 91       	pop	r29
    10c2:	cf 91       	pop	r28
    10c4:	1f 91       	pop	r17
    10c6:	0f 91       	pop	r16
    10c8:	08 95       	ret

000010ca <vfprintf>:
    10ca:	2f 92       	push	r2
    10cc:	3f 92       	push	r3
    10ce:	4f 92       	push	r4
    10d0:	5f 92       	push	r5
    10d2:	6f 92       	push	r6
    10d4:	7f 92       	push	r7
    10d6:	8f 92       	push	r8
    10d8:	9f 92       	push	r9
    10da:	af 92       	push	r10
    10dc:	bf 92       	push	r11
    10de:	cf 92       	push	r12
    10e0:	df 92       	push	r13
    10e2:	ef 92       	push	r14
    10e4:	ff 92       	push	r15
    10e6:	0f 93       	push	r16
    10e8:	1f 93       	push	r17
    10ea:	cf 93       	push	r28
    10ec:	df 93       	push	r29
    10ee:	cd b7       	in	r28, 0x3d	; 61
    10f0:	de b7       	in	r29, 0x3e	; 62
    10f2:	2b 97       	sbiw	r28, 0x0b	; 11
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	f8 94       	cli
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	0f be       	out	0x3f, r0	; 63
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	6c 01       	movw	r12, r24
    1100:	7b 01       	movw	r14, r22
    1102:	8a 01       	movw	r16, r20
    1104:	fc 01       	movw	r30, r24
    1106:	17 82       	std	Z+7, r1	; 0x07
    1108:	16 82       	std	Z+6, r1	; 0x06
    110a:	83 81       	ldd	r24, Z+3	; 0x03
    110c:	81 ff       	sbrs	r24, 1
    110e:	bf c1       	rjmp	.+894    	; 0x148e <vfprintf+0x3c4>
    1110:	ce 01       	movw	r24, r28
    1112:	01 96       	adiw	r24, 0x01	; 1
    1114:	3c 01       	movw	r6, r24
    1116:	f6 01       	movw	r30, r12
    1118:	93 81       	ldd	r25, Z+3	; 0x03
    111a:	f7 01       	movw	r30, r14
    111c:	93 fd       	sbrc	r25, 3
    111e:	85 91       	lpm	r24, Z+
    1120:	93 ff       	sbrs	r25, 3
    1122:	81 91       	ld	r24, Z+
    1124:	7f 01       	movw	r14, r30
    1126:	88 23       	and	r24, r24
    1128:	09 f4       	brne	.+2      	; 0x112c <vfprintf+0x62>
    112a:	ad c1       	rjmp	.+858    	; 0x1486 <vfprintf+0x3bc>
    112c:	85 32       	cpi	r24, 0x25	; 37
    112e:	39 f4       	brne	.+14     	; 0x113e <vfprintf+0x74>
    1130:	93 fd       	sbrc	r25, 3
    1132:	85 91       	lpm	r24, Z+
    1134:	93 ff       	sbrs	r25, 3
    1136:	81 91       	ld	r24, Z+
    1138:	7f 01       	movw	r14, r30
    113a:	85 32       	cpi	r24, 0x25	; 37
    113c:	21 f4       	brne	.+8      	; 0x1146 <vfprintf+0x7c>
    113e:	b6 01       	movw	r22, r12
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	d6 d1       	rcall	.+940    	; 0x14f0 <fputc>
    1144:	e8 cf       	rjmp	.-48     	; 0x1116 <vfprintf+0x4c>
    1146:	91 2c       	mov	r9, r1
    1148:	21 2c       	mov	r2, r1
    114a:	31 2c       	mov	r3, r1
    114c:	ff e1       	ldi	r31, 0x1F	; 31
    114e:	f3 15       	cp	r31, r3
    1150:	d8 f0       	brcs	.+54     	; 0x1188 <vfprintf+0xbe>
    1152:	8b 32       	cpi	r24, 0x2B	; 43
    1154:	79 f0       	breq	.+30     	; 0x1174 <vfprintf+0xaa>
    1156:	38 f4       	brcc	.+14     	; 0x1166 <vfprintf+0x9c>
    1158:	80 32       	cpi	r24, 0x20	; 32
    115a:	79 f0       	breq	.+30     	; 0x117a <vfprintf+0xb0>
    115c:	83 32       	cpi	r24, 0x23	; 35
    115e:	a1 f4       	brne	.+40     	; 0x1188 <vfprintf+0xbe>
    1160:	23 2d       	mov	r18, r3
    1162:	20 61       	ori	r18, 0x10	; 16
    1164:	1d c0       	rjmp	.+58     	; 0x11a0 <vfprintf+0xd6>
    1166:	8d 32       	cpi	r24, 0x2D	; 45
    1168:	61 f0       	breq	.+24     	; 0x1182 <vfprintf+0xb8>
    116a:	80 33       	cpi	r24, 0x30	; 48
    116c:	69 f4       	brne	.+26     	; 0x1188 <vfprintf+0xbe>
    116e:	23 2d       	mov	r18, r3
    1170:	21 60       	ori	r18, 0x01	; 1
    1172:	16 c0       	rjmp	.+44     	; 0x11a0 <vfprintf+0xd6>
    1174:	83 2d       	mov	r24, r3
    1176:	82 60       	ori	r24, 0x02	; 2
    1178:	38 2e       	mov	r3, r24
    117a:	e3 2d       	mov	r30, r3
    117c:	e4 60       	ori	r30, 0x04	; 4
    117e:	3e 2e       	mov	r3, r30
    1180:	2a c0       	rjmp	.+84     	; 0x11d6 <vfprintf+0x10c>
    1182:	f3 2d       	mov	r31, r3
    1184:	f8 60       	ori	r31, 0x08	; 8
    1186:	1d c0       	rjmp	.+58     	; 0x11c2 <vfprintf+0xf8>
    1188:	37 fc       	sbrc	r3, 7
    118a:	2d c0       	rjmp	.+90     	; 0x11e6 <vfprintf+0x11c>
    118c:	20 ed       	ldi	r18, 0xD0	; 208
    118e:	28 0f       	add	r18, r24
    1190:	2a 30       	cpi	r18, 0x0A	; 10
    1192:	40 f0       	brcs	.+16     	; 0x11a4 <vfprintf+0xda>
    1194:	8e 32       	cpi	r24, 0x2E	; 46
    1196:	b9 f4       	brne	.+46     	; 0x11c6 <vfprintf+0xfc>
    1198:	36 fc       	sbrc	r3, 6
    119a:	75 c1       	rjmp	.+746    	; 0x1486 <vfprintf+0x3bc>
    119c:	23 2d       	mov	r18, r3
    119e:	20 64       	ori	r18, 0x40	; 64
    11a0:	32 2e       	mov	r3, r18
    11a2:	19 c0       	rjmp	.+50     	; 0x11d6 <vfprintf+0x10c>
    11a4:	36 fe       	sbrs	r3, 6
    11a6:	06 c0       	rjmp	.+12     	; 0x11b4 <vfprintf+0xea>
    11a8:	8a e0       	ldi	r24, 0x0A	; 10
    11aa:	98 9e       	mul	r9, r24
    11ac:	20 0d       	add	r18, r0
    11ae:	11 24       	eor	r1, r1
    11b0:	92 2e       	mov	r9, r18
    11b2:	11 c0       	rjmp	.+34     	; 0x11d6 <vfprintf+0x10c>
    11b4:	ea e0       	ldi	r30, 0x0A	; 10
    11b6:	2e 9e       	mul	r2, r30
    11b8:	20 0d       	add	r18, r0
    11ba:	11 24       	eor	r1, r1
    11bc:	22 2e       	mov	r2, r18
    11be:	f3 2d       	mov	r31, r3
    11c0:	f0 62       	ori	r31, 0x20	; 32
    11c2:	3f 2e       	mov	r3, r31
    11c4:	08 c0       	rjmp	.+16     	; 0x11d6 <vfprintf+0x10c>
    11c6:	8c 36       	cpi	r24, 0x6C	; 108
    11c8:	21 f4       	brne	.+8      	; 0x11d2 <vfprintf+0x108>
    11ca:	83 2d       	mov	r24, r3
    11cc:	80 68       	ori	r24, 0x80	; 128
    11ce:	38 2e       	mov	r3, r24
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <vfprintf+0x10c>
    11d2:	88 36       	cpi	r24, 0x68	; 104
    11d4:	41 f4       	brne	.+16     	; 0x11e6 <vfprintf+0x11c>
    11d6:	f7 01       	movw	r30, r14
    11d8:	93 fd       	sbrc	r25, 3
    11da:	85 91       	lpm	r24, Z+
    11dc:	93 ff       	sbrs	r25, 3
    11de:	81 91       	ld	r24, Z+
    11e0:	7f 01       	movw	r14, r30
    11e2:	81 11       	cpse	r24, r1
    11e4:	b3 cf       	rjmp	.-154    	; 0x114c <vfprintf+0x82>
    11e6:	98 2f       	mov	r25, r24
    11e8:	9f 7d       	andi	r25, 0xDF	; 223
    11ea:	95 54       	subi	r25, 0x45	; 69
    11ec:	93 30       	cpi	r25, 0x03	; 3
    11ee:	28 f4       	brcc	.+10     	; 0x11fa <vfprintf+0x130>
    11f0:	0c 5f       	subi	r16, 0xFC	; 252
    11f2:	1f 4f       	sbci	r17, 0xFF	; 255
    11f4:	9f e3       	ldi	r25, 0x3F	; 63
    11f6:	99 83       	std	Y+1, r25	; 0x01
    11f8:	0d c0       	rjmp	.+26     	; 0x1214 <vfprintf+0x14a>
    11fa:	83 36       	cpi	r24, 0x63	; 99
    11fc:	31 f0       	breq	.+12     	; 0x120a <vfprintf+0x140>
    11fe:	83 37       	cpi	r24, 0x73	; 115
    1200:	71 f0       	breq	.+28     	; 0x121e <vfprintf+0x154>
    1202:	83 35       	cpi	r24, 0x53	; 83
    1204:	09 f0       	breq	.+2      	; 0x1208 <vfprintf+0x13e>
    1206:	55 c0       	rjmp	.+170    	; 0x12b2 <vfprintf+0x1e8>
    1208:	20 c0       	rjmp	.+64     	; 0x124a <vfprintf+0x180>
    120a:	f8 01       	movw	r30, r16
    120c:	80 81       	ld	r24, Z
    120e:	89 83       	std	Y+1, r24	; 0x01
    1210:	0e 5f       	subi	r16, 0xFE	; 254
    1212:	1f 4f       	sbci	r17, 0xFF	; 255
    1214:	88 24       	eor	r8, r8
    1216:	83 94       	inc	r8
    1218:	91 2c       	mov	r9, r1
    121a:	53 01       	movw	r10, r6
    121c:	12 c0       	rjmp	.+36     	; 0x1242 <vfprintf+0x178>
    121e:	28 01       	movw	r4, r16
    1220:	f2 e0       	ldi	r31, 0x02	; 2
    1222:	4f 0e       	add	r4, r31
    1224:	51 1c       	adc	r5, r1
    1226:	f8 01       	movw	r30, r16
    1228:	a0 80       	ld	r10, Z
    122a:	b1 80       	ldd	r11, Z+1	; 0x01
    122c:	36 fe       	sbrs	r3, 6
    122e:	03 c0       	rjmp	.+6      	; 0x1236 <vfprintf+0x16c>
    1230:	69 2d       	mov	r22, r9
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	02 c0       	rjmp	.+4      	; 0x123a <vfprintf+0x170>
    1236:	6f ef       	ldi	r22, 0xFF	; 255
    1238:	7f ef       	ldi	r23, 0xFF	; 255
    123a:	c5 01       	movw	r24, r10
    123c:	4e d1       	rcall	.+668    	; 0x14da <strnlen>
    123e:	4c 01       	movw	r8, r24
    1240:	82 01       	movw	r16, r4
    1242:	f3 2d       	mov	r31, r3
    1244:	ff 77       	andi	r31, 0x7F	; 127
    1246:	3f 2e       	mov	r3, r31
    1248:	15 c0       	rjmp	.+42     	; 0x1274 <vfprintf+0x1aa>
    124a:	28 01       	movw	r4, r16
    124c:	22 e0       	ldi	r18, 0x02	; 2
    124e:	42 0e       	add	r4, r18
    1250:	51 1c       	adc	r5, r1
    1252:	f8 01       	movw	r30, r16
    1254:	a0 80       	ld	r10, Z
    1256:	b1 80       	ldd	r11, Z+1	; 0x01
    1258:	36 fe       	sbrs	r3, 6
    125a:	03 c0       	rjmp	.+6      	; 0x1262 <vfprintf+0x198>
    125c:	69 2d       	mov	r22, r9
    125e:	70 e0       	ldi	r23, 0x00	; 0
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <vfprintf+0x19c>
    1262:	6f ef       	ldi	r22, 0xFF	; 255
    1264:	7f ef       	ldi	r23, 0xFF	; 255
    1266:	c5 01       	movw	r24, r10
    1268:	2d d1       	rcall	.+602    	; 0x14c4 <strnlen_P>
    126a:	4c 01       	movw	r8, r24
    126c:	f3 2d       	mov	r31, r3
    126e:	f0 68       	ori	r31, 0x80	; 128
    1270:	3f 2e       	mov	r3, r31
    1272:	82 01       	movw	r16, r4
    1274:	33 fc       	sbrc	r3, 3
    1276:	19 c0       	rjmp	.+50     	; 0x12aa <vfprintf+0x1e0>
    1278:	82 2d       	mov	r24, r2
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	88 16       	cp	r8, r24
    127e:	99 06       	cpc	r9, r25
    1280:	a0 f4       	brcc	.+40     	; 0x12aa <vfprintf+0x1e0>
    1282:	b6 01       	movw	r22, r12
    1284:	80 e2       	ldi	r24, 0x20	; 32
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	33 d1       	rcall	.+614    	; 0x14f0 <fputc>
    128a:	2a 94       	dec	r2
    128c:	f5 cf       	rjmp	.-22     	; 0x1278 <vfprintf+0x1ae>
    128e:	f5 01       	movw	r30, r10
    1290:	37 fc       	sbrc	r3, 7
    1292:	85 91       	lpm	r24, Z+
    1294:	37 fe       	sbrs	r3, 7
    1296:	81 91       	ld	r24, Z+
    1298:	5f 01       	movw	r10, r30
    129a:	b6 01       	movw	r22, r12
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	28 d1       	rcall	.+592    	; 0x14f0 <fputc>
    12a0:	21 10       	cpse	r2, r1
    12a2:	2a 94       	dec	r2
    12a4:	21 e0       	ldi	r18, 0x01	; 1
    12a6:	82 1a       	sub	r8, r18
    12a8:	91 08       	sbc	r9, r1
    12aa:	81 14       	cp	r8, r1
    12ac:	91 04       	cpc	r9, r1
    12ae:	79 f7       	brne	.-34     	; 0x128e <vfprintf+0x1c4>
    12b0:	e1 c0       	rjmp	.+450    	; 0x1474 <vfprintf+0x3aa>
    12b2:	84 36       	cpi	r24, 0x64	; 100
    12b4:	11 f0       	breq	.+4      	; 0x12ba <vfprintf+0x1f0>
    12b6:	89 36       	cpi	r24, 0x69	; 105
    12b8:	39 f5       	brne	.+78     	; 0x1308 <vfprintf+0x23e>
    12ba:	f8 01       	movw	r30, r16
    12bc:	37 fe       	sbrs	r3, 7
    12be:	07 c0       	rjmp	.+14     	; 0x12ce <vfprintf+0x204>
    12c0:	60 81       	ld	r22, Z
    12c2:	71 81       	ldd	r23, Z+1	; 0x01
    12c4:	82 81       	ldd	r24, Z+2	; 0x02
    12c6:	93 81       	ldd	r25, Z+3	; 0x03
    12c8:	0c 5f       	subi	r16, 0xFC	; 252
    12ca:	1f 4f       	sbci	r17, 0xFF	; 255
    12cc:	08 c0       	rjmp	.+16     	; 0x12de <vfprintf+0x214>
    12ce:	60 81       	ld	r22, Z
    12d0:	71 81       	ldd	r23, Z+1	; 0x01
    12d2:	07 2e       	mov	r0, r23
    12d4:	00 0c       	add	r0, r0
    12d6:	88 0b       	sbc	r24, r24
    12d8:	99 0b       	sbc	r25, r25
    12da:	0e 5f       	subi	r16, 0xFE	; 254
    12dc:	1f 4f       	sbci	r17, 0xFF	; 255
    12de:	f3 2d       	mov	r31, r3
    12e0:	ff 76       	andi	r31, 0x6F	; 111
    12e2:	3f 2e       	mov	r3, r31
    12e4:	97 ff       	sbrs	r25, 7
    12e6:	09 c0       	rjmp	.+18     	; 0x12fa <vfprintf+0x230>
    12e8:	90 95       	com	r25
    12ea:	80 95       	com	r24
    12ec:	70 95       	com	r23
    12ee:	61 95       	neg	r22
    12f0:	7f 4f       	sbci	r23, 0xFF	; 255
    12f2:	8f 4f       	sbci	r24, 0xFF	; 255
    12f4:	9f 4f       	sbci	r25, 0xFF	; 255
    12f6:	f0 68       	ori	r31, 0x80	; 128
    12f8:	3f 2e       	mov	r3, r31
    12fa:	2a e0       	ldi	r18, 0x0A	; 10
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	a3 01       	movw	r20, r6
    1300:	33 d1       	rcall	.+614    	; 0x1568 <__ultoa_invert>
    1302:	88 2e       	mov	r8, r24
    1304:	86 18       	sub	r8, r6
    1306:	44 c0       	rjmp	.+136    	; 0x1390 <vfprintf+0x2c6>
    1308:	85 37       	cpi	r24, 0x75	; 117
    130a:	31 f4       	brne	.+12     	; 0x1318 <vfprintf+0x24e>
    130c:	23 2d       	mov	r18, r3
    130e:	2f 7e       	andi	r18, 0xEF	; 239
    1310:	b2 2e       	mov	r11, r18
    1312:	2a e0       	ldi	r18, 0x0A	; 10
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	25 c0       	rjmp	.+74     	; 0x1362 <vfprintf+0x298>
    1318:	93 2d       	mov	r25, r3
    131a:	99 7f       	andi	r25, 0xF9	; 249
    131c:	b9 2e       	mov	r11, r25
    131e:	8f 36       	cpi	r24, 0x6F	; 111
    1320:	c1 f0       	breq	.+48     	; 0x1352 <vfprintf+0x288>
    1322:	18 f4       	brcc	.+6      	; 0x132a <vfprintf+0x260>
    1324:	88 35       	cpi	r24, 0x58	; 88
    1326:	79 f0       	breq	.+30     	; 0x1346 <vfprintf+0x27c>
    1328:	ae c0       	rjmp	.+348    	; 0x1486 <vfprintf+0x3bc>
    132a:	80 37       	cpi	r24, 0x70	; 112
    132c:	19 f0       	breq	.+6      	; 0x1334 <vfprintf+0x26a>
    132e:	88 37       	cpi	r24, 0x78	; 120
    1330:	21 f0       	breq	.+8      	; 0x133a <vfprintf+0x270>
    1332:	a9 c0       	rjmp	.+338    	; 0x1486 <vfprintf+0x3bc>
    1334:	e9 2f       	mov	r30, r25
    1336:	e0 61       	ori	r30, 0x10	; 16
    1338:	be 2e       	mov	r11, r30
    133a:	b4 fe       	sbrs	r11, 4
    133c:	0d c0       	rjmp	.+26     	; 0x1358 <vfprintf+0x28e>
    133e:	fb 2d       	mov	r31, r11
    1340:	f4 60       	ori	r31, 0x04	; 4
    1342:	bf 2e       	mov	r11, r31
    1344:	09 c0       	rjmp	.+18     	; 0x1358 <vfprintf+0x28e>
    1346:	34 fe       	sbrs	r3, 4
    1348:	0a c0       	rjmp	.+20     	; 0x135e <vfprintf+0x294>
    134a:	29 2f       	mov	r18, r25
    134c:	26 60       	ori	r18, 0x06	; 6
    134e:	b2 2e       	mov	r11, r18
    1350:	06 c0       	rjmp	.+12     	; 0x135e <vfprintf+0x294>
    1352:	28 e0       	ldi	r18, 0x08	; 8
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	05 c0       	rjmp	.+10     	; 0x1362 <vfprintf+0x298>
    1358:	20 e1       	ldi	r18, 0x10	; 16
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	02 c0       	rjmp	.+4      	; 0x1362 <vfprintf+0x298>
    135e:	20 e1       	ldi	r18, 0x10	; 16
    1360:	32 e0       	ldi	r19, 0x02	; 2
    1362:	f8 01       	movw	r30, r16
    1364:	b7 fe       	sbrs	r11, 7
    1366:	07 c0       	rjmp	.+14     	; 0x1376 <vfprintf+0x2ac>
    1368:	60 81       	ld	r22, Z
    136a:	71 81       	ldd	r23, Z+1	; 0x01
    136c:	82 81       	ldd	r24, Z+2	; 0x02
    136e:	93 81       	ldd	r25, Z+3	; 0x03
    1370:	0c 5f       	subi	r16, 0xFC	; 252
    1372:	1f 4f       	sbci	r17, 0xFF	; 255
    1374:	06 c0       	rjmp	.+12     	; 0x1382 <vfprintf+0x2b8>
    1376:	60 81       	ld	r22, Z
    1378:	71 81       	ldd	r23, Z+1	; 0x01
    137a:	80 e0       	ldi	r24, 0x00	; 0
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	0e 5f       	subi	r16, 0xFE	; 254
    1380:	1f 4f       	sbci	r17, 0xFF	; 255
    1382:	a3 01       	movw	r20, r6
    1384:	f1 d0       	rcall	.+482    	; 0x1568 <__ultoa_invert>
    1386:	88 2e       	mov	r8, r24
    1388:	86 18       	sub	r8, r6
    138a:	fb 2d       	mov	r31, r11
    138c:	ff 77       	andi	r31, 0x7F	; 127
    138e:	3f 2e       	mov	r3, r31
    1390:	36 fe       	sbrs	r3, 6
    1392:	0d c0       	rjmp	.+26     	; 0x13ae <vfprintf+0x2e4>
    1394:	23 2d       	mov	r18, r3
    1396:	2e 7f       	andi	r18, 0xFE	; 254
    1398:	a2 2e       	mov	r10, r18
    139a:	89 14       	cp	r8, r9
    139c:	58 f4       	brcc	.+22     	; 0x13b4 <vfprintf+0x2ea>
    139e:	34 fe       	sbrs	r3, 4
    13a0:	0b c0       	rjmp	.+22     	; 0x13b8 <vfprintf+0x2ee>
    13a2:	32 fc       	sbrc	r3, 2
    13a4:	09 c0       	rjmp	.+18     	; 0x13b8 <vfprintf+0x2ee>
    13a6:	83 2d       	mov	r24, r3
    13a8:	8e 7e       	andi	r24, 0xEE	; 238
    13aa:	a8 2e       	mov	r10, r24
    13ac:	05 c0       	rjmp	.+10     	; 0x13b8 <vfprintf+0x2ee>
    13ae:	b8 2c       	mov	r11, r8
    13b0:	a3 2c       	mov	r10, r3
    13b2:	03 c0       	rjmp	.+6      	; 0x13ba <vfprintf+0x2f0>
    13b4:	b8 2c       	mov	r11, r8
    13b6:	01 c0       	rjmp	.+2      	; 0x13ba <vfprintf+0x2f0>
    13b8:	b9 2c       	mov	r11, r9
    13ba:	a4 fe       	sbrs	r10, 4
    13bc:	0f c0       	rjmp	.+30     	; 0x13dc <vfprintf+0x312>
    13be:	fe 01       	movw	r30, r28
    13c0:	e8 0d       	add	r30, r8
    13c2:	f1 1d       	adc	r31, r1
    13c4:	80 81       	ld	r24, Z
    13c6:	80 33       	cpi	r24, 0x30	; 48
    13c8:	21 f4       	brne	.+8      	; 0x13d2 <vfprintf+0x308>
    13ca:	9a 2d       	mov	r25, r10
    13cc:	99 7e       	andi	r25, 0xE9	; 233
    13ce:	a9 2e       	mov	r10, r25
    13d0:	09 c0       	rjmp	.+18     	; 0x13e4 <vfprintf+0x31a>
    13d2:	a2 fe       	sbrs	r10, 2
    13d4:	06 c0       	rjmp	.+12     	; 0x13e2 <vfprintf+0x318>
    13d6:	b3 94       	inc	r11
    13d8:	b3 94       	inc	r11
    13da:	04 c0       	rjmp	.+8      	; 0x13e4 <vfprintf+0x31a>
    13dc:	8a 2d       	mov	r24, r10
    13de:	86 78       	andi	r24, 0x86	; 134
    13e0:	09 f0       	breq	.+2      	; 0x13e4 <vfprintf+0x31a>
    13e2:	b3 94       	inc	r11
    13e4:	a3 fc       	sbrc	r10, 3
    13e6:	10 c0       	rjmp	.+32     	; 0x1408 <vfprintf+0x33e>
    13e8:	a0 fe       	sbrs	r10, 0
    13ea:	06 c0       	rjmp	.+12     	; 0x13f8 <vfprintf+0x32e>
    13ec:	b2 14       	cp	r11, r2
    13ee:	80 f4       	brcc	.+32     	; 0x1410 <vfprintf+0x346>
    13f0:	28 0c       	add	r2, r8
    13f2:	92 2c       	mov	r9, r2
    13f4:	9b 18       	sub	r9, r11
    13f6:	0d c0       	rjmp	.+26     	; 0x1412 <vfprintf+0x348>
    13f8:	b2 14       	cp	r11, r2
    13fa:	58 f4       	brcc	.+22     	; 0x1412 <vfprintf+0x348>
    13fc:	b6 01       	movw	r22, r12
    13fe:	80 e2       	ldi	r24, 0x20	; 32
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	76 d0       	rcall	.+236    	; 0x14f0 <fputc>
    1404:	b3 94       	inc	r11
    1406:	f8 cf       	rjmp	.-16     	; 0x13f8 <vfprintf+0x32e>
    1408:	b2 14       	cp	r11, r2
    140a:	18 f4       	brcc	.+6      	; 0x1412 <vfprintf+0x348>
    140c:	2b 18       	sub	r2, r11
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <vfprintf+0x34a>
    1410:	98 2c       	mov	r9, r8
    1412:	21 2c       	mov	r2, r1
    1414:	a4 fe       	sbrs	r10, 4
    1416:	0f c0       	rjmp	.+30     	; 0x1436 <vfprintf+0x36c>
    1418:	b6 01       	movw	r22, r12
    141a:	80 e3       	ldi	r24, 0x30	; 48
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	68 d0       	rcall	.+208    	; 0x14f0 <fputc>
    1420:	a2 fe       	sbrs	r10, 2
    1422:	16 c0       	rjmp	.+44     	; 0x1450 <vfprintf+0x386>
    1424:	a1 fc       	sbrc	r10, 1
    1426:	03 c0       	rjmp	.+6      	; 0x142e <vfprintf+0x364>
    1428:	88 e7       	ldi	r24, 0x78	; 120
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	02 c0       	rjmp	.+4      	; 0x1432 <vfprintf+0x368>
    142e:	88 e5       	ldi	r24, 0x58	; 88
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	b6 01       	movw	r22, r12
    1434:	0c c0       	rjmp	.+24     	; 0x144e <vfprintf+0x384>
    1436:	8a 2d       	mov	r24, r10
    1438:	86 78       	andi	r24, 0x86	; 134
    143a:	51 f0       	breq	.+20     	; 0x1450 <vfprintf+0x386>
    143c:	a1 fe       	sbrs	r10, 1
    143e:	02 c0       	rjmp	.+4      	; 0x1444 <vfprintf+0x37a>
    1440:	8b e2       	ldi	r24, 0x2B	; 43
    1442:	01 c0       	rjmp	.+2      	; 0x1446 <vfprintf+0x37c>
    1444:	80 e2       	ldi	r24, 0x20	; 32
    1446:	a7 fc       	sbrc	r10, 7
    1448:	8d e2       	ldi	r24, 0x2D	; 45
    144a:	b6 01       	movw	r22, r12
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	50 d0       	rcall	.+160    	; 0x14f0 <fputc>
    1450:	89 14       	cp	r8, r9
    1452:	30 f4       	brcc	.+12     	; 0x1460 <vfprintf+0x396>
    1454:	b6 01       	movw	r22, r12
    1456:	80 e3       	ldi	r24, 0x30	; 48
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	4a d0       	rcall	.+148    	; 0x14f0 <fputc>
    145c:	9a 94       	dec	r9
    145e:	f8 cf       	rjmp	.-16     	; 0x1450 <vfprintf+0x386>
    1460:	8a 94       	dec	r8
    1462:	f3 01       	movw	r30, r6
    1464:	e8 0d       	add	r30, r8
    1466:	f1 1d       	adc	r31, r1
    1468:	80 81       	ld	r24, Z
    146a:	b6 01       	movw	r22, r12
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	40 d0       	rcall	.+128    	; 0x14f0 <fputc>
    1470:	81 10       	cpse	r8, r1
    1472:	f6 cf       	rjmp	.-20     	; 0x1460 <vfprintf+0x396>
    1474:	22 20       	and	r2, r2
    1476:	09 f4       	brne	.+2      	; 0x147a <vfprintf+0x3b0>
    1478:	4e ce       	rjmp	.-868    	; 0x1116 <vfprintf+0x4c>
    147a:	b6 01       	movw	r22, r12
    147c:	80 e2       	ldi	r24, 0x20	; 32
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	37 d0       	rcall	.+110    	; 0x14f0 <fputc>
    1482:	2a 94       	dec	r2
    1484:	f7 cf       	rjmp	.-18     	; 0x1474 <vfprintf+0x3aa>
    1486:	f6 01       	movw	r30, r12
    1488:	86 81       	ldd	r24, Z+6	; 0x06
    148a:	97 81       	ldd	r25, Z+7	; 0x07
    148c:	02 c0       	rjmp	.+4      	; 0x1492 <vfprintf+0x3c8>
    148e:	8f ef       	ldi	r24, 0xFF	; 255
    1490:	9f ef       	ldi	r25, 0xFF	; 255
    1492:	2b 96       	adiw	r28, 0x0b	; 11
    1494:	0f b6       	in	r0, 0x3f	; 63
    1496:	f8 94       	cli
    1498:	de bf       	out	0x3e, r29	; 62
    149a:	0f be       	out	0x3f, r0	; 63
    149c:	cd bf       	out	0x3d, r28	; 61
    149e:	df 91       	pop	r29
    14a0:	cf 91       	pop	r28
    14a2:	1f 91       	pop	r17
    14a4:	0f 91       	pop	r16
    14a6:	ff 90       	pop	r15
    14a8:	ef 90       	pop	r14
    14aa:	df 90       	pop	r13
    14ac:	cf 90       	pop	r12
    14ae:	bf 90       	pop	r11
    14b0:	af 90       	pop	r10
    14b2:	9f 90       	pop	r9
    14b4:	8f 90       	pop	r8
    14b6:	7f 90       	pop	r7
    14b8:	6f 90       	pop	r6
    14ba:	5f 90       	pop	r5
    14bc:	4f 90       	pop	r4
    14be:	3f 90       	pop	r3
    14c0:	2f 90       	pop	r2
    14c2:	08 95       	ret

000014c4 <strnlen_P>:
    14c4:	fc 01       	movw	r30, r24
    14c6:	05 90       	lpm	r0, Z+
    14c8:	61 50       	subi	r22, 0x01	; 1
    14ca:	70 40       	sbci	r23, 0x00	; 0
    14cc:	01 10       	cpse	r0, r1
    14ce:	d8 f7       	brcc	.-10     	; 0x14c6 <strnlen_P+0x2>
    14d0:	80 95       	com	r24
    14d2:	90 95       	com	r25
    14d4:	8e 0f       	add	r24, r30
    14d6:	9f 1f       	adc	r25, r31
    14d8:	08 95       	ret

000014da <strnlen>:
    14da:	fc 01       	movw	r30, r24
    14dc:	61 50       	subi	r22, 0x01	; 1
    14de:	70 40       	sbci	r23, 0x00	; 0
    14e0:	01 90       	ld	r0, Z+
    14e2:	01 10       	cpse	r0, r1
    14e4:	d8 f7       	brcc	.-10     	; 0x14dc <strnlen+0x2>
    14e6:	80 95       	com	r24
    14e8:	90 95       	com	r25
    14ea:	8e 0f       	add	r24, r30
    14ec:	9f 1f       	adc	r25, r31
    14ee:	08 95       	ret

000014f0 <fputc>:
    14f0:	0f 93       	push	r16
    14f2:	1f 93       	push	r17
    14f4:	cf 93       	push	r28
    14f6:	df 93       	push	r29
    14f8:	fb 01       	movw	r30, r22
    14fa:	23 81       	ldd	r18, Z+3	; 0x03
    14fc:	21 fd       	sbrc	r18, 1
    14fe:	03 c0       	rjmp	.+6      	; 0x1506 <fputc+0x16>
    1500:	8f ef       	ldi	r24, 0xFF	; 255
    1502:	9f ef       	ldi	r25, 0xFF	; 255
    1504:	2c c0       	rjmp	.+88     	; 0x155e <fputc+0x6e>
    1506:	22 ff       	sbrs	r18, 2
    1508:	16 c0       	rjmp	.+44     	; 0x1536 <fputc+0x46>
    150a:	46 81       	ldd	r20, Z+6	; 0x06
    150c:	57 81       	ldd	r21, Z+7	; 0x07
    150e:	24 81       	ldd	r18, Z+4	; 0x04
    1510:	35 81       	ldd	r19, Z+5	; 0x05
    1512:	42 17       	cp	r20, r18
    1514:	53 07       	cpc	r21, r19
    1516:	44 f4       	brge	.+16     	; 0x1528 <fputc+0x38>
    1518:	a0 81       	ld	r26, Z
    151a:	b1 81       	ldd	r27, Z+1	; 0x01
    151c:	9d 01       	movw	r18, r26
    151e:	2f 5f       	subi	r18, 0xFF	; 255
    1520:	3f 4f       	sbci	r19, 0xFF	; 255
    1522:	31 83       	std	Z+1, r19	; 0x01
    1524:	20 83       	st	Z, r18
    1526:	8c 93       	st	X, r24
    1528:	26 81       	ldd	r18, Z+6	; 0x06
    152a:	37 81       	ldd	r19, Z+7	; 0x07
    152c:	2f 5f       	subi	r18, 0xFF	; 255
    152e:	3f 4f       	sbci	r19, 0xFF	; 255
    1530:	37 83       	std	Z+7, r19	; 0x07
    1532:	26 83       	std	Z+6, r18	; 0x06
    1534:	14 c0       	rjmp	.+40     	; 0x155e <fputc+0x6e>
    1536:	8b 01       	movw	r16, r22
    1538:	ec 01       	movw	r28, r24
    153a:	fb 01       	movw	r30, r22
    153c:	00 84       	ldd	r0, Z+8	; 0x08
    153e:	f1 85       	ldd	r31, Z+9	; 0x09
    1540:	e0 2d       	mov	r30, r0
    1542:	19 95       	eicall
    1544:	89 2b       	or	r24, r25
    1546:	e1 f6       	brne	.-72     	; 0x1500 <fputc+0x10>
    1548:	d8 01       	movw	r26, r16
    154a:	16 96       	adiw	r26, 0x06	; 6
    154c:	8d 91       	ld	r24, X+
    154e:	9c 91       	ld	r25, X
    1550:	17 97       	sbiw	r26, 0x07	; 7
    1552:	01 96       	adiw	r24, 0x01	; 1
    1554:	17 96       	adiw	r26, 0x07	; 7
    1556:	9c 93       	st	X, r25
    1558:	8e 93       	st	-X, r24
    155a:	16 97       	sbiw	r26, 0x06	; 6
    155c:	ce 01       	movw	r24, r28
    155e:	df 91       	pop	r29
    1560:	cf 91       	pop	r28
    1562:	1f 91       	pop	r17
    1564:	0f 91       	pop	r16
    1566:	08 95       	ret

00001568 <__ultoa_invert>:
    1568:	fa 01       	movw	r30, r20
    156a:	aa 27       	eor	r26, r26
    156c:	28 30       	cpi	r18, 0x08	; 8
    156e:	51 f1       	breq	.+84     	; 0x15c4 <__ultoa_invert+0x5c>
    1570:	20 31       	cpi	r18, 0x10	; 16
    1572:	81 f1       	breq	.+96     	; 0x15d4 <__ultoa_invert+0x6c>
    1574:	e8 94       	clt
    1576:	6f 93       	push	r22
    1578:	6e 7f       	andi	r22, 0xFE	; 254
    157a:	6e 5f       	subi	r22, 0xFE	; 254
    157c:	7f 4f       	sbci	r23, 0xFF	; 255
    157e:	8f 4f       	sbci	r24, 0xFF	; 255
    1580:	9f 4f       	sbci	r25, 0xFF	; 255
    1582:	af 4f       	sbci	r26, 0xFF	; 255
    1584:	b1 e0       	ldi	r27, 0x01	; 1
    1586:	3e d0       	rcall	.+124    	; 0x1604 <__ultoa_invert+0x9c>
    1588:	b4 e0       	ldi	r27, 0x04	; 4
    158a:	3c d0       	rcall	.+120    	; 0x1604 <__ultoa_invert+0x9c>
    158c:	67 0f       	add	r22, r23
    158e:	78 1f       	adc	r23, r24
    1590:	89 1f       	adc	r24, r25
    1592:	9a 1f       	adc	r25, r26
    1594:	a1 1d       	adc	r26, r1
    1596:	68 0f       	add	r22, r24
    1598:	79 1f       	adc	r23, r25
    159a:	8a 1f       	adc	r24, r26
    159c:	91 1d       	adc	r25, r1
    159e:	a1 1d       	adc	r26, r1
    15a0:	6a 0f       	add	r22, r26
    15a2:	71 1d       	adc	r23, r1
    15a4:	81 1d       	adc	r24, r1
    15a6:	91 1d       	adc	r25, r1
    15a8:	a1 1d       	adc	r26, r1
    15aa:	20 d0       	rcall	.+64     	; 0x15ec <__ultoa_invert+0x84>
    15ac:	09 f4       	brne	.+2      	; 0x15b0 <__ultoa_invert+0x48>
    15ae:	68 94       	set
    15b0:	3f 91       	pop	r19
    15b2:	2a e0       	ldi	r18, 0x0A	; 10
    15b4:	26 9f       	mul	r18, r22
    15b6:	11 24       	eor	r1, r1
    15b8:	30 19       	sub	r19, r0
    15ba:	30 5d       	subi	r19, 0xD0	; 208
    15bc:	31 93       	st	Z+, r19
    15be:	de f6       	brtc	.-74     	; 0x1576 <__ultoa_invert+0xe>
    15c0:	cf 01       	movw	r24, r30
    15c2:	08 95       	ret
    15c4:	46 2f       	mov	r20, r22
    15c6:	47 70       	andi	r20, 0x07	; 7
    15c8:	40 5d       	subi	r20, 0xD0	; 208
    15ca:	41 93       	st	Z+, r20
    15cc:	b3 e0       	ldi	r27, 0x03	; 3
    15ce:	0f d0       	rcall	.+30     	; 0x15ee <__ultoa_invert+0x86>
    15d0:	c9 f7       	brne	.-14     	; 0x15c4 <__ultoa_invert+0x5c>
    15d2:	f6 cf       	rjmp	.-20     	; 0x15c0 <__ultoa_invert+0x58>
    15d4:	46 2f       	mov	r20, r22
    15d6:	4f 70       	andi	r20, 0x0F	; 15
    15d8:	40 5d       	subi	r20, 0xD0	; 208
    15da:	4a 33       	cpi	r20, 0x3A	; 58
    15dc:	18 f0       	brcs	.+6      	; 0x15e4 <__ultoa_invert+0x7c>
    15de:	49 5d       	subi	r20, 0xD9	; 217
    15e0:	31 fd       	sbrc	r19, 1
    15e2:	40 52       	subi	r20, 0x20	; 32
    15e4:	41 93       	st	Z+, r20
    15e6:	02 d0       	rcall	.+4      	; 0x15ec <__ultoa_invert+0x84>
    15e8:	a9 f7       	brne	.-22     	; 0x15d4 <__ultoa_invert+0x6c>
    15ea:	ea cf       	rjmp	.-44     	; 0x15c0 <__ultoa_invert+0x58>
    15ec:	b4 e0       	ldi	r27, 0x04	; 4
    15ee:	a6 95       	lsr	r26
    15f0:	97 95       	ror	r25
    15f2:	87 95       	ror	r24
    15f4:	77 95       	ror	r23
    15f6:	67 95       	ror	r22
    15f8:	ba 95       	dec	r27
    15fa:	c9 f7       	brne	.-14     	; 0x15ee <__ultoa_invert+0x86>
    15fc:	00 97       	sbiw	r24, 0x00	; 0
    15fe:	61 05       	cpc	r22, r1
    1600:	71 05       	cpc	r23, r1
    1602:	08 95       	ret
    1604:	9b 01       	movw	r18, r22
    1606:	ac 01       	movw	r20, r24
    1608:	0a 2e       	mov	r0, r26
    160a:	06 94       	lsr	r0
    160c:	57 95       	ror	r21
    160e:	47 95       	ror	r20
    1610:	37 95       	ror	r19
    1612:	27 95       	ror	r18
    1614:	ba 95       	dec	r27
    1616:	c9 f7       	brne	.-14     	; 0x160a <__ultoa_invert+0xa2>
    1618:	62 0f       	add	r22, r18
    161a:	73 1f       	adc	r23, r19
    161c:	84 1f       	adc	r24, r20
    161e:	95 1f       	adc	r25, r21
    1620:	a0 1d       	adc	r26, r0
    1622:	08 95       	ret

00001624 <_exit>:
    1624:	f8 94       	cli

00001626 <__stop_program>:
    1626:	ff cf       	rjmp	.-2      	; 0x1626 <__stop_program>
