
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800200  00000d7e  00000e12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800284  00800284  00000e96  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ef4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000245e  00000000  00000000  0000111c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fbc  00000000  00000000  0000357a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013e6  00000000  00000000  00004536  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000678  00000000  00000000  0000591c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cda  00000000  00000000  00005f94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a0f  00000000  00000000  00006c6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  0000867d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	51 c3       	rjmp	.+1698   	; 0x700 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e7       	ldi	r30, 0x7E	; 126
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 38       	cpi	r26, 0x84	; 132
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a4 e8       	ldi	r26, 0x84	; 132
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 30       	cpi	r26, 0x02	; 2
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	2c c6       	rjmp	.+3160   	; 0xd7a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    uint8_t schalter2 = 0;
    uint8_t zahl = 0;
    uint8_t inGray =0;
    uint8_t inDez =0;
    //Initialisieren
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	69 d1       	rcall	.+722    	; 0x3fa <initBoard>
    DDRD = 0xff; //Alle Bits von PortD als Ausgang konfugurieren
 128:	8f ef       	ldi	r24, 0xFF	; 255
    //Unendlichschlaufe
    while(1)
    {

      inGray = switchReadAll() & SCHALTER_EINER;  
 12a:	8a b9       	out	0x0a, r24	; 10
 12c:	0b d0       	rcall	.+22     	; 0x144 <switchReadAll>
      inDez = DEZ[inGray];
 12e:	8f 70       	andi	r24, 0x0F	; 15
 130:	e8 2f       	mov	r30, r24
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	e8 5f       	subi	r30, 0xF8	; 248
 136:	fd 4f       	sbci	r31, 0xFD	; 253
 138:	80 81       	ld	r24, Z
      PORTD = inDez;    
 13a:	8b b9       	out	0x0b, r24	; 11
 13c:	f7 cf       	rjmp	.-18     	; 0x12c <main+0x8>

0000013e <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 13e:	82 b9       	out	0x02, r24	; 2
 140:	95 b9       	out	0x05, r25	; 5
 142:	08 95       	ret

00000144 <switchReadAll>:
 144:	86 b1       	in	r24, 0x06	; 6
 146:	08 95       	ret

00000148 <startSystemTimeMs>:
 148:	83 e0       	ldi	r24, 0x03	; 3
 14a:	84 bd       	out	0x24, r24	; 36
 14c:	8b e0       	ldi	r24, 0x0B	; 11
 14e:	85 bd       	out	0x25, r24	; 37
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 156:	89 ef       	ldi	r24, 0xF9	; 249
 158:	87 bd       	out	0x27, r24	; 39
 15a:	08 95       	ret

0000015c <initAdc>:
 15c:	11 ba       	out	0x11, r1	; 17
 15e:	10 ba       	out	0x10, r1	; 16
 160:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 164:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 168:	80 e4       	ldi	r24, 0x40	; 64
 16a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 16e:	8f e0       	ldi	r24, 0x0F	; 15
 170:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 174:	8f ef       	ldi	r24, 0xFF	; 255
 176:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 17a:	ea e7       	ldi	r30, 0x7A	; 122
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	87 ea       	ldi	r24, 0xA7	; 167
 180:	80 83       	st	Z, r24
 182:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 186:	80 81       	ld	r24, Z
 188:	80 64       	ori	r24, 0x40	; 64
 18a:	80 83       	st	Z, r24
 18c:	80 81       	ld	r24, Z
 18e:	84 ff       	sbrs	r24, 4
 190:	fd cf       	rjmp	.-6      	; 0x18c <initAdc+0x30>
 192:	ea e7       	ldi	r30, 0x7A	; 122
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	80 81       	ld	r24, Z
 198:	8f 7e       	andi	r24, 0xEF	; 239
 19a:	80 83       	st	Z, r24
 19c:	08 95       	ret

0000019e <rgbWrite>:
 19e:	2f ef       	ldi	r18, 0xFF	; 255
 1a0:	33 e0       	ldi	r19, 0x03	; 3
 1a2:	f9 01       	movw	r30, r18
 1a4:	e8 1b       	sub	r30, r24
 1a6:	f9 0b       	sbc	r31, r25
 1a8:	c9 01       	movw	r24, r18
 1aa:	86 1b       	sub	r24, r22
 1ac:	97 0b       	sbc	r25, r23
 1ae:	24 1b       	sub	r18, r20
 1b0:	35 0b       	sbc	r19, r21
 1b2:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 1b6:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 1ba:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 1be:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 1c2:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 1c6:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 1ca:	08 95       	ret

000001cc <initRgb>:
 1cc:	8e ef       	ldi	r24, 0xFE	; 254
 1ce:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 1d2:	8b e1       	ldi	r24, 0x1B	; 27
 1d4:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 1d8:	83 e0       	ldi	r24, 0x03	; 3
 1da:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 1de:	8f ef       	ldi	r24, 0xFF	; 255
 1e0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 1e4:	40 e0       	ldi	r20, 0x00	; 0
 1e6:	50 e0       	ldi	r21, 0x00	; 0
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	d6 cf       	rjmp	.-84     	; 0x19e <rgbWrite>
 1f2:	08 95       	ret

000001f4 <lcdSid>:
 1f4:	88 23       	and	r24, r24
 1f6:	11 f0       	breq	.+4      	; 0x1fc <lcdSid+0x8>
 1f8:	a0 9a       	sbi	0x14, 0	; 20
 1fa:	08 95       	ret
 1fc:	a0 98       	cbi	0x14, 0	; 20
 1fe:	08 95       	ret

00000200 <lcdSclk>:
 200:	88 23       	and	r24, r24
 202:	11 f0       	breq	.+4      	; 0x208 <lcdSclk+0x8>
 204:	a1 9a       	sbi	0x14, 1	; 20
 206:	08 95       	ret
 208:	a1 98       	cbi	0x14, 1	; 20
 20a:	08 95       	ret

0000020c <lcdLight>:
 20c:	81 11       	cpse	r24, r1
 20e:	04 c0       	rjmp	.+8      	; 0x218 <lcdLight+0xc>
 210:	84 b5       	in	r24, 0x24	; 36
 212:	8f 7d       	andi	r24, 0xDF	; 223
 214:	84 bd       	out	0x24, r24	; 36
 216:	08 95       	ret
 218:	94 b5       	in	r25, 0x24	; 36
 21a:	90 62       	ori	r25, 0x20	; 32
 21c:	94 bd       	out	0x24, r25	; 36
 21e:	88 bd       	out	0x28, r24	; 40
 220:	08 95       	ret

00000222 <writeLcdF>:
 222:	ef 92       	push	r14
 224:	ff 92       	push	r15
 226:	0f 93       	push	r16
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	7c 01       	movw	r14, r24
 230:	eb 01       	movw	r28, r22
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	df df       	rcall	.-66     	; 0x1f4 <lcdSid>
 236:	05 e0       	ldi	r16, 0x05	; 5
 238:	10 e0       	ldi	r17, 0x00	; 0
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	e1 df       	rcall	.-62     	; 0x200 <lcdSclk>
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	df df       	rcall	.-66     	; 0x200 <lcdSclk>
 242:	01 50       	subi	r16, 0x01	; 1
 244:	11 09       	sbc	r17, r1
 246:	c9 f7       	brne	.-14     	; 0x23a <writeLcdF+0x18>
 248:	80 e0       	ldi	r24, 0x00	; 0
 24a:	d4 df       	rcall	.-88     	; 0x1f4 <lcdSid>
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	d8 df       	rcall	.-80     	; 0x200 <lcdSclk>
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	d6 df       	rcall	.-84     	; 0x200 <lcdSclk>
 254:	83 e4       	ldi	r24, 0x43	; 67
 256:	e8 16       	cp	r14, r24
 258:	f1 04       	cpc	r15, r1
 25a:	19 f4       	brne	.+6      	; 0x262 <writeLcdF+0x40>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	ca df       	rcall	.-108    	; 0x1f4 <lcdSid>
 260:	02 c0       	rjmp	.+4      	; 0x266 <writeLcdF+0x44>
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	c7 df       	rcall	.-114    	; 0x1f4 <lcdSid>
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	cb df       	rcall	.-106    	; 0x200 <lcdSclk>
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	c9 df       	rcall	.-110    	; 0x200 <lcdSclk>
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	c1 df       	rcall	.-126    	; 0x1f4 <lcdSid>
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	c5 df       	rcall	.-118    	; 0x200 <lcdSclk>
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	c3 df       	rcall	.-122    	; 0x200 <lcdSclk>
 27a:	04 e0       	ldi	r16, 0x04	; 4
 27c:	10 e0       	ldi	r17, 0x00	; 0
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	bf df       	rcall	.-130    	; 0x200 <lcdSclk>
 282:	c0 ff       	sbrs	r28, 0
 284:	03 c0       	rjmp	.+6      	; 0x28c <writeLcdF+0x6a>
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	b5 df       	rcall	.-150    	; 0x1f4 <lcdSid>
 28a:	02 c0       	rjmp	.+4      	; 0x290 <writeLcdF+0x6e>
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	b2 df       	rcall	.-156    	; 0x1f4 <lcdSid>
 290:	d6 95       	lsr	r29
 292:	c7 95       	ror	r28
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	b4 df       	rcall	.-152    	; 0x200 <lcdSclk>
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	b2 df       	rcall	.-156    	; 0x200 <lcdSclk>
 29c:	01 50       	subi	r16, 0x01	; 1
 29e:	11 09       	sbc	r17, r1
 2a0:	71 f7       	brne	.-36     	; 0x27e <writeLcdF+0x5c>
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	a7 df       	rcall	.-178    	; 0x1f4 <lcdSid>
 2a6:	04 e0       	ldi	r16, 0x04	; 4
 2a8:	10 e0       	ldi	r17, 0x00	; 0
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	a9 df       	rcall	.-174    	; 0x200 <lcdSclk>
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	a7 df       	rcall	.-178    	; 0x200 <lcdSclk>
 2b2:	01 50       	subi	r16, 0x01	; 1
 2b4:	11 09       	sbc	r17, r1
 2b6:	c9 f7       	brne	.-14     	; 0x2aa <writeLcdF+0x88>
 2b8:	04 e0       	ldi	r16, 0x04	; 4
 2ba:	10 e0       	ldi	r17, 0x00	; 0
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	a0 df       	rcall	.-192    	; 0x200 <lcdSclk>
 2c0:	c0 ff       	sbrs	r28, 0
 2c2:	03 c0       	rjmp	.+6      	; 0x2ca <writeLcdF+0xa8>
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	96 df       	rcall	.-212    	; 0x1f4 <lcdSid>
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <writeLcdF+0xac>
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	93 df       	rcall	.-218    	; 0x1f4 <lcdSid>
 2ce:	d6 95       	lsr	r29
 2d0:	c7 95       	ror	r28
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	95 df       	rcall	.-214    	; 0x200 <lcdSclk>
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	93 df       	rcall	.-218    	; 0x200 <lcdSclk>
 2da:	01 50       	subi	r16, 0x01	; 1
 2dc:	11 09       	sbc	r17, r1
 2de:	71 f7       	brne	.-36     	; 0x2bc <writeLcdF+0x9a>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	88 df       	rcall	.-240    	; 0x1f4 <lcdSid>
 2e4:	c4 e0       	ldi	r28, 0x04	; 4
 2e6:	d0 e0       	ldi	r29, 0x00	; 0
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	8a df       	rcall	.-236    	; 0x200 <lcdSclk>
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	88 df       	rcall	.-240    	; 0x200 <lcdSclk>
 2f0:	21 97       	sbiw	r28, 0x01	; 1
 2f2:	d1 f7       	brne	.-12     	; 0x2e8 <writeLcdF+0xc6>
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	7e df       	rcall	.-260    	; 0x1f4 <lcdSid>
 2f8:	87 ec       	ldi	r24, 0xC7	; 199
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <writeLcdF+0xda>
 300:	00 c0       	rjmp	.+0      	; 0x302 <writeLcdF+0xe0>
 302:	00 00       	nop
 304:	df 91       	pop	r29
 306:	cf 91       	pop	r28
 308:	1f 91       	pop	r17
 30a:	0f 91       	pop	r16
 30c:	ff 90       	pop	r15
 30e:	ef 90       	pop	r14
 310:	08 95       	ret

00000312 <lcdWriteText>:
 312:	1f 93       	push	r17
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	cd b7       	in	r28, 0x3d	; 61
 31a:	de b7       	in	r29, 0x3e	; 62
 31c:	65 97       	sbiw	r28, 0x15	; 21
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	f8 94       	cli
 322:	de bf       	out	0x3e, r29	; 62
 324:	0f be       	out	0x3f, r0	; 63
 326:	cd bf       	out	0x3d, r28	; 61
 328:	9e 01       	movw	r18, r28
 32a:	20 5e       	subi	r18, 0xE0	; 224
 32c:	3f 4f       	sbci	r19, 0xFF	; 255
 32e:	4e 8d       	ldd	r20, Y+30	; 0x1e
 330:	5f 8d       	ldd	r21, Y+31	; 0x1f
 332:	65 e1       	ldi	r22, 0x15	; 21
 334:	70 e0       	ldi	r23, 0x00	; 0
 336:	ce 01       	movw	r24, r28
 338:	01 96       	adiw	r24, 0x01	; 1
 33a:	3a d2       	rcall	.+1140   	; 0x7b0 <vsnprintf>
 33c:	6d 8d       	ldd	r22, Y+29	; 0x1d
 33e:	8c 8d       	ldd	r24, Y+28	; 0x1c
 340:	90 e2       	ldi	r25, 0x20	; 32
 342:	89 9f       	mul	r24, r25
 344:	60 0d       	add	r22, r0
 346:	11 24       	eor	r1, r1
 348:	60 68       	ori	r22, 0x80	; 128
 34a:	70 e0       	ldi	r23, 0x00	; 0
 34c:	83 e4       	ldi	r24, 0x43	; 67
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	68 df       	rcall	.-304    	; 0x222 <writeLcdF>
 352:	69 81       	ldd	r22, Y+1	; 0x01
 354:	66 23       	and	r22, r22
 356:	79 f0       	breq	.+30     	; 0x376 <lcdWriteText+0x64>
 358:	10 e0       	ldi	r17, 0x00	; 0
 35a:	1f 5f       	subi	r17, 0xFF	; 255
 35c:	70 e0       	ldi	r23, 0x00	; 0
 35e:	84 e4       	ldi	r24, 0x44	; 68
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	5f df       	rcall	.-322    	; 0x222 <writeLcdF>
 364:	e1 e0       	ldi	r30, 0x01	; 1
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	ec 0f       	add	r30, r28
 36a:	fd 1f       	adc	r31, r29
 36c:	e1 0f       	add	r30, r17
 36e:	f1 1d       	adc	r31, r1
 370:	60 81       	ld	r22, Z
 372:	61 11       	cpse	r22, r1
 374:	f2 cf       	rjmp	.-28     	; 0x35a <lcdWriteText+0x48>
 376:	65 96       	adiw	r28, 0x15	; 21
 378:	0f b6       	in	r0, 0x3f	; 63
 37a:	f8 94       	cli
 37c:	de bf       	out	0x3e, r29	; 62
 37e:	0f be       	out	0x3f, r0	; 63
 380:	cd bf       	out	0x3d, r28	; 61
 382:	df 91       	pop	r29
 384:	cf 91       	pop	r28
 386:	1f 91       	pop	r17
 388:	08 95       	ret

0000038a <lcdClear>:
 38a:	61 e0       	ldi	r22, 0x01	; 1
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	83 e4       	ldi	r24, 0x43	; 67
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	47 df       	rcall	.-370    	; 0x222 <writeLcdF>
 394:	8f e3       	ldi	r24, 0x3F	; 63
 396:	9f e1       	ldi	r25, 0x1F	; 31
 398:	01 97       	sbiw	r24, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <lcdClear+0xe>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <lcdClear+0x14>
 39e:	00 00       	nop
 3a0:	80 e4       	ldi	r24, 0x40	; 64
 3a2:	92 e0       	ldi	r25, 0x02	; 2
 3a4:	9f 93       	push	r25
 3a6:	8f 93       	push	r24
 3a8:	1f 92       	push	r1
 3aa:	1f 92       	push	r1
 3ac:	b2 df       	rcall	.-156    	; 0x312 <lcdWriteText>
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	08 95       	ret

000003b8 <initLcd>:
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	22 df       	rcall	.-444    	; 0x200 <lcdSclk>
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	1a df       	rcall	.-460    	; 0x1f4 <lcdSid>
 3c0:	64 e3       	ldi	r22, 0x34	; 52
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	83 e4       	ldi	r24, 0x43	; 67
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	2c df       	rcall	.-424    	; 0x222 <writeLcdF>
 3ca:	69 e0       	ldi	r22, 0x09	; 9
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	83 e4       	ldi	r24, 0x43	; 67
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	27 df       	rcall	.-434    	; 0x222 <writeLcdF>
 3d4:	60 e3       	ldi	r22, 0x30	; 48
 3d6:	70 e0       	ldi	r23, 0x00	; 0
 3d8:	83 e4       	ldi	r24, 0x43	; 67
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	22 df       	rcall	.-444    	; 0x222 <writeLcdF>
 3de:	6c e0       	ldi	r22, 0x0C	; 12
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	83 e4       	ldi	r24, 0x43	; 67
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	1d df       	rcall	.-454    	; 0x222 <writeLcdF>
 3e8:	d0 df       	rcall	.-96     	; 0x38a <lcdClear>
 3ea:	67 e0       	ldi	r22, 0x07	; 7
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	83 e4       	ldi	r24, 0x43	; 67
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	17 df       	rcall	.-466    	; 0x222 <writeLcdF>
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	0a cf       	rjmp	.-492    	; 0x20c <lcdLight>
 3f8:	08 95       	ret

000003fa <initBoard>:
 3fa:	4f 92       	push	r4
 3fc:	5f 92       	push	r5
 3fe:	6f 92       	push	r6
 400:	7f 92       	push	r7
 402:	8f 92       	push	r8
 404:	9f 92       	push	r9
 406:	af 92       	push	r10
 408:	bf 92       	push	r11
 40a:	cf 92       	push	r12
 40c:	df 92       	push	r13
 40e:	ef 92       	push	r14
 410:	ff 92       	push	r15
 412:	0f 93       	push	r16
 414:	1f 93       	push	r17
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	c8 2f       	mov	r28, r24
 41c:	85 b7       	in	r24, 0x35	; 53
 41e:	85 bf       	out	0x35, r24	; 53
 420:	12 b8       	out	0x02, r1	; 2
 422:	8f ef       	ldi	r24, 0xFF	; 255
 424:	81 b9       	out	0x01, r24	; 1
 426:	15 b8       	out	0x05, r1	; 5
 428:	84 b9       	out	0x04, r24	; 4
 42a:	88 b9       	out	0x08, r24	; 8
 42c:	17 b8       	out	0x07, r1	; 7
 42e:	8b b9       	out	0x0b, r24	; 11
 430:	1a b8       	out	0x0a, r1	; 10
 432:	8e b9       	out	0x0e, r24	; 14
 434:	1d b8       	out	0x0d, r1	; 13
 436:	72 98       	cbi	0x0e, 2	; 14
 438:	11 ba       	out	0x11, r1	; 17
 43a:	10 ba       	out	0x10, r1	; 16
 43c:	94 e0       	ldi	r25, 0x04	; 4
 43e:	94 bb       	out	0x14, r25	; 20
 440:	93 b3       	in	r25, 0x13	; 19
 442:	93 60       	ori	r25, 0x03	; 3
 444:	93 bb       	out	0x13, r25	; 19
 446:	9d 9a       	sbi	0x13, 5	; 19
 448:	97 ec       	ldi	r25, 0xC7	; 199
 44a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 44e:	98 e3       	ldi	r25, 0x38	; 56
 450:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 454:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 458:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 45c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 460:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 464:	8c e3       	ldi	r24, 0x3C	; 60
 466:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 46a:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 46e:	78 94       	sei
 470:	6b de       	rcall	.-810    	; 0x148 <startSystemTimeMs>
 472:	a2 df       	rcall	.-188    	; 0x3b8 <initLcd>
 474:	73 de       	rcall	.-794    	; 0x15c <initAdc>
 476:	aa de       	rcall	.-684    	; 0x1cc <initRgb>
 478:	cc 23       	and	r28, r28
 47a:	09 f4       	brne	.+2      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 47c:	b8 c0       	rjmp	.+368    	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 47e:	8f ef       	ldi	r24, 0xFF	; 255
 480:	c5 de       	rcall	.-630    	; 0x20c <lcdLight>
 482:	40 e0       	ldi	r20, 0x00	; 0
 484:	50 e0       	ldi	r21, 0x00	; 0
 486:	6f ef       	ldi	r22, 0xFF	; 255
 488:	73 e0       	ldi	r23, 0x03	; 3
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	87 de       	rcall	.-754    	; 0x19e <rgbWrite>
 490:	8d e2       	ldi	r24, 0x2D	; 45
 492:	92 e0       	ldi	r25, 0x02	; 2
 494:	9f 93       	push	r25
 496:	8f 93       	push	r24
 498:	1f 92       	push	r1
 49a:	1f 92       	push	r1
 49c:	3a df       	rcall	.-396    	; 0x312 <lcdWriteText>
 49e:	82 e4       	ldi	r24, 0x42	; 66
 4a0:	92 e0       	ldi	r25, 0x02	; 2
 4a2:	9f 93       	push	r25
 4a4:	8f 93       	push	r24
 4a6:	1f 92       	push	r1
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	8f 93       	push	r24
 4ac:	32 df       	rcall	.-412    	; 0x312 <lcdWriteText>
 4ae:	88 e1       	ldi	r24, 0x18	; 24
 4b0:	92 e0       	ldi	r25, 0x02	; 2
 4b2:	9f 93       	push	r25
 4b4:	8f 93       	push	r24
 4b6:	1f 92       	push	r1
 4b8:	82 e0       	ldi	r24, 0x02	; 2
 4ba:	8f 93       	push	r24
 4bc:	2a df       	rcall	.-428    	; 0x312 <lcdWriteText>
 4be:	87 e5       	ldi	r24, 0x57	; 87
 4c0:	92 e0       	ldi	r25, 0x02	; 2
 4c2:	9f 93       	push	r25
 4c4:	8f 93       	push	r24
 4c6:	1f 92       	push	r1
 4c8:	83 e0       	ldi	r24, 0x03	; 3
 4ca:	8f 93       	push	r24
 4cc:	22 df       	rcall	.-444    	; 0x312 <lcdWriteText>
 4ce:	8d b7       	in	r24, 0x3d	; 61
 4d0:	9e b7       	in	r25, 0x3e	; 62
 4d2:	40 96       	adiw	r24, 0x10	; 16
 4d4:	0f b6       	in	r0, 0x3f	; 63
 4d6:	f8 94       	cli
 4d8:	9e bf       	out	0x3e, r25	; 62
 4da:	0f be       	out	0x3f, r0	; 63
 4dc:	8d bf       	out	0x3d, r24	; 61
 4de:	88 24       	eor	r8, r8
 4e0:	83 94       	inc	r8
 4e2:	c0 e0       	ldi	r28, 0x00	; 0
 4e4:	71 2c       	mov	r7, r1
 4e6:	99 24       	eor	r9, r9
 4e8:	93 94       	inc	r9
 4ea:	d0 e0       	ldi	r29, 0x00	; 0
 4ec:	cc 24       	eor	r12, r12
 4ee:	c3 94       	inc	r12
 4f0:	d1 2c       	mov	r13, r1
 4f2:	e1 2c       	mov	r14, r1
 4f4:	68 94       	set
 4f6:	ff 24       	eor	r15, r15
 4f8:	f7 f8       	bld	r15, 7
 4fa:	66 24       	eor	r6, r6
 4fc:	63 94       	inc	r6
 4fe:	51 2c       	mov	r5, r1
 500:	09 e0       	ldi	r16, 0x09	; 9
 502:	11 e0       	ldi	r17, 0x01	; 1
 504:	0f 2e       	mov	r0, r31
 506:	fc e6       	ldi	r31, 0x6C	; 108
 508:	af 2e       	mov	r10, r31
 50a:	f2 e0       	ldi	r31, 0x02	; 2
 50c:	bf 2e       	mov	r11, r31
 50e:	f0 2d       	mov	r31, r0
 510:	0f 2e       	mov	r0, r31
 512:	f3 e0       	ldi	r31, 0x03	; 3
 514:	4f 2e       	mov	r4, r31
 516:	f0 2d       	mov	r31, r0
 518:	99 20       	and	r9, r9
 51a:	49 f0       	breq	.+18     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 51c:	c7 01       	movw	r24, r14
 51e:	0d 2e       	mov	r0, r29
 520:	02 c0       	rjmp	.+4      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 522:	96 95       	lsr	r25
 524:	87 95       	ror	r24
 526:	0a 94       	dec	r0
 528:	e2 f7       	brpl	.-8      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 52a:	09 de       	rcall	.-1006   	; 0x13e <ledWriteAll>
 52c:	08 c0       	rjmp	.+16     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 52e:	c6 01       	movw	r24, r12
 530:	0d 2e       	mov	r0, r29
 532:	02 c0       	rjmp	.+4      	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 534:	88 0f       	add	r24, r24
 536:	99 1f       	adc	r25, r25
 538:	0a 94       	dec	r0
 53a:	e2 f7       	brpl	.-8      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 53c:	00 de       	rcall	.-1024   	; 0x13e <ledWriteAll>
 53e:	df 5f       	subi	r29, 0xFF	; 255
 540:	d1 31       	cpi	r29, 0x11	; 17
 542:	28 f0       	brcs	.+10     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 544:	86 2d       	mov	r24, r6
 546:	91 10       	cpse	r9, r1
 548:	85 2d       	mov	r24, r5
 54a:	98 2e       	mov	r9, r24
 54c:	d0 e0       	ldi	r29, 0x00	; 0
 54e:	88 20       	and	r8, r8
 550:	11 f0       	breq	.+4      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 552:	ce 5f       	subi	r28, 0xFE	; 254
 554:	01 c0       	rjmp	.+2      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 556:	c2 50       	subi	r28, 0x02	; 2
 558:	8c 2f       	mov	r24, r28
 55a:	58 de       	rcall	.-848    	; 0x20c <lcdLight>
 55c:	ce 3f       	cpi	r28, 0xFE	; 254
 55e:	21 f0       	breq	.+8      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 560:	c8 37       	cpi	r28, 0x78	; 120
 562:	19 f4       	brne	.+6      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 564:	86 2c       	mov	r8, r6
 566:	01 c0       	rjmp	.+2      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 568:	85 2c       	mov	r8, r5
 56a:	71 10       	cpse	r7, r1
 56c:	3b c0       	rjmp	.+118    	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 56e:	f8 01       	movw	r30, r16
 570:	80 81       	ld	r24, Z
 572:	83 7c       	andi	r24, 0xC3	; 195
 574:	91 f0       	breq	.+36     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 576:	40 e0       	ldi	r20, 0x00	; 0
 578:	50 e0       	ldi	r21, 0x00	; 0
 57a:	66 e2       	ldi	r22, 0x26	; 38
 57c:	72 e0       	ldi	r23, 0x02	; 2
 57e:	8f ef       	ldi	r24, 0xFF	; 255
 580:	93 e0       	ldi	r25, 0x03	; 3
 582:	0d de       	rcall	.-998    	; 0x19e <rgbWrite>
 584:	bf 92       	push	r11
 586:	af 92       	push	r10
 588:	1f 92       	push	r1
 58a:	4f 92       	push	r4
 58c:	c2 de       	rcall	.-636    	; 0x312 <lcdWriteText>
 58e:	0f 90       	pop	r0
 590:	0f 90       	pop	r0
 592:	0f 90       	pop	r0
 594:	0f 90       	pop	r0
 596:	76 2c       	mov	r7, r6
 598:	25 c0       	rjmp	.+74     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 59a:	8f ef       	ldi	r24, 0xFF	; 255
 59c:	9c e7       	ldi	r25, 0x7C	; 124
 59e:	01 97       	sbiw	r24, 0x01	; 1
 5a0:	f1 f7       	brne	.-4      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5a4:	00 00       	nop
 5a6:	b8 cf       	rjmp	.-144    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 5a8:	f0 de       	rcall	.-544    	; 0x38a <lcdClear>
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	2f de       	rcall	.-930    	; 0x20c <lcdLight>
 5ae:	80 e0       	ldi	r24, 0x00	; 0
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	c5 dd       	rcall	.-1142   	; 0x13e <ledWriteAll>
 5b4:	40 e0       	ldi	r20, 0x00	; 0
 5b6:	50 e0       	ldi	r21, 0x00	; 0
 5b8:	60 e0       	ldi	r22, 0x00	; 0
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	ee dd       	rcall	.-1060   	; 0x19e <rgbWrite>
 5c2:	10 92 89 02 	sts	0x0289, r1	; 0x800289 <systemTimeMs>
 5c6:	10 92 8a 02 	sts	0x028A, r1	; 0x80028a <systemTimeMs+0x1>
 5ca:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <systemTimeMs+0x2>
 5ce:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <systemTimeMs+0x3>
 5d2:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <systemTimeMs+0x4>
 5d6:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <systemTimeMs+0x5>
 5da:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <systemTimeMs+0x6>
 5de:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <systemTimeMs+0x7>
 5e2:	05 c0       	rjmp	.+10     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5e4:	f8 01       	movw	r30, r16
 5e6:	80 81       	ld	r24, Z
 5e8:	83 7c       	andi	r24, 0xC3	; 195
 5ea:	b9 f6       	brne	.-82     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 5ec:	dd cf       	rjmp	.-70     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	1f 91       	pop	r17
 5f4:	0f 91       	pop	r16
 5f6:	ff 90       	pop	r15
 5f8:	ef 90       	pop	r14
 5fa:	df 90       	pop	r13
 5fc:	cf 90       	pop	r12
 5fe:	bf 90       	pop	r11
 600:	af 90       	pop	r10
 602:	9f 90       	pop	r9
 604:	8f 90       	pop	r8
 606:	7f 90       	pop	r7
 608:	6f 90       	pop	r6
 60a:	5f 90       	pop	r5
 60c:	4f 90       	pop	r4
 60e:	08 95       	ret

00000610 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	cd b7       	in	r28, 0x3d	; 61
 616:	de b7       	in	r29, 0x3e	; 62
 618:	28 97       	sbiw	r28, 0x08	; 8
 61a:	0f b6       	in	r0, 0x3f	; 63
 61c:	f8 94       	cli
 61e:	de bf       	out	0x3e, r29	; 62
 620:	0f be       	out	0x3f, r0	; 63
 622:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 624:	88 e0       	ldi	r24, 0x08	; 8
 626:	e0 e0       	ldi	r30, 0x00	; 0
 628:	f2 e0       	ldi	r31, 0x02	; 2
 62a:	de 01       	movw	r26, r28
 62c:	11 96       	adiw	r26, 0x01	; 1
 62e:	01 90       	ld	r0, Z+
 630:	0d 92       	st	X+, r0
 632:	8a 95       	dec	r24
 634:	e1 f7       	brne	.-8      	; 0x62e <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 636:	e5 e0       	ldi	r30, 0x05	; 5
 638:	f1 e0       	ldi	r31, 0x01	; 1
 63a:	80 81       	ld	r24, Z
 63c:	8f 7b       	andi	r24, 0xBF	; 191
 63e:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 640:	e0 91 86 02 	lds	r30, 0x0286	; 0x800286 <Zeilen_Nr.2731>
 644:	f0 91 87 02 	lds	r31, 0x0287	; 0x800287 <Zeilen_Nr.2731+0x1>
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	8c 0f       	add	r24, r28
 64e:	9d 1f       	adc	r25, r29
 650:	e8 0f       	add	r30, r24
 652:	f9 1f       	adc	r31, r25
 654:	80 81       	ld	r24, Z
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	90 93 85 02 	sts	0x0285, r25	; 0x800285 <__data_end+0x1>
 65c:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <__data_end>
 660:	a2 e0       	ldi	r26, 0x02	; 2
 662:	b3 e0       	ldi	r27, 0x03	; 3
 664:	22 e9       	ldi	r18, 0x92	; 146
 666:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 668:	e5 e0       	ldi	r30, 0x05	; 5
 66a:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 66c:	5e 91       	ld	r21, -X
 66e:	4e 91       	ld	r20, -X
 670:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <__data_end>
 674:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <__data_end+0x1>
 678:	84 23       	and	r24, r20
 67a:	95 23       	and	r25, r21
 67c:	89 2b       	or	r24, r25
 67e:	21 f0       	breq	.+8      	; 0x688 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 680:	80 81       	ld	r24, Z
 682:	80 62       	ori	r24, 0x20	; 32
 684:	80 83       	st	Z, r24
 686:	03 c0       	rjmp	.+6      	; 0x68e <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 688:	80 81       	ld	r24, Z
 68a:	8f 7d       	andi	r24, 0xDF	; 223
 68c:	80 83       	st	Z, r24
        }
        CLOCK_1;
 68e:	80 81       	ld	r24, Z
 690:	80 61       	ori	r24, 0x10	; 16
 692:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 694:	80 81       	ld	r24, Z
 696:	8f 7e       	andi	r24, 0xEF	; 239
 698:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 69a:	a2 17       	cp	r26, r18
 69c:	b3 07       	cpc	r27, r19
 69e:	31 f7       	brne	.-52     	; 0x66c <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 6a0:	e5 e0       	ldi	r30, 0x05	; 5
 6a2:	f1 e0       	ldi	r31, 0x01	; 1
 6a4:	80 81       	ld	r24, Z
 6a6:	87 7f       	andi	r24, 0xF7	; 247
 6a8:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 6aa:	80 81       	ld	r24, Z
 6ac:	88 7f       	andi	r24, 0xF8	; 248
 6ae:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 6b0:	90 81       	ld	r25, Z
 6b2:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <Zeilen_Nr.2731>
 6b6:	89 2b       	or	r24, r25
 6b8:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 6ba:	80 81       	ld	r24, Z
 6bc:	80 64       	ori	r24, 0x40	; 64
 6be:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 6c0:	80 81       	ld	r24, Z
 6c2:	88 60       	ori	r24, 0x08	; 8
 6c4:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 6c6:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <Zeilen_Nr.2731>
 6ca:	90 91 87 02 	lds	r25, 0x0287	; 0x800287 <Zeilen_Nr.2731+0x1>
 6ce:	87 30       	cpi	r24, 0x07	; 7
 6d0:	91 05       	cpc	r25, r1
 6d2:	30 f4       	brcc	.+12     	; 0x6e0 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 6d4:	01 96       	adiw	r24, 0x01	; 1
 6d6:	90 93 87 02 	sts	0x0287, r25	; 0x800287 <Zeilen_Nr.2731+0x1>
 6da:	80 93 86 02 	sts	0x0286, r24	; 0x800286 <Zeilen_Nr.2731>
 6de:	07 c0       	rjmp	.+14     	; 0x6ee <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 6e0:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <Zeilen_Nr.2731+0x1>
 6e4:	10 92 86 02 	sts	0x0286, r1	; 0x800286 <Zeilen_Nr.2731>
        writeTextFinished = 1;
 6e8:	81 e0       	ldi	r24, 0x01	; 1
 6ea:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <writeTextFinished>
    }
    
 6ee:	28 96       	adiw	r28, 0x08	; 8
 6f0:	0f b6       	in	r0, 0x3f	; 63
 6f2:	f8 94       	cli
 6f4:	de bf       	out	0x3e, r29	; 62
 6f6:	0f be       	out	0x3f, r0	; 63
 6f8:	cd bf       	out	0x3d, r28	; 61
 6fa:	df 91       	pop	r29
 6fc:	cf 91       	pop	r28
 6fe:	08 95       	ret

00000700 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 700:	1f 92       	push	r1
 702:	0f 92       	push	r0
 704:	0f b6       	in	r0, 0x3f	; 63
 706:	0f 92       	push	r0
 708:	11 24       	eor	r1, r1
 70a:	0b b6       	in	r0, 0x3b	; 59
 70c:	0f 92       	push	r0
 70e:	2f 93       	push	r18
 710:	3f 93       	push	r19
 712:	4f 93       	push	r20
 714:	5f 93       	push	r21
 716:	6f 93       	push	r22
 718:	7f 93       	push	r23
 71a:	8f 93       	push	r24
 71c:	9f 93       	push	r25
 71e:	af 93       	push	r26
 720:	bf 93       	push	r27
 722:	ef 93       	push	r30
 724:	ff 93       	push	r31
    systemTimeMs += 1;
 726:	20 91 89 02 	lds	r18, 0x0289	; 0x800289 <systemTimeMs>
 72a:	30 91 8a 02 	lds	r19, 0x028A	; 0x80028a <systemTimeMs+0x1>
 72e:	40 91 8b 02 	lds	r20, 0x028B	; 0x80028b <systemTimeMs+0x2>
 732:	50 91 8c 02 	lds	r21, 0x028C	; 0x80028c <systemTimeMs+0x3>
 736:	60 91 8d 02 	lds	r22, 0x028D	; 0x80028d <systemTimeMs+0x4>
 73a:	70 91 8e 02 	lds	r23, 0x028E	; 0x80028e <systemTimeMs+0x5>
 73e:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <systemTimeMs+0x6>
 742:	90 91 90 02 	lds	r25, 0x0290	; 0x800290 <systemTimeMs+0x7>
 746:	a1 e0       	ldi	r26, 0x01	; 1
 748:	27 d0       	rcall	.+78     	; 0x798 <__adddi3_s8>
 74a:	20 93 89 02 	sts	0x0289, r18	; 0x800289 <systemTimeMs>
 74e:	30 93 8a 02 	sts	0x028A, r19	; 0x80028a <systemTimeMs+0x1>
 752:	40 93 8b 02 	sts	0x028B, r20	; 0x80028b <systemTimeMs+0x2>
 756:	50 93 8c 02 	sts	0x028C, r21	; 0x80028c <systemTimeMs+0x3>
 75a:	60 93 8d 02 	sts	0x028D, r22	; 0x80028d <systemTimeMs+0x4>
 75e:	70 93 8e 02 	sts	0x028E, r23	; 0x80028e <systemTimeMs+0x5>
 762:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <systemTimeMs+0x6>
 766:	90 93 90 02 	sts	0x0290, r25	; 0x800290 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 76a:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <matrixRunning>
 76e:	81 11       	cpse	r24, r1
 770:	4f df       	rcall	.-354    	; 0x610 <matrixWriteNextLine>
}
 772:	ff 91       	pop	r31
 774:	ef 91       	pop	r30
 776:	bf 91       	pop	r27
 778:	af 91       	pop	r26
 77a:	9f 91       	pop	r25
 77c:	8f 91       	pop	r24
 77e:	7f 91       	pop	r23
 780:	6f 91       	pop	r22
 782:	5f 91       	pop	r21
 784:	4f 91       	pop	r20
 786:	3f 91       	pop	r19
 788:	2f 91       	pop	r18
 78a:	0f 90       	pop	r0
 78c:	0b be       	out	0x3b, r0	; 59
 78e:	0f 90       	pop	r0
 790:	0f be       	out	0x3f, r0	; 63
 792:	0f 90       	pop	r0
 794:	1f 90       	pop	r1
 796:	18 95       	reti

00000798 <__adddi3_s8>:
 798:	00 24       	eor	r0, r0
 79a:	a7 fd       	sbrc	r26, 7
 79c:	00 94       	com	r0
 79e:	2a 0f       	add	r18, r26
 7a0:	30 1d       	adc	r19, r0
 7a2:	40 1d       	adc	r20, r0
 7a4:	50 1d       	adc	r21, r0
 7a6:	60 1d       	adc	r22, r0
 7a8:	70 1d       	adc	r23, r0
 7aa:	80 1d       	adc	r24, r0
 7ac:	90 1d       	adc	r25, r0
 7ae:	08 95       	ret

000007b0 <vsnprintf>:
 7b0:	0f 93       	push	r16
 7b2:	1f 93       	push	r17
 7b4:	cf 93       	push	r28
 7b6:	df 93       	push	r29
 7b8:	cd b7       	in	r28, 0x3d	; 61
 7ba:	de b7       	in	r29, 0x3e	; 62
 7bc:	2e 97       	sbiw	r28, 0x0e	; 14
 7be:	0f b6       	in	r0, 0x3f	; 63
 7c0:	f8 94       	cli
 7c2:	de bf       	out	0x3e, r29	; 62
 7c4:	0f be       	out	0x3f, r0	; 63
 7c6:	cd bf       	out	0x3d, r28	; 61
 7c8:	8c 01       	movw	r16, r24
 7ca:	fa 01       	movw	r30, r20
 7cc:	86 e0       	ldi	r24, 0x06	; 6
 7ce:	8c 83       	std	Y+4, r24	; 0x04
 7d0:	1a 83       	std	Y+2, r17	; 0x02
 7d2:	09 83       	std	Y+1, r16	; 0x01
 7d4:	77 ff       	sbrs	r23, 7
 7d6:	02 c0       	rjmp	.+4      	; 0x7dc <vsnprintf+0x2c>
 7d8:	60 e0       	ldi	r22, 0x00	; 0
 7da:	70 e8       	ldi	r23, 0x80	; 128
 7dc:	cb 01       	movw	r24, r22
 7de:	01 97       	sbiw	r24, 0x01	; 1
 7e0:	9e 83       	std	Y+6, r25	; 0x06
 7e2:	8d 83       	std	Y+5, r24	; 0x05
 7e4:	a9 01       	movw	r20, r18
 7e6:	bf 01       	movw	r22, r30
 7e8:	ce 01       	movw	r24, r28
 7ea:	01 96       	adiw	r24, 0x01	; 1
 7ec:	19 d0       	rcall	.+50     	; 0x820 <vfprintf>
 7ee:	4d 81       	ldd	r20, Y+5	; 0x05
 7f0:	5e 81       	ldd	r21, Y+6	; 0x06
 7f2:	57 fd       	sbrc	r21, 7
 7f4:	0a c0       	rjmp	.+20     	; 0x80a <vsnprintf+0x5a>
 7f6:	2f 81       	ldd	r18, Y+7	; 0x07
 7f8:	38 85       	ldd	r19, Y+8	; 0x08
 7fa:	42 17       	cp	r20, r18
 7fc:	53 07       	cpc	r21, r19
 7fe:	0c f4       	brge	.+2      	; 0x802 <vsnprintf+0x52>
 800:	9a 01       	movw	r18, r20
 802:	f8 01       	movw	r30, r16
 804:	e2 0f       	add	r30, r18
 806:	f3 1f       	adc	r31, r19
 808:	10 82       	st	Z, r1
 80a:	2e 96       	adiw	r28, 0x0e	; 14
 80c:	0f b6       	in	r0, 0x3f	; 63
 80e:	f8 94       	cli
 810:	de bf       	out	0x3e, r29	; 62
 812:	0f be       	out	0x3f, r0	; 63
 814:	cd bf       	out	0x3d, r28	; 61
 816:	df 91       	pop	r29
 818:	cf 91       	pop	r28
 81a:	1f 91       	pop	r17
 81c:	0f 91       	pop	r16
 81e:	08 95       	ret

00000820 <vfprintf>:
 820:	2f 92       	push	r2
 822:	3f 92       	push	r3
 824:	4f 92       	push	r4
 826:	5f 92       	push	r5
 828:	6f 92       	push	r6
 82a:	7f 92       	push	r7
 82c:	8f 92       	push	r8
 82e:	9f 92       	push	r9
 830:	af 92       	push	r10
 832:	bf 92       	push	r11
 834:	cf 92       	push	r12
 836:	df 92       	push	r13
 838:	ef 92       	push	r14
 83a:	ff 92       	push	r15
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	cd b7       	in	r28, 0x3d	; 61
 846:	de b7       	in	r29, 0x3e	; 62
 848:	2b 97       	sbiw	r28, 0x0b	; 11
 84a:	0f b6       	in	r0, 0x3f	; 63
 84c:	f8 94       	cli
 84e:	de bf       	out	0x3e, r29	; 62
 850:	0f be       	out	0x3f, r0	; 63
 852:	cd bf       	out	0x3d, r28	; 61
 854:	6c 01       	movw	r12, r24
 856:	7b 01       	movw	r14, r22
 858:	8a 01       	movw	r16, r20
 85a:	fc 01       	movw	r30, r24
 85c:	17 82       	std	Z+7, r1	; 0x07
 85e:	16 82       	std	Z+6, r1	; 0x06
 860:	83 81       	ldd	r24, Z+3	; 0x03
 862:	81 ff       	sbrs	r24, 1
 864:	bf c1       	rjmp	.+894    	; 0xbe4 <vfprintf+0x3c4>
 866:	ce 01       	movw	r24, r28
 868:	01 96       	adiw	r24, 0x01	; 1
 86a:	3c 01       	movw	r6, r24
 86c:	f6 01       	movw	r30, r12
 86e:	93 81       	ldd	r25, Z+3	; 0x03
 870:	f7 01       	movw	r30, r14
 872:	93 fd       	sbrc	r25, 3
 874:	85 91       	lpm	r24, Z+
 876:	93 ff       	sbrs	r25, 3
 878:	81 91       	ld	r24, Z+
 87a:	7f 01       	movw	r14, r30
 87c:	88 23       	and	r24, r24
 87e:	09 f4       	brne	.+2      	; 0x882 <vfprintf+0x62>
 880:	ad c1       	rjmp	.+858    	; 0xbdc <vfprintf+0x3bc>
 882:	85 32       	cpi	r24, 0x25	; 37
 884:	39 f4       	brne	.+14     	; 0x894 <vfprintf+0x74>
 886:	93 fd       	sbrc	r25, 3
 888:	85 91       	lpm	r24, Z+
 88a:	93 ff       	sbrs	r25, 3
 88c:	81 91       	ld	r24, Z+
 88e:	7f 01       	movw	r14, r30
 890:	85 32       	cpi	r24, 0x25	; 37
 892:	21 f4       	brne	.+8      	; 0x89c <vfprintf+0x7c>
 894:	b6 01       	movw	r22, r12
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	d6 d1       	rcall	.+940    	; 0xc46 <fputc>
 89a:	e8 cf       	rjmp	.-48     	; 0x86c <vfprintf+0x4c>
 89c:	91 2c       	mov	r9, r1
 89e:	21 2c       	mov	r2, r1
 8a0:	31 2c       	mov	r3, r1
 8a2:	ff e1       	ldi	r31, 0x1F	; 31
 8a4:	f3 15       	cp	r31, r3
 8a6:	d8 f0       	brcs	.+54     	; 0x8de <vfprintf+0xbe>
 8a8:	8b 32       	cpi	r24, 0x2B	; 43
 8aa:	79 f0       	breq	.+30     	; 0x8ca <vfprintf+0xaa>
 8ac:	38 f4       	brcc	.+14     	; 0x8bc <vfprintf+0x9c>
 8ae:	80 32       	cpi	r24, 0x20	; 32
 8b0:	79 f0       	breq	.+30     	; 0x8d0 <vfprintf+0xb0>
 8b2:	83 32       	cpi	r24, 0x23	; 35
 8b4:	a1 f4       	brne	.+40     	; 0x8de <vfprintf+0xbe>
 8b6:	23 2d       	mov	r18, r3
 8b8:	20 61       	ori	r18, 0x10	; 16
 8ba:	1d c0       	rjmp	.+58     	; 0x8f6 <vfprintf+0xd6>
 8bc:	8d 32       	cpi	r24, 0x2D	; 45
 8be:	61 f0       	breq	.+24     	; 0x8d8 <vfprintf+0xb8>
 8c0:	80 33       	cpi	r24, 0x30	; 48
 8c2:	69 f4       	brne	.+26     	; 0x8de <vfprintf+0xbe>
 8c4:	23 2d       	mov	r18, r3
 8c6:	21 60       	ori	r18, 0x01	; 1
 8c8:	16 c0       	rjmp	.+44     	; 0x8f6 <vfprintf+0xd6>
 8ca:	83 2d       	mov	r24, r3
 8cc:	82 60       	ori	r24, 0x02	; 2
 8ce:	38 2e       	mov	r3, r24
 8d0:	e3 2d       	mov	r30, r3
 8d2:	e4 60       	ori	r30, 0x04	; 4
 8d4:	3e 2e       	mov	r3, r30
 8d6:	2a c0       	rjmp	.+84     	; 0x92c <vfprintf+0x10c>
 8d8:	f3 2d       	mov	r31, r3
 8da:	f8 60       	ori	r31, 0x08	; 8
 8dc:	1d c0       	rjmp	.+58     	; 0x918 <vfprintf+0xf8>
 8de:	37 fc       	sbrc	r3, 7
 8e0:	2d c0       	rjmp	.+90     	; 0x93c <vfprintf+0x11c>
 8e2:	20 ed       	ldi	r18, 0xD0	; 208
 8e4:	28 0f       	add	r18, r24
 8e6:	2a 30       	cpi	r18, 0x0A	; 10
 8e8:	40 f0       	brcs	.+16     	; 0x8fa <vfprintf+0xda>
 8ea:	8e 32       	cpi	r24, 0x2E	; 46
 8ec:	b9 f4       	brne	.+46     	; 0x91c <vfprintf+0xfc>
 8ee:	36 fc       	sbrc	r3, 6
 8f0:	75 c1       	rjmp	.+746    	; 0xbdc <vfprintf+0x3bc>
 8f2:	23 2d       	mov	r18, r3
 8f4:	20 64       	ori	r18, 0x40	; 64
 8f6:	32 2e       	mov	r3, r18
 8f8:	19 c0       	rjmp	.+50     	; 0x92c <vfprintf+0x10c>
 8fa:	36 fe       	sbrs	r3, 6
 8fc:	06 c0       	rjmp	.+12     	; 0x90a <vfprintf+0xea>
 8fe:	8a e0       	ldi	r24, 0x0A	; 10
 900:	98 9e       	mul	r9, r24
 902:	20 0d       	add	r18, r0
 904:	11 24       	eor	r1, r1
 906:	92 2e       	mov	r9, r18
 908:	11 c0       	rjmp	.+34     	; 0x92c <vfprintf+0x10c>
 90a:	ea e0       	ldi	r30, 0x0A	; 10
 90c:	2e 9e       	mul	r2, r30
 90e:	20 0d       	add	r18, r0
 910:	11 24       	eor	r1, r1
 912:	22 2e       	mov	r2, r18
 914:	f3 2d       	mov	r31, r3
 916:	f0 62       	ori	r31, 0x20	; 32
 918:	3f 2e       	mov	r3, r31
 91a:	08 c0       	rjmp	.+16     	; 0x92c <vfprintf+0x10c>
 91c:	8c 36       	cpi	r24, 0x6C	; 108
 91e:	21 f4       	brne	.+8      	; 0x928 <vfprintf+0x108>
 920:	83 2d       	mov	r24, r3
 922:	80 68       	ori	r24, 0x80	; 128
 924:	38 2e       	mov	r3, r24
 926:	02 c0       	rjmp	.+4      	; 0x92c <vfprintf+0x10c>
 928:	88 36       	cpi	r24, 0x68	; 104
 92a:	41 f4       	brne	.+16     	; 0x93c <vfprintf+0x11c>
 92c:	f7 01       	movw	r30, r14
 92e:	93 fd       	sbrc	r25, 3
 930:	85 91       	lpm	r24, Z+
 932:	93 ff       	sbrs	r25, 3
 934:	81 91       	ld	r24, Z+
 936:	7f 01       	movw	r14, r30
 938:	81 11       	cpse	r24, r1
 93a:	b3 cf       	rjmp	.-154    	; 0x8a2 <vfprintf+0x82>
 93c:	98 2f       	mov	r25, r24
 93e:	9f 7d       	andi	r25, 0xDF	; 223
 940:	95 54       	subi	r25, 0x45	; 69
 942:	93 30       	cpi	r25, 0x03	; 3
 944:	28 f4       	brcc	.+10     	; 0x950 <vfprintf+0x130>
 946:	0c 5f       	subi	r16, 0xFC	; 252
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	9f e3       	ldi	r25, 0x3F	; 63
 94c:	99 83       	std	Y+1, r25	; 0x01
 94e:	0d c0       	rjmp	.+26     	; 0x96a <vfprintf+0x14a>
 950:	83 36       	cpi	r24, 0x63	; 99
 952:	31 f0       	breq	.+12     	; 0x960 <vfprintf+0x140>
 954:	83 37       	cpi	r24, 0x73	; 115
 956:	71 f0       	breq	.+28     	; 0x974 <vfprintf+0x154>
 958:	83 35       	cpi	r24, 0x53	; 83
 95a:	09 f0       	breq	.+2      	; 0x95e <vfprintf+0x13e>
 95c:	55 c0       	rjmp	.+170    	; 0xa08 <vfprintf+0x1e8>
 95e:	20 c0       	rjmp	.+64     	; 0x9a0 <vfprintf+0x180>
 960:	f8 01       	movw	r30, r16
 962:	80 81       	ld	r24, Z
 964:	89 83       	std	Y+1, r24	; 0x01
 966:	0e 5f       	subi	r16, 0xFE	; 254
 968:	1f 4f       	sbci	r17, 0xFF	; 255
 96a:	88 24       	eor	r8, r8
 96c:	83 94       	inc	r8
 96e:	91 2c       	mov	r9, r1
 970:	53 01       	movw	r10, r6
 972:	12 c0       	rjmp	.+36     	; 0x998 <vfprintf+0x178>
 974:	28 01       	movw	r4, r16
 976:	f2 e0       	ldi	r31, 0x02	; 2
 978:	4f 0e       	add	r4, r31
 97a:	51 1c       	adc	r5, r1
 97c:	f8 01       	movw	r30, r16
 97e:	a0 80       	ld	r10, Z
 980:	b1 80       	ldd	r11, Z+1	; 0x01
 982:	36 fe       	sbrs	r3, 6
 984:	03 c0       	rjmp	.+6      	; 0x98c <vfprintf+0x16c>
 986:	69 2d       	mov	r22, r9
 988:	70 e0       	ldi	r23, 0x00	; 0
 98a:	02 c0       	rjmp	.+4      	; 0x990 <vfprintf+0x170>
 98c:	6f ef       	ldi	r22, 0xFF	; 255
 98e:	7f ef       	ldi	r23, 0xFF	; 255
 990:	c5 01       	movw	r24, r10
 992:	4e d1       	rcall	.+668    	; 0xc30 <strnlen>
 994:	4c 01       	movw	r8, r24
 996:	82 01       	movw	r16, r4
 998:	f3 2d       	mov	r31, r3
 99a:	ff 77       	andi	r31, 0x7F	; 127
 99c:	3f 2e       	mov	r3, r31
 99e:	15 c0       	rjmp	.+42     	; 0x9ca <vfprintf+0x1aa>
 9a0:	28 01       	movw	r4, r16
 9a2:	22 e0       	ldi	r18, 0x02	; 2
 9a4:	42 0e       	add	r4, r18
 9a6:	51 1c       	adc	r5, r1
 9a8:	f8 01       	movw	r30, r16
 9aa:	a0 80       	ld	r10, Z
 9ac:	b1 80       	ldd	r11, Z+1	; 0x01
 9ae:	36 fe       	sbrs	r3, 6
 9b0:	03 c0       	rjmp	.+6      	; 0x9b8 <vfprintf+0x198>
 9b2:	69 2d       	mov	r22, r9
 9b4:	70 e0       	ldi	r23, 0x00	; 0
 9b6:	02 c0       	rjmp	.+4      	; 0x9bc <vfprintf+0x19c>
 9b8:	6f ef       	ldi	r22, 0xFF	; 255
 9ba:	7f ef       	ldi	r23, 0xFF	; 255
 9bc:	c5 01       	movw	r24, r10
 9be:	2d d1       	rcall	.+602    	; 0xc1a <strnlen_P>
 9c0:	4c 01       	movw	r8, r24
 9c2:	f3 2d       	mov	r31, r3
 9c4:	f0 68       	ori	r31, 0x80	; 128
 9c6:	3f 2e       	mov	r3, r31
 9c8:	82 01       	movw	r16, r4
 9ca:	33 fc       	sbrc	r3, 3
 9cc:	19 c0       	rjmp	.+50     	; 0xa00 <vfprintf+0x1e0>
 9ce:	82 2d       	mov	r24, r2
 9d0:	90 e0       	ldi	r25, 0x00	; 0
 9d2:	88 16       	cp	r8, r24
 9d4:	99 06       	cpc	r9, r25
 9d6:	a0 f4       	brcc	.+40     	; 0xa00 <vfprintf+0x1e0>
 9d8:	b6 01       	movw	r22, r12
 9da:	80 e2       	ldi	r24, 0x20	; 32
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	33 d1       	rcall	.+614    	; 0xc46 <fputc>
 9e0:	2a 94       	dec	r2
 9e2:	f5 cf       	rjmp	.-22     	; 0x9ce <vfprintf+0x1ae>
 9e4:	f5 01       	movw	r30, r10
 9e6:	37 fc       	sbrc	r3, 7
 9e8:	85 91       	lpm	r24, Z+
 9ea:	37 fe       	sbrs	r3, 7
 9ec:	81 91       	ld	r24, Z+
 9ee:	5f 01       	movw	r10, r30
 9f0:	b6 01       	movw	r22, r12
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	28 d1       	rcall	.+592    	; 0xc46 <fputc>
 9f6:	21 10       	cpse	r2, r1
 9f8:	2a 94       	dec	r2
 9fa:	21 e0       	ldi	r18, 0x01	; 1
 9fc:	82 1a       	sub	r8, r18
 9fe:	91 08       	sbc	r9, r1
 a00:	81 14       	cp	r8, r1
 a02:	91 04       	cpc	r9, r1
 a04:	79 f7       	brne	.-34     	; 0x9e4 <vfprintf+0x1c4>
 a06:	e1 c0       	rjmp	.+450    	; 0xbca <vfprintf+0x3aa>
 a08:	84 36       	cpi	r24, 0x64	; 100
 a0a:	11 f0       	breq	.+4      	; 0xa10 <vfprintf+0x1f0>
 a0c:	89 36       	cpi	r24, 0x69	; 105
 a0e:	39 f5       	brne	.+78     	; 0xa5e <vfprintf+0x23e>
 a10:	f8 01       	movw	r30, r16
 a12:	37 fe       	sbrs	r3, 7
 a14:	07 c0       	rjmp	.+14     	; 0xa24 <vfprintf+0x204>
 a16:	60 81       	ld	r22, Z
 a18:	71 81       	ldd	r23, Z+1	; 0x01
 a1a:	82 81       	ldd	r24, Z+2	; 0x02
 a1c:	93 81       	ldd	r25, Z+3	; 0x03
 a1e:	0c 5f       	subi	r16, 0xFC	; 252
 a20:	1f 4f       	sbci	r17, 0xFF	; 255
 a22:	08 c0       	rjmp	.+16     	; 0xa34 <vfprintf+0x214>
 a24:	60 81       	ld	r22, Z
 a26:	71 81       	ldd	r23, Z+1	; 0x01
 a28:	07 2e       	mov	r0, r23
 a2a:	00 0c       	add	r0, r0
 a2c:	88 0b       	sbc	r24, r24
 a2e:	99 0b       	sbc	r25, r25
 a30:	0e 5f       	subi	r16, 0xFE	; 254
 a32:	1f 4f       	sbci	r17, 0xFF	; 255
 a34:	f3 2d       	mov	r31, r3
 a36:	ff 76       	andi	r31, 0x6F	; 111
 a38:	3f 2e       	mov	r3, r31
 a3a:	97 ff       	sbrs	r25, 7
 a3c:	09 c0       	rjmp	.+18     	; 0xa50 <vfprintf+0x230>
 a3e:	90 95       	com	r25
 a40:	80 95       	com	r24
 a42:	70 95       	com	r23
 a44:	61 95       	neg	r22
 a46:	7f 4f       	sbci	r23, 0xFF	; 255
 a48:	8f 4f       	sbci	r24, 0xFF	; 255
 a4a:	9f 4f       	sbci	r25, 0xFF	; 255
 a4c:	f0 68       	ori	r31, 0x80	; 128
 a4e:	3f 2e       	mov	r3, r31
 a50:	2a e0       	ldi	r18, 0x0A	; 10
 a52:	30 e0       	ldi	r19, 0x00	; 0
 a54:	a3 01       	movw	r20, r6
 a56:	33 d1       	rcall	.+614    	; 0xcbe <__ultoa_invert>
 a58:	88 2e       	mov	r8, r24
 a5a:	86 18       	sub	r8, r6
 a5c:	44 c0       	rjmp	.+136    	; 0xae6 <vfprintf+0x2c6>
 a5e:	85 37       	cpi	r24, 0x75	; 117
 a60:	31 f4       	brne	.+12     	; 0xa6e <vfprintf+0x24e>
 a62:	23 2d       	mov	r18, r3
 a64:	2f 7e       	andi	r18, 0xEF	; 239
 a66:	b2 2e       	mov	r11, r18
 a68:	2a e0       	ldi	r18, 0x0A	; 10
 a6a:	30 e0       	ldi	r19, 0x00	; 0
 a6c:	25 c0       	rjmp	.+74     	; 0xab8 <vfprintf+0x298>
 a6e:	93 2d       	mov	r25, r3
 a70:	99 7f       	andi	r25, 0xF9	; 249
 a72:	b9 2e       	mov	r11, r25
 a74:	8f 36       	cpi	r24, 0x6F	; 111
 a76:	c1 f0       	breq	.+48     	; 0xaa8 <vfprintf+0x288>
 a78:	18 f4       	brcc	.+6      	; 0xa80 <vfprintf+0x260>
 a7a:	88 35       	cpi	r24, 0x58	; 88
 a7c:	79 f0       	breq	.+30     	; 0xa9c <vfprintf+0x27c>
 a7e:	ae c0       	rjmp	.+348    	; 0xbdc <vfprintf+0x3bc>
 a80:	80 37       	cpi	r24, 0x70	; 112
 a82:	19 f0       	breq	.+6      	; 0xa8a <vfprintf+0x26a>
 a84:	88 37       	cpi	r24, 0x78	; 120
 a86:	21 f0       	breq	.+8      	; 0xa90 <vfprintf+0x270>
 a88:	a9 c0       	rjmp	.+338    	; 0xbdc <vfprintf+0x3bc>
 a8a:	e9 2f       	mov	r30, r25
 a8c:	e0 61       	ori	r30, 0x10	; 16
 a8e:	be 2e       	mov	r11, r30
 a90:	b4 fe       	sbrs	r11, 4
 a92:	0d c0       	rjmp	.+26     	; 0xaae <vfprintf+0x28e>
 a94:	fb 2d       	mov	r31, r11
 a96:	f4 60       	ori	r31, 0x04	; 4
 a98:	bf 2e       	mov	r11, r31
 a9a:	09 c0       	rjmp	.+18     	; 0xaae <vfprintf+0x28e>
 a9c:	34 fe       	sbrs	r3, 4
 a9e:	0a c0       	rjmp	.+20     	; 0xab4 <vfprintf+0x294>
 aa0:	29 2f       	mov	r18, r25
 aa2:	26 60       	ori	r18, 0x06	; 6
 aa4:	b2 2e       	mov	r11, r18
 aa6:	06 c0       	rjmp	.+12     	; 0xab4 <vfprintf+0x294>
 aa8:	28 e0       	ldi	r18, 0x08	; 8
 aaa:	30 e0       	ldi	r19, 0x00	; 0
 aac:	05 c0       	rjmp	.+10     	; 0xab8 <vfprintf+0x298>
 aae:	20 e1       	ldi	r18, 0x10	; 16
 ab0:	30 e0       	ldi	r19, 0x00	; 0
 ab2:	02 c0       	rjmp	.+4      	; 0xab8 <vfprintf+0x298>
 ab4:	20 e1       	ldi	r18, 0x10	; 16
 ab6:	32 e0       	ldi	r19, 0x02	; 2
 ab8:	f8 01       	movw	r30, r16
 aba:	b7 fe       	sbrs	r11, 7
 abc:	07 c0       	rjmp	.+14     	; 0xacc <vfprintf+0x2ac>
 abe:	60 81       	ld	r22, Z
 ac0:	71 81       	ldd	r23, Z+1	; 0x01
 ac2:	82 81       	ldd	r24, Z+2	; 0x02
 ac4:	93 81       	ldd	r25, Z+3	; 0x03
 ac6:	0c 5f       	subi	r16, 0xFC	; 252
 ac8:	1f 4f       	sbci	r17, 0xFF	; 255
 aca:	06 c0       	rjmp	.+12     	; 0xad8 <vfprintf+0x2b8>
 acc:	60 81       	ld	r22, Z
 ace:	71 81       	ldd	r23, Z+1	; 0x01
 ad0:	80 e0       	ldi	r24, 0x00	; 0
 ad2:	90 e0       	ldi	r25, 0x00	; 0
 ad4:	0e 5f       	subi	r16, 0xFE	; 254
 ad6:	1f 4f       	sbci	r17, 0xFF	; 255
 ad8:	a3 01       	movw	r20, r6
 ada:	f1 d0       	rcall	.+482    	; 0xcbe <__ultoa_invert>
 adc:	88 2e       	mov	r8, r24
 ade:	86 18       	sub	r8, r6
 ae0:	fb 2d       	mov	r31, r11
 ae2:	ff 77       	andi	r31, 0x7F	; 127
 ae4:	3f 2e       	mov	r3, r31
 ae6:	36 fe       	sbrs	r3, 6
 ae8:	0d c0       	rjmp	.+26     	; 0xb04 <vfprintf+0x2e4>
 aea:	23 2d       	mov	r18, r3
 aec:	2e 7f       	andi	r18, 0xFE	; 254
 aee:	a2 2e       	mov	r10, r18
 af0:	89 14       	cp	r8, r9
 af2:	58 f4       	brcc	.+22     	; 0xb0a <vfprintf+0x2ea>
 af4:	34 fe       	sbrs	r3, 4
 af6:	0b c0       	rjmp	.+22     	; 0xb0e <vfprintf+0x2ee>
 af8:	32 fc       	sbrc	r3, 2
 afa:	09 c0       	rjmp	.+18     	; 0xb0e <vfprintf+0x2ee>
 afc:	83 2d       	mov	r24, r3
 afe:	8e 7e       	andi	r24, 0xEE	; 238
 b00:	a8 2e       	mov	r10, r24
 b02:	05 c0       	rjmp	.+10     	; 0xb0e <vfprintf+0x2ee>
 b04:	b8 2c       	mov	r11, r8
 b06:	a3 2c       	mov	r10, r3
 b08:	03 c0       	rjmp	.+6      	; 0xb10 <vfprintf+0x2f0>
 b0a:	b8 2c       	mov	r11, r8
 b0c:	01 c0       	rjmp	.+2      	; 0xb10 <vfprintf+0x2f0>
 b0e:	b9 2c       	mov	r11, r9
 b10:	a4 fe       	sbrs	r10, 4
 b12:	0f c0       	rjmp	.+30     	; 0xb32 <vfprintf+0x312>
 b14:	fe 01       	movw	r30, r28
 b16:	e8 0d       	add	r30, r8
 b18:	f1 1d       	adc	r31, r1
 b1a:	80 81       	ld	r24, Z
 b1c:	80 33       	cpi	r24, 0x30	; 48
 b1e:	21 f4       	brne	.+8      	; 0xb28 <vfprintf+0x308>
 b20:	9a 2d       	mov	r25, r10
 b22:	99 7e       	andi	r25, 0xE9	; 233
 b24:	a9 2e       	mov	r10, r25
 b26:	09 c0       	rjmp	.+18     	; 0xb3a <vfprintf+0x31a>
 b28:	a2 fe       	sbrs	r10, 2
 b2a:	06 c0       	rjmp	.+12     	; 0xb38 <vfprintf+0x318>
 b2c:	b3 94       	inc	r11
 b2e:	b3 94       	inc	r11
 b30:	04 c0       	rjmp	.+8      	; 0xb3a <vfprintf+0x31a>
 b32:	8a 2d       	mov	r24, r10
 b34:	86 78       	andi	r24, 0x86	; 134
 b36:	09 f0       	breq	.+2      	; 0xb3a <vfprintf+0x31a>
 b38:	b3 94       	inc	r11
 b3a:	a3 fc       	sbrc	r10, 3
 b3c:	10 c0       	rjmp	.+32     	; 0xb5e <vfprintf+0x33e>
 b3e:	a0 fe       	sbrs	r10, 0
 b40:	06 c0       	rjmp	.+12     	; 0xb4e <vfprintf+0x32e>
 b42:	b2 14       	cp	r11, r2
 b44:	80 f4       	brcc	.+32     	; 0xb66 <vfprintf+0x346>
 b46:	28 0c       	add	r2, r8
 b48:	92 2c       	mov	r9, r2
 b4a:	9b 18       	sub	r9, r11
 b4c:	0d c0       	rjmp	.+26     	; 0xb68 <vfprintf+0x348>
 b4e:	b2 14       	cp	r11, r2
 b50:	58 f4       	brcc	.+22     	; 0xb68 <vfprintf+0x348>
 b52:	b6 01       	movw	r22, r12
 b54:	80 e2       	ldi	r24, 0x20	; 32
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	76 d0       	rcall	.+236    	; 0xc46 <fputc>
 b5a:	b3 94       	inc	r11
 b5c:	f8 cf       	rjmp	.-16     	; 0xb4e <vfprintf+0x32e>
 b5e:	b2 14       	cp	r11, r2
 b60:	18 f4       	brcc	.+6      	; 0xb68 <vfprintf+0x348>
 b62:	2b 18       	sub	r2, r11
 b64:	02 c0       	rjmp	.+4      	; 0xb6a <vfprintf+0x34a>
 b66:	98 2c       	mov	r9, r8
 b68:	21 2c       	mov	r2, r1
 b6a:	a4 fe       	sbrs	r10, 4
 b6c:	0f c0       	rjmp	.+30     	; 0xb8c <vfprintf+0x36c>
 b6e:	b6 01       	movw	r22, r12
 b70:	80 e3       	ldi	r24, 0x30	; 48
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	68 d0       	rcall	.+208    	; 0xc46 <fputc>
 b76:	a2 fe       	sbrs	r10, 2
 b78:	16 c0       	rjmp	.+44     	; 0xba6 <vfprintf+0x386>
 b7a:	a1 fc       	sbrc	r10, 1
 b7c:	03 c0       	rjmp	.+6      	; 0xb84 <vfprintf+0x364>
 b7e:	88 e7       	ldi	r24, 0x78	; 120
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	02 c0       	rjmp	.+4      	; 0xb88 <vfprintf+0x368>
 b84:	88 e5       	ldi	r24, 0x58	; 88
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	b6 01       	movw	r22, r12
 b8a:	0c c0       	rjmp	.+24     	; 0xba4 <vfprintf+0x384>
 b8c:	8a 2d       	mov	r24, r10
 b8e:	86 78       	andi	r24, 0x86	; 134
 b90:	51 f0       	breq	.+20     	; 0xba6 <vfprintf+0x386>
 b92:	a1 fe       	sbrs	r10, 1
 b94:	02 c0       	rjmp	.+4      	; 0xb9a <vfprintf+0x37a>
 b96:	8b e2       	ldi	r24, 0x2B	; 43
 b98:	01 c0       	rjmp	.+2      	; 0xb9c <vfprintf+0x37c>
 b9a:	80 e2       	ldi	r24, 0x20	; 32
 b9c:	a7 fc       	sbrc	r10, 7
 b9e:	8d e2       	ldi	r24, 0x2D	; 45
 ba0:	b6 01       	movw	r22, r12
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	50 d0       	rcall	.+160    	; 0xc46 <fputc>
 ba6:	89 14       	cp	r8, r9
 ba8:	30 f4       	brcc	.+12     	; 0xbb6 <vfprintf+0x396>
 baa:	b6 01       	movw	r22, r12
 bac:	80 e3       	ldi	r24, 0x30	; 48
 bae:	90 e0       	ldi	r25, 0x00	; 0
 bb0:	4a d0       	rcall	.+148    	; 0xc46 <fputc>
 bb2:	9a 94       	dec	r9
 bb4:	f8 cf       	rjmp	.-16     	; 0xba6 <vfprintf+0x386>
 bb6:	8a 94       	dec	r8
 bb8:	f3 01       	movw	r30, r6
 bba:	e8 0d       	add	r30, r8
 bbc:	f1 1d       	adc	r31, r1
 bbe:	80 81       	ld	r24, Z
 bc0:	b6 01       	movw	r22, r12
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	40 d0       	rcall	.+128    	; 0xc46 <fputc>
 bc6:	81 10       	cpse	r8, r1
 bc8:	f6 cf       	rjmp	.-20     	; 0xbb6 <vfprintf+0x396>
 bca:	22 20       	and	r2, r2
 bcc:	09 f4       	brne	.+2      	; 0xbd0 <vfprintf+0x3b0>
 bce:	4e ce       	rjmp	.-868    	; 0x86c <vfprintf+0x4c>
 bd0:	b6 01       	movw	r22, r12
 bd2:	80 e2       	ldi	r24, 0x20	; 32
 bd4:	90 e0       	ldi	r25, 0x00	; 0
 bd6:	37 d0       	rcall	.+110    	; 0xc46 <fputc>
 bd8:	2a 94       	dec	r2
 bda:	f7 cf       	rjmp	.-18     	; 0xbca <vfprintf+0x3aa>
 bdc:	f6 01       	movw	r30, r12
 bde:	86 81       	ldd	r24, Z+6	; 0x06
 be0:	97 81       	ldd	r25, Z+7	; 0x07
 be2:	02 c0       	rjmp	.+4      	; 0xbe8 <vfprintf+0x3c8>
 be4:	8f ef       	ldi	r24, 0xFF	; 255
 be6:	9f ef       	ldi	r25, 0xFF	; 255
 be8:	2b 96       	adiw	r28, 0x0b	; 11
 bea:	0f b6       	in	r0, 0x3f	; 63
 bec:	f8 94       	cli
 bee:	de bf       	out	0x3e, r29	; 62
 bf0:	0f be       	out	0x3f, r0	; 63
 bf2:	cd bf       	out	0x3d, r28	; 61
 bf4:	df 91       	pop	r29
 bf6:	cf 91       	pop	r28
 bf8:	1f 91       	pop	r17
 bfa:	0f 91       	pop	r16
 bfc:	ff 90       	pop	r15
 bfe:	ef 90       	pop	r14
 c00:	df 90       	pop	r13
 c02:	cf 90       	pop	r12
 c04:	bf 90       	pop	r11
 c06:	af 90       	pop	r10
 c08:	9f 90       	pop	r9
 c0a:	8f 90       	pop	r8
 c0c:	7f 90       	pop	r7
 c0e:	6f 90       	pop	r6
 c10:	5f 90       	pop	r5
 c12:	4f 90       	pop	r4
 c14:	3f 90       	pop	r3
 c16:	2f 90       	pop	r2
 c18:	08 95       	ret

00000c1a <strnlen_P>:
 c1a:	fc 01       	movw	r30, r24
 c1c:	05 90       	lpm	r0, Z+
 c1e:	61 50       	subi	r22, 0x01	; 1
 c20:	70 40       	sbci	r23, 0x00	; 0
 c22:	01 10       	cpse	r0, r1
 c24:	d8 f7       	brcc	.-10     	; 0xc1c <strnlen_P+0x2>
 c26:	80 95       	com	r24
 c28:	90 95       	com	r25
 c2a:	8e 0f       	add	r24, r30
 c2c:	9f 1f       	adc	r25, r31
 c2e:	08 95       	ret

00000c30 <strnlen>:
 c30:	fc 01       	movw	r30, r24
 c32:	61 50       	subi	r22, 0x01	; 1
 c34:	70 40       	sbci	r23, 0x00	; 0
 c36:	01 90       	ld	r0, Z+
 c38:	01 10       	cpse	r0, r1
 c3a:	d8 f7       	brcc	.-10     	; 0xc32 <strnlen+0x2>
 c3c:	80 95       	com	r24
 c3e:	90 95       	com	r25
 c40:	8e 0f       	add	r24, r30
 c42:	9f 1f       	adc	r25, r31
 c44:	08 95       	ret

00000c46 <fputc>:
 c46:	0f 93       	push	r16
 c48:	1f 93       	push	r17
 c4a:	cf 93       	push	r28
 c4c:	df 93       	push	r29
 c4e:	fb 01       	movw	r30, r22
 c50:	23 81       	ldd	r18, Z+3	; 0x03
 c52:	21 fd       	sbrc	r18, 1
 c54:	03 c0       	rjmp	.+6      	; 0xc5c <fputc+0x16>
 c56:	8f ef       	ldi	r24, 0xFF	; 255
 c58:	9f ef       	ldi	r25, 0xFF	; 255
 c5a:	2c c0       	rjmp	.+88     	; 0xcb4 <fputc+0x6e>
 c5c:	22 ff       	sbrs	r18, 2
 c5e:	16 c0       	rjmp	.+44     	; 0xc8c <fputc+0x46>
 c60:	46 81       	ldd	r20, Z+6	; 0x06
 c62:	57 81       	ldd	r21, Z+7	; 0x07
 c64:	24 81       	ldd	r18, Z+4	; 0x04
 c66:	35 81       	ldd	r19, Z+5	; 0x05
 c68:	42 17       	cp	r20, r18
 c6a:	53 07       	cpc	r21, r19
 c6c:	44 f4       	brge	.+16     	; 0xc7e <fputc+0x38>
 c6e:	a0 81       	ld	r26, Z
 c70:	b1 81       	ldd	r27, Z+1	; 0x01
 c72:	9d 01       	movw	r18, r26
 c74:	2f 5f       	subi	r18, 0xFF	; 255
 c76:	3f 4f       	sbci	r19, 0xFF	; 255
 c78:	31 83       	std	Z+1, r19	; 0x01
 c7a:	20 83       	st	Z, r18
 c7c:	8c 93       	st	X, r24
 c7e:	26 81       	ldd	r18, Z+6	; 0x06
 c80:	37 81       	ldd	r19, Z+7	; 0x07
 c82:	2f 5f       	subi	r18, 0xFF	; 255
 c84:	3f 4f       	sbci	r19, 0xFF	; 255
 c86:	37 83       	std	Z+7, r19	; 0x07
 c88:	26 83       	std	Z+6, r18	; 0x06
 c8a:	14 c0       	rjmp	.+40     	; 0xcb4 <fputc+0x6e>
 c8c:	8b 01       	movw	r16, r22
 c8e:	ec 01       	movw	r28, r24
 c90:	fb 01       	movw	r30, r22
 c92:	00 84       	ldd	r0, Z+8	; 0x08
 c94:	f1 85       	ldd	r31, Z+9	; 0x09
 c96:	e0 2d       	mov	r30, r0
 c98:	19 95       	eicall
 c9a:	89 2b       	or	r24, r25
 c9c:	e1 f6       	brne	.-72     	; 0xc56 <fputc+0x10>
 c9e:	d8 01       	movw	r26, r16
 ca0:	16 96       	adiw	r26, 0x06	; 6
 ca2:	8d 91       	ld	r24, X+
 ca4:	9c 91       	ld	r25, X
 ca6:	17 97       	sbiw	r26, 0x07	; 7
 ca8:	01 96       	adiw	r24, 0x01	; 1
 caa:	17 96       	adiw	r26, 0x07	; 7
 cac:	9c 93       	st	X, r25
 cae:	8e 93       	st	-X, r24
 cb0:	16 97       	sbiw	r26, 0x06	; 6
 cb2:	ce 01       	movw	r24, r28
 cb4:	df 91       	pop	r29
 cb6:	cf 91       	pop	r28
 cb8:	1f 91       	pop	r17
 cba:	0f 91       	pop	r16
 cbc:	08 95       	ret

00000cbe <__ultoa_invert>:
 cbe:	fa 01       	movw	r30, r20
 cc0:	aa 27       	eor	r26, r26
 cc2:	28 30       	cpi	r18, 0x08	; 8
 cc4:	51 f1       	breq	.+84     	; 0xd1a <__ultoa_invert+0x5c>
 cc6:	20 31       	cpi	r18, 0x10	; 16
 cc8:	81 f1       	breq	.+96     	; 0xd2a <__ultoa_invert+0x6c>
 cca:	e8 94       	clt
 ccc:	6f 93       	push	r22
 cce:	6e 7f       	andi	r22, 0xFE	; 254
 cd0:	6e 5f       	subi	r22, 0xFE	; 254
 cd2:	7f 4f       	sbci	r23, 0xFF	; 255
 cd4:	8f 4f       	sbci	r24, 0xFF	; 255
 cd6:	9f 4f       	sbci	r25, 0xFF	; 255
 cd8:	af 4f       	sbci	r26, 0xFF	; 255
 cda:	b1 e0       	ldi	r27, 0x01	; 1
 cdc:	3e d0       	rcall	.+124    	; 0xd5a <__ultoa_invert+0x9c>
 cde:	b4 e0       	ldi	r27, 0x04	; 4
 ce0:	3c d0       	rcall	.+120    	; 0xd5a <__ultoa_invert+0x9c>
 ce2:	67 0f       	add	r22, r23
 ce4:	78 1f       	adc	r23, r24
 ce6:	89 1f       	adc	r24, r25
 ce8:	9a 1f       	adc	r25, r26
 cea:	a1 1d       	adc	r26, r1
 cec:	68 0f       	add	r22, r24
 cee:	79 1f       	adc	r23, r25
 cf0:	8a 1f       	adc	r24, r26
 cf2:	91 1d       	adc	r25, r1
 cf4:	a1 1d       	adc	r26, r1
 cf6:	6a 0f       	add	r22, r26
 cf8:	71 1d       	adc	r23, r1
 cfa:	81 1d       	adc	r24, r1
 cfc:	91 1d       	adc	r25, r1
 cfe:	a1 1d       	adc	r26, r1
 d00:	20 d0       	rcall	.+64     	; 0xd42 <__ultoa_invert+0x84>
 d02:	09 f4       	brne	.+2      	; 0xd06 <__ultoa_invert+0x48>
 d04:	68 94       	set
 d06:	3f 91       	pop	r19
 d08:	2a e0       	ldi	r18, 0x0A	; 10
 d0a:	26 9f       	mul	r18, r22
 d0c:	11 24       	eor	r1, r1
 d0e:	30 19       	sub	r19, r0
 d10:	30 5d       	subi	r19, 0xD0	; 208
 d12:	31 93       	st	Z+, r19
 d14:	de f6       	brtc	.-74     	; 0xccc <__ultoa_invert+0xe>
 d16:	cf 01       	movw	r24, r30
 d18:	08 95       	ret
 d1a:	46 2f       	mov	r20, r22
 d1c:	47 70       	andi	r20, 0x07	; 7
 d1e:	40 5d       	subi	r20, 0xD0	; 208
 d20:	41 93       	st	Z+, r20
 d22:	b3 e0       	ldi	r27, 0x03	; 3
 d24:	0f d0       	rcall	.+30     	; 0xd44 <__ultoa_invert+0x86>
 d26:	c9 f7       	brne	.-14     	; 0xd1a <__ultoa_invert+0x5c>
 d28:	f6 cf       	rjmp	.-20     	; 0xd16 <__ultoa_invert+0x58>
 d2a:	46 2f       	mov	r20, r22
 d2c:	4f 70       	andi	r20, 0x0F	; 15
 d2e:	40 5d       	subi	r20, 0xD0	; 208
 d30:	4a 33       	cpi	r20, 0x3A	; 58
 d32:	18 f0       	brcs	.+6      	; 0xd3a <__ultoa_invert+0x7c>
 d34:	49 5d       	subi	r20, 0xD9	; 217
 d36:	31 fd       	sbrc	r19, 1
 d38:	40 52       	subi	r20, 0x20	; 32
 d3a:	41 93       	st	Z+, r20
 d3c:	02 d0       	rcall	.+4      	; 0xd42 <__ultoa_invert+0x84>
 d3e:	a9 f7       	brne	.-22     	; 0xd2a <__ultoa_invert+0x6c>
 d40:	ea cf       	rjmp	.-44     	; 0xd16 <__ultoa_invert+0x58>
 d42:	b4 e0       	ldi	r27, 0x04	; 4
 d44:	a6 95       	lsr	r26
 d46:	97 95       	ror	r25
 d48:	87 95       	ror	r24
 d4a:	77 95       	ror	r23
 d4c:	67 95       	ror	r22
 d4e:	ba 95       	dec	r27
 d50:	c9 f7       	brne	.-14     	; 0xd44 <__ultoa_invert+0x86>
 d52:	00 97       	sbiw	r24, 0x00	; 0
 d54:	61 05       	cpc	r22, r1
 d56:	71 05       	cpc	r23, r1
 d58:	08 95       	ret
 d5a:	9b 01       	movw	r18, r22
 d5c:	ac 01       	movw	r20, r24
 d5e:	0a 2e       	mov	r0, r26
 d60:	06 94       	lsr	r0
 d62:	57 95       	ror	r21
 d64:	47 95       	ror	r20
 d66:	37 95       	ror	r19
 d68:	27 95       	ror	r18
 d6a:	ba 95       	dec	r27
 d6c:	c9 f7       	brne	.-14     	; 0xd60 <__ultoa_invert+0xa2>
 d6e:	62 0f       	add	r22, r18
 d70:	73 1f       	adc	r23, r19
 d72:	84 1f       	adc	r24, r20
 d74:	95 1f       	adc	r25, r21
 d76:	a0 1d       	adc	r26, r0
 d78:	08 95       	ret

00000d7a <_exit>:
 d7a:	f8 94       	cli

00000d7c <__stop_program>:
 d7c:	ff cf       	rjmp	.-2      	; 0xd7c <__stop_program>
