
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000f22  00000fb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  0000102a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000102a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001088  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000010c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028a8  00000000  00000000  000012b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fdc  00000000  00000000  00003b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001668  00000000  00000000  00004b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000678  00000000  00000000  0000619c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cba  00000000  00000000  00006814  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001f62  00000000  00000000  000074ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00009430  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	23 c4       	rjmp	.+2118   	; 0x8a4 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e2       	ldi	r30, 0x22	; 34
  fc:	ff e0       	ldi	r31, 0x0F	; 15
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	fe c6       	rjmp	.+3580   	; 0xf1e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
int main(void)
{
    //Variablen
    
    //Initialisieren
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	3b d2       	rcall	.+1142   	; 0x59e <initBoard>
    DDRD = 0xff; //Alle Bits von PortD als Ausgang konfugurieren
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	8a b9       	out	0x0a, r24	; 10
    //Unendlichschlaufe
    while(1)
    {
        //078 420 92 60
        
        PORTD = ZAHL_7SEG_0;
 12c:	cd e7       	ldi	r28, 0x7D	; 125
        _delay_ms(LED_AN);
        PORTD = OFF;
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_7;
 12e:	0f 2e       	mov	r0, r31
 130:	f4 e6       	ldi	r31, 0x64	; 100
 132:	df 2e       	mov	r13, r31
 134:	f0 2d       	mov	r31, r0
        _delay_ms(LED_AN);
        PORTD = OFF;
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_8;
 136:	0f 2e       	mov	r0, r31
 138:	ff e7       	ldi	r31, 0x7F	; 127
 13a:	ef 2e       	mov	r14, r31
 13c:	f0 2d       	mov	r31, r0
        _delay_ms(LED_AN);
        PORTD = OFF;
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_4;
 13e:	0f 2e       	mov	r0, r31
 140:	f7 e4       	ldi	r31, 0x47	; 71
 142:	ff 2e       	mov	r15, r31
 144:	f0 2d       	mov	r31, r0
        _delay_ms(LED_AN);
        PORTD = OFF;
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_2;
 146:	da e7       	ldi	r29, 0x7A	; 122
        PORTD = ZAHL_7SEG_0;
        _delay_ms(LED_AN);
        PORTD = OFF;
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_9;
 148:	07 e6       	ldi	r16, 0x67	; 103
        PORTD = ZAHL_7SEG_2;
        _delay_ms(LED_AN);
        PORTD = OFF;
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_6;
 14a:	1f e3       	ldi	r17, 0x3F	; 63
    //Unendlichschlaufe
    while(1)
    {
        //078 420 92 60
        
        PORTD = ZAHL_7SEG_0;
 14c:	cb b9       	out	0x0b, r28	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 14e:	2f ef       	ldi	r18, 0xFF	; 255
 150:	83 ed       	ldi	r24, 0xD3	; 211
 152:	90 e3       	ldi	r25, 0x30	; 48
 154:	21 50       	subi	r18, 0x01	; 1
 156:	80 40       	sbci	r24, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <main+0x30>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0x3a>
 15e:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 160:	1b b8       	out	0x0b, r1	; 11
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	84 e3       	ldi	r24, 0x34	; 52
 166:	9c e0       	ldi	r25, 0x0C	; 12
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	80 40       	sbci	r24, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0x44>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0x4e>
 172:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_7;
 174:	db b8       	out	0x0b, r13	; 11
 176:	2f ef       	ldi	r18, 0xFF	; 255
 178:	83 ed       	ldi	r24, 0xD3	; 211
 17a:	90 e3       	ldi	r25, 0x30	; 48
 17c:	21 50       	subi	r18, 0x01	; 1
 17e:	80 40       	sbci	r24, 0x00	; 0
 180:	90 40       	sbci	r25, 0x00	; 0
 182:	e1 f7       	brne	.-8      	; 0x17c <main+0x58>
 184:	00 c0       	rjmp	.+0      	; 0x186 <main+0x62>
 186:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 188:	1b b8       	out	0x0b, r1	; 11
 18a:	2f ef       	ldi	r18, 0xFF	; 255
 18c:	84 e3       	ldi	r24, 0x34	; 52
 18e:	9c e0       	ldi	r25, 0x0C	; 12
 190:	21 50       	subi	r18, 0x01	; 1
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0x6c>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x76>
 19a:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_8;
 19c:	eb b8       	out	0x0b, r14	; 11
 19e:	2f ef       	ldi	r18, 0xFF	; 255
 1a0:	83 ed       	ldi	r24, 0xD3	; 211
 1a2:	90 e3       	ldi	r25, 0x30	; 48
 1a4:	21 50       	subi	r18, 0x01	; 1
 1a6:	80 40       	sbci	r24, 0x00	; 0
 1a8:	90 40       	sbci	r25, 0x00	; 0
 1aa:	e1 f7       	brne	.-8      	; 0x1a4 <main+0x80>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <main+0x8a>
 1ae:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 1b0:	1b b8       	out	0x0b, r1	; 11
 1b2:	2f ef       	ldi	r18, 0xFF	; 255
 1b4:	84 e3       	ldi	r24, 0x34	; 52
 1b6:	9c e0       	ldi	r25, 0x0C	; 12
 1b8:	21 50       	subi	r18, 0x01	; 1
 1ba:	80 40       	sbci	r24, 0x00	; 0
 1bc:	90 40       	sbci	r25, 0x00	; 0
 1be:	e1 f7       	brne	.-8      	; 0x1b8 <main+0x94>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x9e>
 1c2:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_4;
 1c4:	fb b8       	out	0x0b, r15	; 11
 1c6:	2f ef       	ldi	r18, 0xFF	; 255
 1c8:	83 ed       	ldi	r24, 0xD3	; 211
 1ca:	90 e3       	ldi	r25, 0x30	; 48
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <main+0xa8>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <main+0xb2>
 1d6:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 1d8:	1b b8       	out	0x0b, r1	; 11
 1da:	2f ef       	ldi	r18, 0xFF	; 255
 1dc:	84 e3       	ldi	r24, 0x34	; 52
 1de:	9c e0       	ldi	r25, 0x0C	; 12
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0xbc>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0xc6>
 1ea:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_2;
 1ec:	db b9       	out	0x0b, r29	; 11
 1ee:	2f ef       	ldi	r18, 0xFF	; 255
 1f0:	83 ed       	ldi	r24, 0xD3	; 211
 1f2:	90 e3       	ldi	r25, 0x30	; 48
 1f4:	21 50       	subi	r18, 0x01	; 1
 1f6:	80 40       	sbci	r24, 0x00	; 0
 1f8:	90 40       	sbci	r25, 0x00	; 0
 1fa:	e1 f7       	brne	.-8      	; 0x1f4 <main+0xd0>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <main+0xda>
 1fe:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 200:	1b b8       	out	0x0b, r1	; 11
 202:	2f ef       	ldi	r18, 0xFF	; 255
 204:	84 e3       	ldi	r24, 0x34	; 52
 206:	9c e0       	ldi	r25, 0x0C	; 12
 208:	21 50       	subi	r18, 0x01	; 1
 20a:	80 40       	sbci	r24, 0x00	; 0
 20c:	90 40       	sbci	r25, 0x00	; 0
 20e:	e1 f7       	brne	.-8      	; 0x208 <main+0xe4>
 210:	00 c0       	rjmp	.+0      	; 0x212 <main+0xee>
 212:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_0;
 214:	cb b9       	out	0x0b, r28	; 11
 216:	2f ef       	ldi	r18, 0xFF	; 255
 218:	83 ed       	ldi	r24, 0xD3	; 211
 21a:	90 e3       	ldi	r25, 0x30	; 48
 21c:	21 50       	subi	r18, 0x01	; 1
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0xf8>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x102>
 226:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 228:	1b b8       	out	0x0b, r1	; 11
 22a:	2f ef       	ldi	r18, 0xFF	; 255
 22c:	84 e3       	ldi	r24, 0x34	; 52
 22e:	9c e0       	ldi	r25, 0x0C	; 12
 230:	21 50       	subi	r18, 0x01	; 1
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	90 40       	sbci	r25, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <main+0x10c>
 238:	00 c0       	rjmp	.+0      	; 0x23a <main+0x116>
 23a:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_9;
 23c:	0b b9       	out	0x0b, r16	; 11
 23e:	2f ef       	ldi	r18, 0xFF	; 255
 240:	83 ed       	ldi	r24, 0xD3	; 211
 242:	90 e3       	ldi	r25, 0x30	; 48
 244:	21 50       	subi	r18, 0x01	; 1
 246:	80 40       	sbci	r24, 0x00	; 0
 248:	90 40       	sbci	r25, 0x00	; 0
 24a:	e1 f7       	brne	.-8      	; 0x244 <main+0x120>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x12a>
 24e:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 250:	1b b8       	out	0x0b, r1	; 11
 252:	2f ef       	ldi	r18, 0xFF	; 255
 254:	84 e3       	ldi	r24, 0x34	; 52
 256:	9c e0       	ldi	r25, 0x0C	; 12
 258:	21 50       	subi	r18, 0x01	; 1
 25a:	80 40       	sbci	r24, 0x00	; 0
 25c:	90 40       	sbci	r25, 0x00	; 0
 25e:	e1 f7       	brne	.-8      	; 0x258 <main+0x134>
 260:	00 c0       	rjmp	.+0      	; 0x262 <main+0x13e>
 262:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_2;
 264:	db b9       	out	0x0b, r29	; 11
 266:	2f ef       	ldi	r18, 0xFF	; 255
 268:	83 ed       	ldi	r24, 0xD3	; 211
 26a:	90 e3       	ldi	r25, 0x30	; 48
 26c:	21 50       	subi	r18, 0x01	; 1
 26e:	80 40       	sbci	r24, 0x00	; 0
 270:	90 40       	sbci	r25, 0x00	; 0
 272:	e1 f7       	brne	.-8      	; 0x26c <main+0x148>
 274:	00 c0       	rjmp	.+0      	; 0x276 <main+0x152>
 276:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 278:	1b b8       	out	0x0b, r1	; 11
 27a:	2f ef       	ldi	r18, 0xFF	; 255
 27c:	84 e3       	ldi	r24, 0x34	; 52
 27e:	9c e0       	ldi	r25, 0x0C	; 12
 280:	21 50       	subi	r18, 0x01	; 1
 282:	80 40       	sbci	r24, 0x00	; 0
 284:	90 40       	sbci	r25, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <main+0x15c>
 288:	00 c0       	rjmp	.+0      	; 0x28a <main+0x166>
 28a:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_6;
 28c:	1b b9       	out	0x0b, r17	; 11
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	83 ed       	ldi	r24, 0xD3	; 211
 292:	90 e3       	ldi	r25, 0x30	; 48
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0x170>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0x17a>
 29e:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 2a0:	1b b8       	out	0x0b, r1	; 11
 2a2:	2f ef       	ldi	r18, 0xFF	; 255
 2a4:	84 e3       	ldi	r24, 0x34	; 52
 2a6:	9c e0       	ldi	r25, 0x0C	; 12
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	80 40       	sbci	r24, 0x00	; 0
 2ac:	90 40       	sbci	r25, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0x184>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x18e>
 2b2:	00 00       	nop
        _delay_ms(LED_AUS);
        
        PORTD = ZAHL_7SEG_0;
 2b4:	cb b9       	out	0x0b, r28	; 11
 2b6:	2f ef       	ldi	r18, 0xFF	; 255
 2b8:	83 ed       	ldi	r24, 0xD3	; 211
 2ba:	90 e3       	ldi	r25, 0x30	; 48
 2bc:	21 50       	subi	r18, 0x01	; 1
 2be:	80 40       	sbci	r24, 0x00	; 0
 2c0:	90 40       	sbci	r25, 0x00	; 0
 2c2:	e1 f7       	brne	.-8      	; 0x2bc <main+0x198>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x1a2>
 2c6:	00 00       	nop
        _delay_ms(LED_AN);
        PORTD = OFF;
 2c8:	1b b8       	out	0x0b, r1	; 11
 2ca:	2f ef       	ldi	r18, 0xFF	; 255
 2cc:	84 e3       	ldi	r24, 0x34	; 52
 2ce:	9c e0       	ldi	r25, 0x0C	; 12
 2d0:	21 50       	subi	r18, 0x01	; 1
 2d2:	80 40       	sbci	r24, 0x00	; 0
 2d4:	90 40       	sbci	r25, 0x00	; 0
 2d6:	e1 f7       	brne	.-8      	; 0x2d0 <main+0x1ac>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x1b6>
        _delay_ms(LED_AUS);
        
    
        
        PORTD = switchReadAll();
 2da:	00 00       	nop
 2dc:	05 d0       	rcall	.+10     	; 0x2e8 <switchReadAll>
 2de:	8b b9       	out	0x0b, r24	; 11
 2e0:	35 cf       	rjmp	.-406    	; 0x14c <main+0x28>

000002e2 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 2e2:	82 b9       	out	0x02, r24	; 2
 2e4:	95 b9       	out	0x05, r25	; 5
 2e6:	08 95       	ret

000002e8 <switchReadAll>:
 2e8:	86 b1       	in	r24, 0x06	; 6
 2ea:	08 95       	ret

000002ec <startSystemTimeMs>:
 2ec:	83 e0       	ldi	r24, 0x03	; 3
 2ee:	84 bd       	out	0x24, r24	; 36
 2f0:	8b e0       	ldi	r24, 0x0B	; 11
 2f2:	85 bd       	out	0x25, r24	; 37
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 2fa:	89 ef       	ldi	r24, 0xF9	; 249
 2fc:	87 bd       	out	0x27, r24	; 39
 2fe:	08 95       	ret

00000300 <initAdc>:
 300:	11 ba       	out	0x11, r1	; 17
 302:	10 ba       	out	0x10, r1	; 16
 304:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 308:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 30c:	80 e4       	ldi	r24, 0x40	; 64
 30e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 312:	8f e0       	ldi	r24, 0x0F	; 15
 314:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 318:	8f ef       	ldi	r24, 0xFF	; 255
 31a:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 31e:	ea e7       	ldi	r30, 0x7A	; 122
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	87 ea       	ldi	r24, 0xA7	; 167
 324:	80 83       	st	Z, r24
 326:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 32a:	80 81       	ld	r24, Z
 32c:	80 64       	ori	r24, 0x40	; 64
 32e:	80 83       	st	Z, r24
 330:	80 81       	ld	r24, Z
 332:	84 ff       	sbrs	r24, 4
 334:	fd cf       	rjmp	.-6      	; 0x330 <initAdc+0x30>
 336:	ea e7       	ldi	r30, 0x7A	; 122
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	80 81       	ld	r24, Z
 33c:	8f 7e       	andi	r24, 0xEF	; 239
 33e:	80 83       	st	Z, r24
 340:	08 95       	ret

00000342 <rgbWrite>:
 342:	2f ef       	ldi	r18, 0xFF	; 255
 344:	33 e0       	ldi	r19, 0x03	; 3
 346:	f9 01       	movw	r30, r18
 348:	e8 1b       	sub	r30, r24
 34a:	f9 0b       	sbc	r31, r25
 34c:	c9 01       	movw	r24, r18
 34e:	86 1b       	sub	r24, r22
 350:	97 0b       	sbc	r25, r23
 352:	24 1b       	sub	r18, r20
 354:	35 0b       	sbc	r19, r21
 356:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 35a:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 35e:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 362:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 366:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 36a:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 36e:	08 95       	ret

00000370 <initRgb>:
 370:	8e ef       	ldi	r24, 0xFE	; 254
 372:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 376:	8b e1       	ldi	r24, 0x1B	; 27
 378:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 37c:	83 e0       	ldi	r24, 0x03	; 3
 37e:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 382:	8f ef       	ldi	r24, 0xFF	; 255
 384:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 388:	40 e0       	ldi	r20, 0x00	; 0
 38a:	50 e0       	ldi	r21, 0x00	; 0
 38c:	60 e0       	ldi	r22, 0x00	; 0
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	d6 cf       	rjmp	.-84     	; 0x342 <rgbWrite>
 396:	08 95       	ret

00000398 <lcdSid>:
 398:	88 23       	and	r24, r24
 39a:	11 f0       	breq	.+4      	; 0x3a0 <lcdSid+0x8>
 39c:	a0 9a       	sbi	0x14, 0	; 20
 39e:	08 95       	ret
 3a0:	a0 98       	cbi	0x14, 0	; 20
 3a2:	08 95       	ret

000003a4 <lcdSclk>:
 3a4:	88 23       	and	r24, r24
 3a6:	11 f0       	breq	.+4      	; 0x3ac <lcdSclk+0x8>
 3a8:	a1 9a       	sbi	0x14, 1	; 20
 3aa:	08 95       	ret
 3ac:	a1 98       	cbi	0x14, 1	; 20
 3ae:	08 95       	ret

000003b0 <lcdLight>:
 3b0:	81 11       	cpse	r24, r1
 3b2:	04 c0       	rjmp	.+8      	; 0x3bc <lcdLight+0xc>
 3b4:	84 b5       	in	r24, 0x24	; 36
 3b6:	8f 7d       	andi	r24, 0xDF	; 223
 3b8:	84 bd       	out	0x24, r24	; 36
 3ba:	08 95       	ret
 3bc:	94 b5       	in	r25, 0x24	; 36
 3be:	90 62       	ori	r25, 0x20	; 32
 3c0:	94 bd       	out	0x24, r25	; 36
 3c2:	88 bd       	out	0x28, r24	; 40
 3c4:	08 95       	ret

000003c6 <writeLcdF>:
 3c6:	ef 92       	push	r14
 3c8:	ff 92       	push	r15
 3ca:	0f 93       	push	r16
 3cc:	1f 93       	push	r17
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
 3d2:	7c 01       	movw	r14, r24
 3d4:	eb 01       	movw	r28, r22
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	df df       	rcall	.-66     	; 0x398 <lcdSid>
 3da:	05 e0       	ldi	r16, 0x05	; 5
 3dc:	10 e0       	ldi	r17, 0x00	; 0
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	e1 df       	rcall	.-62     	; 0x3a4 <lcdSclk>
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	df df       	rcall	.-66     	; 0x3a4 <lcdSclk>
 3e6:	01 50       	subi	r16, 0x01	; 1
 3e8:	11 09       	sbc	r17, r1
 3ea:	c9 f7       	brne	.-14     	; 0x3de <writeLcdF+0x18>
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	d4 df       	rcall	.-88     	; 0x398 <lcdSid>
 3f0:	80 e0       	ldi	r24, 0x00	; 0
 3f2:	d8 df       	rcall	.-80     	; 0x3a4 <lcdSclk>
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	d6 df       	rcall	.-84     	; 0x3a4 <lcdSclk>
 3f8:	83 e4       	ldi	r24, 0x43	; 67
 3fa:	e8 16       	cp	r14, r24
 3fc:	f1 04       	cpc	r15, r1
 3fe:	19 f4       	brne	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	ca df       	rcall	.-108    	; 0x398 <lcdSid>
 404:	02 c0       	rjmp	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	c7 df       	rcall	.-114    	; 0x398 <lcdSid>
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	cb df       	rcall	.-106    	; 0x3a4 <lcdSclk>
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	c9 df       	rcall	.-110    	; 0x3a4 <lcdSclk>
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	c1 df       	rcall	.-126    	; 0x398 <lcdSid>
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	c5 df       	rcall	.-118    	; 0x3a4 <lcdSclk>
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	c3 df       	rcall	.-122    	; 0x3a4 <lcdSclk>
 41e:	04 e0       	ldi	r16, 0x04	; 4
 420:	10 e0       	ldi	r17, 0x00	; 0
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	bf df       	rcall	.-130    	; 0x3a4 <lcdSclk>
 426:	c0 ff       	sbrs	r28, 0
 428:	03 c0       	rjmp	.+6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	b5 df       	rcall	.-150    	; 0x398 <lcdSid>
 42e:	02 c0       	rjmp	.+4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	b2 df       	rcall	.-156    	; 0x398 <lcdSid>
 434:	d6 95       	lsr	r29
 436:	c7 95       	ror	r28
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	b4 df       	rcall	.-152    	; 0x3a4 <lcdSclk>
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	b2 df       	rcall	.-156    	; 0x3a4 <lcdSclk>
 440:	01 50       	subi	r16, 0x01	; 1
 442:	11 09       	sbc	r17, r1
 444:	71 f7       	brne	.-36     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	a7 df       	rcall	.-178    	; 0x398 <lcdSid>
 44a:	04 e0       	ldi	r16, 0x04	; 4
 44c:	10 e0       	ldi	r17, 0x00	; 0
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	a9 df       	rcall	.-174    	; 0x3a4 <lcdSclk>
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	a7 df       	rcall	.-178    	; 0x3a4 <lcdSclk>
 456:	01 50       	subi	r16, 0x01	; 1
 458:	11 09       	sbc	r17, r1
 45a:	c9 f7       	brne	.-14     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 45c:	04 e0       	ldi	r16, 0x04	; 4
 45e:	10 e0       	ldi	r17, 0x00	; 0
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	a0 df       	rcall	.-192    	; 0x3a4 <lcdSclk>
 464:	c0 ff       	sbrs	r28, 0
 466:	03 c0       	rjmp	.+6      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	96 df       	rcall	.-212    	; 0x398 <lcdSid>
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	93 df       	rcall	.-218    	; 0x398 <lcdSid>
 472:	d6 95       	lsr	r29
 474:	c7 95       	ror	r28
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	95 df       	rcall	.-214    	; 0x3a4 <lcdSclk>
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	93 df       	rcall	.-218    	; 0x3a4 <lcdSclk>
 47e:	01 50       	subi	r16, 0x01	; 1
 480:	11 09       	sbc	r17, r1
 482:	71 f7       	brne	.-36     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	88 df       	rcall	.-240    	; 0x398 <lcdSid>
 488:	c4 e0       	ldi	r28, 0x04	; 4
 48a:	d0 e0       	ldi	r29, 0x00	; 0
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	8a df       	rcall	.-236    	; 0x3a4 <lcdSclk>
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	88 df       	rcall	.-240    	; 0x3a4 <lcdSclk>
 494:	21 97       	sbiw	r28, 0x01	; 1
 496:	d1 f7       	brne	.-12     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	7e df       	rcall	.-260    	; 0x398 <lcdSid>
 49c:	87 ec       	ldi	r24, 0xC7	; 199
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	01 97       	sbiw	r24, 0x01	; 1
 4a2:	f1 f7       	brne	.-4      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4a6:	00 00       	nop
 4a8:	df 91       	pop	r29
 4aa:	cf 91       	pop	r28
 4ac:	1f 91       	pop	r17
 4ae:	0f 91       	pop	r16
 4b0:	ff 90       	pop	r15
 4b2:	ef 90       	pop	r14
 4b4:	08 95       	ret

000004b6 <lcdWriteText>:
 4b6:	1f 93       	push	r17
 4b8:	cf 93       	push	r28
 4ba:	df 93       	push	r29
 4bc:	cd b7       	in	r28, 0x3d	; 61
 4be:	de b7       	in	r29, 0x3e	; 62
 4c0:	65 97       	sbiw	r28, 0x15	; 21
 4c2:	0f b6       	in	r0, 0x3f	; 63
 4c4:	f8 94       	cli
 4c6:	de bf       	out	0x3e, r29	; 62
 4c8:	0f be       	out	0x3f, r0	; 63
 4ca:	cd bf       	out	0x3d, r28	; 61
 4cc:	9e 01       	movw	r18, r28
 4ce:	20 5e       	subi	r18, 0xE0	; 224
 4d0:	3f 4f       	sbci	r19, 0xFF	; 255
 4d2:	4e 8d       	ldd	r20, Y+30	; 0x1e
 4d4:	5f 8d       	ldd	r21, Y+31	; 0x1f
 4d6:	65 e1       	ldi	r22, 0x15	; 21
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	ce 01       	movw	r24, r28
 4dc:	01 96       	adiw	r24, 0x01	; 1
 4de:	3a d2       	rcall	.+1140   	; 0x954 <vsnprintf>
 4e0:	6d 8d       	ldd	r22, Y+29	; 0x1d
 4e2:	8c 8d       	ldd	r24, Y+28	; 0x1c
 4e4:	90 e2       	ldi	r25, 0x20	; 32
 4e6:	89 9f       	mul	r24, r25
 4e8:	60 0d       	add	r22, r0
 4ea:	11 24       	eor	r1, r1
 4ec:	60 68       	ori	r22, 0x80	; 128
 4ee:	70 e0       	ldi	r23, 0x00	; 0
 4f0:	83 e4       	ldi	r24, 0x43	; 67
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	68 df       	rcall	.-304    	; 0x3c6 <writeLcdF>
 4f6:	69 81       	ldd	r22, Y+1	; 0x01
 4f8:	66 23       	and	r22, r22
 4fa:	79 f0       	breq	.+30     	; 0x51a <lcdWriteText+0x64>
 4fc:	10 e0       	ldi	r17, 0x00	; 0
 4fe:	1f 5f       	subi	r17, 0xFF	; 255
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	84 e4       	ldi	r24, 0x44	; 68
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	5f df       	rcall	.-322    	; 0x3c6 <writeLcdF>
 508:	e1 e0       	ldi	r30, 0x01	; 1
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	ec 0f       	add	r30, r28
 50e:	fd 1f       	adc	r31, r29
 510:	e1 0f       	add	r30, r17
 512:	f1 1d       	adc	r31, r1
 514:	60 81       	ld	r22, Z
 516:	61 11       	cpse	r22, r1
 518:	f2 cf       	rjmp	.-28     	; 0x4fe <lcdWriteText+0x48>
 51a:	65 96       	adiw	r28, 0x15	; 21
 51c:	0f b6       	in	r0, 0x3f	; 63
 51e:	f8 94       	cli
 520:	de bf       	out	0x3e, r29	; 62
 522:	0f be       	out	0x3f, r0	; 63
 524:	cd bf       	out	0x3d, r28	; 61
 526:	df 91       	pop	r29
 528:	cf 91       	pop	r28
 52a:	1f 91       	pop	r17
 52c:	08 95       	ret

0000052e <lcdClear>:
 52e:	61 e0       	ldi	r22, 0x01	; 1
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	83 e4       	ldi	r24, 0x43	; 67
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	47 df       	rcall	.-370    	; 0x3c6 <writeLcdF>
 538:	8f e3       	ldi	r24, 0x3F	; 63
 53a:	9f e1       	ldi	r25, 0x1F	; 31
 53c:	01 97       	sbiw	r24, 0x01	; 1
 53e:	f1 f7       	brne	.-4      	; 0x53c <lcdClear+0xe>
 540:	00 c0       	rjmp	.+0      	; 0x542 <lcdClear+0x14>
 542:	00 00       	nop
 544:	80 e3       	ldi	r24, 0x30	; 48
 546:	92 e0       	ldi	r25, 0x02	; 2
 548:	9f 93       	push	r25
 54a:	8f 93       	push	r24
 54c:	1f 92       	push	r1
 54e:	1f 92       	push	r1
 550:	b2 df       	rcall	.-156    	; 0x4b6 <lcdWriteText>
 552:	0f 90       	pop	r0
 554:	0f 90       	pop	r0
 556:	0f 90       	pop	r0
 558:	0f 90       	pop	r0
 55a:	08 95       	ret

0000055c <initLcd>:
 55c:	81 e0       	ldi	r24, 0x01	; 1
 55e:	22 df       	rcall	.-444    	; 0x3a4 <lcdSclk>
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	1a df       	rcall	.-460    	; 0x398 <lcdSid>
 564:	64 e3       	ldi	r22, 0x34	; 52
 566:	70 e0       	ldi	r23, 0x00	; 0
 568:	83 e4       	ldi	r24, 0x43	; 67
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	2c df       	rcall	.-424    	; 0x3c6 <writeLcdF>
 56e:	69 e0       	ldi	r22, 0x09	; 9
 570:	70 e0       	ldi	r23, 0x00	; 0
 572:	83 e4       	ldi	r24, 0x43	; 67
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	27 df       	rcall	.-434    	; 0x3c6 <writeLcdF>
 578:	60 e3       	ldi	r22, 0x30	; 48
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	83 e4       	ldi	r24, 0x43	; 67
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	22 df       	rcall	.-444    	; 0x3c6 <writeLcdF>
 582:	6c e0       	ldi	r22, 0x0C	; 12
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	83 e4       	ldi	r24, 0x43	; 67
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	1d df       	rcall	.-454    	; 0x3c6 <writeLcdF>
 58c:	d0 df       	rcall	.-96     	; 0x52e <lcdClear>
 58e:	67 e0       	ldi	r22, 0x07	; 7
 590:	70 e0       	ldi	r23, 0x00	; 0
 592:	83 e4       	ldi	r24, 0x43	; 67
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	17 df       	rcall	.-466    	; 0x3c6 <writeLcdF>
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	0a cf       	rjmp	.-492    	; 0x3b0 <lcdLight>
 59c:	08 95       	ret

0000059e <initBoard>:
 59e:	4f 92       	push	r4
 5a0:	5f 92       	push	r5
 5a2:	6f 92       	push	r6
 5a4:	7f 92       	push	r7
 5a6:	8f 92       	push	r8
 5a8:	9f 92       	push	r9
 5aa:	af 92       	push	r10
 5ac:	bf 92       	push	r11
 5ae:	cf 92       	push	r12
 5b0:	df 92       	push	r13
 5b2:	ef 92       	push	r14
 5b4:	ff 92       	push	r15
 5b6:	0f 93       	push	r16
 5b8:	1f 93       	push	r17
 5ba:	cf 93       	push	r28
 5bc:	df 93       	push	r29
 5be:	c8 2f       	mov	r28, r24
 5c0:	85 b7       	in	r24, 0x35	; 53
 5c2:	85 bf       	out	0x35, r24	; 53
 5c4:	12 b8       	out	0x02, r1	; 2
 5c6:	8f ef       	ldi	r24, 0xFF	; 255
 5c8:	81 b9       	out	0x01, r24	; 1
 5ca:	15 b8       	out	0x05, r1	; 5
 5cc:	84 b9       	out	0x04, r24	; 4
 5ce:	88 b9       	out	0x08, r24	; 8
 5d0:	17 b8       	out	0x07, r1	; 7
 5d2:	8b b9       	out	0x0b, r24	; 11
 5d4:	1a b8       	out	0x0a, r1	; 10
 5d6:	8e b9       	out	0x0e, r24	; 14
 5d8:	1d b8       	out	0x0d, r1	; 13
 5da:	72 98       	cbi	0x0e, 2	; 14
 5dc:	11 ba       	out	0x11, r1	; 17
 5de:	10 ba       	out	0x10, r1	; 16
 5e0:	94 e0       	ldi	r25, 0x04	; 4
 5e2:	94 bb       	out	0x14, r25	; 20
 5e4:	93 b3       	in	r25, 0x13	; 19
 5e6:	93 60       	ori	r25, 0x03	; 3
 5e8:	93 bb       	out	0x13, r25	; 19
 5ea:	9d 9a       	sbi	0x13, 5	; 19
 5ec:	97 ec       	ldi	r25, 0xC7	; 199
 5ee:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 5f2:	98 e3       	ldi	r25, 0x38	; 56
 5f4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 5f8:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 5fc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 600:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 604:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 608:	8c e3       	ldi	r24, 0x3C	; 60
 60a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 60e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 612:	78 94       	sei
 614:	6b de       	rcall	.-810    	; 0x2ec <startSystemTimeMs>
 616:	a2 df       	rcall	.-188    	; 0x55c <initLcd>
 618:	73 de       	rcall	.-794    	; 0x300 <initAdc>
 61a:	aa de       	rcall	.-684    	; 0x370 <initRgb>
 61c:	cc 23       	and	r28, r28
 61e:	09 f4       	brne	.+2      	; 0x622 <initBoard+0x84>
 620:	b8 c0       	rjmp	.+368    	; 0x792 <initBoard+0x1f4>
 622:	8f ef       	ldi	r24, 0xFF	; 255
 624:	c5 de       	rcall	.-630    	; 0x3b0 <lcdLight>
 626:	40 e0       	ldi	r20, 0x00	; 0
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	6f ef       	ldi	r22, 0xFF	; 255
 62c:	73 e0       	ldi	r23, 0x03	; 3
 62e:	80 e0       	ldi	r24, 0x00	; 0
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	87 de       	rcall	.-754    	; 0x342 <rgbWrite>
 634:	8d e1       	ldi	r24, 0x1D	; 29
 636:	92 e0       	ldi	r25, 0x02	; 2
 638:	9f 93       	push	r25
 63a:	8f 93       	push	r24
 63c:	1f 92       	push	r1
 63e:	1f 92       	push	r1
 640:	3a df       	rcall	.-396    	; 0x4b6 <lcdWriteText>
 642:	82 e3       	ldi	r24, 0x32	; 50
 644:	92 e0       	ldi	r25, 0x02	; 2
 646:	9f 93       	push	r25
 648:	8f 93       	push	r24
 64a:	1f 92       	push	r1
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	8f 93       	push	r24
 650:	32 df       	rcall	.-412    	; 0x4b6 <lcdWriteText>
 652:	88 e0       	ldi	r24, 0x08	; 8
 654:	92 e0       	ldi	r25, 0x02	; 2
 656:	9f 93       	push	r25
 658:	8f 93       	push	r24
 65a:	1f 92       	push	r1
 65c:	82 e0       	ldi	r24, 0x02	; 2
 65e:	8f 93       	push	r24
 660:	2a df       	rcall	.-428    	; 0x4b6 <lcdWriteText>
 662:	87 e4       	ldi	r24, 0x47	; 71
 664:	92 e0       	ldi	r25, 0x02	; 2
 666:	9f 93       	push	r25
 668:	8f 93       	push	r24
 66a:	1f 92       	push	r1
 66c:	83 e0       	ldi	r24, 0x03	; 3
 66e:	8f 93       	push	r24
 670:	22 df       	rcall	.-444    	; 0x4b6 <lcdWriteText>
 672:	8d b7       	in	r24, 0x3d	; 61
 674:	9e b7       	in	r25, 0x3e	; 62
 676:	40 96       	adiw	r24, 0x10	; 16
 678:	0f b6       	in	r0, 0x3f	; 63
 67a:	f8 94       	cli
 67c:	9e bf       	out	0x3e, r25	; 62
 67e:	0f be       	out	0x3f, r0	; 63
 680:	8d bf       	out	0x3d, r24	; 61
 682:	88 24       	eor	r8, r8
 684:	83 94       	inc	r8
 686:	c0 e0       	ldi	r28, 0x00	; 0
 688:	71 2c       	mov	r7, r1
 68a:	99 24       	eor	r9, r9
 68c:	93 94       	inc	r9
 68e:	d0 e0       	ldi	r29, 0x00	; 0
 690:	cc 24       	eor	r12, r12
 692:	c3 94       	inc	r12
 694:	d1 2c       	mov	r13, r1
 696:	e1 2c       	mov	r14, r1
 698:	68 94       	set
 69a:	ff 24       	eor	r15, r15
 69c:	f7 f8       	bld	r15, 7
 69e:	66 24       	eor	r6, r6
 6a0:	63 94       	inc	r6
 6a2:	51 2c       	mov	r5, r1
 6a4:	09 e0       	ldi	r16, 0x09	; 9
 6a6:	11 e0       	ldi	r17, 0x01	; 1
 6a8:	0f 2e       	mov	r0, r31
 6aa:	fc e5       	ldi	r31, 0x5C	; 92
 6ac:	af 2e       	mov	r10, r31
 6ae:	f2 e0       	ldi	r31, 0x02	; 2
 6b0:	bf 2e       	mov	r11, r31
 6b2:	f0 2d       	mov	r31, r0
 6b4:	0f 2e       	mov	r0, r31
 6b6:	f3 e0       	ldi	r31, 0x03	; 3
 6b8:	4f 2e       	mov	r4, r31
 6ba:	f0 2d       	mov	r31, r0
 6bc:	99 20       	and	r9, r9
 6be:	49 f0       	breq	.+18     	; 0x6d2 <initBoard+0x134>
 6c0:	c7 01       	movw	r24, r14
 6c2:	0d 2e       	mov	r0, r29
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <initBoard+0x12c>
 6c6:	96 95       	lsr	r25
 6c8:	87 95       	ror	r24
 6ca:	0a 94       	dec	r0
 6cc:	e2 f7       	brpl	.-8      	; 0x6c6 <initBoard+0x128>
 6ce:	09 de       	rcall	.-1006   	; 0x2e2 <ledWriteAll>
 6d0:	08 c0       	rjmp	.+16     	; 0x6e2 <initBoard+0x144>
 6d2:	c6 01       	movw	r24, r12
 6d4:	0d 2e       	mov	r0, r29
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <initBoard+0x13e>
 6d8:	88 0f       	add	r24, r24
 6da:	99 1f       	adc	r25, r25
 6dc:	0a 94       	dec	r0
 6de:	e2 f7       	brpl	.-8      	; 0x6d8 <initBoard+0x13a>
 6e0:	00 de       	rcall	.-1024   	; 0x2e2 <ledWriteAll>
 6e2:	df 5f       	subi	r29, 0xFF	; 255
 6e4:	d1 31       	cpi	r29, 0x11	; 17
 6e6:	28 f0       	brcs	.+10     	; 0x6f2 <initBoard+0x154>
 6e8:	86 2d       	mov	r24, r6
 6ea:	91 10       	cpse	r9, r1
 6ec:	85 2d       	mov	r24, r5
 6ee:	98 2e       	mov	r9, r24
 6f0:	d0 e0       	ldi	r29, 0x00	; 0
 6f2:	88 20       	and	r8, r8
 6f4:	11 f0       	breq	.+4      	; 0x6fa <initBoard+0x15c>
 6f6:	ce 5f       	subi	r28, 0xFE	; 254
 6f8:	01 c0       	rjmp	.+2      	; 0x6fc <initBoard+0x15e>
 6fa:	c2 50       	subi	r28, 0x02	; 2
 6fc:	8c 2f       	mov	r24, r28
 6fe:	58 de       	rcall	.-848    	; 0x3b0 <lcdLight>
 700:	ce 3f       	cpi	r28, 0xFE	; 254
 702:	21 f0       	breq	.+8      	; 0x70c <initBoard+0x16e>
 704:	c8 37       	cpi	r28, 0x78	; 120
 706:	19 f4       	brne	.+6      	; 0x70e <initBoard+0x170>
 708:	86 2c       	mov	r8, r6
 70a:	01 c0       	rjmp	.+2      	; 0x70e <initBoard+0x170>
 70c:	85 2c       	mov	r8, r5
 70e:	71 10       	cpse	r7, r1
 710:	3b c0       	rjmp	.+118    	; 0x788 <initBoard+0x1ea>
 712:	f8 01       	movw	r30, r16
 714:	80 81       	ld	r24, Z
 716:	83 7c       	andi	r24, 0xC3	; 195
 718:	91 f0       	breq	.+36     	; 0x73e <initBoard+0x1a0>
 71a:	40 e0       	ldi	r20, 0x00	; 0
 71c:	50 e0       	ldi	r21, 0x00	; 0
 71e:	66 e2       	ldi	r22, 0x26	; 38
 720:	72 e0       	ldi	r23, 0x02	; 2
 722:	8f ef       	ldi	r24, 0xFF	; 255
 724:	93 e0       	ldi	r25, 0x03	; 3
 726:	0d de       	rcall	.-998    	; 0x342 <rgbWrite>
 728:	bf 92       	push	r11
 72a:	af 92       	push	r10
 72c:	1f 92       	push	r1
 72e:	4f 92       	push	r4
 730:	c2 de       	rcall	.-636    	; 0x4b6 <lcdWriteText>
 732:	0f 90       	pop	r0
 734:	0f 90       	pop	r0
 736:	0f 90       	pop	r0
 738:	0f 90       	pop	r0
 73a:	76 2c       	mov	r7, r6
 73c:	25 c0       	rjmp	.+74     	; 0x788 <initBoard+0x1ea>
 73e:	8f ef       	ldi	r24, 0xFF	; 255
 740:	9c e7       	ldi	r25, 0x7C	; 124
 742:	01 97       	sbiw	r24, 0x01	; 1
 744:	f1 f7       	brne	.-4      	; 0x742 <initBoard+0x1a4>
 746:	00 c0       	rjmp	.+0      	; 0x748 <initBoard+0x1aa>
 748:	00 00       	nop
 74a:	b8 cf       	rjmp	.-144    	; 0x6bc <initBoard+0x11e>
 74c:	f0 de       	rcall	.-544    	; 0x52e <lcdClear>
 74e:	80 e0       	ldi	r24, 0x00	; 0
 750:	2f de       	rcall	.-930    	; 0x3b0 <lcdLight>
 752:	80 e0       	ldi	r24, 0x00	; 0
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	c5 dd       	rcall	.-1142   	; 0x2e2 <ledWriteAll>
 758:	40 e0       	ldi	r20, 0x00	; 0
 75a:	50 e0       	ldi	r21, 0x00	; 0
 75c:	60 e0       	ldi	r22, 0x00	; 0
 75e:	70 e0       	ldi	r23, 0x00	; 0
 760:	80 e0       	ldi	r24, 0x00	; 0
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	ee dd       	rcall	.-1060   	; 0x342 <rgbWrite>
 766:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 76a:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 76e:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 772:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 776:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 77a:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 77e:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 782:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 786:	05 c0       	rjmp	.+10     	; 0x792 <initBoard+0x1f4>
 788:	f8 01       	movw	r30, r16
 78a:	80 81       	ld	r24, Z
 78c:	83 7c       	andi	r24, 0xC3	; 195
 78e:	b9 f6       	brne	.-82     	; 0x73e <initBoard+0x1a0>
 790:	dd cf       	rjmp	.-70     	; 0x74c <initBoard+0x1ae>
 792:	df 91       	pop	r29
 794:	cf 91       	pop	r28
 796:	1f 91       	pop	r17
 798:	0f 91       	pop	r16
 79a:	ff 90       	pop	r15
 79c:	ef 90       	pop	r14
 79e:	df 90       	pop	r13
 7a0:	cf 90       	pop	r12
 7a2:	bf 90       	pop	r11
 7a4:	af 90       	pop	r10
 7a6:	9f 90       	pop	r9
 7a8:	8f 90       	pop	r8
 7aa:	7f 90       	pop	r7
 7ac:	6f 90       	pop	r6
 7ae:	5f 90       	pop	r5
 7b0:	4f 90       	pop	r4
 7b2:	08 95       	ret

000007b4 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 7b4:	cf 93       	push	r28
 7b6:	df 93       	push	r29
 7b8:	cd b7       	in	r28, 0x3d	; 61
 7ba:	de b7       	in	r29, 0x3e	; 62
 7bc:	28 97       	sbiw	r28, 0x08	; 8
 7be:	0f b6       	in	r0, 0x3f	; 63
 7c0:	f8 94       	cli
 7c2:	de bf       	out	0x3e, r29	; 62
 7c4:	0f be       	out	0x3f, r0	; 63
 7c6:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 7c8:	88 e0       	ldi	r24, 0x08	; 8
 7ca:	e0 e0       	ldi	r30, 0x00	; 0
 7cc:	f2 e0       	ldi	r31, 0x02	; 2
 7ce:	de 01       	movw	r26, r28
 7d0:	11 96       	adiw	r26, 0x01	; 1
 7d2:	01 90       	ld	r0, Z+
 7d4:	0d 92       	st	X+, r0
 7d6:	8a 95       	dec	r24
 7d8:	e1 f7       	brne	.-8      	; 0x7d2 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 7da:	e5 e0       	ldi	r30, 0x05	; 5
 7dc:	f1 e0       	ldi	r31, 0x01	; 1
 7de:	80 81       	ld	r24, Z
 7e0:	8f 7b       	andi	r24, 0xBF	; 191
 7e2:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 7e4:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2731>
 7e8:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2731+0x1>
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	8c 0f       	add	r24, r28
 7f2:	9d 1f       	adc	r25, r29
 7f4:	e8 0f       	add	r30, r24
 7f6:	f9 1f       	adc	r31, r25
 7f8:	80 81       	ld	r24, Z
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 800:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 804:	a2 ef       	ldi	r26, 0xF2	; 242
 806:	b2 e0       	ldi	r27, 0x02	; 2
 808:	22 e8       	ldi	r18, 0x82	; 130
 80a:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 80c:	e5 e0       	ldi	r30, 0x05	; 5
 80e:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 810:	5e 91       	ld	r21, -X
 812:	4e 91       	ld	r20, -X
 814:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 818:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 81c:	84 23       	and	r24, r20
 81e:	95 23       	and	r25, r21
 820:	89 2b       	or	r24, r25
 822:	21 f0       	breq	.+8      	; 0x82c <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 824:	80 81       	ld	r24, Z
 826:	80 62       	ori	r24, 0x20	; 32
 828:	80 83       	st	Z, r24
 82a:	03 c0       	rjmp	.+6      	; 0x832 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 82c:	80 81       	ld	r24, Z
 82e:	8f 7d       	andi	r24, 0xDF	; 223
 830:	80 83       	st	Z, r24
        }
        CLOCK_1;
 832:	80 81       	ld	r24, Z
 834:	80 61       	ori	r24, 0x10	; 16
 836:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 838:	80 81       	ld	r24, Z
 83a:	8f 7e       	andi	r24, 0xEF	; 239
 83c:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 83e:	a2 17       	cp	r26, r18
 840:	b3 07       	cpc	r27, r19
 842:	31 f7       	brne	.-52     	; 0x810 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 844:	e5 e0       	ldi	r30, 0x05	; 5
 846:	f1 e0       	ldi	r31, 0x01	; 1
 848:	80 81       	ld	r24, Z
 84a:	87 7f       	andi	r24, 0xF7	; 247
 84c:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 84e:	80 81       	ld	r24, Z
 850:	88 7f       	andi	r24, 0xF8	; 248
 852:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 854:	90 81       	ld	r25, Z
 856:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2731>
 85a:	89 2b       	or	r24, r25
 85c:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 85e:	80 81       	ld	r24, Z
 860:	80 64       	ori	r24, 0x40	; 64
 862:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 864:	80 81       	ld	r24, Z
 866:	88 60       	ori	r24, 0x08	; 8
 868:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 86a:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2731>
 86e:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2731+0x1>
 872:	87 30       	cpi	r24, 0x07	; 7
 874:	91 05       	cpc	r25, r1
 876:	30 f4       	brcc	.+12     	; 0x884 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 878:	01 96       	adiw	r24, 0x01	; 1
 87a:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2731+0x1>
 87e:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2731>
 882:	07 c0       	rjmp	.+14     	; 0x892 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 884:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2731+0x1>
 888:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2731>
        writeTextFinished = 1;
 88c:	81 e0       	ldi	r24, 0x01	; 1
 88e:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 892:	28 96       	adiw	r28, 0x08	; 8
 894:	0f b6       	in	r0, 0x3f	; 63
 896:	f8 94       	cli
 898:	de bf       	out	0x3e, r29	; 62
 89a:	0f be       	out	0x3f, r0	; 63
 89c:	cd bf       	out	0x3d, r28	; 61
 89e:	df 91       	pop	r29
 8a0:	cf 91       	pop	r28
 8a2:	08 95       	ret

000008a4 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 8a4:	1f 92       	push	r1
 8a6:	0f 92       	push	r0
 8a8:	0f b6       	in	r0, 0x3f	; 63
 8aa:	0f 92       	push	r0
 8ac:	11 24       	eor	r1, r1
 8ae:	0b b6       	in	r0, 0x3b	; 59
 8b0:	0f 92       	push	r0
 8b2:	2f 93       	push	r18
 8b4:	3f 93       	push	r19
 8b6:	4f 93       	push	r20
 8b8:	5f 93       	push	r21
 8ba:	6f 93       	push	r22
 8bc:	7f 93       	push	r23
 8be:	8f 93       	push	r24
 8c0:	9f 93       	push	r25
 8c2:	af 93       	push	r26
 8c4:	bf 93       	push	r27
 8c6:	ef 93       	push	r30
 8c8:	ff 93       	push	r31
    systemTimeMs += 1;
 8ca:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 8ce:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 8d2:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 8d6:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 8da:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 8de:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 8e2:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 8e6:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 8ea:	a1 e0       	ldi	r26, 0x01	; 1
 8ec:	27 d0       	rcall	.+78     	; 0x93c <__adddi3_s8>
 8ee:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 8f2:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 8f6:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 8fa:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 8fe:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 902:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 906:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 90a:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 90e:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 912:	81 11       	cpse	r24, r1
 914:	4f df       	rcall	.-354    	; 0x7b4 <matrixWriteNextLine>
}
 916:	ff 91       	pop	r31
 918:	ef 91       	pop	r30
 91a:	bf 91       	pop	r27
 91c:	af 91       	pop	r26
 91e:	9f 91       	pop	r25
 920:	8f 91       	pop	r24
 922:	7f 91       	pop	r23
 924:	6f 91       	pop	r22
 926:	5f 91       	pop	r21
 928:	4f 91       	pop	r20
 92a:	3f 91       	pop	r19
 92c:	2f 91       	pop	r18
 92e:	0f 90       	pop	r0
 930:	0b be       	out	0x3b, r0	; 59
 932:	0f 90       	pop	r0
 934:	0f be       	out	0x3f, r0	; 63
 936:	0f 90       	pop	r0
 938:	1f 90       	pop	r1
 93a:	18 95       	reti

0000093c <__adddi3_s8>:
 93c:	00 24       	eor	r0, r0
 93e:	a7 fd       	sbrc	r26, 7
 940:	00 94       	com	r0
 942:	2a 0f       	add	r18, r26
 944:	30 1d       	adc	r19, r0
 946:	40 1d       	adc	r20, r0
 948:	50 1d       	adc	r21, r0
 94a:	60 1d       	adc	r22, r0
 94c:	70 1d       	adc	r23, r0
 94e:	80 1d       	adc	r24, r0
 950:	90 1d       	adc	r25, r0
 952:	08 95       	ret

00000954 <vsnprintf>:
 954:	0f 93       	push	r16
 956:	1f 93       	push	r17
 958:	cf 93       	push	r28
 95a:	df 93       	push	r29
 95c:	cd b7       	in	r28, 0x3d	; 61
 95e:	de b7       	in	r29, 0x3e	; 62
 960:	2e 97       	sbiw	r28, 0x0e	; 14
 962:	0f b6       	in	r0, 0x3f	; 63
 964:	f8 94       	cli
 966:	de bf       	out	0x3e, r29	; 62
 968:	0f be       	out	0x3f, r0	; 63
 96a:	cd bf       	out	0x3d, r28	; 61
 96c:	8c 01       	movw	r16, r24
 96e:	fa 01       	movw	r30, r20
 970:	86 e0       	ldi	r24, 0x06	; 6
 972:	8c 83       	std	Y+4, r24	; 0x04
 974:	1a 83       	std	Y+2, r17	; 0x02
 976:	09 83       	std	Y+1, r16	; 0x01
 978:	77 ff       	sbrs	r23, 7
 97a:	02 c0       	rjmp	.+4      	; 0x980 <vsnprintf+0x2c>
 97c:	60 e0       	ldi	r22, 0x00	; 0
 97e:	70 e8       	ldi	r23, 0x80	; 128
 980:	cb 01       	movw	r24, r22
 982:	01 97       	sbiw	r24, 0x01	; 1
 984:	9e 83       	std	Y+6, r25	; 0x06
 986:	8d 83       	std	Y+5, r24	; 0x05
 988:	a9 01       	movw	r20, r18
 98a:	bf 01       	movw	r22, r30
 98c:	ce 01       	movw	r24, r28
 98e:	01 96       	adiw	r24, 0x01	; 1
 990:	19 d0       	rcall	.+50     	; 0x9c4 <vfprintf>
 992:	4d 81       	ldd	r20, Y+5	; 0x05
 994:	5e 81       	ldd	r21, Y+6	; 0x06
 996:	57 fd       	sbrc	r21, 7
 998:	0a c0       	rjmp	.+20     	; 0x9ae <vsnprintf+0x5a>
 99a:	2f 81       	ldd	r18, Y+7	; 0x07
 99c:	38 85       	ldd	r19, Y+8	; 0x08
 99e:	42 17       	cp	r20, r18
 9a0:	53 07       	cpc	r21, r19
 9a2:	0c f4       	brge	.+2      	; 0x9a6 <vsnprintf+0x52>
 9a4:	9a 01       	movw	r18, r20
 9a6:	f8 01       	movw	r30, r16
 9a8:	e2 0f       	add	r30, r18
 9aa:	f3 1f       	adc	r31, r19
 9ac:	10 82       	st	Z, r1
 9ae:	2e 96       	adiw	r28, 0x0e	; 14
 9b0:	0f b6       	in	r0, 0x3f	; 63
 9b2:	f8 94       	cli
 9b4:	de bf       	out	0x3e, r29	; 62
 9b6:	0f be       	out	0x3f, r0	; 63
 9b8:	cd bf       	out	0x3d, r28	; 61
 9ba:	df 91       	pop	r29
 9bc:	cf 91       	pop	r28
 9be:	1f 91       	pop	r17
 9c0:	0f 91       	pop	r16
 9c2:	08 95       	ret

000009c4 <vfprintf>:
 9c4:	2f 92       	push	r2
 9c6:	3f 92       	push	r3
 9c8:	4f 92       	push	r4
 9ca:	5f 92       	push	r5
 9cc:	6f 92       	push	r6
 9ce:	7f 92       	push	r7
 9d0:	8f 92       	push	r8
 9d2:	9f 92       	push	r9
 9d4:	af 92       	push	r10
 9d6:	bf 92       	push	r11
 9d8:	cf 92       	push	r12
 9da:	df 92       	push	r13
 9dc:	ef 92       	push	r14
 9de:	ff 92       	push	r15
 9e0:	0f 93       	push	r16
 9e2:	1f 93       	push	r17
 9e4:	cf 93       	push	r28
 9e6:	df 93       	push	r29
 9e8:	cd b7       	in	r28, 0x3d	; 61
 9ea:	de b7       	in	r29, 0x3e	; 62
 9ec:	2b 97       	sbiw	r28, 0x0b	; 11
 9ee:	0f b6       	in	r0, 0x3f	; 63
 9f0:	f8 94       	cli
 9f2:	de bf       	out	0x3e, r29	; 62
 9f4:	0f be       	out	0x3f, r0	; 63
 9f6:	cd bf       	out	0x3d, r28	; 61
 9f8:	6c 01       	movw	r12, r24
 9fa:	7b 01       	movw	r14, r22
 9fc:	8a 01       	movw	r16, r20
 9fe:	fc 01       	movw	r30, r24
 a00:	17 82       	std	Z+7, r1	; 0x07
 a02:	16 82       	std	Z+6, r1	; 0x06
 a04:	83 81       	ldd	r24, Z+3	; 0x03
 a06:	81 ff       	sbrs	r24, 1
 a08:	bf c1       	rjmp	.+894    	; 0xd88 <vfprintf+0x3c4>
 a0a:	ce 01       	movw	r24, r28
 a0c:	01 96       	adiw	r24, 0x01	; 1
 a0e:	3c 01       	movw	r6, r24
 a10:	f6 01       	movw	r30, r12
 a12:	93 81       	ldd	r25, Z+3	; 0x03
 a14:	f7 01       	movw	r30, r14
 a16:	93 fd       	sbrc	r25, 3
 a18:	85 91       	lpm	r24, Z+
 a1a:	93 ff       	sbrs	r25, 3
 a1c:	81 91       	ld	r24, Z+
 a1e:	7f 01       	movw	r14, r30
 a20:	88 23       	and	r24, r24
 a22:	09 f4       	brne	.+2      	; 0xa26 <vfprintf+0x62>
 a24:	ad c1       	rjmp	.+858    	; 0xd80 <vfprintf+0x3bc>
 a26:	85 32       	cpi	r24, 0x25	; 37
 a28:	39 f4       	brne	.+14     	; 0xa38 <vfprintf+0x74>
 a2a:	93 fd       	sbrc	r25, 3
 a2c:	85 91       	lpm	r24, Z+
 a2e:	93 ff       	sbrs	r25, 3
 a30:	81 91       	ld	r24, Z+
 a32:	7f 01       	movw	r14, r30
 a34:	85 32       	cpi	r24, 0x25	; 37
 a36:	21 f4       	brne	.+8      	; 0xa40 <vfprintf+0x7c>
 a38:	b6 01       	movw	r22, r12
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	d6 d1       	rcall	.+940    	; 0xdea <fputc>
 a3e:	e8 cf       	rjmp	.-48     	; 0xa10 <vfprintf+0x4c>
 a40:	91 2c       	mov	r9, r1
 a42:	21 2c       	mov	r2, r1
 a44:	31 2c       	mov	r3, r1
 a46:	ff e1       	ldi	r31, 0x1F	; 31
 a48:	f3 15       	cp	r31, r3
 a4a:	d8 f0       	brcs	.+54     	; 0xa82 <vfprintf+0xbe>
 a4c:	8b 32       	cpi	r24, 0x2B	; 43
 a4e:	79 f0       	breq	.+30     	; 0xa6e <vfprintf+0xaa>
 a50:	38 f4       	brcc	.+14     	; 0xa60 <vfprintf+0x9c>
 a52:	80 32       	cpi	r24, 0x20	; 32
 a54:	79 f0       	breq	.+30     	; 0xa74 <vfprintf+0xb0>
 a56:	83 32       	cpi	r24, 0x23	; 35
 a58:	a1 f4       	brne	.+40     	; 0xa82 <vfprintf+0xbe>
 a5a:	23 2d       	mov	r18, r3
 a5c:	20 61       	ori	r18, 0x10	; 16
 a5e:	1d c0       	rjmp	.+58     	; 0xa9a <vfprintf+0xd6>
 a60:	8d 32       	cpi	r24, 0x2D	; 45
 a62:	61 f0       	breq	.+24     	; 0xa7c <vfprintf+0xb8>
 a64:	80 33       	cpi	r24, 0x30	; 48
 a66:	69 f4       	brne	.+26     	; 0xa82 <vfprintf+0xbe>
 a68:	23 2d       	mov	r18, r3
 a6a:	21 60       	ori	r18, 0x01	; 1
 a6c:	16 c0       	rjmp	.+44     	; 0xa9a <vfprintf+0xd6>
 a6e:	83 2d       	mov	r24, r3
 a70:	82 60       	ori	r24, 0x02	; 2
 a72:	38 2e       	mov	r3, r24
 a74:	e3 2d       	mov	r30, r3
 a76:	e4 60       	ori	r30, 0x04	; 4
 a78:	3e 2e       	mov	r3, r30
 a7a:	2a c0       	rjmp	.+84     	; 0xad0 <vfprintf+0x10c>
 a7c:	f3 2d       	mov	r31, r3
 a7e:	f8 60       	ori	r31, 0x08	; 8
 a80:	1d c0       	rjmp	.+58     	; 0xabc <vfprintf+0xf8>
 a82:	37 fc       	sbrc	r3, 7
 a84:	2d c0       	rjmp	.+90     	; 0xae0 <vfprintf+0x11c>
 a86:	20 ed       	ldi	r18, 0xD0	; 208
 a88:	28 0f       	add	r18, r24
 a8a:	2a 30       	cpi	r18, 0x0A	; 10
 a8c:	40 f0       	brcs	.+16     	; 0xa9e <vfprintf+0xda>
 a8e:	8e 32       	cpi	r24, 0x2E	; 46
 a90:	b9 f4       	brne	.+46     	; 0xac0 <vfprintf+0xfc>
 a92:	36 fc       	sbrc	r3, 6
 a94:	75 c1       	rjmp	.+746    	; 0xd80 <vfprintf+0x3bc>
 a96:	23 2d       	mov	r18, r3
 a98:	20 64       	ori	r18, 0x40	; 64
 a9a:	32 2e       	mov	r3, r18
 a9c:	19 c0       	rjmp	.+50     	; 0xad0 <vfprintf+0x10c>
 a9e:	36 fe       	sbrs	r3, 6
 aa0:	06 c0       	rjmp	.+12     	; 0xaae <vfprintf+0xea>
 aa2:	8a e0       	ldi	r24, 0x0A	; 10
 aa4:	98 9e       	mul	r9, r24
 aa6:	20 0d       	add	r18, r0
 aa8:	11 24       	eor	r1, r1
 aaa:	92 2e       	mov	r9, r18
 aac:	11 c0       	rjmp	.+34     	; 0xad0 <vfprintf+0x10c>
 aae:	ea e0       	ldi	r30, 0x0A	; 10
 ab0:	2e 9e       	mul	r2, r30
 ab2:	20 0d       	add	r18, r0
 ab4:	11 24       	eor	r1, r1
 ab6:	22 2e       	mov	r2, r18
 ab8:	f3 2d       	mov	r31, r3
 aba:	f0 62       	ori	r31, 0x20	; 32
 abc:	3f 2e       	mov	r3, r31
 abe:	08 c0       	rjmp	.+16     	; 0xad0 <vfprintf+0x10c>
 ac0:	8c 36       	cpi	r24, 0x6C	; 108
 ac2:	21 f4       	brne	.+8      	; 0xacc <vfprintf+0x108>
 ac4:	83 2d       	mov	r24, r3
 ac6:	80 68       	ori	r24, 0x80	; 128
 ac8:	38 2e       	mov	r3, r24
 aca:	02 c0       	rjmp	.+4      	; 0xad0 <vfprintf+0x10c>
 acc:	88 36       	cpi	r24, 0x68	; 104
 ace:	41 f4       	brne	.+16     	; 0xae0 <vfprintf+0x11c>
 ad0:	f7 01       	movw	r30, r14
 ad2:	93 fd       	sbrc	r25, 3
 ad4:	85 91       	lpm	r24, Z+
 ad6:	93 ff       	sbrs	r25, 3
 ad8:	81 91       	ld	r24, Z+
 ada:	7f 01       	movw	r14, r30
 adc:	81 11       	cpse	r24, r1
 ade:	b3 cf       	rjmp	.-154    	; 0xa46 <vfprintf+0x82>
 ae0:	98 2f       	mov	r25, r24
 ae2:	9f 7d       	andi	r25, 0xDF	; 223
 ae4:	95 54       	subi	r25, 0x45	; 69
 ae6:	93 30       	cpi	r25, 0x03	; 3
 ae8:	28 f4       	brcc	.+10     	; 0xaf4 <vfprintf+0x130>
 aea:	0c 5f       	subi	r16, 0xFC	; 252
 aec:	1f 4f       	sbci	r17, 0xFF	; 255
 aee:	9f e3       	ldi	r25, 0x3F	; 63
 af0:	99 83       	std	Y+1, r25	; 0x01
 af2:	0d c0       	rjmp	.+26     	; 0xb0e <vfprintf+0x14a>
 af4:	83 36       	cpi	r24, 0x63	; 99
 af6:	31 f0       	breq	.+12     	; 0xb04 <vfprintf+0x140>
 af8:	83 37       	cpi	r24, 0x73	; 115
 afa:	71 f0       	breq	.+28     	; 0xb18 <vfprintf+0x154>
 afc:	83 35       	cpi	r24, 0x53	; 83
 afe:	09 f0       	breq	.+2      	; 0xb02 <vfprintf+0x13e>
 b00:	55 c0       	rjmp	.+170    	; 0xbac <vfprintf+0x1e8>
 b02:	20 c0       	rjmp	.+64     	; 0xb44 <vfprintf+0x180>
 b04:	f8 01       	movw	r30, r16
 b06:	80 81       	ld	r24, Z
 b08:	89 83       	std	Y+1, r24	; 0x01
 b0a:	0e 5f       	subi	r16, 0xFE	; 254
 b0c:	1f 4f       	sbci	r17, 0xFF	; 255
 b0e:	88 24       	eor	r8, r8
 b10:	83 94       	inc	r8
 b12:	91 2c       	mov	r9, r1
 b14:	53 01       	movw	r10, r6
 b16:	12 c0       	rjmp	.+36     	; 0xb3c <vfprintf+0x178>
 b18:	28 01       	movw	r4, r16
 b1a:	f2 e0       	ldi	r31, 0x02	; 2
 b1c:	4f 0e       	add	r4, r31
 b1e:	51 1c       	adc	r5, r1
 b20:	f8 01       	movw	r30, r16
 b22:	a0 80       	ld	r10, Z
 b24:	b1 80       	ldd	r11, Z+1	; 0x01
 b26:	36 fe       	sbrs	r3, 6
 b28:	03 c0       	rjmp	.+6      	; 0xb30 <vfprintf+0x16c>
 b2a:	69 2d       	mov	r22, r9
 b2c:	70 e0       	ldi	r23, 0x00	; 0
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0x170>
 b30:	6f ef       	ldi	r22, 0xFF	; 255
 b32:	7f ef       	ldi	r23, 0xFF	; 255
 b34:	c5 01       	movw	r24, r10
 b36:	4e d1       	rcall	.+668    	; 0xdd4 <strnlen>
 b38:	4c 01       	movw	r8, r24
 b3a:	82 01       	movw	r16, r4
 b3c:	f3 2d       	mov	r31, r3
 b3e:	ff 77       	andi	r31, 0x7F	; 127
 b40:	3f 2e       	mov	r3, r31
 b42:	15 c0       	rjmp	.+42     	; 0xb6e <vfprintf+0x1aa>
 b44:	28 01       	movw	r4, r16
 b46:	22 e0       	ldi	r18, 0x02	; 2
 b48:	42 0e       	add	r4, r18
 b4a:	51 1c       	adc	r5, r1
 b4c:	f8 01       	movw	r30, r16
 b4e:	a0 80       	ld	r10, Z
 b50:	b1 80       	ldd	r11, Z+1	; 0x01
 b52:	36 fe       	sbrs	r3, 6
 b54:	03 c0       	rjmp	.+6      	; 0xb5c <vfprintf+0x198>
 b56:	69 2d       	mov	r22, r9
 b58:	70 e0       	ldi	r23, 0x00	; 0
 b5a:	02 c0       	rjmp	.+4      	; 0xb60 <vfprintf+0x19c>
 b5c:	6f ef       	ldi	r22, 0xFF	; 255
 b5e:	7f ef       	ldi	r23, 0xFF	; 255
 b60:	c5 01       	movw	r24, r10
 b62:	2d d1       	rcall	.+602    	; 0xdbe <strnlen_P>
 b64:	4c 01       	movw	r8, r24
 b66:	f3 2d       	mov	r31, r3
 b68:	f0 68       	ori	r31, 0x80	; 128
 b6a:	3f 2e       	mov	r3, r31
 b6c:	82 01       	movw	r16, r4
 b6e:	33 fc       	sbrc	r3, 3
 b70:	19 c0       	rjmp	.+50     	; 0xba4 <vfprintf+0x1e0>
 b72:	82 2d       	mov	r24, r2
 b74:	90 e0       	ldi	r25, 0x00	; 0
 b76:	88 16       	cp	r8, r24
 b78:	99 06       	cpc	r9, r25
 b7a:	a0 f4       	brcc	.+40     	; 0xba4 <vfprintf+0x1e0>
 b7c:	b6 01       	movw	r22, r12
 b7e:	80 e2       	ldi	r24, 0x20	; 32
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	33 d1       	rcall	.+614    	; 0xdea <fputc>
 b84:	2a 94       	dec	r2
 b86:	f5 cf       	rjmp	.-22     	; 0xb72 <vfprintf+0x1ae>
 b88:	f5 01       	movw	r30, r10
 b8a:	37 fc       	sbrc	r3, 7
 b8c:	85 91       	lpm	r24, Z+
 b8e:	37 fe       	sbrs	r3, 7
 b90:	81 91       	ld	r24, Z+
 b92:	5f 01       	movw	r10, r30
 b94:	b6 01       	movw	r22, r12
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	28 d1       	rcall	.+592    	; 0xdea <fputc>
 b9a:	21 10       	cpse	r2, r1
 b9c:	2a 94       	dec	r2
 b9e:	21 e0       	ldi	r18, 0x01	; 1
 ba0:	82 1a       	sub	r8, r18
 ba2:	91 08       	sbc	r9, r1
 ba4:	81 14       	cp	r8, r1
 ba6:	91 04       	cpc	r9, r1
 ba8:	79 f7       	brne	.-34     	; 0xb88 <vfprintf+0x1c4>
 baa:	e1 c0       	rjmp	.+450    	; 0xd6e <vfprintf+0x3aa>
 bac:	84 36       	cpi	r24, 0x64	; 100
 bae:	11 f0       	breq	.+4      	; 0xbb4 <vfprintf+0x1f0>
 bb0:	89 36       	cpi	r24, 0x69	; 105
 bb2:	39 f5       	brne	.+78     	; 0xc02 <vfprintf+0x23e>
 bb4:	f8 01       	movw	r30, r16
 bb6:	37 fe       	sbrs	r3, 7
 bb8:	07 c0       	rjmp	.+14     	; 0xbc8 <vfprintf+0x204>
 bba:	60 81       	ld	r22, Z
 bbc:	71 81       	ldd	r23, Z+1	; 0x01
 bbe:	82 81       	ldd	r24, Z+2	; 0x02
 bc0:	93 81       	ldd	r25, Z+3	; 0x03
 bc2:	0c 5f       	subi	r16, 0xFC	; 252
 bc4:	1f 4f       	sbci	r17, 0xFF	; 255
 bc6:	08 c0       	rjmp	.+16     	; 0xbd8 <vfprintf+0x214>
 bc8:	60 81       	ld	r22, Z
 bca:	71 81       	ldd	r23, Z+1	; 0x01
 bcc:	07 2e       	mov	r0, r23
 bce:	00 0c       	add	r0, r0
 bd0:	88 0b       	sbc	r24, r24
 bd2:	99 0b       	sbc	r25, r25
 bd4:	0e 5f       	subi	r16, 0xFE	; 254
 bd6:	1f 4f       	sbci	r17, 0xFF	; 255
 bd8:	f3 2d       	mov	r31, r3
 bda:	ff 76       	andi	r31, 0x6F	; 111
 bdc:	3f 2e       	mov	r3, r31
 bde:	97 ff       	sbrs	r25, 7
 be0:	09 c0       	rjmp	.+18     	; 0xbf4 <vfprintf+0x230>
 be2:	90 95       	com	r25
 be4:	80 95       	com	r24
 be6:	70 95       	com	r23
 be8:	61 95       	neg	r22
 bea:	7f 4f       	sbci	r23, 0xFF	; 255
 bec:	8f 4f       	sbci	r24, 0xFF	; 255
 bee:	9f 4f       	sbci	r25, 0xFF	; 255
 bf0:	f0 68       	ori	r31, 0x80	; 128
 bf2:	3f 2e       	mov	r3, r31
 bf4:	2a e0       	ldi	r18, 0x0A	; 10
 bf6:	30 e0       	ldi	r19, 0x00	; 0
 bf8:	a3 01       	movw	r20, r6
 bfa:	33 d1       	rcall	.+614    	; 0xe62 <__ultoa_invert>
 bfc:	88 2e       	mov	r8, r24
 bfe:	86 18       	sub	r8, r6
 c00:	44 c0       	rjmp	.+136    	; 0xc8a <vfprintf+0x2c6>
 c02:	85 37       	cpi	r24, 0x75	; 117
 c04:	31 f4       	brne	.+12     	; 0xc12 <vfprintf+0x24e>
 c06:	23 2d       	mov	r18, r3
 c08:	2f 7e       	andi	r18, 0xEF	; 239
 c0a:	b2 2e       	mov	r11, r18
 c0c:	2a e0       	ldi	r18, 0x0A	; 10
 c0e:	30 e0       	ldi	r19, 0x00	; 0
 c10:	25 c0       	rjmp	.+74     	; 0xc5c <vfprintf+0x298>
 c12:	93 2d       	mov	r25, r3
 c14:	99 7f       	andi	r25, 0xF9	; 249
 c16:	b9 2e       	mov	r11, r25
 c18:	8f 36       	cpi	r24, 0x6F	; 111
 c1a:	c1 f0       	breq	.+48     	; 0xc4c <vfprintf+0x288>
 c1c:	18 f4       	brcc	.+6      	; 0xc24 <vfprintf+0x260>
 c1e:	88 35       	cpi	r24, 0x58	; 88
 c20:	79 f0       	breq	.+30     	; 0xc40 <vfprintf+0x27c>
 c22:	ae c0       	rjmp	.+348    	; 0xd80 <vfprintf+0x3bc>
 c24:	80 37       	cpi	r24, 0x70	; 112
 c26:	19 f0       	breq	.+6      	; 0xc2e <vfprintf+0x26a>
 c28:	88 37       	cpi	r24, 0x78	; 120
 c2a:	21 f0       	breq	.+8      	; 0xc34 <vfprintf+0x270>
 c2c:	a9 c0       	rjmp	.+338    	; 0xd80 <vfprintf+0x3bc>
 c2e:	e9 2f       	mov	r30, r25
 c30:	e0 61       	ori	r30, 0x10	; 16
 c32:	be 2e       	mov	r11, r30
 c34:	b4 fe       	sbrs	r11, 4
 c36:	0d c0       	rjmp	.+26     	; 0xc52 <vfprintf+0x28e>
 c38:	fb 2d       	mov	r31, r11
 c3a:	f4 60       	ori	r31, 0x04	; 4
 c3c:	bf 2e       	mov	r11, r31
 c3e:	09 c0       	rjmp	.+18     	; 0xc52 <vfprintf+0x28e>
 c40:	34 fe       	sbrs	r3, 4
 c42:	0a c0       	rjmp	.+20     	; 0xc58 <vfprintf+0x294>
 c44:	29 2f       	mov	r18, r25
 c46:	26 60       	ori	r18, 0x06	; 6
 c48:	b2 2e       	mov	r11, r18
 c4a:	06 c0       	rjmp	.+12     	; 0xc58 <vfprintf+0x294>
 c4c:	28 e0       	ldi	r18, 0x08	; 8
 c4e:	30 e0       	ldi	r19, 0x00	; 0
 c50:	05 c0       	rjmp	.+10     	; 0xc5c <vfprintf+0x298>
 c52:	20 e1       	ldi	r18, 0x10	; 16
 c54:	30 e0       	ldi	r19, 0x00	; 0
 c56:	02 c0       	rjmp	.+4      	; 0xc5c <vfprintf+0x298>
 c58:	20 e1       	ldi	r18, 0x10	; 16
 c5a:	32 e0       	ldi	r19, 0x02	; 2
 c5c:	f8 01       	movw	r30, r16
 c5e:	b7 fe       	sbrs	r11, 7
 c60:	07 c0       	rjmp	.+14     	; 0xc70 <vfprintf+0x2ac>
 c62:	60 81       	ld	r22, Z
 c64:	71 81       	ldd	r23, Z+1	; 0x01
 c66:	82 81       	ldd	r24, Z+2	; 0x02
 c68:	93 81       	ldd	r25, Z+3	; 0x03
 c6a:	0c 5f       	subi	r16, 0xFC	; 252
 c6c:	1f 4f       	sbci	r17, 0xFF	; 255
 c6e:	06 c0       	rjmp	.+12     	; 0xc7c <vfprintf+0x2b8>
 c70:	60 81       	ld	r22, Z
 c72:	71 81       	ldd	r23, Z+1	; 0x01
 c74:	80 e0       	ldi	r24, 0x00	; 0
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	0e 5f       	subi	r16, 0xFE	; 254
 c7a:	1f 4f       	sbci	r17, 0xFF	; 255
 c7c:	a3 01       	movw	r20, r6
 c7e:	f1 d0       	rcall	.+482    	; 0xe62 <__ultoa_invert>
 c80:	88 2e       	mov	r8, r24
 c82:	86 18       	sub	r8, r6
 c84:	fb 2d       	mov	r31, r11
 c86:	ff 77       	andi	r31, 0x7F	; 127
 c88:	3f 2e       	mov	r3, r31
 c8a:	36 fe       	sbrs	r3, 6
 c8c:	0d c0       	rjmp	.+26     	; 0xca8 <vfprintf+0x2e4>
 c8e:	23 2d       	mov	r18, r3
 c90:	2e 7f       	andi	r18, 0xFE	; 254
 c92:	a2 2e       	mov	r10, r18
 c94:	89 14       	cp	r8, r9
 c96:	58 f4       	brcc	.+22     	; 0xcae <vfprintf+0x2ea>
 c98:	34 fe       	sbrs	r3, 4
 c9a:	0b c0       	rjmp	.+22     	; 0xcb2 <vfprintf+0x2ee>
 c9c:	32 fc       	sbrc	r3, 2
 c9e:	09 c0       	rjmp	.+18     	; 0xcb2 <vfprintf+0x2ee>
 ca0:	83 2d       	mov	r24, r3
 ca2:	8e 7e       	andi	r24, 0xEE	; 238
 ca4:	a8 2e       	mov	r10, r24
 ca6:	05 c0       	rjmp	.+10     	; 0xcb2 <vfprintf+0x2ee>
 ca8:	b8 2c       	mov	r11, r8
 caa:	a3 2c       	mov	r10, r3
 cac:	03 c0       	rjmp	.+6      	; 0xcb4 <vfprintf+0x2f0>
 cae:	b8 2c       	mov	r11, r8
 cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <vfprintf+0x2f0>
 cb2:	b9 2c       	mov	r11, r9
 cb4:	a4 fe       	sbrs	r10, 4
 cb6:	0f c0       	rjmp	.+30     	; 0xcd6 <vfprintf+0x312>
 cb8:	fe 01       	movw	r30, r28
 cba:	e8 0d       	add	r30, r8
 cbc:	f1 1d       	adc	r31, r1
 cbe:	80 81       	ld	r24, Z
 cc0:	80 33       	cpi	r24, 0x30	; 48
 cc2:	21 f4       	brne	.+8      	; 0xccc <vfprintf+0x308>
 cc4:	9a 2d       	mov	r25, r10
 cc6:	99 7e       	andi	r25, 0xE9	; 233
 cc8:	a9 2e       	mov	r10, r25
 cca:	09 c0       	rjmp	.+18     	; 0xcde <vfprintf+0x31a>
 ccc:	a2 fe       	sbrs	r10, 2
 cce:	06 c0       	rjmp	.+12     	; 0xcdc <vfprintf+0x318>
 cd0:	b3 94       	inc	r11
 cd2:	b3 94       	inc	r11
 cd4:	04 c0       	rjmp	.+8      	; 0xcde <vfprintf+0x31a>
 cd6:	8a 2d       	mov	r24, r10
 cd8:	86 78       	andi	r24, 0x86	; 134
 cda:	09 f0       	breq	.+2      	; 0xcde <vfprintf+0x31a>
 cdc:	b3 94       	inc	r11
 cde:	a3 fc       	sbrc	r10, 3
 ce0:	10 c0       	rjmp	.+32     	; 0xd02 <vfprintf+0x33e>
 ce2:	a0 fe       	sbrs	r10, 0
 ce4:	06 c0       	rjmp	.+12     	; 0xcf2 <vfprintf+0x32e>
 ce6:	b2 14       	cp	r11, r2
 ce8:	80 f4       	brcc	.+32     	; 0xd0a <vfprintf+0x346>
 cea:	28 0c       	add	r2, r8
 cec:	92 2c       	mov	r9, r2
 cee:	9b 18       	sub	r9, r11
 cf0:	0d c0       	rjmp	.+26     	; 0xd0c <vfprintf+0x348>
 cf2:	b2 14       	cp	r11, r2
 cf4:	58 f4       	brcc	.+22     	; 0xd0c <vfprintf+0x348>
 cf6:	b6 01       	movw	r22, r12
 cf8:	80 e2       	ldi	r24, 0x20	; 32
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	76 d0       	rcall	.+236    	; 0xdea <fputc>
 cfe:	b3 94       	inc	r11
 d00:	f8 cf       	rjmp	.-16     	; 0xcf2 <vfprintf+0x32e>
 d02:	b2 14       	cp	r11, r2
 d04:	18 f4       	brcc	.+6      	; 0xd0c <vfprintf+0x348>
 d06:	2b 18       	sub	r2, r11
 d08:	02 c0       	rjmp	.+4      	; 0xd0e <vfprintf+0x34a>
 d0a:	98 2c       	mov	r9, r8
 d0c:	21 2c       	mov	r2, r1
 d0e:	a4 fe       	sbrs	r10, 4
 d10:	0f c0       	rjmp	.+30     	; 0xd30 <vfprintf+0x36c>
 d12:	b6 01       	movw	r22, r12
 d14:	80 e3       	ldi	r24, 0x30	; 48
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	68 d0       	rcall	.+208    	; 0xdea <fputc>
 d1a:	a2 fe       	sbrs	r10, 2
 d1c:	16 c0       	rjmp	.+44     	; 0xd4a <vfprintf+0x386>
 d1e:	a1 fc       	sbrc	r10, 1
 d20:	03 c0       	rjmp	.+6      	; 0xd28 <vfprintf+0x364>
 d22:	88 e7       	ldi	r24, 0x78	; 120
 d24:	90 e0       	ldi	r25, 0x00	; 0
 d26:	02 c0       	rjmp	.+4      	; 0xd2c <vfprintf+0x368>
 d28:	88 e5       	ldi	r24, 0x58	; 88
 d2a:	90 e0       	ldi	r25, 0x00	; 0
 d2c:	b6 01       	movw	r22, r12
 d2e:	0c c0       	rjmp	.+24     	; 0xd48 <vfprintf+0x384>
 d30:	8a 2d       	mov	r24, r10
 d32:	86 78       	andi	r24, 0x86	; 134
 d34:	51 f0       	breq	.+20     	; 0xd4a <vfprintf+0x386>
 d36:	a1 fe       	sbrs	r10, 1
 d38:	02 c0       	rjmp	.+4      	; 0xd3e <vfprintf+0x37a>
 d3a:	8b e2       	ldi	r24, 0x2B	; 43
 d3c:	01 c0       	rjmp	.+2      	; 0xd40 <vfprintf+0x37c>
 d3e:	80 e2       	ldi	r24, 0x20	; 32
 d40:	a7 fc       	sbrc	r10, 7
 d42:	8d e2       	ldi	r24, 0x2D	; 45
 d44:	b6 01       	movw	r22, r12
 d46:	90 e0       	ldi	r25, 0x00	; 0
 d48:	50 d0       	rcall	.+160    	; 0xdea <fputc>
 d4a:	89 14       	cp	r8, r9
 d4c:	30 f4       	brcc	.+12     	; 0xd5a <vfprintf+0x396>
 d4e:	b6 01       	movw	r22, r12
 d50:	80 e3       	ldi	r24, 0x30	; 48
 d52:	90 e0       	ldi	r25, 0x00	; 0
 d54:	4a d0       	rcall	.+148    	; 0xdea <fputc>
 d56:	9a 94       	dec	r9
 d58:	f8 cf       	rjmp	.-16     	; 0xd4a <vfprintf+0x386>
 d5a:	8a 94       	dec	r8
 d5c:	f3 01       	movw	r30, r6
 d5e:	e8 0d       	add	r30, r8
 d60:	f1 1d       	adc	r31, r1
 d62:	80 81       	ld	r24, Z
 d64:	b6 01       	movw	r22, r12
 d66:	90 e0       	ldi	r25, 0x00	; 0
 d68:	40 d0       	rcall	.+128    	; 0xdea <fputc>
 d6a:	81 10       	cpse	r8, r1
 d6c:	f6 cf       	rjmp	.-20     	; 0xd5a <vfprintf+0x396>
 d6e:	22 20       	and	r2, r2
 d70:	09 f4       	brne	.+2      	; 0xd74 <vfprintf+0x3b0>
 d72:	4e ce       	rjmp	.-868    	; 0xa10 <vfprintf+0x4c>
 d74:	b6 01       	movw	r22, r12
 d76:	80 e2       	ldi	r24, 0x20	; 32
 d78:	90 e0       	ldi	r25, 0x00	; 0
 d7a:	37 d0       	rcall	.+110    	; 0xdea <fputc>
 d7c:	2a 94       	dec	r2
 d7e:	f7 cf       	rjmp	.-18     	; 0xd6e <vfprintf+0x3aa>
 d80:	f6 01       	movw	r30, r12
 d82:	86 81       	ldd	r24, Z+6	; 0x06
 d84:	97 81       	ldd	r25, Z+7	; 0x07
 d86:	02 c0       	rjmp	.+4      	; 0xd8c <vfprintf+0x3c8>
 d88:	8f ef       	ldi	r24, 0xFF	; 255
 d8a:	9f ef       	ldi	r25, 0xFF	; 255
 d8c:	2b 96       	adiw	r28, 0x0b	; 11
 d8e:	0f b6       	in	r0, 0x3f	; 63
 d90:	f8 94       	cli
 d92:	de bf       	out	0x3e, r29	; 62
 d94:	0f be       	out	0x3f, r0	; 63
 d96:	cd bf       	out	0x3d, r28	; 61
 d98:	df 91       	pop	r29
 d9a:	cf 91       	pop	r28
 d9c:	1f 91       	pop	r17
 d9e:	0f 91       	pop	r16
 da0:	ff 90       	pop	r15
 da2:	ef 90       	pop	r14
 da4:	df 90       	pop	r13
 da6:	cf 90       	pop	r12
 da8:	bf 90       	pop	r11
 daa:	af 90       	pop	r10
 dac:	9f 90       	pop	r9
 dae:	8f 90       	pop	r8
 db0:	7f 90       	pop	r7
 db2:	6f 90       	pop	r6
 db4:	5f 90       	pop	r5
 db6:	4f 90       	pop	r4
 db8:	3f 90       	pop	r3
 dba:	2f 90       	pop	r2
 dbc:	08 95       	ret

00000dbe <strnlen_P>:
 dbe:	fc 01       	movw	r30, r24
 dc0:	05 90       	lpm	r0, Z+
 dc2:	61 50       	subi	r22, 0x01	; 1
 dc4:	70 40       	sbci	r23, 0x00	; 0
 dc6:	01 10       	cpse	r0, r1
 dc8:	d8 f7       	brcc	.-10     	; 0xdc0 <strnlen_P+0x2>
 dca:	80 95       	com	r24
 dcc:	90 95       	com	r25
 dce:	8e 0f       	add	r24, r30
 dd0:	9f 1f       	adc	r25, r31
 dd2:	08 95       	ret

00000dd4 <strnlen>:
 dd4:	fc 01       	movw	r30, r24
 dd6:	61 50       	subi	r22, 0x01	; 1
 dd8:	70 40       	sbci	r23, 0x00	; 0
 dda:	01 90       	ld	r0, Z+
 ddc:	01 10       	cpse	r0, r1
 dde:	d8 f7       	brcc	.-10     	; 0xdd6 <strnlen+0x2>
 de0:	80 95       	com	r24
 de2:	90 95       	com	r25
 de4:	8e 0f       	add	r24, r30
 de6:	9f 1f       	adc	r25, r31
 de8:	08 95       	ret

00000dea <fputc>:
 dea:	0f 93       	push	r16
 dec:	1f 93       	push	r17
 dee:	cf 93       	push	r28
 df0:	df 93       	push	r29
 df2:	fb 01       	movw	r30, r22
 df4:	23 81       	ldd	r18, Z+3	; 0x03
 df6:	21 fd       	sbrc	r18, 1
 df8:	03 c0       	rjmp	.+6      	; 0xe00 <fputc+0x16>
 dfa:	8f ef       	ldi	r24, 0xFF	; 255
 dfc:	9f ef       	ldi	r25, 0xFF	; 255
 dfe:	2c c0       	rjmp	.+88     	; 0xe58 <fputc+0x6e>
 e00:	22 ff       	sbrs	r18, 2
 e02:	16 c0       	rjmp	.+44     	; 0xe30 <fputc+0x46>
 e04:	46 81       	ldd	r20, Z+6	; 0x06
 e06:	57 81       	ldd	r21, Z+7	; 0x07
 e08:	24 81       	ldd	r18, Z+4	; 0x04
 e0a:	35 81       	ldd	r19, Z+5	; 0x05
 e0c:	42 17       	cp	r20, r18
 e0e:	53 07       	cpc	r21, r19
 e10:	44 f4       	brge	.+16     	; 0xe22 <fputc+0x38>
 e12:	a0 81       	ld	r26, Z
 e14:	b1 81       	ldd	r27, Z+1	; 0x01
 e16:	9d 01       	movw	r18, r26
 e18:	2f 5f       	subi	r18, 0xFF	; 255
 e1a:	3f 4f       	sbci	r19, 0xFF	; 255
 e1c:	31 83       	std	Z+1, r19	; 0x01
 e1e:	20 83       	st	Z, r18
 e20:	8c 93       	st	X, r24
 e22:	26 81       	ldd	r18, Z+6	; 0x06
 e24:	37 81       	ldd	r19, Z+7	; 0x07
 e26:	2f 5f       	subi	r18, 0xFF	; 255
 e28:	3f 4f       	sbci	r19, 0xFF	; 255
 e2a:	37 83       	std	Z+7, r19	; 0x07
 e2c:	26 83       	std	Z+6, r18	; 0x06
 e2e:	14 c0       	rjmp	.+40     	; 0xe58 <fputc+0x6e>
 e30:	8b 01       	movw	r16, r22
 e32:	ec 01       	movw	r28, r24
 e34:	fb 01       	movw	r30, r22
 e36:	00 84       	ldd	r0, Z+8	; 0x08
 e38:	f1 85       	ldd	r31, Z+9	; 0x09
 e3a:	e0 2d       	mov	r30, r0
 e3c:	19 95       	eicall
 e3e:	89 2b       	or	r24, r25
 e40:	e1 f6       	brne	.-72     	; 0xdfa <fputc+0x10>
 e42:	d8 01       	movw	r26, r16
 e44:	16 96       	adiw	r26, 0x06	; 6
 e46:	8d 91       	ld	r24, X+
 e48:	9c 91       	ld	r25, X
 e4a:	17 97       	sbiw	r26, 0x07	; 7
 e4c:	01 96       	adiw	r24, 0x01	; 1
 e4e:	17 96       	adiw	r26, 0x07	; 7
 e50:	9c 93       	st	X, r25
 e52:	8e 93       	st	-X, r24
 e54:	16 97       	sbiw	r26, 0x06	; 6
 e56:	ce 01       	movw	r24, r28
 e58:	df 91       	pop	r29
 e5a:	cf 91       	pop	r28
 e5c:	1f 91       	pop	r17
 e5e:	0f 91       	pop	r16
 e60:	08 95       	ret

00000e62 <__ultoa_invert>:
 e62:	fa 01       	movw	r30, r20
 e64:	aa 27       	eor	r26, r26
 e66:	28 30       	cpi	r18, 0x08	; 8
 e68:	51 f1       	breq	.+84     	; 0xebe <__ultoa_invert+0x5c>
 e6a:	20 31       	cpi	r18, 0x10	; 16
 e6c:	81 f1       	breq	.+96     	; 0xece <__ultoa_invert+0x6c>
 e6e:	e8 94       	clt
 e70:	6f 93       	push	r22
 e72:	6e 7f       	andi	r22, 0xFE	; 254
 e74:	6e 5f       	subi	r22, 0xFE	; 254
 e76:	7f 4f       	sbci	r23, 0xFF	; 255
 e78:	8f 4f       	sbci	r24, 0xFF	; 255
 e7a:	9f 4f       	sbci	r25, 0xFF	; 255
 e7c:	af 4f       	sbci	r26, 0xFF	; 255
 e7e:	b1 e0       	ldi	r27, 0x01	; 1
 e80:	3e d0       	rcall	.+124    	; 0xefe <__ultoa_invert+0x9c>
 e82:	b4 e0       	ldi	r27, 0x04	; 4
 e84:	3c d0       	rcall	.+120    	; 0xefe <__ultoa_invert+0x9c>
 e86:	67 0f       	add	r22, r23
 e88:	78 1f       	adc	r23, r24
 e8a:	89 1f       	adc	r24, r25
 e8c:	9a 1f       	adc	r25, r26
 e8e:	a1 1d       	adc	r26, r1
 e90:	68 0f       	add	r22, r24
 e92:	79 1f       	adc	r23, r25
 e94:	8a 1f       	adc	r24, r26
 e96:	91 1d       	adc	r25, r1
 e98:	a1 1d       	adc	r26, r1
 e9a:	6a 0f       	add	r22, r26
 e9c:	71 1d       	adc	r23, r1
 e9e:	81 1d       	adc	r24, r1
 ea0:	91 1d       	adc	r25, r1
 ea2:	a1 1d       	adc	r26, r1
 ea4:	20 d0       	rcall	.+64     	; 0xee6 <__ultoa_invert+0x84>
 ea6:	09 f4       	brne	.+2      	; 0xeaa <__ultoa_invert+0x48>
 ea8:	68 94       	set
 eaa:	3f 91       	pop	r19
 eac:	2a e0       	ldi	r18, 0x0A	; 10
 eae:	26 9f       	mul	r18, r22
 eb0:	11 24       	eor	r1, r1
 eb2:	30 19       	sub	r19, r0
 eb4:	30 5d       	subi	r19, 0xD0	; 208
 eb6:	31 93       	st	Z+, r19
 eb8:	de f6       	brtc	.-74     	; 0xe70 <__ultoa_invert+0xe>
 eba:	cf 01       	movw	r24, r30
 ebc:	08 95       	ret
 ebe:	46 2f       	mov	r20, r22
 ec0:	47 70       	andi	r20, 0x07	; 7
 ec2:	40 5d       	subi	r20, 0xD0	; 208
 ec4:	41 93       	st	Z+, r20
 ec6:	b3 e0       	ldi	r27, 0x03	; 3
 ec8:	0f d0       	rcall	.+30     	; 0xee8 <__ultoa_invert+0x86>
 eca:	c9 f7       	brne	.-14     	; 0xebe <__ultoa_invert+0x5c>
 ecc:	f6 cf       	rjmp	.-20     	; 0xeba <__ultoa_invert+0x58>
 ece:	46 2f       	mov	r20, r22
 ed0:	4f 70       	andi	r20, 0x0F	; 15
 ed2:	40 5d       	subi	r20, 0xD0	; 208
 ed4:	4a 33       	cpi	r20, 0x3A	; 58
 ed6:	18 f0       	brcs	.+6      	; 0xede <__ultoa_invert+0x7c>
 ed8:	49 5d       	subi	r20, 0xD9	; 217
 eda:	31 fd       	sbrc	r19, 1
 edc:	40 52       	subi	r20, 0x20	; 32
 ede:	41 93       	st	Z+, r20
 ee0:	02 d0       	rcall	.+4      	; 0xee6 <__ultoa_invert+0x84>
 ee2:	a9 f7       	brne	.-22     	; 0xece <__ultoa_invert+0x6c>
 ee4:	ea cf       	rjmp	.-44     	; 0xeba <__ultoa_invert+0x58>
 ee6:	b4 e0       	ldi	r27, 0x04	; 4
 ee8:	a6 95       	lsr	r26
 eea:	97 95       	ror	r25
 eec:	87 95       	ror	r24
 eee:	77 95       	ror	r23
 ef0:	67 95       	ror	r22
 ef2:	ba 95       	dec	r27
 ef4:	c9 f7       	brne	.-14     	; 0xee8 <__ultoa_invert+0x86>
 ef6:	00 97       	sbiw	r24, 0x00	; 0
 ef8:	61 05       	cpc	r22, r1
 efa:	71 05       	cpc	r23, r1
 efc:	08 95       	ret
 efe:	9b 01       	movw	r18, r22
 f00:	ac 01       	movw	r20, r24
 f02:	0a 2e       	mov	r0, r26
 f04:	06 94       	lsr	r0
 f06:	57 95       	ror	r21
 f08:	47 95       	ror	r20
 f0a:	37 95       	ror	r19
 f0c:	27 95       	ror	r18
 f0e:	ba 95       	dec	r27
 f10:	c9 f7       	brne	.-14     	; 0xf04 <__ultoa_invert+0xa2>
 f12:	62 0f       	add	r22, r18
 f14:	73 1f       	adc	r23, r19
 f16:	84 1f       	adc	r24, r20
 f18:	95 1f       	adc	r25, r21
 f1a:	a0 1d       	adc	r26, r0
 f1c:	08 95       	ret

00000f1e <_exit>:
 f1e:	f8 94       	cli

00000f20 <__stop_program>:
 f20:	ff cf       	rjmp	.-2      	; 0xf20 <__stop_program>
