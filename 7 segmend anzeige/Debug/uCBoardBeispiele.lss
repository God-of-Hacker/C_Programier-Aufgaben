
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800200  00000e16  00000eaa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800294  00800294  00000f3e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000249a  00000000  00000000  000011c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fb9  00000000  00000000  0000365e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001438  00000000  00000000  00004617  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  00005a50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d04  00000000  00000000  000060d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b25  00000000  00000000  00006ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008901  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	9d c3       	rjmp	.+1850   	; 0x798 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e1       	ldi	r30, 0x16	; 22
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 39       	cpi	r26, 0x94	; 148
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a4 e9       	ldi	r26, 0x94	; 148
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 31       	cpi	r26, 0x12	; 18
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	78 c6       	rjmp	.+3312   	; 0xe12 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
                                                   ZAHL_7SEG_8,ZAHL_7SEG_9,ZAHL_7SEG_11,ZAHL_7SEG_10}; //Gray-Code
                             const uint8_t GRAY_TO_DEZ[] = {0,1,3,2,7,6,4,5,15,14,12,13,8,9,11,10};

//Hauptprogramm
int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	27 97       	sbiw	r28, 0x07	; 7
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
    //Variablen
    uint8_t schalter = 0;
 138:	1a 82       	std	Y+2, r1	; 0x02
    uint8_t schalter2 = 0;
 13a:	1b 82       	std	Y+3, r1	; 0x03
    uint8_t zahl = 0;
 13c:	1c 82       	std	Y+4, r1	; 0x04
    uint8_t inGray =0;
 13e:	1d 82       	std	Y+5, r1	; 0x05
    uint8_t inDezAlt =0;
 140:	19 82       	std	Y+1, r1	; 0x01
    uint8_t inDezNeu =0;
 142:	1e 82       	std	Y+6, r1	; 0x06
    uint8_t inSeg = 0;
 144:	1f 82       	std	Y+7, r1	; 0x07
    //Initialisieren
    initBoard(1);
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	a4 d1       	rcall	.+840    	; 0x492 <initBoard>
    DDRD = 0xff; //Alle Bits von PortD als Ausgang konfugurieren
 14a:	8a e2       	ldi	r24, 0x2A	; 42
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	2f ef       	ldi	r18, 0xFF	; 255
 150:	fc 01       	movw	r30, r24
    //Unendlichschlaufe
    while(1)
    {
      inGray = switchReadAll() & SCHALTER_EINER;  
 152:	20 83       	st	Z, r18
 154:	43 d0       	rcall	.+134    	; 0x1dc <switchReadAll>
 156:	8f 70       	andi	r24, 0x0F	; 15
 158:	8d 83       	std	Y+5, r24	; 0x05
      inSeg = GRAY_TO_SEG[inGray];
 15a:	8d 81       	ldd	r24, Y+5	; 0x05
 15c:	88 2f       	mov	r24, r24
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	88 5f       	subi	r24, 0xF8	; 248
 162:	9d 4f       	sbci	r25, 0xFD	; 253
 164:	fc 01       	movw	r30, r24
 166:	80 81       	ld	r24, Z
 168:	8f 83       	std	Y+7, r24	; 0x07
      
      inDezNeu = GRAY_TO_DEZ[inGray];     
 16a:	8d 81       	ldd	r24, Y+5	; 0x05
 16c:	88 2f       	mov	r24, r24
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	88 5e       	subi	r24, 0xE8	; 232
 172:	9d 4f       	sbci	r25, 0xFD	; 253
 174:	fc 01       	movw	r30, r24
 176:	80 81       	ld	r24, Z
 178:	8e 83       	std	Y+6, r24	; 0x06
      if (((inDezNeu == (inDezAlt +1))%16 || (inDezNeu == (inDezAlt -1)%16)|| (inDezNeu == inDezAlt))   )
 17a:	8e 81       	ldd	r24, Y+6	; 0x06
 17c:	28 2f       	mov	r18, r24
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	89 81       	ldd	r24, Y+1	; 0x01
 182:	88 2f       	mov	r24, r24
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	01 96       	adiw	r24, 0x01	; 1
 188:	28 17       	cp	r18, r24
 18a:	39 07       	cpc	r19, r25
 18c:	b1 f0       	breq	.+44     	; 0x1ba <main+0x96>
 18e:	8e 81       	ldd	r24, Y+6	; 0x06
 190:	28 2f       	mov	r18, r24
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	89 81       	ldd	r24, Y+1	; 0x01
 196:	88 2f       	mov	r24, r24
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	8f 70       	andi	r24, 0x0F	; 15
 19e:	90 78       	andi	r25, 0x80	; 128
 1a0:	99 23       	and	r25, r25
 1a2:	24 f4       	brge	.+8      	; 0x1ac <main+0x88>
 1a4:	01 97       	sbiw	r24, 0x01	; 1
 1a6:	80 6f       	ori	r24, 0xF0	; 240
 1a8:	9f 6f       	ori	r25, 0xFF	; 255
 1aa:	01 96       	adiw	r24, 0x01	; 1
 1ac:	28 17       	cp	r18, r24
 1ae:	39 07       	cpc	r19, r25
 1b0:	21 f0       	breq	.+8      	; 0x1ba <main+0x96>
 1b2:	9e 81       	ldd	r25, Y+6	; 0x06
 1b4:	89 81       	ldd	r24, Y+1	; 0x01
 1b6:	98 17       	cp	r25, r24
 1b8:	41 f4       	brne	.+16     	; 0x1ca <main+0xa6>
      {
          PORTD = inSeg;
 1ba:	8b e2       	ldi	r24, 0x2B	; 43
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	2f 81       	ldd	r18, Y+7	; 0x07
 1c0:	fc 01       	movw	r30, r24
 1c2:	20 83       	st	Z, r18
          inDezAlt = inDezNeu;
 1c4:	8e 81       	ldd	r24, Y+6	; 0x06
 1c6:	89 83       	std	Y+1, r24	; 0x01
 1c8:	05 c0       	rjmp	.+10     	; 0x1d4 <main+0xb0>
      } 
      else
      {
          PORTD = SEGMENT_DP;
 1ca:	8b e2       	ldi	r24, 0x2B	; 43
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	20 e8       	ldi	r18, 0x80	; 128
 1d0:	fc 01       	movw	r30, r24
 1d2:	20 83       	st	Z, r18
      }
      
         
    }
 1d4:	bf cf       	rjmp	.-130    	; 0x154 <main+0x30>

000001d6 <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1d6:	82 b9       	out	0x02, r24	; 2
 1d8:	95 b9       	out	0x05, r25	; 5
 1da:	08 95       	ret

000001dc <switchReadAll>:
 1dc:	86 b1       	in	r24, 0x06	; 6
 1de:	08 95       	ret

000001e0 <startSystemTimeMs>:
 1e0:	83 e0       	ldi	r24, 0x03	; 3
 1e2:	84 bd       	out	0x24, r24	; 36
 1e4:	8b e0       	ldi	r24, 0x0B	; 11
 1e6:	85 bd       	out	0x25, r24	; 37
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 1ee:	89 ef       	ldi	r24, 0xF9	; 249
 1f0:	87 bd       	out	0x27, r24	; 39
 1f2:	08 95       	ret

000001f4 <initAdc>:
 1f4:	11 ba       	out	0x11, r1	; 17
 1f6:	10 ba       	out	0x10, r1	; 16
 1f8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 1fc:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 200:	80 e4       	ldi	r24, 0x40	; 64
 202:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 206:	8f e0       	ldi	r24, 0x0F	; 15
 208:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 20c:	8f ef       	ldi	r24, 0xFF	; 255
 20e:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 212:	ea e7       	ldi	r30, 0x7A	; 122
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	87 ea       	ldi	r24, 0xA7	; 167
 218:	80 83       	st	Z, r24
 21a:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 21e:	80 81       	ld	r24, Z
 220:	80 64       	ori	r24, 0x40	; 64
 222:	80 83       	st	Z, r24
 224:	80 81       	ld	r24, Z
 226:	84 ff       	sbrs	r24, 4
 228:	fd cf       	rjmp	.-6      	; 0x224 <initAdc+0x30>
 22a:	ea e7       	ldi	r30, 0x7A	; 122
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	8f 7e       	andi	r24, 0xEF	; 239
 232:	80 83       	st	Z, r24
 234:	08 95       	ret

00000236 <rgbWrite>:
 236:	2f ef       	ldi	r18, 0xFF	; 255
 238:	33 e0       	ldi	r19, 0x03	; 3
 23a:	f9 01       	movw	r30, r18
 23c:	e8 1b       	sub	r30, r24
 23e:	f9 0b       	sbc	r31, r25
 240:	c9 01       	movw	r24, r18
 242:	86 1b       	sub	r24, r22
 244:	97 0b       	sbc	r25, r23
 246:	24 1b       	sub	r18, r20
 248:	35 0b       	sbc	r19, r21
 24a:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 24e:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 252:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 256:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 25a:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 25e:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 262:	08 95       	ret

00000264 <initRgb>:
 264:	8e ef       	ldi	r24, 0xFE	; 254
 266:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 26a:	8b e1       	ldi	r24, 0x1B	; 27
 26c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 270:	83 e0       	ldi	r24, 0x03	; 3
 272:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 276:	8f ef       	ldi	r24, 0xFF	; 255
 278:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	50 e0       	ldi	r21, 0x00	; 0
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	d6 cf       	rjmp	.-84     	; 0x236 <rgbWrite>
 28a:	08 95       	ret

0000028c <lcdSid>:
 28c:	88 23       	and	r24, r24
 28e:	11 f0       	breq	.+4      	; 0x294 <lcdSid+0x8>
 290:	a0 9a       	sbi	0x14, 0	; 20
 292:	08 95       	ret
 294:	a0 98       	cbi	0x14, 0	; 20
 296:	08 95       	ret

00000298 <lcdSclk>:
 298:	88 23       	and	r24, r24
 29a:	11 f0       	breq	.+4      	; 0x2a0 <lcdSclk+0x8>
 29c:	a1 9a       	sbi	0x14, 1	; 20
 29e:	08 95       	ret
 2a0:	a1 98       	cbi	0x14, 1	; 20
 2a2:	08 95       	ret

000002a4 <lcdLight>:
 2a4:	81 11       	cpse	r24, r1
 2a6:	04 c0       	rjmp	.+8      	; 0x2b0 <lcdLight+0xc>
 2a8:	84 b5       	in	r24, 0x24	; 36
 2aa:	8f 7d       	andi	r24, 0xDF	; 223
 2ac:	84 bd       	out	0x24, r24	; 36
 2ae:	08 95       	ret
 2b0:	94 b5       	in	r25, 0x24	; 36
 2b2:	90 62       	ori	r25, 0x20	; 32
 2b4:	94 bd       	out	0x24, r25	; 36
 2b6:	88 bd       	out	0x28, r24	; 40
 2b8:	08 95       	ret

000002ba <writeLcdF>:
 2ba:	ef 92       	push	r14
 2bc:	ff 92       	push	r15
 2be:	0f 93       	push	r16
 2c0:	1f 93       	push	r17
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	7c 01       	movw	r14, r24
 2c8:	eb 01       	movw	r28, r22
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	df df       	rcall	.-66     	; 0x28c <lcdSid>
 2ce:	05 e0       	ldi	r16, 0x05	; 5
 2d0:	10 e0       	ldi	r17, 0x00	; 0
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	e1 df       	rcall	.-62     	; 0x298 <lcdSclk>
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	df df       	rcall	.-66     	; 0x298 <lcdSclk>
 2da:	01 50       	subi	r16, 0x01	; 1
 2dc:	11 09       	sbc	r17, r1
 2de:	c9 f7       	brne	.-14     	; 0x2d2 <writeLcdF+0x18>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	d4 df       	rcall	.-88     	; 0x28c <lcdSid>
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	d8 df       	rcall	.-80     	; 0x298 <lcdSclk>
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	d6 df       	rcall	.-84     	; 0x298 <lcdSclk>
 2ec:	83 e4       	ldi	r24, 0x43	; 67
 2ee:	e8 16       	cp	r14, r24
 2f0:	f1 04       	cpc	r15, r1
 2f2:	19 f4       	brne	.+6      	; 0x2fa <writeLcdF+0x40>
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	ca df       	rcall	.-108    	; 0x28c <lcdSid>
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <writeLcdF+0x44>
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	c7 df       	rcall	.-114    	; 0x28c <lcdSid>
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	cb df       	rcall	.-106    	; 0x298 <lcdSclk>
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	c9 df       	rcall	.-110    	; 0x298 <lcdSclk>
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	c1 df       	rcall	.-126    	; 0x28c <lcdSid>
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	c5 df       	rcall	.-118    	; 0x298 <lcdSclk>
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	c3 df       	rcall	.-122    	; 0x298 <lcdSclk>
 312:	04 e0       	ldi	r16, 0x04	; 4
 314:	10 e0       	ldi	r17, 0x00	; 0
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	bf df       	rcall	.-130    	; 0x298 <lcdSclk>
 31a:	c0 ff       	sbrs	r28, 0
 31c:	03 c0       	rjmp	.+6      	; 0x324 <writeLcdF+0x6a>
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	b5 df       	rcall	.-150    	; 0x28c <lcdSid>
 322:	02 c0       	rjmp	.+4      	; 0x328 <writeLcdF+0x6e>
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	b2 df       	rcall	.-156    	; 0x28c <lcdSid>
 328:	d6 95       	lsr	r29
 32a:	c7 95       	ror	r28
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	b4 df       	rcall	.-152    	; 0x298 <lcdSclk>
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	b2 df       	rcall	.-156    	; 0x298 <lcdSclk>
 334:	01 50       	subi	r16, 0x01	; 1
 336:	11 09       	sbc	r17, r1
 338:	71 f7       	brne	.-36     	; 0x316 <writeLcdF+0x5c>
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	a7 df       	rcall	.-178    	; 0x28c <lcdSid>
 33e:	04 e0       	ldi	r16, 0x04	; 4
 340:	10 e0       	ldi	r17, 0x00	; 0
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	a9 df       	rcall	.-174    	; 0x298 <lcdSclk>
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	a7 df       	rcall	.-178    	; 0x298 <lcdSclk>
 34a:	01 50       	subi	r16, 0x01	; 1
 34c:	11 09       	sbc	r17, r1
 34e:	c9 f7       	brne	.-14     	; 0x342 <writeLcdF+0x88>
 350:	04 e0       	ldi	r16, 0x04	; 4
 352:	10 e0       	ldi	r17, 0x00	; 0
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	a0 df       	rcall	.-192    	; 0x298 <lcdSclk>
 358:	c0 ff       	sbrs	r28, 0
 35a:	03 c0       	rjmp	.+6      	; 0x362 <writeLcdF+0xa8>
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	96 df       	rcall	.-212    	; 0x28c <lcdSid>
 360:	02 c0       	rjmp	.+4      	; 0x366 <writeLcdF+0xac>
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	93 df       	rcall	.-218    	; 0x28c <lcdSid>
 366:	d6 95       	lsr	r29
 368:	c7 95       	ror	r28
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	95 df       	rcall	.-214    	; 0x298 <lcdSclk>
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	93 df       	rcall	.-218    	; 0x298 <lcdSclk>
 372:	01 50       	subi	r16, 0x01	; 1
 374:	11 09       	sbc	r17, r1
 376:	71 f7       	brne	.-36     	; 0x354 <writeLcdF+0x9a>
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	88 df       	rcall	.-240    	; 0x28c <lcdSid>
 37c:	c4 e0       	ldi	r28, 0x04	; 4
 37e:	d0 e0       	ldi	r29, 0x00	; 0
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	8a df       	rcall	.-236    	; 0x298 <lcdSclk>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	88 df       	rcall	.-240    	; 0x298 <lcdSclk>
 388:	21 97       	sbiw	r28, 0x01	; 1
 38a:	d1 f7       	brne	.-12     	; 0x380 <writeLcdF+0xc6>
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	7e df       	rcall	.-260    	; 0x28c <lcdSid>
 390:	87 ec       	ldi	r24, 0xC7	; 199
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <writeLcdF+0xda>
 398:	00 c0       	rjmp	.+0      	; 0x39a <writeLcdF+0xe0>
 39a:	00 00       	nop
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	1f 91       	pop	r17
 3a2:	0f 91       	pop	r16
 3a4:	ff 90       	pop	r15
 3a6:	ef 90       	pop	r14
 3a8:	08 95       	ret

000003aa <lcdWriteText>:
 3aa:	1f 93       	push	r17
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	cd b7       	in	r28, 0x3d	; 61
 3b2:	de b7       	in	r29, 0x3e	; 62
 3b4:	65 97       	sbiw	r28, 0x15	; 21
 3b6:	0f b6       	in	r0, 0x3f	; 63
 3b8:	f8 94       	cli
 3ba:	de bf       	out	0x3e, r29	; 62
 3bc:	0f be       	out	0x3f, r0	; 63
 3be:	cd bf       	out	0x3d, r28	; 61
 3c0:	9e 01       	movw	r18, r28
 3c2:	20 5e       	subi	r18, 0xE0	; 224
 3c4:	3f 4f       	sbci	r19, 0xFF	; 255
 3c6:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3c8:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3ca:	65 e1       	ldi	r22, 0x15	; 21
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	ce 01       	movw	r24, r28
 3d0:	01 96       	adiw	r24, 0x01	; 1
 3d2:	3a d2       	rcall	.+1140   	; 0x848 <vsnprintf>
 3d4:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3d6:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3d8:	90 e2       	ldi	r25, 0x20	; 32
 3da:	89 9f       	mul	r24, r25
 3dc:	60 0d       	add	r22, r0
 3de:	11 24       	eor	r1, r1
 3e0:	60 68       	ori	r22, 0x80	; 128
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	83 e4       	ldi	r24, 0x43	; 67
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	68 df       	rcall	.-304    	; 0x2ba <writeLcdF>
 3ea:	69 81       	ldd	r22, Y+1	; 0x01
 3ec:	66 23       	and	r22, r22
 3ee:	79 f0       	breq	.+30     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f0:	10 e0       	ldi	r17, 0x00	; 0
 3f2:	1f 5f       	subi	r17, 0xFF	; 255
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	84 e4       	ldi	r24, 0x44	; 68
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	5f df       	rcall	.-322    	; 0x2ba <writeLcdF>
 3fc:	e1 e0       	ldi	r30, 0x01	; 1
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	ec 0f       	add	r30, r28
 402:	fd 1f       	adc	r31, r29
 404:	e1 0f       	add	r30, r17
 406:	f1 1d       	adc	r31, r1
 408:	60 81       	ld	r22, Z
 40a:	61 11       	cpse	r22, r1
 40c:	f2 cf       	rjmp	.-28     	; 0x3f2 <lcdWriteText+0x48>
 40e:	65 96       	adiw	r28, 0x15	; 21
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	f8 94       	cli
 414:	de bf       	out	0x3e, r29	; 62
 416:	0f be       	out	0x3f, r0	; 63
 418:	cd bf       	out	0x3d, r28	; 61
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	1f 91       	pop	r17
 420:	08 95       	ret

00000422 <lcdClear>:
 422:	61 e0       	ldi	r22, 0x01	; 1
 424:	70 e0       	ldi	r23, 0x00	; 0
 426:	83 e4       	ldi	r24, 0x43	; 67
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	47 df       	rcall	.-370    	; 0x2ba <writeLcdF>
 42c:	8f e3       	ldi	r24, 0x3F	; 63
 42e:	9f e1       	ldi	r25, 0x1F	; 31
 430:	01 97       	sbiw	r24, 0x01	; 1
 432:	f1 f7       	brne	.-4      	; 0x430 <lcdClear+0xe>
 434:	00 c0       	rjmp	.+0      	; 0x436 <lcdClear+0x14>
 436:	00 00       	nop
 438:	80 e5       	ldi	r24, 0x50	; 80
 43a:	92 e0       	ldi	r25, 0x02	; 2
 43c:	9f 93       	push	r25
 43e:	8f 93       	push	r24
 440:	1f 92       	push	r1
 442:	1f 92       	push	r1
 444:	b2 df       	rcall	.-156    	; 0x3aa <lcdWriteText>
 446:	0f 90       	pop	r0
 448:	0f 90       	pop	r0
 44a:	0f 90       	pop	r0
 44c:	0f 90       	pop	r0
 44e:	08 95       	ret

00000450 <initLcd>:
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	22 df       	rcall	.-444    	; 0x298 <lcdSclk>
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	1a df       	rcall	.-460    	; 0x28c <lcdSid>
 458:	64 e3       	ldi	r22, 0x34	; 52
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	83 e4       	ldi	r24, 0x43	; 67
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	2c df       	rcall	.-424    	; 0x2ba <writeLcdF>
 462:	69 e0       	ldi	r22, 0x09	; 9
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	83 e4       	ldi	r24, 0x43	; 67
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	27 df       	rcall	.-434    	; 0x2ba <writeLcdF>
 46c:	60 e3       	ldi	r22, 0x30	; 48
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	83 e4       	ldi	r24, 0x43	; 67
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	22 df       	rcall	.-444    	; 0x2ba <writeLcdF>
 476:	6c e0       	ldi	r22, 0x0C	; 12
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	83 e4       	ldi	r24, 0x43	; 67
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	1d df       	rcall	.-454    	; 0x2ba <writeLcdF>
 480:	d0 df       	rcall	.-96     	; 0x422 <lcdClear>
 482:	67 e0       	ldi	r22, 0x07	; 7
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	83 e4       	ldi	r24, 0x43	; 67
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	17 df       	rcall	.-466    	; 0x2ba <writeLcdF>
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	0a cf       	rjmp	.-492    	; 0x2a4 <lcdLight>
 490:	08 95       	ret

00000492 <initBoard>:
 492:	4f 92       	push	r4
 494:	5f 92       	push	r5
 496:	6f 92       	push	r6
 498:	7f 92       	push	r7
 49a:	8f 92       	push	r8
 49c:	9f 92       	push	r9
 49e:	af 92       	push	r10
 4a0:	bf 92       	push	r11
 4a2:	cf 92       	push	r12
 4a4:	df 92       	push	r13
 4a6:	ef 92       	push	r14
 4a8:	ff 92       	push	r15
 4aa:	0f 93       	push	r16
 4ac:	1f 93       	push	r17
 4ae:	cf 93       	push	r28
 4b0:	df 93       	push	r29
 4b2:	c8 2f       	mov	r28, r24
 4b4:	85 b7       	in	r24, 0x35	; 53
 4b6:	85 bf       	out	0x35, r24	; 53
 4b8:	12 b8       	out	0x02, r1	; 2
 4ba:	8f ef       	ldi	r24, 0xFF	; 255
 4bc:	81 b9       	out	0x01, r24	; 1
 4be:	15 b8       	out	0x05, r1	; 5
 4c0:	84 b9       	out	0x04, r24	; 4
 4c2:	88 b9       	out	0x08, r24	; 8
 4c4:	17 b8       	out	0x07, r1	; 7
 4c6:	8b b9       	out	0x0b, r24	; 11
 4c8:	1a b8       	out	0x0a, r1	; 10
 4ca:	8e b9       	out	0x0e, r24	; 14
 4cc:	1d b8       	out	0x0d, r1	; 13
 4ce:	72 98       	cbi	0x0e, 2	; 14
 4d0:	11 ba       	out	0x11, r1	; 17
 4d2:	10 ba       	out	0x10, r1	; 16
 4d4:	94 e0       	ldi	r25, 0x04	; 4
 4d6:	94 bb       	out	0x14, r25	; 20
 4d8:	93 b3       	in	r25, 0x13	; 19
 4da:	93 60       	ori	r25, 0x03	; 3
 4dc:	93 bb       	out	0x13, r25	; 19
 4de:	9d 9a       	sbi	0x13, 5	; 19
 4e0:	97 ec       	ldi	r25, 0xC7	; 199
 4e2:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 4e6:	98 e3       	ldi	r25, 0x38	; 56
 4e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 4ec:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 4f0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 4f4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 4f8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 4fc:	8c e3       	ldi	r24, 0x3C	; 60
 4fe:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 502:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 506:	78 94       	sei
 508:	6b de       	rcall	.-810    	; 0x1e0 <startSystemTimeMs>
 50a:	a2 df       	rcall	.-188    	; 0x450 <initLcd>
 50c:	73 de       	rcall	.-794    	; 0x1f4 <initAdc>
 50e:	aa de       	rcall	.-684    	; 0x264 <initRgb>
 510:	cc 23       	and	r28, r28
 512:	09 f4       	brne	.+2      	; 0x516 <initBoard+0x84>
 514:	b8 c0       	rjmp	.+368    	; 0x686 <initBoard+0x1f4>
 516:	8f ef       	ldi	r24, 0xFF	; 255
 518:	c5 de       	rcall	.-630    	; 0x2a4 <lcdLight>
 51a:	40 e0       	ldi	r20, 0x00	; 0
 51c:	50 e0       	ldi	r21, 0x00	; 0
 51e:	6f ef       	ldi	r22, 0xFF	; 255
 520:	73 e0       	ldi	r23, 0x03	; 3
 522:	80 e0       	ldi	r24, 0x00	; 0
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	87 de       	rcall	.-754    	; 0x236 <rgbWrite>
 528:	8d e3       	ldi	r24, 0x3D	; 61
 52a:	92 e0       	ldi	r25, 0x02	; 2
 52c:	9f 93       	push	r25
 52e:	8f 93       	push	r24
 530:	1f 92       	push	r1
 532:	1f 92       	push	r1
 534:	3a df       	rcall	.-396    	; 0x3aa <lcdWriteText>
 536:	82 e5       	ldi	r24, 0x52	; 82
 538:	92 e0       	ldi	r25, 0x02	; 2
 53a:	9f 93       	push	r25
 53c:	8f 93       	push	r24
 53e:	1f 92       	push	r1
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	8f 93       	push	r24
 544:	32 df       	rcall	.-412    	; 0x3aa <lcdWriteText>
 546:	88 e2       	ldi	r24, 0x28	; 40
 548:	92 e0       	ldi	r25, 0x02	; 2
 54a:	9f 93       	push	r25
 54c:	8f 93       	push	r24
 54e:	1f 92       	push	r1
 550:	82 e0       	ldi	r24, 0x02	; 2
 552:	8f 93       	push	r24
 554:	2a df       	rcall	.-428    	; 0x3aa <lcdWriteText>
 556:	87 e6       	ldi	r24, 0x67	; 103
 558:	92 e0       	ldi	r25, 0x02	; 2
 55a:	9f 93       	push	r25
 55c:	8f 93       	push	r24
 55e:	1f 92       	push	r1
 560:	83 e0       	ldi	r24, 0x03	; 3
 562:	8f 93       	push	r24
 564:	22 df       	rcall	.-444    	; 0x3aa <lcdWriteText>
 566:	8d b7       	in	r24, 0x3d	; 61
 568:	9e b7       	in	r25, 0x3e	; 62
 56a:	40 96       	adiw	r24, 0x10	; 16
 56c:	0f b6       	in	r0, 0x3f	; 63
 56e:	f8 94       	cli
 570:	9e bf       	out	0x3e, r25	; 62
 572:	0f be       	out	0x3f, r0	; 63
 574:	8d bf       	out	0x3d, r24	; 61
 576:	88 24       	eor	r8, r8
 578:	83 94       	inc	r8
 57a:	c0 e0       	ldi	r28, 0x00	; 0
 57c:	71 2c       	mov	r7, r1
 57e:	99 24       	eor	r9, r9
 580:	93 94       	inc	r9
 582:	d0 e0       	ldi	r29, 0x00	; 0
 584:	cc 24       	eor	r12, r12
 586:	c3 94       	inc	r12
 588:	d1 2c       	mov	r13, r1
 58a:	e1 2c       	mov	r14, r1
 58c:	68 94       	set
 58e:	ff 24       	eor	r15, r15
 590:	f7 f8       	bld	r15, 7
 592:	66 24       	eor	r6, r6
 594:	63 94       	inc	r6
 596:	51 2c       	mov	r5, r1
 598:	09 e0       	ldi	r16, 0x09	; 9
 59a:	11 e0       	ldi	r17, 0x01	; 1
 59c:	0f 2e       	mov	r0, r31
 59e:	fc e7       	ldi	r31, 0x7C	; 124
 5a0:	af 2e       	mov	r10, r31
 5a2:	f2 e0       	ldi	r31, 0x02	; 2
 5a4:	bf 2e       	mov	r11, r31
 5a6:	f0 2d       	mov	r31, r0
 5a8:	0f 2e       	mov	r0, r31
 5aa:	f3 e0       	ldi	r31, 0x03	; 3
 5ac:	4f 2e       	mov	r4, r31
 5ae:	f0 2d       	mov	r31, r0
 5b0:	99 20       	and	r9, r9
 5b2:	49 f0       	breq	.+18     	; 0x5c6 <initBoard+0x134>
 5b4:	c7 01       	movw	r24, r14
 5b6:	0d 2e       	mov	r0, r29
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <initBoard+0x12c>
 5ba:	96 95       	lsr	r25
 5bc:	87 95       	ror	r24
 5be:	0a 94       	dec	r0
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <initBoard+0x128>
 5c2:	09 de       	rcall	.-1006   	; 0x1d6 <ledWriteAll>
 5c4:	08 c0       	rjmp	.+16     	; 0x5d6 <initBoard+0x144>
 5c6:	c6 01       	movw	r24, r12
 5c8:	0d 2e       	mov	r0, r29
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <initBoard+0x13e>
 5cc:	88 0f       	add	r24, r24
 5ce:	99 1f       	adc	r25, r25
 5d0:	0a 94       	dec	r0
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <initBoard+0x13a>
 5d4:	00 de       	rcall	.-1024   	; 0x1d6 <ledWriteAll>
 5d6:	df 5f       	subi	r29, 0xFF	; 255
 5d8:	d1 31       	cpi	r29, 0x11	; 17
 5da:	28 f0       	brcs	.+10     	; 0x5e6 <initBoard+0x154>
 5dc:	86 2d       	mov	r24, r6
 5de:	91 10       	cpse	r9, r1
 5e0:	85 2d       	mov	r24, r5
 5e2:	98 2e       	mov	r9, r24
 5e4:	d0 e0       	ldi	r29, 0x00	; 0
 5e6:	88 20       	and	r8, r8
 5e8:	11 f0       	breq	.+4      	; 0x5ee <initBoard+0x15c>
 5ea:	ce 5f       	subi	r28, 0xFE	; 254
 5ec:	01 c0       	rjmp	.+2      	; 0x5f0 <initBoard+0x15e>
 5ee:	c2 50       	subi	r28, 0x02	; 2
 5f0:	8c 2f       	mov	r24, r28
 5f2:	58 de       	rcall	.-848    	; 0x2a4 <lcdLight>
 5f4:	ce 3f       	cpi	r28, 0xFE	; 254
 5f6:	21 f0       	breq	.+8      	; 0x600 <initBoard+0x16e>
 5f8:	c8 37       	cpi	r28, 0x78	; 120
 5fa:	19 f4       	brne	.+6      	; 0x602 <initBoard+0x170>
 5fc:	86 2c       	mov	r8, r6
 5fe:	01 c0       	rjmp	.+2      	; 0x602 <initBoard+0x170>
 600:	85 2c       	mov	r8, r5
 602:	71 10       	cpse	r7, r1
 604:	3b c0       	rjmp	.+118    	; 0x67c <initBoard+0x1ea>
 606:	f8 01       	movw	r30, r16
 608:	80 81       	ld	r24, Z
 60a:	83 7c       	andi	r24, 0xC3	; 195
 60c:	91 f0       	breq	.+36     	; 0x632 <initBoard+0x1a0>
 60e:	40 e0       	ldi	r20, 0x00	; 0
 610:	50 e0       	ldi	r21, 0x00	; 0
 612:	66 e2       	ldi	r22, 0x26	; 38
 614:	72 e0       	ldi	r23, 0x02	; 2
 616:	8f ef       	ldi	r24, 0xFF	; 255
 618:	93 e0       	ldi	r25, 0x03	; 3
 61a:	0d de       	rcall	.-998    	; 0x236 <rgbWrite>
 61c:	bf 92       	push	r11
 61e:	af 92       	push	r10
 620:	1f 92       	push	r1
 622:	4f 92       	push	r4
 624:	c2 de       	rcall	.-636    	; 0x3aa <lcdWriteText>
 626:	0f 90       	pop	r0
 628:	0f 90       	pop	r0
 62a:	0f 90       	pop	r0
 62c:	0f 90       	pop	r0
 62e:	76 2c       	mov	r7, r6
 630:	25 c0       	rjmp	.+74     	; 0x67c <initBoard+0x1ea>
 632:	8f ef       	ldi	r24, 0xFF	; 255
 634:	9c e7       	ldi	r25, 0x7C	; 124
 636:	01 97       	sbiw	r24, 0x01	; 1
 638:	f1 f7       	brne	.-4      	; 0x636 <initBoard+0x1a4>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <initBoard+0x1aa>
 63c:	00 00       	nop
 63e:	b8 cf       	rjmp	.-144    	; 0x5b0 <initBoard+0x11e>
 640:	f0 de       	rcall	.-544    	; 0x422 <lcdClear>
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	2f de       	rcall	.-930    	; 0x2a4 <lcdLight>
 646:	80 e0       	ldi	r24, 0x00	; 0
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	c5 dd       	rcall	.-1142   	; 0x1d6 <ledWriteAll>
 64c:	40 e0       	ldi	r20, 0x00	; 0
 64e:	50 e0       	ldi	r21, 0x00	; 0
 650:	60 e0       	ldi	r22, 0x00	; 0
 652:	70 e0       	ldi	r23, 0x00	; 0
 654:	80 e0       	ldi	r24, 0x00	; 0
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	ee dd       	rcall	.-1060   	; 0x236 <rgbWrite>
 65a:	10 92 99 02 	sts	0x0299, r1	; 0x800299 <systemTimeMs>
 65e:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <systemTimeMs+0x1>
 662:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <systemTimeMs+0x2>
 666:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <systemTimeMs+0x3>
 66a:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <systemTimeMs+0x4>
 66e:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <systemTimeMs+0x5>
 672:	10 92 9f 02 	sts	0x029F, r1	; 0x80029f <systemTimeMs+0x6>
 676:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <systemTimeMs+0x7>
 67a:	05 c0       	rjmp	.+10     	; 0x686 <initBoard+0x1f4>
 67c:	f8 01       	movw	r30, r16
 67e:	80 81       	ld	r24, Z
 680:	83 7c       	andi	r24, 0xC3	; 195
 682:	b9 f6       	brne	.-82     	; 0x632 <initBoard+0x1a0>
 684:	dd cf       	rjmp	.-70     	; 0x640 <initBoard+0x1ae>
 686:	df 91       	pop	r29
 688:	cf 91       	pop	r28
 68a:	1f 91       	pop	r17
 68c:	0f 91       	pop	r16
 68e:	ff 90       	pop	r15
 690:	ef 90       	pop	r14
 692:	df 90       	pop	r13
 694:	cf 90       	pop	r12
 696:	bf 90       	pop	r11
 698:	af 90       	pop	r10
 69a:	9f 90       	pop	r9
 69c:	8f 90       	pop	r8
 69e:	7f 90       	pop	r7
 6a0:	6f 90       	pop	r6
 6a2:	5f 90       	pop	r5
 6a4:	4f 90       	pop	r4
 6a6:	08 95       	ret

000006a8 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	cd b7       	in	r28, 0x3d	; 61
 6ae:	de b7       	in	r29, 0x3e	; 62
 6b0:	28 97       	sbiw	r28, 0x08	; 8
 6b2:	0f b6       	in	r0, 0x3f	; 63
 6b4:	f8 94       	cli
 6b6:	de bf       	out	0x3e, r29	; 62
 6b8:	0f be       	out	0x3f, r0	; 63
 6ba:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 6bc:	88 e0       	ldi	r24, 0x08	; 8
 6be:	e0 e0       	ldi	r30, 0x00	; 0
 6c0:	f2 e0       	ldi	r31, 0x02	; 2
 6c2:	de 01       	movw	r26, r28
 6c4:	11 96       	adiw	r26, 0x01	; 1
 6c6:	01 90       	ld	r0, Z+
 6c8:	0d 92       	st	X+, r0
 6ca:	8a 95       	dec	r24
 6cc:	e1 f7       	brne	.-8      	; 0x6c6 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6ce:	e5 e0       	ldi	r30, 0x05	; 5
 6d0:	f1 e0       	ldi	r31, 0x01	; 1
 6d2:	80 81       	ld	r24, Z
 6d4:	8f 7b       	andi	r24, 0xBF	; 191
 6d6:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6d8:	e0 91 96 02 	lds	r30, 0x0296	; 0x800296 <Zeilen_Nr.2731>
 6dc:	f0 91 97 02 	lds	r31, 0x0297	; 0x800297 <Zeilen_Nr.2731+0x1>
 6e0:	81 e0       	ldi	r24, 0x01	; 1
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	8c 0f       	add	r24, r28
 6e6:	9d 1f       	adc	r25, r29
 6e8:	e8 0f       	add	r30, r24
 6ea:	f9 1f       	adc	r31, r25
 6ec:	80 81       	ld	r24, Z
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <__data_end+0x1>
 6f4:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <__data_end>
 6f8:	a2 e1       	ldi	r26, 0x12	; 18
 6fa:	b3 e0       	ldi	r27, 0x03	; 3
 6fc:	22 ea       	ldi	r18, 0xA2	; 162
 6fe:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 700:	e5 e0       	ldi	r30, 0x05	; 5
 702:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 704:	5e 91       	ld	r21, -X
 706:	4e 91       	ld	r20, -X
 708:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end>
 70c:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <__data_end+0x1>
 710:	84 23       	and	r24, r20
 712:	95 23       	and	r25, r21
 714:	89 2b       	or	r24, r25
 716:	21 f0       	breq	.+8      	; 0x720 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 718:	80 81       	ld	r24, Z
 71a:	80 62       	ori	r24, 0x20	; 32
 71c:	80 83       	st	Z, r24
 71e:	03 c0       	rjmp	.+6      	; 0x726 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 720:	80 81       	ld	r24, Z
 722:	8f 7d       	andi	r24, 0xDF	; 223
 724:	80 83       	st	Z, r24
        }
        CLOCK_1;
 726:	80 81       	ld	r24, Z
 728:	80 61       	ori	r24, 0x10	; 16
 72a:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 72c:	80 81       	ld	r24, Z
 72e:	8f 7e       	andi	r24, 0xEF	; 239
 730:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 732:	a2 17       	cp	r26, r18
 734:	b3 07       	cpc	r27, r19
 736:	31 f7       	brne	.-52     	; 0x704 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 738:	e5 e0       	ldi	r30, 0x05	; 5
 73a:	f1 e0       	ldi	r31, 0x01	; 1
 73c:	80 81       	ld	r24, Z
 73e:	87 7f       	andi	r24, 0xF7	; 247
 740:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 742:	80 81       	ld	r24, Z
 744:	88 7f       	andi	r24, 0xF8	; 248
 746:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 748:	90 81       	ld	r25, Z
 74a:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <Zeilen_Nr.2731>
 74e:	89 2b       	or	r24, r25
 750:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 752:	80 81       	ld	r24, Z
 754:	80 64       	ori	r24, 0x40	; 64
 756:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 758:	80 81       	ld	r24, Z
 75a:	88 60       	ori	r24, 0x08	; 8
 75c:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 75e:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <Zeilen_Nr.2731>
 762:	90 91 97 02 	lds	r25, 0x0297	; 0x800297 <Zeilen_Nr.2731+0x1>
 766:	87 30       	cpi	r24, 0x07	; 7
 768:	91 05       	cpc	r25, r1
 76a:	30 f4       	brcc	.+12     	; 0x778 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 76c:	01 96       	adiw	r24, 0x01	; 1
 76e:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <Zeilen_Nr.2731+0x1>
 772:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <Zeilen_Nr.2731>
 776:	07 c0       	rjmp	.+14     	; 0x786 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 778:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <Zeilen_Nr.2731+0x1>
 77c:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <Zeilen_Nr.2731>
        writeTextFinished = 1;
 780:	81 e0       	ldi	r24, 0x01	; 1
 782:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <writeTextFinished>
    }
    
 786:	28 96       	adiw	r28, 0x08	; 8
 788:	0f b6       	in	r0, 0x3f	; 63
 78a:	f8 94       	cli
 78c:	de bf       	out	0x3e, r29	; 62
 78e:	0f be       	out	0x3f, r0	; 63
 790:	cd bf       	out	0x3d, r28	; 61
 792:	df 91       	pop	r29
 794:	cf 91       	pop	r28
 796:	08 95       	ret

00000798 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 798:	1f 92       	push	r1
 79a:	0f 92       	push	r0
 79c:	0f b6       	in	r0, 0x3f	; 63
 79e:	0f 92       	push	r0
 7a0:	11 24       	eor	r1, r1
 7a2:	0b b6       	in	r0, 0x3b	; 59
 7a4:	0f 92       	push	r0
 7a6:	2f 93       	push	r18
 7a8:	3f 93       	push	r19
 7aa:	4f 93       	push	r20
 7ac:	5f 93       	push	r21
 7ae:	6f 93       	push	r22
 7b0:	7f 93       	push	r23
 7b2:	8f 93       	push	r24
 7b4:	9f 93       	push	r25
 7b6:	af 93       	push	r26
 7b8:	bf 93       	push	r27
 7ba:	ef 93       	push	r30
 7bc:	ff 93       	push	r31
    systemTimeMs += 1;
 7be:	20 91 99 02 	lds	r18, 0x0299	; 0x800299 <systemTimeMs>
 7c2:	30 91 9a 02 	lds	r19, 0x029A	; 0x80029a <systemTimeMs+0x1>
 7c6:	40 91 9b 02 	lds	r20, 0x029B	; 0x80029b <systemTimeMs+0x2>
 7ca:	50 91 9c 02 	lds	r21, 0x029C	; 0x80029c <systemTimeMs+0x3>
 7ce:	60 91 9d 02 	lds	r22, 0x029D	; 0x80029d <systemTimeMs+0x4>
 7d2:	70 91 9e 02 	lds	r23, 0x029E	; 0x80029e <systemTimeMs+0x5>
 7d6:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <systemTimeMs+0x6>
 7da:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <systemTimeMs+0x7>
 7de:	a1 e0       	ldi	r26, 0x01	; 1
 7e0:	27 d0       	rcall	.+78     	; 0x830 <__adddi3_s8>
 7e2:	20 93 99 02 	sts	0x0299, r18	; 0x800299 <systemTimeMs>
 7e6:	30 93 9a 02 	sts	0x029A, r19	; 0x80029a <systemTimeMs+0x1>
 7ea:	40 93 9b 02 	sts	0x029B, r20	; 0x80029b <systemTimeMs+0x2>
 7ee:	50 93 9c 02 	sts	0x029C, r21	; 0x80029c <systemTimeMs+0x3>
 7f2:	60 93 9d 02 	sts	0x029D, r22	; 0x80029d <systemTimeMs+0x4>
 7f6:	70 93 9e 02 	sts	0x029E, r23	; 0x80029e <systemTimeMs+0x5>
 7fa:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <systemTimeMs+0x6>
 7fe:	90 93 a0 02 	sts	0x02A0, r25	; 0x8002a0 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 802:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <matrixRunning>
 806:	81 11       	cpse	r24, r1
 808:	4f df       	rcall	.-354    	; 0x6a8 <matrixWriteNextLine>
}
 80a:	ff 91       	pop	r31
 80c:	ef 91       	pop	r30
 80e:	bf 91       	pop	r27
 810:	af 91       	pop	r26
 812:	9f 91       	pop	r25
 814:	8f 91       	pop	r24
 816:	7f 91       	pop	r23
 818:	6f 91       	pop	r22
 81a:	5f 91       	pop	r21
 81c:	4f 91       	pop	r20
 81e:	3f 91       	pop	r19
 820:	2f 91       	pop	r18
 822:	0f 90       	pop	r0
 824:	0b be       	out	0x3b, r0	; 59
 826:	0f 90       	pop	r0
 828:	0f be       	out	0x3f, r0	; 63
 82a:	0f 90       	pop	r0
 82c:	1f 90       	pop	r1
 82e:	18 95       	reti

00000830 <__adddi3_s8>:
 830:	00 24       	eor	r0, r0
 832:	a7 fd       	sbrc	r26, 7
 834:	00 94       	com	r0
 836:	2a 0f       	add	r18, r26
 838:	30 1d       	adc	r19, r0
 83a:	40 1d       	adc	r20, r0
 83c:	50 1d       	adc	r21, r0
 83e:	60 1d       	adc	r22, r0
 840:	70 1d       	adc	r23, r0
 842:	80 1d       	adc	r24, r0
 844:	90 1d       	adc	r25, r0
 846:	08 95       	ret

00000848 <vsnprintf>:
 848:	0f 93       	push	r16
 84a:	1f 93       	push	r17
 84c:	cf 93       	push	r28
 84e:	df 93       	push	r29
 850:	cd b7       	in	r28, 0x3d	; 61
 852:	de b7       	in	r29, 0x3e	; 62
 854:	2e 97       	sbiw	r28, 0x0e	; 14
 856:	0f b6       	in	r0, 0x3f	; 63
 858:	f8 94       	cli
 85a:	de bf       	out	0x3e, r29	; 62
 85c:	0f be       	out	0x3f, r0	; 63
 85e:	cd bf       	out	0x3d, r28	; 61
 860:	8c 01       	movw	r16, r24
 862:	fa 01       	movw	r30, r20
 864:	86 e0       	ldi	r24, 0x06	; 6
 866:	8c 83       	std	Y+4, r24	; 0x04
 868:	1a 83       	std	Y+2, r17	; 0x02
 86a:	09 83       	std	Y+1, r16	; 0x01
 86c:	77 ff       	sbrs	r23, 7
 86e:	02 c0       	rjmp	.+4      	; 0x874 <vsnprintf+0x2c>
 870:	60 e0       	ldi	r22, 0x00	; 0
 872:	70 e8       	ldi	r23, 0x80	; 128
 874:	cb 01       	movw	r24, r22
 876:	01 97       	sbiw	r24, 0x01	; 1
 878:	9e 83       	std	Y+6, r25	; 0x06
 87a:	8d 83       	std	Y+5, r24	; 0x05
 87c:	a9 01       	movw	r20, r18
 87e:	bf 01       	movw	r22, r30
 880:	ce 01       	movw	r24, r28
 882:	01 96       	adiw	r24, 0x01	; 1
 884:	19 d0       	rcall	.+50     	; 0x8b8 <vfprintf>
 886:	4d 81       	ldd	r20, Y+5	; 0x05
 888:	5e 81       	ldd	r21, Y+6	; 0x06
 88a:	57 fd       	sbrc	r21, 7
 88c:	0a c0       	rjmp	.+20     	; 0x8a2 <vsnprintf+0x5a>
 88e:	2f 81       	ldd	r18, Y+7	; 0x07
 890:	38 85       	ldd	r19, Y+8	; 0x08
 892:	42 17       	cp	r20, r18
 894:	53 07       	cpc	r21, r19
 896:	0c f4       	brge	.+2      	; 0x89a <vsnprintf+0x52>
 898:	9a 01       	movw	r18, r20
 89a:	f8 01       	movw	r30, r16
 89c:	e2 0f       	add	r30, r18
 89e:	f3 1f       	adc	r31, r19
 8a0:	10 82       	st	Z, r1
 8a2:	2e 96       	adiw	r28, 0x0e	; 14
 8a4:	0f b6       	in	r0, 0x3f	; 63
 8a6:	f8 94       	cli
 8a8:	de bf       	out	0x3e, r29	; 62
 8aa:	0f be       	out	0x3f, r0	; 63
 8ac:	cd bf       	out	0x3d, r28	; 61
 8ae:	df 91       	pop	r29
 8b0:	cf 91       	pop	r28
 8b2:	1f 91       	pop	r17
 8b4:	0f 91       	pop	r16
 8b6:	08 95       	ret

000008b8 <vfprintf>:
 8b8:	2f 92       	push	r2
 8ba:	3f 92       	push	r3
 8bc:	4f 92       	push	r4
 8be:	5f 92       	push	r5
 8c0:	6f 92       	push	r6
 8c2:	7f 92       	push	r7
 8c4:	8f 92       	push	r8
 8c6:	9f 92       	push	r9
 8c8:	af 92       	push	r10
 8ca:	bf 92       	push	r11
 8cc:	cf 92       	push	r12
 8ce:	df 92       	push	r13
 8d0:	ef 92       	push	r14
 8d2:	ff 92       	push	r15
 8d4:	0f 93       	push	r16
 8d6:	1f 93       	push	r17
 8d8:	cf 93       	push	r28
 8da:	df 93       	push	r29
 8dc:	cd b7       	in	r28, 0x3d	; 61
 8de:	de b7       	in	r29, 0x3e	; 62
 8e0:	2b 97       	sbiw	r28, 0x0b	; 11
 8e2:	0f b6       	in	r0, 0x3f	; 63
 8e4:	f8 94       	cli
 8e6:	de bf       	out	0x3e, r29	; 62
 8e8:	0f be       	out	0x3f, r0	; 63
 8ea:	cd bf       	out	0x3d, r28	; 61
 8ec:	6c 01       	movw	r12, r24
 8ee:	7b 01       	movw	r14, r22
 8f0:	8a 01       	movw	r16, r20
 8f2:	fc 01       	movw	r30, r24
 8f4:	17 82       	std	Z+7, r1	; 0x07
 8f6:	16 82       	std	Z+6, r1	; 0x06
 8f8:	83 81       	ldd	r24, Z+3	; 0x03
 8fa:	81 ff       	sbrs	r24, 1
 8fc:	bf c1       	rjmp	.+894    	; 0xc7c <vfprintf+0x3c4>
 8fe:	ce 01       	movw	r24, r28
 900:	01 96       	adiw	r24, 0x01	; 1
 902:	3c 01       	movw	r6, r24
 904:	f6 01       	movw	r30, r12
 906:	93 81       	ldd	r25, Z+3	; 0x03
 908:	f7 01       	movw	r30, r14
 90a:	93 fd       	sbrc	r25, 3
 90c:	85 91       	lpm	r24, Z+
 90e:	93 ff       	sbrs	r25, 3
 910:	81 91       	ld	r24, Z+
 912:	7f 01       	movw	r14, r30
 914:	88 23       	and	r24, r24
 916:	09 f4       	brne	.+2      	; 0x91a <vfprintf+0x62>
 918:	ad c1       	rjmp	.+858    	; 0xc74 <vfprintf+0x3bc>
 91a:	85 32       	cpi	r24, 0x25	; 37
 91c:	39 f4       	brne	.+14     	; 0x92c <vfprintf+0x74>
 91e:	93 fd       	sbrc	r25, 3
 920:	85 91       	lpm	r24, Z+
 922:	93 ff       	sbrs	r25, 3
 924:	81 91       	ld	r24, Z+
 926:	7f 01       	movw	r14, r30
 928:	85 32       	cpi	r24, 0x25	; 37
 92a:	21 f4       	brne	.+8      	; 0x934 <vfprintf+0x7c>
 92c:	b6 01       	movw	r22, r12
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	d6 d1       	rcall	.+940    	; 0xcde <fputc>
 932:	e8 cf       	rjmp	.-48     	; 0x904 <vfprintf+0x4c>
 934:	91 2c       	mov	r9, r1
 936:	21 2c       	mov	r2, r1
 938:	31 2c       	mov	r3, r1
 93a:	ff e1       	ldi	r31, 0x1F	; 31
 93c:	f3 15       	cp	r31, r3
 93e:	d8 f0       	brcs	.+54     	; 0x976 <vfprintf+0xbe>
 940:	8b 32       	cpi	r24, 0x2B	; 43
 942:	79 f0       	breq	.+30     	; 0x962 <vfprintf+0xaa>
 944:	38 f4       	brcc	.+14     	; 0x954 <vfprintf+0x9c>
 946:	80 32       	cpi	r24, 0x20	; 32
 948:	79 f0       	breq	.+30     	; 0x968 <vfprintf+0xb0>
 94a:	83 32       	cpi	r24, 0x23	; 35
 94c:	a1 f4       	brne	.+40     	; 0x976 <vfprintf+0xbe>
 94e:	23 2d       	mov	r18, r3
 950:	20 61       	ori	r18, 0x10	; 16
 952:	1d c0       	rjmp	.+58     	; 0x98e <vfprintf+0xd6>
 954:	8d 32       	cpi	r24, 0x2D	; 45
 956:	61 f0       	breq	.+24     	; 0x970 <vfprintf+0xb8>
 958:	80 33       	cpi	r24, 0x30	; 48
 95a:	69 f4       	brne	.+26     	; 0x976 <vfprintf+0xbe>
 95c:	23 2d       	mov	r18, r3
 95e:	21 60       	ori	r18, 0x01	; 1
 960:	16 c0       	rjmp	.+44     	; 0x98e <vfprintf+0xd6>
 962:	83 2d       	mov	r24, r3
 964:	82 60       	ori	r24, 0x02	; 2
 966:	38 2e       	mov	r3, r24
 968:	e3 2d       	mov	r30, r3
 96a:	e4 60       	ori	r30, 0x04	; 4
 96c:	3e 2e       	mov	r3, r30
 96e:	2a c0       	rjmp	.+84     	; 0x9c4 <vfprintf+0x10c>
 970:	f3 2d       	mov	r31, r3
 972:	f8 60       	ori	r31, 0x08	; 8
 974:	1d c0       	rjmp	.+58     	; 0x9b0 <vfprintf+0xf8>
 976:	37 fc       	sbrc	r3, 7
 978:	2d c0       	rjmp	.+90     	; 0x9d4 <vfprintf+0x11c>
 97a:	20 ed       	ldi	r18, 0xD0	; 208
 97c:	28 0f       	add	r18, r24
 97e:	2a 30       	cpi	r18, 0x0A	; 10
 980:	40 f0       	brcs	.+16     	; 0x992 <vfprintf+0xda>
 982:	8e 32       	cpi	r24, 0x2E	; 46
 984:	b9 f4       	brne	.+46     	; 0x9b4 <vfprintf+0xfc>
 986:	36 fc       	sbrc	r3, 6
 988:	75 c1       	rjmp	.+746    	; 0xc74 <vfprintf+0x3bc>
 98a:	23 2d       	mov	r18, r3
 98c:	20 64       	ori	r18, 0x40	; 64
 98e:	32 2e       	mov	r3, r18
 990:	19 c0       	rjmp	.+50     	; 0x9c4 <vfprintf+0x10c>
 992:	36 fe       	sbrs	r3, 6
 994:	06 c0       	rjmp	.+12     	; 0x9a2 <vfprintf+0xea>
 996:	8a e0       	ldi	r24, 0x0A	; 10
 998:	98 9e       	mul	r9, r24
 99a:	20 0d       	add	r18, r0
 99c:	11 24       	eor	r1, r1
 99e:	92 2e       	mov	r9, r18
 9a0:	11 c0       	rjmp	.+34     	; 0x9c4 <vfprintf+0x10c>
 9a2:	ea e0       	ldi	r30, 0x0A	; 10
 9a4:	2e 9e       	mul	r2, r30
 9a6:	20 0d       	add	r18, r0
 9a8:	11 24       	eor	r1, r1
 9aa:	22 2e       	mov	r2, r18
 9ac:	f3 2d       	mov	r31, r3
 9ae:	f0 62       	ori	r31, 0x20	; 32
 9b0:	3f 2e       	mov	r3, r31
 9b2:	08 c0       	rjmp	.+16     	; 0x9c4 <vfprintf+0x10c>
 9b4:	8c 36       	cpi	r24, 0x6C	; 108
 9b6:	21 f4       	brne	.+8      	; 0x9c0 <vfprintf+0x108>
 9b8:	83 2d       	mov	r24, r3
 9ba:	80 68       	ori	r24, 0x80	; 128
 9bc:	38 2e       	mov	r3, r24
 9be:	02 c0       	rjmp	.+4      	; 0x9c4 <vfprintf+0x10c>
 9c0:	88 36       	cpi	r24, 0x68	; 104
 9c2:	41 f4       	brne	.+16     	; 0x9d4 <vfprintf+0x11c>
 9c4:	f7 01       	movw	r30, r14
 9c6:	93 fd       	sbrc	r25, 3
 9c8:	85 91       	lpm	r24, Z+
 9ca:	93 ff       	sbrs	r25, 3
 9cc:	81 91       	ld	r24, Z+
 9ce:	7f 01       	movw	r14, r30
 9d0:	81 11       	cpse	r24, r1
 9d2:	b3 cf       	rjmp	.-154    	; 0x93a <vfprintf+0x82>
 9d4:	98 2f       	mov	r25, r24
 9d6:	9f 7d       	andi	r25, 0xDF	; 223
 9d8:	95 54       	subi	r25, 0x45	; 69
 9da:	93 30       	cpi	r25, 0x03	; 3
 9dc:	28 f4       	brcc	.+10     	; 0x9e8 <vfprintf+0x130>
 9de:	0c 5f       	subi	r16, 0xFC	; 252
 9e0:	1f 4f       	sbci	r17, 0xFF	; 255
 9e2:	9f e3       	ldi	r25, 0x3F	; 63
 9e4:	99 83       	std	Y+1, r25	; 0x01
 9e6:	0d c0       	rjmp	.+26     	; 0xa02 <vfprintf+0x14a>
 9e8:	83 36       	cpi	r24, 0x63	; 99
 9ea:	31 f0       	breq	.+12     	; 0x9f8 <vfprintf+0x140>
 9ec:	83 37       	cpi	r24, 0x73	; 115
 9ee:	71 f0       	breq	.+28     	; 0xa0c <vfprintf+0x154>
 9f0:	83 35       	cpi	r24, 0x53	; 83
 9f2:	09 f0       	breq	.+2      	; 0x9f6 <vfprintf+0x13e>
 9f4:	55 c0       	rjmp	.+170    	; 0xaa0 <vfprintf+0x1e8>
 9f6:	20 c0       	rjmp	.+64     	; 0xa38 <vfprintf+0x180>
 9f8:	f8 01       	movw	r30, r16
 9fa:	80 81       	ld	r24, Z
 9fc:	89 83       	std	Y+1, r24	; 0x01
 9fe:	0e 5f       	subi	r16, 0xFE	; 254
 a00:	1f 4f       	sbci	r17, 0xFF	; 255
 a02:	88 24       	eor	r8, r8
 a04:	83 94       	inc	r8
 a06:	91 2c       	mov	r9, r1
 a08:	53 01       	movw	r10, r6
 a0a:	12 c0       	rjmp	.+36     	; 0xa30 <vfprintf+0x178>
 a0c:	28 01       	movw	r4, r16
 a0e:	f2 e0       	ldi	r31, 0x02	; 2
 a10:	4f 0e       	add	r4, r31
 a12:	51 1c       	adc	r5, r1
 a14:	f8 01       	movw	r30, r16
 a16:	a0 80       	ld	r10, Z
 a18:	b1 80       	ldd	r11, Z+1	; 0x01
 a1a:	36 fe       	sbrs	r3, 6
 a1c:	03 c0       	rjmp	.+6      	; 0xa24 <vfprintf+0x16c>
 a1e:	69 2d       	mov	r22, r9
 a20:	70 e0       	ldi	r23, 0x00	; 0
 a22:	02 c0       	rjmp	.+4      	; 0xa28 <vfprintf+0x170>
 a24:	6f ef       	ldi	r22, 0xFF	; 255
 a26:	7f ef       	ldi	r23, 0xFF	; 255
 a28:	c5 01       	movw	r24, r10
 a2a:	4e d1       	rcall	.+668    	; 0xcc8 <strnlen>
 a2c:	4c 01       	movw	r8, r24
 a2e:	82 01       	movw	r16, r4
 a30:	f3 2d       	mov	r31, r3
 a32:	ff 77       	andi	r31, 0x7F	; 127
 a34:	3f 2e       	mov	r3, r31
 a36:	15 c0       	rjmp	.+42     	; 0xa62 <vfprintf+0x1aa>
 a38:	28 01       	movw	r4, r16
 a3a:	22 e0       	ldi	r18, 0x02	; 2
 a3c:	42 0e       	add	r4, r18
 a3e:	51 1c       	adc	r5, r1
 a40:	f8 01       	movw	r30, r16
 a42:	a0 80       	ld	r10, Z
 a44:	b1 80       	ldd	r11, Z+1	; 0x01
 a46:	36 fe       	sbrs	r3, 6
 a48:	03 c0       	rjmp	.+6      	; 0xa50 <vfprintf+0x198>
 a4a:	69 2d       	mov	r22, r9
 a4c:	70 e0       	ldi	r23, 0x00	; 0
 a4e:	02 c0       	rjmp	.+4      	; 0xa54 <vfprintf+0x19c>
 a50:	6f ef       	ldi	r22, 0xFF	; 255
 a52:	7f ef       	ldi	r23, 0xFF	; 255
 a54:	c5 01       	movw	r24, r10
 a56:	2d d1       	rcall	.+602    	; 0xcb2 <strnlen_P>
 a58:	4c 01       	movw	r8, r24
 a5a:	f3 2d       	mov	r31, r3
 a5c:	f0 68       	ori	r31, 0x80	; 128
 a5e:	3f 2e       	mov	r3, r31
 a60:	82 01       	movw	r16, r4
 a62:	33 fc       	sbrc	r3, 3
 a64:	19 c0       	rjmp	.+50     	; 0xa98 <vfprintf+0x1e0>
 a66:	82 2d       	mov	r24, r2
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	88 16       	cp	r8, r24
 a6c:	99 06       	cpc	r9, r25
 a6e:	a0 f4       	brcc	.+40     	; 0xa98 <vfprintf+0x1e0>
 a70:	b6 01       	movw	r22, r12
 a72:	80 e2       	ldi	r24, 0x20	; 32
 a74:	90 e0       	ldi	r25, 0x00	; 0
 a76:	33 d1       	rcall	.+614    	; 0xcde <fputc>
 a78:	2a 94       	dec	r2
 a7a:	f5 cf       	rjmp	.-22     	; 0xa66 <vfprintf+0x1ae>
 a7c:	f5 01       	movw	r30, r10
 a7e:	37 fc       	sbrc	r3, 7
 a80:	85 91       	lpm	r24, Z+
 a82:	37 fe       	sbrs	r3, 7
 a84:	81 91       	ld	r24, Z+
 a86:	5f 01       	movw	r10, r30
 a88:	b6 01       	movw	r22, r12
 a8a:	90 e0       	ldi	r25, 0x00	; 0
 a8c:	28 d1       	rcall	.+592    	; 0xcde <fputc>
 a8e:	21 10       	cpse	r2, r1
 a90:	2a 94       	dec	r2
 a92:	21 e0       	ldi	r18, 0x01	; 1
 a94:	82 1a       	sub	r8, r18
 a96:	91 08       	sbc	r9, r1
 a98:	81 14       	cp	r8, r1
 a9a:	91 04       	cpc	r9, r1
 a9c:	79 f7       	brne	.-34     	; 0xa7c <vfprintf+0x1c4>
 a9e:	e1 c0       	rjmp	.+450    	; 0xc62 <vfprintf+0x3aa>
 aa0:	84 36       	cpi	r24, 0x64	; 100
 aa2:	11 f0       	breq	.+4      	; 0xaa8 <vfprintf+0x1f0>
 aa4:	89 36       	cpi	r24, 0x69	; 105
 aa6:	39 f5       	brne	.+78     	; 0xaf6 <vfprintf+0x23e>
 aa8:	f8 01       	movw	r30, r16
 aaa:	37 fe       	sbrs	r3, 7
 aac:	07 c0       	rjmp	.+14     	; 0xabc <vfprintf+0x204>
 aae:	60 81       	ld	r22, Z
 ab0:	71 81       	ldd	r23, Z+1	; 0x01
 ab2:	82 81       	ldd	r24, Z+2	; 0x02
 ab4:	93 81       	ldd	r25, Z+3	; 0x03
 ab6:	0c 5f       	subi	r16, 0xFC	; 252
 ab8:	1f 4f       	sbci	r17, 0xFF	; 255
 aba:	08 c0       	rjmp	.+16     	; 0xacc <vfprintf+0x214>
 abc:	60 81       	ld	r22, Z
 abe:	71 81       	ldd	r23, Z+1	; 0x01
 ac0:	07 2e       	mov	r0, r23
 ac2:	00 0c       	add	r0, r0
 ac4:	88 0b       	sbc	r24, r24
 ac6:	99 0b       	sbc	r25, r25
 ac8:	0e 5f       	subi	r16, 0xFE	; 254
 aca:	1f 4f       	sbci	r17, 0xFF	; 255
 acc:	f3 2d       	mov	r31, r3
 ace:	ff 76       	andi	r31, 0x6F	; 111
 ad0:	3f 2e       	mov	r3, r31
 ad2:	97 ff       	sbrs	r25, 7
 ad4:	09 c0       	rjmp	.+18     	; 0xae8 <vfprintf+0x230>
 ad6:	90 95       	com	r25
 ad8:	80 95       	com	r24
 ada:	70 95       	com	r23
 adc:	61 95       	neg	r22
 ade:	7f 4f       	sbci	r23, 0xFF	; 255
 ae0:	8f 4f       	sbci	r24, 0xFF	; 255
 ae2:	9f 4f       	sbci	r25, 0xFF	; 255
 ae4:	f0 68       	ori	r31, 0x80	; 128
 ae6:	3f 2e       	mov	r3, r31
 ae8:	2a e0       	ldi	r18, 0x0A	; 10
 aea:	30 e0       	ldi	r19, 0x00	; 0
 aec:	a3 01       	movw	r20, r6
 aee:	33 d1       	rcall	.+614    	; 0xd56 <__ultoa_invert>
 af0:	88 2e       	mov	r8, r24
 af2:	86 18       	sub	r8, r6
 af4:	44 c0       	rjmp	.+136    	; 0xb7e <vfprintf+0x2c6>
 af6:	85 37       	cpi	r24, 0x75	; 117
 af8:	31 f4       	brne	.+12     	; 0xb06 <vfprintf+0x24e>
 afa:	23 2d       	mov	r18, r3
 afc:	2f 7e       	andi	r18, 0xEF	; 239
 afe:	b2 2e       	mov	r11, r18
 b00:	2a e0       	ldi	r18, 0x0A	; 10
 b02:	30 e0       	ldi	r19, 0x00	; 0
 b04:	25 c0       	rjmp	.+74     	; 0xb50 <vfprintf+0x298>
 b06:	93 2d       	mov	r25, r3
 b08:	99 7f       	andi	r25, 0xF9	; 249
 b0a:	b9 2e       	mov	r11, r25
 b0c:	8f 36       	cpi	r24, 0x6F	; 111
 b0e:	c1 f0       	breq	.+48     	; 0xb40 <vfprintf+0x288>
 b10:	18 f4       	brcc	.+6      	; 0xb18 <vfprintf+0x260>
 b12:	88 35       	cpi	r24, 0x58	; 88
 b14:	79 f0       	breq	.+30     	; 0xb34 <vfprintf+0x27c>
 b16:	ae c0       	rjmp	.+348    	; 0xc74 <vfprintf+0x3bc>
 b18:	80 37       	cpi	r24, 0x70	; 112
 b1a:	19 f0       	breq	.+6      	; 0xb22 <vfprintf+0x26a>
 b1c:	88 37       	cpi	r24, 0x78	; 120
 b1e:	21 f0       	breq	.+8      	; 0xb28 <vfprintf+0x270>
 b20:	a9 c0       	rjmp	.+338    	; 0xc74 <vfprintf+0x3bc>
 b22:	e9 2f       	mov	r30, r25
 b24:	e0 61       	ori	r30, 0x10	; 16
 b26:	be 2e       	mov	r11, r30
 b28:	b4 fe       	sbrs	r11, 4
 b2a:	0d c0       	rjmp	.+26     	; 0xb46 <vfprintf+0x28e>
 b2c:	fb 2d       	mov	r31, r11
 b2e:	f4 60       	ori	r31, 0x04	; 4
 b30:	bf 2e       	mov	r11, r31
 b32:	09 c0       	rjmp	.+18     	; 0xb46 <vfprintf+0x28e>
 b34:	34 fe       	sbrs	r3, 4
 b36:	0a c0       	rjmp	.+20     	; 0xb4c <vfprintf+0x294>
 b38:	29 2f       	mov	r18, r25
 b3a:	26 60       	ori	r18, 0x06	; 6
 b3c:	b2 2e       	mov	r11, r18
 b3e:	06 c0       	rjmp	.+12     	; 0xb4c <vfprintf+0x294>
 b40:	28 e0       	ldi	r18, 0x08	; 8
 b42:	30 e0       	ldi	r19, 0x00	; 0
 b44:	05 c0       	rjmp	.+10     	; 0xb50 <vfprintf+0x298>
 b46:	20 e1       	ldi	r18, 0x10	; 16
 b48:	30 e0       	ldi	r19, 0x00	; 0
 b4a:	02 c0       	rjmp	.+4      	; 0xb50 <vfprintf+0x298>
 b4c:	20 e1       	ldi	r18, 0x10	; 16
 b4e:	32 e0       	ldi	r19, 0x02	; 2
 b50:	f8 01       	movw	r30, r16
 b52:	b7 fe       	sbrs	r11, 7
 b54:	07 c0       	rjmp	.+14     	; 0xb64 <vfprintf+0x2ac>
 b56:	60 81       	ld	r22, Z
 b58:	71 81       	ldd	r23, Z+1	; 0x01
 b5a:	82 81       	ldd	r24, Z+2	; 0x02
 b5c:	93 81       	ldd	r25, Z+3	; 0x03
 b5e:	0c 5f       	subi	r16, 0xFC	; 252
 b60:	1f 4f       	sbci	r17, 0xFF	; 255
 b62:	06 c0       	rjmp	.+12     	; 0xb70 <vfprintf+0x2b8>
 b64:	60 81       	ld	r22, Z
 b66:	71 81       	ldd	r23, Z+1	; 0x01
 b68:	80 e0       	ldi	r24, 0x00	; 0
 b6a:	90 e0       	ldi	r25, 0x00	; 0
 b6c:	0e 5f       	subi	r16, 0xFE	; 254
 b6e:	1f 4f       	sbci	r17, 0xFF	; 255
 b70:	a3 01       	movw	r20, r6
 b72:	f1 d0       	rcall	.+482    	; 0xd56 <__ultoa_invert>
 b74:	88 2e       	mov	r8, r24
 b76:	86 18       	sub	r8, r6
 b78:	fb 2d       	mov	r31, r11
 b7a:	ff 77       	andi	r31, 0x7F	; 127
 b7c:	3f 2e       	mov	r3, r31
 b7e:	36 fe       	sbrs	r3, 6
 b80:	0d c0       	rjmp	.+26     	; 0xb9c <vfprintf+0x2e4>
 b82:	23 2d       	mov	r18, r3
 b84:	2e 7f       	andi	r18, 0xFE	; 254
 b86:	a2 2e       	mov	r10, r18
 b88:	89 14       	cp	r8, r9
 b8a:	58 f4       	brcc	.+22     	; 0xba2 <vfprintf+0x2ea>
 b8c:	34 fe       	sbrs	r3, 4
 b8e:	0b c0       	rjmp	.+22     	; 0xba6 <vfprintf+0x2ee>
 b90:	32 fc       	sbrc	r3, 2
 b92:	09 c0       	rjmp	.+18     	; 0xba6 <vfprintf+0x2ee>
 b94:	83 2d       	mov	r24, r3
 b96:	8e 7e       	andi	r24, 0xEE	; 238
 b98:	a8 2e       	mov	r10, r24
 b9a:	05 c0       	rjmp	.+10     	; 0xba6 <vfprintf+0x2ee>
 b9c:	b8 2c       	mov	r11, r8
 b9e:	a3 2c       	mov	r10, r3
 ba0:	03 c0       	rjmp	.+6      	; 0xba8 <vfprintf+0x2f0>
 ba2:	b8 2c       	mov	r11, r8
 ba4:	01 c0       	rjmp	.+2      	; 0xba8 <vfprintf+0x2f0>
 ba6:	b9 2c       	mov	r11, r9
 ba8:	a4 fe       	sbrs	r10, 4
 baa:	0f c0       	rjmp	.+30     	; 0xbca <vfprintf+0x312>
 bac:	fe 01       	movw	r30, r28
 bae:	e8 0d       	add	r30, r8
 bb0:	f1 1d       	adc	r31, r1
 bb2:	80 81       	ld	r24, Z
 bb4:	80 33       	cpi	r24, 0x30	; 48
 bb6:	21 f4       	brne	.+8      	; 0xbc0 <vfprintf+0x308>
 bb8:	9a 2d       	mov	r25, r10
 bba:	99 7e       	andi	r25, 0xE9	; 233
 bbc:	a9 2e       	mov	r10, r25
 bbe:	09 c0       	rjmp	.+18     	; 0xbd2 <vfprintf+0x31a>
 bc0:	a2 fe       	sbrs	r10, 2
 bc2:	06 c0       	rjmp	.+12     	; 0xbd0 <vfprintf+0x318>
 bc4:	b3 94       	inc	r11
 bc6:	b3 94       	inc	r11
 bc8:	04 c0       	rjmp	.+8      	; 0xbd2 <vfprintf+0x31a>
 bca:	8a 2d       	mov	r24, r10
 bcc:	86 78       	andi	r24, 0x86	; 134
 bce:	09 f0       	breq	.+2      	; 0xbd2 <vfprintf+0x31a>
 bd0:	b3 94       	inc	r11
 bd2:	a3 fc       	sbrc	r10, 3
 bd4:	10 c0       	rjmp	.+32     	; 0xbf6 <vfprintf+0x33e>
 bd6:	a0 fe       	sbrs	r10, 0
 bd8:	06 c0       	rjmp	.+12     	; 0xbe6 <vfprintf+0x32e>
 bda:	b2 14       	cp	r11, r2
 bdc:	80 f4       	brcc	.+32     	; 0xbfe <vfprintf+0x346>
 bde:	28 0c       	add	r2, r8
 be0:	92 2c       	mov	r9, r2
 be2:	9b 18       	sub	r9, r11
 be4:	0d c0       	rjmp	.+26     	; 0xc00 <vfprintf+0x348>
 be6:	b2 14       	cp	r11, r2
 be8:	58 f4       	brcc	.+22     	; 0xc00 <vfprintf+0x348>
 bea:	b6 01       	movw	r22, r12
 bec:	80 e2       	ldi	r24, 0x20	; 32
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	76 d0       	rcall	.+236    	; 0xcde <fputc>
 bf2:	b3 94       	inc	r11
 bf4:	f8 cf       	rjmp	.-16     	; 0xbe6 <vfprintf+0x32e>
 bf6:	b2 14       	cp	r11, r2
 bf8:	18 f4       	brcc	.+6      	; 0xc00 <vfprintf+0x348>
 bfa:	2b 18       	sub	r2, r11
 bfc:	02 c0       	rjmp	.+4      	; 0xc02 <vfprintf+0x34a>
 bfe:	98 2c       	mov	r9, r8
 c00:	21 2c       	mov	r2, r1
 c02:	a4 fe       	sbrs	r10, 4
 c04:	0f c0       	rjmp	.+30     	; 0xc24 <vfprintf+0x36c>
 c06:	b6 01       	movw	r22, r12
 c08:	80 e3       	ldi	r24, 0x30	; 48
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	68 d0       	rcall	.+208    	; 0xcde <fputc>
 c0e:	a2 fe       	sbrs	r10, 2
 c10:	16 c0       	rjmp	.+44     	; 0xc3e <vfprintf+0x386>
 c12:	a1 fc       	sbrc	r10, 1
 c14:	03 c0       	rjmp	.+6      	; 0xc1c <vfprintf+0x364>
 c16:	88 e7       	ldi	r24, 0x78	; 120
 c18:	90 e0       	ldi	r25, 0x00	; 0
 c1a:	02 c0       	rjmp	.+4      	; 0xc20 <vfprintf+0x368>
 c1c:	88 e5       	ldi	r24, 0x58	; 88
 c1e:	90 e0       	ldi	r25, 0x00	; 0
 c20:	b6 01       	movw	r22, r12
 c22:	0c c0       	rjmp	.+24     	; 0xc3c <vfprintf+0x384>
 c24:	8a 2d       	mov	r24, r10
 c26:	86 78       	andi	r24, 0x86	; 134
 c28:	51 f0       	breq	.+20     	; 0xc3e <vfprintf+0x386>
 c2a:	a1 fe       	sbrs	r10, 1
 c2c:	02 c0       	rjmp	.+4      	; 0xc32 <vfprintf+0x37a>
 c2e:	8b e2       	ldi	r24, 0x2B	; 43
 c30:	01 c0       	rjmp	.+2      	; 0xc34 <vfprintf+0x37c>
 c32:	80 e2       	ldi	r24, 0x20	; 32
 c34:	a7 fc       	sbrc	r10, 7
 c36:	8d e2       	ldi	r24, 0x2D	; 45
 c38:	b6 01       	movw	r22, r12
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	50 d0       	rcall	.+160    	; 0xcde <fputc>
 c3e:	89 14       	cp	r8, r9
 c40:	30 f4       	brcc	.+12     	; 0xc4e <vfprintf+0x396>
 c42:	b6 01       	movw	r22, r12
 c44:	80 e3       	ldi	r24, 0x30	; 48
 c46:	90 e0       	ldi	r25, 0x00	; 0
 c48:	4a d0       	rcall	.+148    	; 0xcde <fputc>
 c4a:	9a 94       	dec	r9
 c4c:	f8 cf       	rjmp	.-16     	; 0xc3e <vfprintf+0x386>
 c4e:	8a 94       	dec	r8
 c50:	f3 01       	movw	r30, r6
 c52:	e8 0d       	add	r30, r8
 c54:	f1 1d       	adc	r31, r1
 c56:	80 81       	ld	r24, Z
 c58:	b6 01       	movw	r22, r12
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	40 d0       	rcall	.+128    	; 0xcde <fputc>
 c5e:	81 10       	cpse	r8, r1
 c60:	f6 cf       	rjmp	.-20     	; 0xc4e <vfprintf+0x396>
 c62:	22 20       	and	r2, r2
 c64:	09 f4       	brne	.+2      	; 0xc68 <vfprintf+0x3b0>
 c66:	4e ce       	rjmp	.-868    	; 0x904 <vfprintf+0x4c>
 c68:	b6 01       	movw	r22, r12
 c6a:	80 e2       	ldi	r24, 0x20	; 32
 c6c:	90 e0       	ldi	r25, 0x00	; 0
 c6e:	37 d0       	rcall	.+110    	; 0xcde <fputc>
 c70:	2a 94       	dec	r2
 c72:	f7 cf       	rjmp	.-18     	; 0xc62 <vfprintf+0x3aa>
 c74:	f6 01       	movw	r30, r12
 c76:	86 81       	ldd	r24, Z+6	; 0x06
 c78:	97 81       	ldd	r25, Z+7	; 0x07
 c7a:	02 c0       	rjmp	.+4      	; 0xc80 <vfprintf+0x3c8>
 c7c:	8f ef       	ldi	r24, 0xFF	; 255
 c7e:	9f ef       	ldi	r25, 0xFF	; 255
 c80:	2b 96       	adiw	r28, 0x0b	; 11
 c82:	0f b6       	in	r0, 0x3f	; 63
 c84:	f8 94       	cli
 c86:	de bf       	out	0x3e, r29	; 62
 c88:	0f be       	out	0x3f, r0	; 63
 c8a:	cd bf       	out	0x3d, r28	; 61
 c8c:	df 91       	pop	r29
 c8e:	cf 91       	pop	r28
 c90:	1f 91       	pop	r17
 c92:	0f 91       	pop	r16
 c94:	ff 90       	pop	r15
 c96:	ef 90       	pop	r14
 c98:	df 90       	pop	r13
 c9a:	cf 90       	pop	r12
 c9c:	bf 90       	pop	r11
 c9e:	af 90       	pop	r10
 ca0:	9f 90       	pop	r9
 ca2:	8f 90       	pop	r8
 ca4:	7f 90       	pop	r7
 ca6:	6f 90       	pop	r6
 ca8:	5f 90       	pop	r5
 caa:	4f 90       	pop	r4
 cac:	3f 90       	pop	r3
 cae:	2f 90       	pop	r2
 cb0:	08 95       	ret

00000cb2 <strnlen_P>:
 cb2:	fc 01       	movw	r30, r24
 cb4:	05 90       	lpm	r0, Z+
 cb6:	61 50       	subi	r22, 0x01	; 1
 cb8:	70 40       	sbci	r23, 0x00	; 0
 cba:	01 10       	cpse	r0, r1
 cbc:	d8 f7       	brcc	.-10     	; 0xcb4 <strnlen_P+0x2>
 cbe:	80 95       	com	r24
 cc0:	90 95       	com	r25
 cc2:	8e 0f       	add	r24, r30
 cc4:	9f 1f       	adc	r25, r31
 cc6:	08 95       	ret

00000cc8 <strnlen>:
 cc8:	fc 01       	movw	r30, r24
 cca:	61 50       	subi	r22, 0x01	; 1
 ccc:	70 40       	sbci	r23, 0x00	; 0
 cce:	01 90       	ld	r0, Z+
 cd0:	01 10       	cpse	r0, r1
 cd2:	d8 f7       	brcc	.-10     	; 0xcca <strnlen+0x2>
 cd4:	80 95       	com	r24
 cd6:	90 95       	com	r25
 cd8:	8e 0f       	add	r24, r30
 cda:	9f 1f       	adc	r25, r31
 cdc:	08 95       	ret

00000cde <fputc>:
 cde:	0f 93       	push	r16
 ce0:	1f 93       	push	r17
 ce2:	cf 93       	push	r28
 ce4:	df 93       	push	r29
 ce6:	fb 01       	movw	r30, r22
 ce8:	23 81       	ldd	r18, Z+3	; 0x03
 cea:	21 fd       	sbrc	r18, 1
 cec:	03 c0       	rjmp	.+6      	; 0xcf4 <fputc+0x16>
 cee:	8f ef       	ldi	r24, 0xFF	; 255
 cf0:	9f ef       	ldi	r25, 0xFF	; 255
 cf2:	2c c0       	rjmp	.+88     	; 0xd4c <fputc+0x6e>
 cf4:	22 ff       	sbrs	r18, 2
 cf6:	16 c0       	rjmp	.+44     	; 0xd24 <fputc+0x46>
 cf8:	46 81       	ldd	r20, Z+6	; 0x06
 cfa:	57 81       	ldd	r21, Z+7	; 0x07
 cfc:	24 81       	ldd	r18, Z+4	; 0x04
 cfe:	35 81       	ldd	r19, Z+5	; 0x05
 d00:	42 17       	cp	r20, r18
 d02:	53 07       	cpc	r21, r19
 d04:	44 f4       	brge	.+16     	; 0xd16 <fputc+0x38>
 d06:	a0 81       	ld	r26, Z
 d08:	b1 81       	ldd	r27, Z+1	; 0x01
 d0a:	9d 01       	movw	r18, r26
 d0c:	2f 5f       	subi	r18, 0xFF	; 255
 d0e:	3f 4f       	sbci	r19, 0xFF	; 255
 d10:	31 83       	std	Z+1, r19	; 0x01
 d12:	20 83       	st	Z, r18
 d14:	8c 93       	st	X, r24
 d16:	26 81       	ldd	r18, Z+6	; 0x06
 d18:	37 81       	ldd	r19, Z+7	; 0x07
 d1a:	2f 5f       	subi	r18, 0xFF	; 255
 d1c:	3f 4f       	sbci	r19, 0xFF	; 255
 d1e:	37 83       	std	Z+7, r19	; 0x07
 d20:	26 83       	std	Z+6, r18	; 0x06
 d22:	14 c0       	rjmp	.+40     	; 0xd4c <fputc+0x6e>
 d24:	8b 01       	movw	r16, r22
 d26:	ec 01       	movw	r28, r24
 d28:	fb 01       	movw	r30, r22
 d2a:	00 84       	ldd	r0, Z+8	; 0x08
 d2c:	f1 85       	ldd	r31, Z+9	; 0x09
 d2e:	e0 2d       	mov	r30, r0
 d30:	19 95       	eicall
 d32:	89 2b       	or	r24, r25
 d34:	e1 f6       	brne	.-72     	; 0xcee <fputc+0x10>
 d36:	d8 01       	movw	r26, r16
 d38:	16 96       	adiw	r26, 0x06	; 6
 d3a:	8d 91       	ld	r24, X+
 d3c:	9c 91       	ld	r25, X
 d3e:	17 97       	sbiw	r26, 0x07	; 7
 d40:	01 96       	adiw	r24, 0x01	; 1
 d42:	17 96       	adiw	r26, 0x07	; 7
 d44:	9c 93       	st	X, r25
 d46:	8e 93       	st	-X, r24
 d48:	16 97       	sbiw	r26, 0x06	; 6
 d4a:	ce 01       	movw	r24, r28
 d4c:	df 91       	pop	r29
 d4e:	cf 91       	pop	r28
 d50:	1f 91       	pop	r17
 d52:	0f 91       	pop	r16
 d54:	08 95       	ret

00000d56 <__ultoa_invert>:
 d56:	fa 01       	movw	r30, r20
 d58:	aa 27       	eor	r26, r26
 d5a:	28 30       	cpi	r18, 0x08	; 8
 d5c:	51 f1       	breq	.+84     	; 0xdb2 <__ultoa_invert+0x5c>
 d5e:	20 31       	cpi	r18, 0x10	; 16
 d60:	81 f1       	breq	.+96     	; 0xdc2 <__ultoa_invert+0x6c>
 d62:	e8 94       	clt
 d64:	6f 93       	push	r22
 d66:	6e 7f       	andi	r22, 0xFE	; 254
 d68:	6e 5f       	subi	r22, 0xFE	; 254
 d6a:	7f 4f       	sbci	r23, 0xFF	; 255
 d6c:	8f 4f       	sbci	r24, 0xFF	; 255
 d6e:	9f 4f       	sbci	r25, 0xFF	; 255
 d70:	af 4f       	sbci	r26, 0xFF	; 255
 d72:	b1 e0       	ldi	r27, 0x01	; 1
 d74:	3e d0       	rcall	.+124    	; 0xdf2 <__ultoa_invert+0x9c>
 d76:	b4 e0       	ldi	r27, 0x04	; 4
 d78:	3c d0       	rcall	.+120    	; 0xdf2 <__ultoa_invert+0x9c>
 d7a:	67 0f       	add	r22, r23
 d7c:	78 1f       	adc	r23, r24
 d7e:	89 1f       	adc	r24, r25
 d80:	9a 1f       	adc	r25, r26
 d82:	a1 1d       	adc	r26, r1
 d84:	68 0f       	add	r22, r24
 d86:	79 1f       	adc	r23, r25
 d88:	8a 1f       	adc	r24, r26
 d8a:	91 1d       	adc	r25, r1
 d8c:	a1 1d       	adc	r26, r1
 d8e:	6a 0f       	add	r22, r26
 d90:	71 1d       	adc	r23, r1
 d92:	81 1d       	adc	r24, r1
 d94:	91 1d       	adc	r25, r1
 d96:	a1 1d       	adc	r26, r1
 d98:	20 d0       	rcall	.+64     	; 0xdda <__ultoa_invert+0x84>
 d9a:	09 f4       	brne	.+2      	; 0xd9e <__ultoa_invert+0x48>
 d9c:	68 94       	set
 d9e:	3f 91       	pop	r19
 da0:	2a e0       	ldi	r18, 0x0A	; 10
 da2:	26 9f       	mul	r18, r22
 da4:	11 24       	eor	r1, r1
 da6:	30 19       	sub	r19, r0
 da8:	30 5d       	subi	r19, 0xD0	; 208
 daa:	31 93       	st	Z+, r19
 dac:	de f6       	brtc	.-74     	; 0xd64 <__ultoa_invert+0xe>
 dae:	cf 01       	movw	r24, r30
 db0:	08 95       	ret
 db2:	46 2f       	mov	r20, r22
 db4:	47 70       	andi	r20, 0x07	; 7
 db6:	40 5d       	subi	r20, 0xD0	; 208
 db8:	41 93       	st	Z+, r20
 dba:	b3 e0       	ldi	r27, 0x03	; 3
 dbc:	0f d0       	rcall	.+30     	; 0xddc <__ultoa_invert+0x86>
 dbe:	c9 f7       	brne	.-14     	; 0xdb2 <__ultoa_invert+0x5c>
 dc0:	f6 cf       	rjmp	.-20     	; 0xdae <__ultoa_invert+0x58>
 dc2:	46 2f       	mov	r20, r22
 dc4:	4f 70       	andi	r20, 0x0F	; 15
 dc6:	40 5d       	subi	r20, 0xD0	; 208
 dc8:	4a 33       	cpi	r20, 0x3A	; 58
 dca:	18 f0       	brcs	.+6      	; 0xdd2 <__ultoa_invert+0x7c>
 dcc:	49 5d       	subi	r20, 0xD9	; 217
 dce:	31 fd       	sbrc	r19, 1
 dd0:	40 52       	subi	r20, 0x20	; 32
 dd2:	41 93       	st	Z+, r20
 dd4:	02 d0       	rcall	.+4      	; 0xdda <__ultoa_invert+0x84>
 dd6:	a9 f7       	brne	.-22     	; 0xdc2 <__ultoa_invert+0x6c>
 dd8:	ea cf       	rjmp	.-44     	; 0xdae <__ultoa_invert+0x58>
 dda:	b4 e0       	ldi	r27, 0x04	; 4
 ddc:	a6 95       	lsr	r26
 dde:	97 95       	ror	r25
 de0:	87 95       	ror	r24
 de2:	77 95       	ror	r23
 de4:	67 95       	ror	r22
 de6:	ba 95       	dec	r27
 de8:	c9 f7       	brne	.-14     	; 0xddc <__ultoa_invert+0x86>
 dea:	00 97       	sbiw	r24, 0x00	; 0
 dec:	61 05       	cpc	r22, r1
 dee:	71 05       	cpc	r23, r1
 df0:	08 95       	ret
 df2:	9b 01       	movw	r18, r22
 df4:	ac 01       	movw	r20, r24
 df6:	0a 2e       	mov	r0, r26
 df8:	06 94       	lsr	r0
 dfa:	57 95       	ror	r21
 dfc:	47 95       	ror	r20
 dfe:	37 95       	ror	r19
 e00:	27 95       	ror	r18
 e02:	ba 95       	dec	r27
 e04:	c9 f7       	brne	.-14     	; 0xdf8 <__ultoa_invert+0xa2>
 e06:	62 0f       	add	r22, r18
 e08:	73 1f       	adc	r23, r19
 e0a:	84 1f       	adc	r24, r20
 e0c:	95 1f       	adc	r25, r21
 e0e:	a0 1d       	adc	r26, r0
 e10:	08 95       	ret

00000e12 <_exit>:
 e12:	f8 94       	cli

00000e14 <__stop_program>:
 e14:	ff cf       	rjmp	.-2      	; 0xe14 <__stop_program>
