
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000dfa  00000e8e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dfa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000f02  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00000fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024d0  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ffa  00000000  00000000  00003650  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000149a  00000000  00000000  0000464a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  00005ae4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d0c  00000000  00000000  0000614c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001af6  00000000  00000000  00006e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0000894e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	8f c3       	rjmp	.+1822   	; 0x77c <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ef       	ldi	r30, 0xFA	; 250
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	6a c6       	rjmp	.+3284   	; 0xdf6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    
   
    
    
    //Initialisieren
    initBoard(0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	a7 d1       	rcall	.+846    	; 0x476 <initBoard>
    //Variablen
    
    uint16_t i = START_POSITION;
    uint16_t goleft = 1;
    uint16_t goright = 0;
    uint16_t j = 0;
 128:	c0 e0       	ldi	r28, 0x00	; 0
 12a:	d0 e0       	ldi	r29, 0x00	; 0
{
    //Variablen
    
    uint16_t i = START_POSITION;
    uint16_t goleft = 1;
    uint16_t goright = 0;
 12c:	00 e0       	ldi	r16, 0x00	; 0
 12e:	10 e0       	ldi	r17, 0x00	; 0
int main(void)
{
    //Variablen
    
    uint16_t i = START_POSITION;
    uint16_t goleft = 1;
 130:	ee 24       	eor	r14, r14
 132:	e3 94       	inc	r14
 134:	f1 2c       	mov	r15, r1
//Hauptprogramm
int main(void)
{
    //Variablen
    
    uint16_t i = START_POSITION;
 136:	c1 2c       	mov	r12, r1
 138:	d1 2c       	mov	r13, r1
            }
            
       } 
      if (goright)
      {
           ledWriteAll(LED_MUSTER_R>>j);
 13a:	a1 2c       	mov	r10, r1
 13c:	68 94       	set
 13e:	bb 24       	eor	r11, r11
 140:	b7 f8       	bld	r11, 7
           _delay_ms(VERZOEGERUNG_ms);
           j = j + SCHRITT_LAENGE;
           if (j>=ANZAHL_LEDS)
           {
               goleft = 1;
               goright = START_POSITION;
 142:	61 2c       	mov	r6, r1
 144:	71 2c       	mov	r7, r1
           ledWriteAll(LED_MUSTER_R>>j);
           _delay_ms(VERZOEGERUNG_ms);
           j = j + SCHRITT_LAENGE;
           if (j>=ANZAHL_LEDS)
           {
               goleft = 1;
 146:	88 24       	eor	r8, r8
 148:	83 94       	inc	r8
 14a:	91 2c       	mov	r9, r1
    initBoard(0);
    
    //Unendlichschlaufe
    while(1)
    {
       if (goleft)
 14c:	e1 14       	cp	r14, r1
 14e:	f1 04       	cpc	r15, r1
 150:	a9 f0       	breq	.+42     	; 0x17c <main+0x58>
       {
            
            ledWriteAll(LED_MUSTER_L<<i);
 152:	c4 01       	movw	r24, r8
 154:	0c 2c       	mov	r0, r12
 156:	02 c0       	rjmp	.+4      	; 0x15c <main+0x38>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	0a 94       	dec	r0
 15e:	e2 f7       	brpl	.-8      	; 0x158 <main+0x34>
 160:	2e d0       	rcall	.+92     	; 0x1be <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 162:	8f e3       	ldi	r24, 0x3F	; 63
 164:	9c e9       	ldi	r25, 0x9C	; 156
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <main+0x42>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <main+0x48>
 16c:	00 00       	nop
            _delay_ms(VERZOEGERUNG_ms);
            i = i + SCHRITT_LAENGE;
 16e:	9f ef       	ldi	r25, 0xFF	; 255
 170:	c9 1a       	sub	r12, r25
 172:	d9 0a       	sbc	r13, r25
            if (i>=ANZAHL_LEDS)
 174:	20 e1       	ldi	r18, 0x10	; 16
 176:	c2 16       	cp	r12, r18
 178:	d1 04       	cpc	r13, r1
 17a:	20 f4       	brcc	.+8      	; 0x184 <main+0x60>
                goright = 1;
               
            }
            
       } 
      if (goright)
 17c:	01 15       	cp	r16, r1
 17e:	11 05       	cpc	r17, r1
 180:	29 f3       	breq	.-54     	; 0x14c <main+0x28>
 182:	03 c0       	rjmp	.+6      	; 0x18a <main+0x66>
            _delay_ms(VERZOEGERUNG_ms);
            i = i + SCHRITT_LAENGE;
            if (i>=ANZAHL_LEDS)
            {
                goleft = START_POSITION;
                goright = 1;
 184:	84 01       	movw	r16, r8
            ledWriteAll(LED_MUSTER_L<<i);
            _delay_ms(VERZOEGERUNG_ms);
            i = i + SCHRITT_LAENGE;
            if (i>=ANZAHL_LEDS)
            {
                goleft = START_POSITION;
 186:	e6 2c       	mov	r14, r6
 188:	f7 2c       	mov	r15, r7
            }
            
       } 
      if (goright)
      {
           ledWriteAll(LED_MUSTER_R>>j);
 18a:	c5 01       	movw	r24, r10
 18c:	0c 2e       	mov	r0, r28
 18e:	02 c0       	rjmp	.+4      	; 0x194 <main+0x70>
 190:	96 95       	lsr	r25
 192:	87 95       	ror	r24
 194:	0a 94       	dec	r0
 196:	e2 f7       	brpl	.-8      	; 0x190 <main+0x6c>
 198:	12 d0       	rcall	.+36     	; 0x1be <ledWriteAll>
 19a:	8f e3       	ldi	r24, 0x3F	; 63
 19c:	9c e9       	ldi	r25, 0x9C	; 156
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <main+0x7a>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0x80>
 1a4:	00 00       	nop
           _delay_ms(VERZOEGERUNG_ms);
           j = j + SCHRITT_LAENGE;
 1a6:	21 96       	adiw	r28, 0x01	; 1
           if (j>=ANZAHL_LEDS)
 1a8:	c0 31       	cpi	r28, 0x10	; 16
 1aa:	d1 05       	cpc	r29, r1
 1ac:	78 f2       	brcs	.-98     	; 0x14c <main+0x28>
           {
               goleft = 1;
               goright = START_POSITION;
               j = START_POSITION;
 1ae:	c0 e0       	ldi	r28, 0x00	; 0
 1b0:	d0 e0       	ldi	r29, 0x00	; 0
           _delay_ms(VERZOEGERUNG_ms);
           j = j + SCHRITT_LAENGE;
           if (j>=ANZAHL_LEDS)
           {
               goleft = 1;
               goright = START_POSITION;
 1b2:	06 2d       	mov	r16, r6
 1b4:	17 2d       	mov	r17, r7
           ledWriteAll(LED_MUSTER_R>>j);
           _delay_ms(VERZOEGERUNG_ms);
           j = j + SCHRITT_LAENGE;
           if (j>=ANZAHL_LEDS)
           {
               goleft = 1;
 1b6:	74 01       	movw	r14, r8
               goright = START_POSITION;
               j = START_POSITION;
               i = START_POSITION;
 1b8:	c1 2c       	mov	r12, r1
 1ba:	d1 2c       	mov	r13, r1
 1bc:	c7 cf       	rjmp	.-114    	; 0x14c <main+0x28>

000001be <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 1be:	82 b9       	out	0x02, r24	; 2
 1c0:	95 b9       	out	0x05, r25	; 5
 1c2:	08 95       	ret

000001c4 <startSystemTimeMs>:
 1c4:	83 e0       	ldi	r24, 0x03	; 3
 1c6:	84 bd       	out	0x24, r24	; 36
 1c8:	8b e0       	ldi	r24, 0x0B	; 11
 1ca:	85 bd       	out	0x25, r24	; 37
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 1d2:	89 ef       	ldi	r24, 0xF9	; 249
 1d4:	87 bd       	out	0x27, r24	; 39
 1d6:	08 95       	ret

000001d8 <initAdc>:
 1d8:	11 ba       	out	0x11, r1	; 17
 1da:	10 ba       	out	0x10, r1	; 16
 1dc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 1e0:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 1e4:	80 e4       	ldi	r24, 0x40	; 64
 1e6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 1ea:	8f e0       	ldi	r24, 0x0F	; 15
 1ec:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 1f0:	8f ef       	ldi	r24, 0xFF	; 255
 1f2:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 1f6:	ea e7       	ldi	r30, 0x7A	; 122
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	87 ea       	ldi	r24, 0xA7	; 167
 1fc:	80 83       	st	Z, r24
 1fe:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 202:	80 81       	ld	r24, Z
 204:	80 64       	ori	r24, 0x40	; 64
 206:	80 83       	st	Z, r24
 208:	80 81       	ld	r24, Z
 20a:	84 ff       	sbrs	r24, 4
 20c:	fd cf       	rjmp	.-6      	; 0x208 <initAdc+0x30>
 20e:	ea e7       	ldi	r30, 0x7A	; 122
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	8f 7e       	andi	r24, 0xEF	; 239
 216:	80 83       	st	Z, r24
 218:	08 95       	ret

0000021a <rgbWrite>:
 21a:	2f ef       	ldi	r18, 0xFF	; 255
 21c:	33 e0       	ldi	r19, 0x03	; 3
 21e:	f9 01       	movw	r30, r18
 220:	e8 1b       	sub	r30, r24
 222:	f9 0b       	sbc	r31, r25
 224:	c9 01       	movw	r24, r18
 226:	86 1b       	sub	r24, r22
 228:	97 0b       	sbc	r25, r23
 22a:	24 1b       	sub	r18, r20
 22c:	35 0b       	sbc	r19, r21
 22e:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 232:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 236:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 23a:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 23e:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 242:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 246:	08 95       	ret

00000248 <initRgb>:
 248:	8e ef       	ldi	r24, 0xFE	; 254
 24a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 24e:	8b e1       	ldi	r24, 0x1B	; 27
 250:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 254:	83 e0       	ldi	r24, 0x03	; 3
 256:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 25a:	8f ef       	ldi	r24, 0xFF	; 255
 25c:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 260:	40 e0       	ldi	r20, 0x00	; 0
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	60 e0       	ldi	r22, 0x00	; 0
 266:	70 e0       	ldi	r23, 0x00	; 0
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	d6 cf       	rjmp	.-84     	; 0x21a <rgbWrite>
 26e:	08 95       	ret

00000270 <lcdSid>:
 270:	88 23       	and	r24, r24
 272:	11 f0       	breq	.+4      	; 0x278 <lcdSid+0x8>
 274:	a0 9a       	sbi	0x14, 0	; 20
 276:	08 95       	ret
 278:	a0 98       	cbi	0x14, 0	; 20
 27a:	08 95       	ret

0000027c <lcdSclk>:
 27c:	88 23       	and	r24, r24
 27e:	11 f0       	breq	.+4      	; 0x284 <lcdSclk+0x8>
 280:	a1 9a       	sbi	0x14, 1	; 20
 282:	08 95       	ret
 284:	a1 98       	cbi	0x14, 1	; 20
 286:	08 95       	ret

00000288 <lcdLight>:
 288:	81 11       	cpse	r24, r1
 28a:	04 c0       	rjmp	.+8      	; 0x294 <lcdLight+0xc>
 28c:	84 b5       	in	r24, 0x24	; 36
 28e:	8f 7d       	andi	r24, 0xDF	; 223
 290:	84 bd       	out	0x24, r24	; 36
 292:	08 95       	ret
 294:	94 b5       	in	r25, 0x24	; 36
 296:	90 62       	ori	r25, 0x20	; 32
 298:	94 bd       	out	0x24, r25	; 36
 29a:	88 bd       	out	0x28, r24	; 40
 29c:	08 95       	ret

0000029e <writeLcdF>:
 29e:	ef 92       	push	r14
 2a0:	ff 92       	push	r15
 2a2:	0f 93       	push	r16
 2a4:	1f 93       	push	r17
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	7c 01       	movw	r14, r24
 2ac:	eb 01       	movw	r28, r22
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	df df       	rcall	.-66     	; 0x270 <lcdSid>
 2b2:	05 e0       	ldi	r16, 0x05	; 5
 2b4:	10 e0       	ldi	r17, 0x00	; 0
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	e1 df       	rcall	.-62     	; 0x27c <lcdSclk>
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	df df       	rcall	.-66     	; 0x27c <lcdSclk>
 2be:	01 50       	subi	r16, 0x01	; 1
 2c0:	11 09       	sbc	r17, r1
 2c2:	c9 f7       	brne	.-14     	; 0x2b6 <writeLcdF+0x18>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	d4 df       	rcall	.-88     	; 0x270 <lcdSid>
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	d8 df       	rcall	.-80     	; 0x27c <lcdSclk>
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	d6 df       	rcall	.-84     	; 0x27c <lcdSclk>
 2d0:	83 e4       	ldi	r24, 0x43	; 67
 2d2:	e8 16       	cp	r14, r24
 2d4:	f1 04       	cpc	r15, r1
 2d6:	19 f4       	brne	.+6      	; 0x2de <writeLcdF+0x40>
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	ca df       	rcall	.-108    	; 0x270 <lcdSid>
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <writeLcdF+0x44>
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	c7 df       	rcall	.-114    	; 0x270 <lcdSid>
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	cb df       	rcall	.-106    	; 0x27c <lcdSclk>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	c9 df       	rcall	.-110    	; 0x27c <lcdSclk>
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	c1 df       	rcall	.-126    	; 0x270 <lcdSid>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	c5 df       	rcall	.-118    	; 0x27c <lcdSclk>
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	c3 df       	rcall	.-122    	; 0x27c <lcdSclk>
 2f6:	04 e0       	ldi	r16, 0x04	; 4
 2f8:	10 e0       	ldi	r17, 0x00	; 0
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	bf df       	rcall	.-130    	; 0x27c <lcdSclk>
 2fe:	c0 ff       	sbrs	r28, 0
 300:	03 c0       	rjmp	.+6      	; 0x308 <writeLcdF+0x6a>
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	b5 df       	rcall	.-150    	; 0x270 <lcdSid>
 306:	02 c0       	rjmp	.+4      	; 0x30c <writeLcdF+0x6e>
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	b2 df       	rcall	.-156    	; 0x270 <lcdSid>
 30c:	d6 95       	lsr	r29
 30e:	c7 95       	ror	r28
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	b4 df       	rcall	.-152    	; 0x27c <lcdSclk>
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	b2 df       	rcall	.-156    	; 0x27c <lcdSclk>
 318:	01 50       	subi	r16, 0x01	; 1
 31a:	11 09       	sbc	r17, r1
 31c:	71 f7       	brne	.-36     	; 0x2fa <writeLcdF+0x5c>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	a7 df       	rcall	.-178    	; 0x270 <lcdSid>
 322:	04 e0       	ldi	r16, 0x04	; 4
 324:	10 e0       	ldi	r17, 0x00	; 0
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	a9 df       	rcall	.-174    	; 0x27c <lcdSclk>
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	a7 df       	rcall	.-178    	; 0x27c <lcdSclk>
 32e:	01 50       	subi	r16, 0x01	; 1
 330:	11 09       	sbc	r17, r1
 332:	c9 f7       	brne	.-14     	; 0x326 <writeLcdF+0x88>
 334:	04 e0       	ldi	r16, 0x04	; 4
 336:	10 e0       	ldi	r17, 0x00	; 0
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	a0 df       	rcall	.-192    	; 0x27c <lcdSclk>
 33c:	c0 ff       	sbrs	r28, 0
 33e:	03 c0       	rjmp	.+6      	; 0x346 <writeLcdF+0xa8>
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	96 df       	rcall	.-212    	; 0x270 <lcdSid>
 344:	02 c0       	rjmp	.+4      	; 0x34a <writeLcdF+0xac>
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	93 df       	rcall	.-218    	; 0x270 <lcdSid>
 34a:	d6 95       	lsr	r29
 34c:	c7 95       	ror	r28
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	95 df       	rcall	.-214    	; 0x27c <lcdSclk>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	93 df       	rcall	.-218    	; 0x27c <lcdSclk>
 356:	01 50       	subi	r16, 0x01	; 1
 358:	11 09       	sbc	r17, r1
 35a:	71 f7       	brne	.-36     	; 0x338 <writeLcdF+0x9a>
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	88 df       	rcall	.-240    	; 0x270 <lcdSid>
 360:	c4 e0       	ldi	r28, 0x04	; 4
 362:	d0 e0       	ldi	r29, 0x00	; 0
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	8a df       	rcall	.-236    	; 0x27c <lcdSclk>
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	88 df       	rcall	.-240    	; 0x27c <lcdSclk>
 36c:	21 97       	sbiw	r28, 0x01	; 1
 36e:	d1 f7       	brne	.-12     	; 0x364 <writeLcdF+0xc6>
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	7e df       	rcall	.-260    	; 0x270 <lcdSid>
 374:	87 ec       	ldi	r24, 0xC7	; 199
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <writeLcdF+0xda>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <writeLcdF+0xe0>
 37e:	00 00       	nop
 380:	df 91       	pop	r29
 382:	cf 91       	pop	r28
 384:	1f 91       	pop	r17
 386:	0f 91       	pop	r16
 388:	ff 90       	pop	r15
 38a:	ef 90       	pop	r14
 38c:	08 95       	ret

0000038e <lcdWriteText>:
 38e:	1f 93       	push	r17
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	cd b7       	in	r28, 0x3d	; 61
 396:	de b7       	in	r29, 0x3e	; 62
 398:	65 97       	sbiw	r28, 0x15	; 21
 39a:	0f b6       	in	r0, 0x3f	; 63
 39c:	f8 94       	cli
 39e:	de bf       	out	0x3e, r29	; 62
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	cd bf       	out	0x3d, r28	; 61
 3a4:	9e 01       	movw	r18, r28
 3a6:	20 5e       	subi	r18, 0xE0	; 224
 3a8:	3f 4f       	sbci	r19, 0xFF	; 255
 3aa:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3ac:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3ae:	65 e1       	ldi	r22, 0x15	; 21
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	ce 01       	movw	r24, r28
 3b4:	01 96       	adiw	r24, 0x01	; 1
 3b6:	3a d2       	rcall	.+1140   	; 0x82c <vsnprintf>
 3b8:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3ba:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3bc:	90 e2       	ldi	r25, 0x20	; 32
 3be:	89 9f       	mul	r24, r25
 3c0:	60 0d       	add	r22, r0
 3c2:	11 24       	eor	r1, r1
 3c4:	60 68       	ori	r22, 0x80	; 128
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	83 e4       	ldi	r24, 0x43	; 67
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	68 df       	rcall	.-304    	; 0x29e <writeLcdF>
 3ce:	69 81       	ldd	r22, Y+1	; 0x01
 3d0:	66 23       	and	r22, r22
 3d2:	79 f0       	breq	.+30     	; 0x3f2 <lcdWriteText+0x64>
 3d4:	10 e0       	ldi	r17, 0x00	; 0
 3d6:	1f 5f       	subi	r17, 0xFF	; 255
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	84 e4       	ldi	r24, 0x44	; 68
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	5f df       	rcall	.-322    	; 0x29e <writeLcdF>
 3e0:	e1 e0       	ldi	r30, 0x01	; 1
 3e2:	f0 e0       	ldi	r31, 0x00	; 0
 3e4:	ec 0f       	add	r30, r28
 3e6:	fd 1f       	adc	r31, r29
 3e8:	e1 0f       	add	r30, r17
 3ea:	f1 1d       	adc	r31, r1
 3ec:	60 81       	ld	r22, Z
 3ee:	61 11       	cpse	r22, r1
 3f0:	f2 cf       	rjmp	.-28     	; 0x3d6 <lcdWriteText+0x48>
 3f2:	65 96       	adiw	r28, 0x15	; 21
 3f4:	0f b6       	in	r0, 0x3f	; 63
 3f6:	f8 94       	cli
 3f8:	de bf       	out	0x3e, r29	; 62
 3fa:	0f be       	out	0x3f, r0	; 63
 3fc:	cd bf       	out	0x3d, r28	; 61
 3fe:	df 91       	pop	r29
 400:	cf 91       	pop	r28
 402:	1f 91       	pop	r17
 404:	08 95       	ret

00000406 <lcdClear>:
 406:	61 e0       	ldi	r22, 0x01	; 1
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	83 e4       	ldi	r24, 0x43	; 67
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	47 df       	rcall	.-370    	; 0x29e <writeLcdF>
 410:	8f e3       	ldi	r24, 0x3F	; 63
 412:	9f e1       	ldi	r25, 0x1F	; 31
 414:	01 97       	sbiw	r24, 0x01	; 1
 416:	f1 f7       	brne	.-4      	; 0x414 <lcdClear+0xe>
 418:	00 c0       	rjmp	.+0      	; 0x41a <lcdClear+0x14>
 41a:	00 00       	nop
 41c:	80 e3       	ldi	r24, 0x30	; 48
 41e:	92 e0       	ldi	r25, 0x02	; 2
 420:	9f 93       	push	r25
 422:	8f 93       	push	r24
 424:	1f 92       	push	r1
 426:	1f 92       	push	r1
 428:	b2 df       	rcall	.-156    	; 0x38e <lcdWriteText>
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	0f 90       	pop	r0
 430:	0f 90       	pop	r0
 432:	08 95       	ret

00000434 <initLcd>:
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	22 df       	rcall	.-444    	; 0x27c <lcdSclk>
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	1a df       	rcall	.-460    	; 0x270 <lcdSid>
 43c:	64 e3       	ldi	r22, 0x34	; 52
 43e:	70 e0       	ldi	r23, 0x00	; 0
 440:	83 e4       	ldi	r24, 0x43	; 67
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	2c df       	rcall	.-424    	; 0x29e <writeLcdF>
 446:	69 e0       	ldi	r22, 0x09	; 9
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	83 e4       	ldi	r24, 0x43	; 67
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	27 df       	rcall	.-434    	; 0x29e <writeLcdF>
 450:	60 e3       	ldi	r22, 0x30	; 48
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	83 e4       	ldi	r24, 0x43	; 67
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	22 df       	rcall	.-444    	; 0x29e <writeLcdF>
 45a:	6c e0       	ldi	r22, 0x0C	; 12
 45c:	70 e0       	ldi	r23, 0x00	; 0
 45e:	83 e4       	ldi	r24, 0x43	; 67
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	1d df       	rcall	.-454    	; 0x29e <writeLcdF>
 464:	d0 df       	rcall	.-96     	; 0x406 <lcdClear>
 466:	67 e0       	ldi	r22, 0x07	; 7
 468:	70 e0       	ldi	r23, 0x00	; 0
 46a:	83 e4       	ldi	r24, 0x43	; 67
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	17 df       	rcall	.-466    	; 0x29e <writeLcdF>
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	0a cf       	rjmp	.-492    	; 0x288 <lcdLight>
 474:	08 95       	ret

00000476 <initBoard>:
 476:	4f 92       	push	r4
 478:	5f 92       	push	r5
 47a:	6f 92       	push	r6
 47c:	7f 92       	push	r7
 47e:	8f 92       	push	r8
 480:	9f 92       	push	r9
 482:	af 92       	push	r10
 484:	bf 92       	push	r11
 486:	cf 92       	push	r12
 488:	df 92       	push	r13
 48a:	ef 92       	push	r14
 48c:	ff 92       	push	r15
 48e:	0f 93       	push	r16
 490:	1f 93       	push	r17
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	c8 2f       	mov	r28, r24
 498:	85 b7       	in	r24, 0x35	; 53
 49a:	85 bf       	out	0x35, r24	; 53
 49c:	12 b8       	out	0x02, r1	; 2
 49e:	8f ef       	ldi	r24, 0xFF	; 255
 4a0:	81 b9       	out	0x01, r24	; 1
 4a2:	15 b8       	out	0x05, r1	; 5
 4a4:	84 b9       	out	0x04, r24	; 4
 4a6:	88 b9       	out	0x08, r24	; 8
 4a8:	17 b8       	out	0x07, r1	; 7
 4aa:	8b b9       	out	0x0b, r24	; 11
 4ac:	1a b8       	out	0x0a, r1	; 10
 4ae:	8e b9       	out	0x0e, r24	; 14
 4b0:	1d b8       	out	0x0d, r1	; 13
 4b2:	72 98       	cbi	0x0e, 2	; 14
 4b4:	11 ba       	out	0x11, r1	; 17
 4b6:	10 ba       	out	0x10, r1	; 16
 4b8:	94 e0       	ldi	r25, 0x04	; 4
 4ba:	94 bb       	out	0x14, r25	; 20
 4bc:	93 b3       	in	r25, 0x13	; 19
 4be:	93 60       	ori	r25, 0x03	; 3
 4c0:	93 bb       	out	0x13, r25	; 19
 4c2:	9d 9a       	sbi	0x13, 5	; 19
 4c4:	97 ec       	ldi	r25, 0xC7	; 199
 4c6:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 4ca:	98 e3       	ldi	r25, 0x38	; 56
 4cc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 4d0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 4d4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 4d8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 4dc:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 4e0:	8c e3       	ldi	r24, 0x3C	; 60
 4e2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 4e6:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 4ea:	78 94       	sei
 4ec:	6b de       	rcall	.-810    	; 0x1c4 <startSystemTimeMs>
 4ee:	a2 df       	rcall	.-188    	; 0x434 <initLcd>
 4f0:	73 de       	rcall	.-794    	; 0x1d8 <initAdc>
 4f2:	aa de       	rcall	.-684    	; 0x248 <initRgb>
 4f4:	cc 23       	and	r28, r28
 4f6:	09 f4       	brne	.+2      	; 0x4fa <initBoard+0x84>
 4f8:	b8 c0       	rjmp	.+368    	; 0x66a <initBoard+0x1f4>
 4fa:	8f ef       	ldi	r24, 0xFF	; 255
 4fc:	c5 de       	rcall	.-630    	; 0x288 <lcdLight>
 4fe:	40 e0       	ldi	r20, 0x00	; 0
 500:	50 e0       	ldi	r21, 0x00	; 0
 502:	6f ef       	ldi	r22, 0xFF	; 255
 504:	73 e0       	ldi	r23, 0x03	; 3
 506:	80 e0       	ldi	r24, 0x00	; 0
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	87 de       	rcall	.-754    	; 0x21a <rgbWrite>
 50c:	8d e1       	ldi	r24, 0x1D	; 29
 50e:	92 e0       	ldi	r25, 0x02	; 2
 510:	9f 93       	push	r25
 512:	8f 93       	push	r24
 514:	1f 92       	push	r1
 516:	1f 92       	push	r1
 518:	3a df       	rcall	.-396    	; 0x38e <lcdWriteText>
 51a:	82 e3       	ldi	r24, 0x32	; 50
 51c:	92 e0       	ldi	r25, 0x02	; 2
 51e:	9f 93       	push	r25
 520:	8f 93       	push	r24
 522:	1f 92       	push	r1
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	8f 93       	push	r24
 528:	32 df       	rcall	.-412    	; 0x38e <lcdWriteText>
 52a:	88 e0       	ldi	r24, 0x08	; 8
 52c:	92 e0       	ldi	r25, 0x02	; 2
 52e:	9f 93       	push	r25
 530:	8f 93       	push	r24
 532:	1f 92       	push	r1
 534:	82 e0       	ldi	r24, 0x02	; 2
 536:	8f 93       	push	r24
 538:	2a df       	rcall	.-428    	; 0x38e <lcdWriteText>
 53a:	87 e4       	ldi	r24, 0x47	; 71
 53c:	92 e0       	ldi	r25, 0x02	; 2
 53e:	9f 93       	push	r25
 540:	8f 93       	push	r24
 542:	1f 92       	push	r1
 544:	83 e0       	ldi	r24, 0x03	; 3
 546:	8f 93       	push	r24
 548:	22 df       	rcall	.-444    	; 0x38e <lcdWriteText>
 54a:	8d b7       	in	r24, 0x3d	; 61
 54c:	9e b7       	in	r25, 0x3e	; 62
 54e:	40 96       	adiw	r24, 0x10	; 16
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	f8 94       	cli
 554:	9e bf       	out	0x3e, r25	; 62
 556:	0f be       	out	0x3f, r0	; 63
 558:	8d bf       	out	0x3d, r24	; 61
 55a:	88 24       	eor	r8, r8
 55c:	83 94       	inc	r8
 55e:	c0 e0       	ldi	r28, 0x00	; 0
 560:	71 2c       	mov	r7, r1
 562:	99 24       	eor	r9, r9
 564:	93 94       	inc	r9
 566:	d0 e0       	ldi	r29, 0x00	; 0
 568:	cc 24       	eor	r12, r12
 56a:	c3 94       	inc	r12
 56c:	d1 2c       	mov	r13, r1
 56e:	e1 2c       	mov	r14, r1
 570:	68 94       	set
 572:	ff 24       	eor	r15, r15
 574:	f7 f8       	bld	r15, 7
 576:	66 24       	eor	r6, r6
 578:	63 94       	inc	r6
 57a:	51 2c       	mov	r5, r1
 57c:	09 e0       	ldi	r16, 0x09	; 9
 57e:	11 e0       	ldi	r17, 0x01	; 1
 580:	0f 2e       	mov	r0, r31
 582:	fc e5       	ldi	r31, 0x5C	; 92
 584:	af 2e       	mov	r10, r31
 586:	f2 e0       	ldi	r31, 0x02	; 2
 588:	bf 2e       	mov	r11, r31
 58a:	f0 2d       	mov	r31, r0
 58c:	0f 2e       	mov	r0, r31
 58e:	f3 e0       	ldi	r31, 0x03	; 3
 590:	4f 2e       	mov	r4, r31
 592:	f0 2d       	mov	r31, r0
 594:	99 20       	and	r9, r9
 596:	49 f0       	breq	.+18     	; 0x5aa <initBoard+0x134>
 598:	c7 01       	movw	r24, r14
 59a:	0d 2e       	mov	r0, r29
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <initBoard+0x12c>
 59e:	96 95       	lsr	r25
 5a0:	87 95       	ror	r24
 5a2:	0a 94       	dec	r0
 5a4:	e2 f7       	brpl	.-8      	; 0x59e <initBoard+0x128>
 5a6:	0b de       	rcall	.-1002   	; 0x1be <ledWriteAll>
 5a8:	08 c0       	rjmp	.+16     	; 0x5ba <initBoard+0x144>
 5aa:	c6 01       	movw	r24, r12
 5ac:	0d 2e       	mov	r0, r29
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <initBoard+0x13e>
 5b0:	88 0f       	add	r24, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	0a 94       	dec	r0
 5b6:	e2 f7       	brpl	.-8      	; 0x5b0 <initBoard+0x13a>
 5b8:	02 de       	rcall	.-1020   	; 0x1be <ledWriteAll>
 5ba:	df 5f       	subi	r29, 0xFF	; 255
 5bc:	d1 31       	cpi	r29, 0x11	; 17
 5be:	28 f0       	brcs	.+10     	; 0x5ca <initBoard+0x154>
 5c0:	86 2d       	mov	r24, r6
 5c2:	91 10       	cpse	r9, r1
 5c4:	85 2d       	mov	r24, r5
 5c6:	98 2e       	mov	r9, r24
 5c8:	d0 e0       	ldi	r29, 0x00	; 0
 5ca:	88 20       	and	r8, r8
 5cc:	11 f0       	breq	.+4      	; 0x5d2 <initBoard+0x15c>
 5ce:	ce 5f       	subi	r28, 0xFE	; 254
 5d0:	01 c0       	rjmp	.+2      	; 0x5d4 <initBoard+0x15e>
 5d2:	c2 50       	subi	r28, 0x02	; 2
 5d4:	8c 2f       	mov	r24, r28
 5d6:	58 de       	rcall	.-848    	; 0x288 <lcdLight>
 5d8:	ce 3f       	cpi	r28, 0xFE	; 254
 5da:	21 f0       	breq	.+8      	; 0x5e4 <initBoard+0x16e>
 5dc:	c8 37       	cpi	r28, 0x78	; 120
 5de:	19 f4       	brne	.+6      	; 0x5e6 <initBoard+0x170>
 5e0:	86 2c       	mov	r8, r6
 5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <initBoard+0x170>
 5e4:	85 2c       	mov	r8, r5
 5e6:	71 10       	cpse	r7, r1
 5e8:	3b c0       	rjmp	.+118    	; 0x660 <initBoard+0x1ea>
 5ea:	f8 01       	movw	r30, r16
 5ec:	80 81       	ld	r24, Z
 5ee:	83 7c       	andi	r24, 0xC3	; 195
 5f0:	91 f0       	breq	.+36     	; 0x616 <initBoard+0x1a0>
 5f2:	40 e0       	ldi	r20, 0x00	; 0
 5f4:	50 e0       	ldi	r21, 0x00	; 0
 5f6:	66 e2       	ldi	r22, 0x26	; 38
 5f8:	72 e0       	ldi	r23, 0x02	; 2
 5fa:	8f ef       	ldi	r24, 0xFF	; 255
 5fc:	93 e0       	ldi	r25, 0x03	; 3
 5fe:	0d de       	rcall	.-998    	; 0x21a <rgbWrite>
 600:	bf 92       	push	r11
 602:	af 92       	push	r10
 604:	1f 92       	push	r1
 606:	4f 92       	push	r4
 608:	c2 de       	rcall	.-636    	; 0x38e <lcdWriteText>
 60a:	0f 90       	pop	r0
 60c:	0f 90       	pop	r0
 60e:	0f 90       	pop	r0
 610:	0f 90       	pop	r0
 612:	76 2c       	mov	r7, r6
 614:	25 c0       	rjmp	.+74     	; 0x660 <initBoard+0x1ea>
 616:	8f ef       	ldi	r24, 0xFF	; 255
 618:	9c e7       	ldi	r25, 0x7C	; 124
 61a:	01 97       	sbiw	r24, 0x01	; 1
 61c:	f1 f7       	brne	.-4      	; 0x61a <initBoard+0x1a4>
 61e:	00 c0       	rjmp	.+0      	; 0x620 <initBoard+0x1aa>
 620:	00 00       	nop
 622:	b8 cf       	rjmp	.-144    	; 0x594 <initBoard+0x11e>
 624:	f0 de       	rcall	.-544    	; 0x406 <lcdClear>
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	2f de       	rcall	.-930    	; 0x288 <lcdLight>
 62a:	80 e0       	ldi	r24, 0x00	; 0
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	c7 dd       	rcall	.-1138   	; 0x1be <ledWriteAll>
 630:	40 e0       	ldi	r20, 0x00	; 0
 632:	50 e0       	ldi	r21, 0x00	; 0
 634:	60 e0       	ldi	r22, 0x00	; 0
 636:	70 e0       	ldi	r23, 0x00	; 0
 638:	80 e0       	ldi	r24, 0x00	; 0
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	ee dd       	rcall	.-1060   	; 0x21a <rgbWrite>
 63e:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 642:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 646:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 64a:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 64e:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 652:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 656:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 65a:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 65e:	05 c0       	rjmp	.+10     	; 0x66a <initBoard+0x1f4>
 660:	f8 01       	movw	r30, r16
 662:	80 81       	ld	r24, Z
 664:	83 7c       	andi	r24, 0xC3	; 195
 666:	b9 f6       	brne	.-82     	; 0x616 <initBoard+0x1a0>
 668:	dd cf       	rjmp	.-70     	; 0x624 <initBoard+0x1ae>
 66a:	df 91       	pop	r29
 66c:	cf 91       	pop	r28
 66e:	1f 91       	pop	r17
 670:	0f 91       	pop	r16
 672:	ff 90       	pop	r15
 674:	ef 90       	pop	r14
 676:	df 90       	pop	r13
 678:	cf 90       	pop	r12
 67a:	bf 90       	pop	r11
 67c:	af 90       	pop	r10
 67e:	9f 90       	pop	r9
 680:	8f 90       	pop	r8
 682:	7f 90       	pop	r7
 684:	6f 90       	pop	r6
 686:	5f 90       	pop	r5
 688:	4f 90       	pop	r4
 68a:	08 95       	ret

0000068c <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 68c:	cf 93       	push	r28
 68e:	df 93       	push	r29
 690:	cd b7       	in	r28, 0x3d	; 61
 692:	de b7       	in	r29, 0x3e	; 62
 694:	28 97       	sbiw	r28, 0x08	; 8
 696:	0f b6       	in	r0, 0x3f	; 63
 698:	f8 94       	cli
 69a:	de bf       	out	0x3e, r29	; 62
 69c:	0f be       	out	0x3f, r0	; 63
 69e:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 6a0:	88 e0       	ldi	r24, 0x08	; 8
 6a2:	e0 e0       	ldi	r30, 0x00	; 0
 6a4:	f2 e0       	ldi	r31, 0x02	; 2
 6a6:	de 01       	movw	r26, r28
 6a8:	11 96       	adiw	r26, 0x01	; 1
 6aa:	01 90       	ld	r0, Z+
 6ac:	0d 92       	st	X+, r0
 6ae:	8a 95       	dec	r24
 6b0:	e1 f7       	brne	.-8      	; 0x6aa <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6b2:	e5 e0       	ldi	r30, 0x05	; 5
 6b4:	f1 e0       	ldi	r31, 0x01	; 1
 6b6:	80 81       	ld	r24, Z
 6b8:	8f 7b       	andi	r24, 0xBF	; 191
 6ba:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6bc:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 6c0:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 6c4:	81 e0       	ldi	r24, 0x01	; 1
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	8c 0f       	add	r24, r28
 6ca:	9d 1f       	adc	r25, r29
 6cc:	e8 0f       	add	r30, r24
 6ce:	f9 1f       	adc	r31, r25
 6d0:	80 81       	ld	r24, Z
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 6d8:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 6dc:	a2 ef       	ldi	r26, 0xF2	; 242
 6de:	b2 e0       	ldi	r27, 0x02	; 2
 6e0:	22 e8       	ldi	r18, 0x82	; 130
 6e2:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 6e4:	e5 e0       	ldi	r30, 0x05	; 5
 6e6:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 6e8:	5e 91       	ld	r21, -X
 6ea:	4e 91       	ld	r20, -X
 6ec:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 6f0:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 6f4:	84 23       	and	r24, r20
 6f6:	95 23       	and	r25, r21
 6f8:	89 2b       	or	r24, r25
 6fa:	21 f0       	breq	.+8      	; 0x704 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 6fc:	80 81       	ld	r24, Z
 6fe:	80 62       	ori	r24, 0x20	; 32
 700:	80 83       	st	Z, r24
 702:	03 c0       	rjmp	.+6      	; 0x70a <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 704:	80 81       	ld	r24, Z
 706:	8f 7d       	andi	r24, 0xDF	; 223
 708:	80 83       	st	Z, r24
        }
        CLOCK_1;
 70a:	80 81       	ld	r24, Z
 70c:	80 61       	ori	r24, 0x10	; 16
 70e:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 710:	80 81       	ld	r24, Z
 712:	8f 7e       	andi	r24, 0xEF	; 239
 714:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 716:	a2 17       	cp	r26, r18
 718:	b3 07       	cpc	r27, r19
 71a:	31 f7       	brne	.-52     	; 0x6e8 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 71c:	e5 e0       	ldi	r30, 0x05	; 5
 71e:	f1 e0       	ldi	r31, 0x01	; 1
 720:	80 81       	ld	r24, Z
 722:	87 7f       	andi	r24, 0xF7	; 247
 724:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 726:	80 81       	ld	r24, Z
 728:	88 7f       	andi	r24, 0xF8	; 248
 72a:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 72c:	90 81       	ld	r25, Z
 72e:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 732:	89 2b       	or	r24, r25
 734:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 736:	80 81       	ld	r24, Z
 738:	80 64       	ori	r24, 0x40	; 64
 73a:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 73c:	80 81       	ld	r24, Z
 73e:	88 60       	ori	r24, 0x08	; 8
 740:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 742:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 746:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 74a:	87 30       	cpi	r24, 0x07	; 7
 74c:	91 05       	cpc	r25, r1
 74e:	30 f4       	brcc	.+12     	; 0x75c <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 750:	01 96       	adiw	r24, 0x01	; 1
 752:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2725+0x1>
 756:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2725>
 75a:	07 c0       	rjmp	.+14     	; 0x76a <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 75c:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2725+0x1>
 760:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2725>
        writeTextFinished = 1;
 764:	81 e0       	ldi	r24, 0x01	; 1
 766:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 76a:	28 96       	adiw	r28, 0x08	; 8
 76c:	0f b6       	in	r0, 0x3f	; 63
 76e:	f8 94       	cli
 770:	de bf       	out	0x3e, r29	; 62
 772:	0f be       	out	0x3f, r0	; 63
 774:	cd bf       	out	0x3d, r28	; 61
 776:	df 91       	pop	r29
 778:	cf 91       	pop	r28
 77a:	08 95       	ret

0000077c <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 77c:	1f 92       	push	r1
 77e:	0f 92       	push	r0
 780:	0f b6       	in	r0, 0x3f	; 63
 782:	0f 92       	push	r0
 784:	11 24       	eor	r1, r1
 786:	0b b6       	in	r0, 0x3b	; 59
 788:	0f 92       	push	r0
 78a:	2f 93       	push	r18
 78c:	3f 93       	push	r19
 78e:	4f 93       	push	r20
 790:	5f 93       	push	r21
 792:	6f 93       	push	r22
 794:	7f 93       	push	r23
 796:	8f 93       	push	r24
 798:	9f 93       	push	r25
 79a:	af 93       	push	r26
 79c:	bf 93       	push	r27
 79e:	ef 93       	push	r30
 7a0:	ff 93       	push	r31
    systemTimeMs += 1;
 7a2:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 7a6:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 7aa:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 7ae:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 7b2:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 7b6:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 7ba:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 7be:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 7c2:	a1 e0       	ldi	r26, 0x01	; 1
 7c4:	27 d0       	rcall	.+78     	; 0x814 <__adddi3_s8>
 7c6:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 7ca:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 7ce:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 7d2:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 7d6:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 7da:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 7de:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 7e2:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 7e6:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 7ea:	81 11       	cpse	r24, r1
 7ec:	4f df       	rcall	.-354    	; 0x68c <matrixWriteNextLine>
}
 7ee:	ff 91       	pop	r31
 7f0:	ef 91       	pop	r30
 7f2:	bf 91       	pop	r27
 7f4:	af 91       	pop	r26
 7f6:	9f 91       	pop	r25
 7f8:	8f 91       	pop	r24
 7fa:	7f 91       	pop	r23
 7fc:	6f 91       	pop	r22
 7fe:	5f 91       	pop	r21
 800:	4f 91       	pop	r20
 802:	3f 91       	pop	r19
 804:	2f 91       	pop	r18
 806:	0f 90       	pop	r0
 808:	0b be       	out	0x3b, r0	; 59
 80a:	0f 90       	pop	r0
 80c:	0f be       	out	0x3f, r0	; 63
 80e:	0f 90       	pop	r0
 810:	1f 90       	pop	r1
 812:	18 95       	reti

00000814 <__adddi3_s8>:
 814:	00 24       	eor	r0, r0
 816:	a7 fd       	sbrc	r26, 7
 818:	00 94       	com	r0
 81a:	2a 0f       	add	r18, r26
 81c:	30 1d       	adc	r19, r0
 81e:	40 1d       	adc	r20, r0
 820:	50 1d       	adc	r21, r0
 822:	60 1d       	adc	r22, r0
 824:	70 1d       	adc	r23, r0
 826:	80 1d       	adc	r24, r0
 828:	90 1d       	adc	r25, r0
 82a:	08 95       	ret

0000082c <vsnprintf>:
 82c:	0f 93       	push	r16
 82e:	1f 93       	push	r17
 830:	cf 93       	push	r28
 832:	df 93       	push	r29
 834:	cd b7       	in	r28, 0x3d	; 61
 836:	de b7       	in	r29, 0x3e	; 62
 838:	2e 97       	sbiw	r28, 0x0e	; 14
 83a:	0f b6       	in	r0, 0x3f	; 63
 83c:	f8 94       	cli
 83e:	de bf       	out	0x3e, r29	; 62
 840:	0f be       	out	0x3f, r0	; 63
 842:	cd bf       	out	0x3d, r28	; 61
 844:	8c 01       	movw	r16, r24
 846:	fa 01       	movw	r30, r20
 848:	86 e0       	ldi	r24, 0x06	; 6
 84a:	8c 83       	std	Y+4, r24	; 0x04
 84c:	1a 83       	std	Y+2, r17	; 0x02
 84e:	09 83       	std	Y+1, r16	; 0x01
 850:	77 ff       	sbrs	r23, 7
 852:	02 c0       	rjmp	.+4      	; 0x858 <vsnprintf+0x2c>
 854:	60 e0       	ldi	r22, 0x00	; 0
 856:	70 e8       	ldi	r23, 0x80	; 128
 858:	cb 01       	movw	r24, r22
 85a:	01 97       	sbiw	r24, 0x01	; 1
 85c:	9e 83       	std	Y+6, r25	; 0x06
 85e:	8d 83       	std	Y+5, r24	; 0x05
 860:	a9 01       	movw	r20, r18
 862:	bf 01       	movw	r22, r30
 864:	ce 01       	movw	r24, r28
 866:	01 96       	adiw	r24, 0x01	; 1
 868:	19 d0       	rcall	.+50     	; 0x89c <vfprintf>
 86a:	4d 81       	ldd	r20, Y+5	; 0x05
 86c:	5e 81       	ldd	r21, Y+6	; 0x06
 86e:	57 fd       	sbrc	r21, 7
 870:	0a c0       	rjmp	.+20     	; 0x886 <vsnprintf+0x5a>
 872:	2f 81       	ldd	r18, Y+7	; 0x07
 874:	38 85       	ldd	r19, Y+8	; 0x08
 876:	42 17       	cp	r20, r18
 878:	53 07       	cpc	r21, r19
 87a:	0c f4       	brge	.+2      	; 0x87e <vsnprintf+0x52>
 87c:	9a 01       	movw	r18, r20
 87e:	f8 01       	movw	r30, r16
 880:	e2 0f       	add	r30, r18
 882:	f3 1f       	adc	r31, r19
 884:	10 82       	st	Z, r1
 886:	2e 96       	adiw	r28, 0x0e	; 14
 888:	0f b6       	in	r0, 0x3f	; 63
 88a:	f8 94       	cli
 88c:	de bf       	out	0x3e, r29	; 62
 88e:	0f be       	out	0x3f, r0	; 63
 890:	cd bf       	out	0x3d, r28	; 61
 892:	df 91       	pop	r29
 894:	cf 91       	pop	r28
 896:	1f 91       	pop	r17
 898:	0f 91       	pop	r16
 89a:	08 95       	ret

0000089c <vfprintf>:
 89c:	2f 92       	push	r2
 89e:	3f 92       	push	r3
 8a0:	4f 92       	push	r4
 8a2:	5f 92       	push	r5
 8a4:	6f 92       	push	r6
 8a6:	7f 92       	push	r7
 8a8:	8f 92       	push	r8
 8aa:	9f 92       	push	r9
 8ac:	af 92       	push	r10
 8ae:	bf 92       	push	r11
 8b0:	cf 92       	push	r12
 8b2:	df 92       	push	r13
 8b4:	ef 92       	push	r14
 8b6:	ff 92       	push	r15
 8b8:	0f 93       	push	r16
 8ba:	1f 93       	push	r17
 8bc:	cf 93       	push	r28
 8be:	df 93       	push	r29
 8c0:	cd b7       	in	r28, 0x3d	; 61
 8c2:	de b7       	in	r29, 0x3e	; 62
 8c4:	2b 97       	sbiw	r28, 0x0b	; 11
 8c6:	0f b6       	in	r0, 0x3f	; 63
 8c8:	f8 94       	cli
 8ca:	de bf       	out	0x3e, r29	; 62
 8cc:	0f be       	out	0x3f, r0	; 63
 8ce:	cd bf       	out	0x3d, r28	; 61
 8d0:	6c 01       	movw	r12, r24
 8d2:	7b 01       	movw	r14, r22
 8d4:	8a 01       	movw	r16, r20
 8d6:	fc 01       	movw	r30, r24
 8d8:	17 82       	std	Z+7, r1	; 0x07
 8da:	16 82       	std	Z+6, r1	; 0x06
 8dc:	83 81       	ldd	r24, Z+3	; 0x03
 8de:	81 ff       	sbrs	r24, 1
 8e0:	bf c1       	rjmp	.+894    	; 0xc60 <vfprintf+0x3c4>
 8e2:	ce 01       	movw	r24, r28
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	3c 01       	movw	r6, r24
 8e8:	f6 01       	movw	r30, r12
 8ea:	93 81       	ldd	r25, Z+3	; 0x03
 8ec:	f7 01       	movw	r30, r14
 8ee:	93 fd       	sbrc	r25, 3
 8f0:	85 91       	lpm	r24, Z+
 8f2:	93 ff       	sbrs	r25, 3
 8f4:	81 91       	ld	r24, Z+
 8f6:	7f 01       	movw	r14, r30
 8f8:	88 23       	and	r24, r24
 8fa:	09 f4       	brne	.+2      	; 0x8fe <vfprintf+0x62>
 8fc:	ad c1       	rjmp	.+858    	; 0xc58 <vfprintf+0x3bc>
 8fe:	85 32       	cpi	r24, 0x25	; 37
 900:	39 f4       	brne	.+14     	; 0x910 <vfprintf+0x74>
 902:	93 fd       	sbrc	r25, 3
 904:	85 91       	lpm	r24, Z+
 906:	93 ff       	sbrs	r25, 3
 908:	81 91       	ld	r24, Z+
 90a:	7f 01       	movw	r14, r30
 90c:	85 32       	cpi	r24, 0x25	; 37
 90e:	21 f4       	brne	.+8      	; 0x918 <vfprintf+0x7c>
 910:	b6 01       	movw	r22, r12
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	d6 d1       	rcall	.+940    	; 0xcc2 <fputc>
 916:	e8 cf       	rjmp	.-48     	; 0x8e8 <vfprintf+0x4c>
 918:	91 2c       	mov	r9, r1
 91a:	21 2c       	mov	r2, r1
 91c:	31 2c       	mov	r3, r1
 91e:	ff e1       	ldi	r31, 0x1F	; 31
 920:	f3 15       	cp	r31, r3
 922:	d8 f0       	brcs	.+54     	; 0x95a <vfprintf+0xbe>
 924:	8b 32       	cpi	r24, 0x2B	; 43
 926:	79 f0       	breq	.+30     	; 0x946 <vfprintf+0xaa>
 928:	38 f4       	brcc	.+14     	; 0x938 <vfprintf+0x9c>
 92a:	80 32       	cpi	r24, 0x20	; 32
 92c:	79 f0       	breq	.+30     	; 0x94c <vfprintf+0xb0>
 92e:	83 32       	cpi	r24, 0x23	; 35
 930:	a1 f4       	brne	.+40     	; 0x95a <vfprintf+0xbe>
 932:	23 2d       	mov	r18, r3
 934:	20 61       	ori	r18, 0x10	; 16
 936:	1d c0       	rjmp	.+58     	; 0x972 <vfprintf+0xd6>
 938:	8d 32       	cpi	r24, 0x2D	; 45
 93a:	61 f0       	breq	.+24     	; 0x954 <vfprintf+0xb8>
 93c:	80 33       	cpi	r24, 0x30	; 48
 93e:	69 f4       	brne	.+26     	; 0x95a <vfprintf+0xbe>
 940:	23 2d       	mov	r18, r3
 942:	21 60       	ori	r18, 0x01	; 1
 944:	16 c0       	rjmp	.+44     	; 0x972 <vfprintf+0xd6>
 946:	83 2d       	mov	r24, r3
 948:	82 60       	ori	r24, 0x02	; 2
 94a:	38 2e       	mov	r3, r24
 94c:	e3 2d       	mov	r30, r3
 94e:	e4 60       	ori	r30, 0x04	; 4
 950:	3e 2e       	mov	r3, r30
 952:	2a c0       	rjmp	.+84     	; 0x9a8 <vfprintf+0x10c>
 954:	f3 2d       	mov	r31, r3
 956:	f8 60       	ori	r31, 0x08	; 8
 958:	1d c0       	rjmp	.+58     	; 0x994 <vfprintf+0xf8>
 95a:	37 fc       	sbrc	r3, 7
 95c:	2d c0       	rjmp	.+90     	; 0x9b8 <vfprintf+0x11c>
 95e:	20 ed       	ldi	r18, 0xD0	; 208
 960:	28 0f       	add	r18, r24
 962:	2a 30       	cpi	r18, 0x0A	; 10
 964:	40 f0       	brcs	.+16     	; 0x976 <vfprintf+0xda>
 966:	8e 32       	cpi	r24, 0x2E	; 46
 968:	b9 f4       	brne	.+46     	; 0x998 <vfprintf+0xfc>
 96a:	36 fc       	sbrc	r3, 6
 96c:	75 c1       	rjmp	.+746    	; 0xc58 <vfprintf+0x3bc>
 96e:	23 2d       	mov	r18, r3
 970:	20 64       	ori	r18, 0x40	; 64
 972:	32 2e       	mov	r3, r18
 974:	19 c0       	rjmp	.+50     	; 0x9a8 <vfprintf+0x10c>
 976:	36 fe       	sbrs	r3, 6
 978:	06 c0       	rjmp	.+12     	; 0x986 <vfprintf+0xea>
 97a:	8a e0       	ldi	r24, 0x0A	; 10
 97c:	98 9e       	mul	r9, r24
 97e:	20 0d       	add	r18, r0
 980:	11 24       	eor	r1, r1
 982:	92 2e       	mov	r9, r18
 984:	11 c0       	rjmp	.+34     	; 0x9a8 <vfprintf+0x10c>
 986:	ea e0       	ldi	r30, 0x0A	; 10
 988:	2e 9e       	mul	r2, r30
 98a:	20 0d       	add	r18, r0
 98c:	11 24       	eor	r1, r1
 98e:	22 2e       	mov	r2, r18
 990:	f3 2d       	mov	r31, r3
 992:	f0 62       	ori	r31, 0x20	; 32
 994:	3f 2e       	mov	r3, r31
 996:	08 c0       	rjmp	.+16     	; 0x9a8 <vfprintf+0x10c>
 998:	8c 36       	cpi	r24, 0x6C	; 108
 99a:	21 f4       	brne	.+8      	; 0x9a4 <vfprintf+0x108>
 99c:	83 2d       	mov	r24, r3
 99e:	80 68       	ori	r24, 0x80	; 128
 9a0:	38 2e       	mov	r3, r24
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <vfprintf+0x10c>
 9a4:	88 36       	cpi	r24, 0x68	; 104
 9a6:	41 f4       	brne	.+16     	; 0x9b8 <vfprintf+0x11c>
 9a8:	f7 01       	movw	r30, r14
 9aa:	93 fd       	sbrc	r25, 3
 9ac:	85 91       	lpm	r24, Z+
 9ae:	93 ff       	sbrs	r25, 3
 9b0:	81 91       	ld	r24, Z+
 9b2:	7f 01       	movw	r14, r30
 9b4:	81 11       	cpse	r24, r1
 9b6:	b3 cf       	rjmp	.-154    	; 0x91e <vfprintf+0x82>
 9b8:	98 2f       	mov	r25, r24
 9ba:	9f 7d       	andi	r25, 0xDF	; 223
 9bc:	95 54       	subi	r25, 0x45	; 69
 9be:	93 30       	cpi	r25, 0x03	; 3
 9c0:	28 f4       	brcc	.+10     	; 0x9cc <vfprintf+0x130>
 9c2:	0c 5f       	subi	r16, 0xFC	; 252
 9c4:	1f 4f       	sbci	r17, 0xFF	; 255
 9c6:	9f e3       	ldi	r25, 0x3F	; 63
 9c8:	99 83       	std	Y+1, r25	; 0x01
 9ca:	0d c0       	rjmp	.+26     	; 0x9e6 <vfprintf+0x14a>
 9cc:	83 36       	cpi	r24, 0x63	; 99
 9ce:	31 f0       	breq	.+12     	; 0x9dc <vfprintf+0x140>
 9d0:	83 37       	cpi	r24, 0x73	; 115
 9d2:	71 f0       	breq	.+28     	; 0x9f0 <vfprintf+0x154>
 9d4:	83 35       	cpi	r24, 0x53	; 83
 9d6:	09 f0       	breq	.+2      	; 0x9da <vfprintf+0x13e>
 9d8:	55 c0       	rjmp	.+170    	; 0xa84 <vfprintf+0x1e8>
 9da:	20 c0       	rjmp	.+64     	; 0xa1c <vfprintf+0x180>
 9dc:	f8 01       	movw	r30, r16
 9de:	80 81       	ld	r24, Z
 9e0:	89 83       	std	Y+1, r24	; 0x01
 9e2:	0e 5f       	subi	r16, 0xFE	; 254
 9e4:	1f 4f       	sbci	r17, 0xFF	; 255
 9e6:	88 24       	eor	r8, r8
 9e8:	83 94       	inc	r8
 9ea:	91 2c       	mov	r9, r1
 9ec:	53 01       	movw	r10, r6
 9ee:	12 c0       	rjmp	.+36     	; 0xa14 <vfprintf+0x178>
 9f0:	28 01       	movw	r4, r16
 9f2:	f2 e0       	ldi	r31, 0x02	; 2
 9f4:	4f 0e       	add	r4, r31
 9f6:	51 1c       	adc	r5, r1
 9f8:	f8 01       	movw	r30, r16
 9fa:	a0 80       	ld	r10, Z
 9fc:	b1 80       	ldd	r11, Z+1	; 0x01
 9fe:	36 fe       	sbrs	r3, 6
 a00:	03 c0       	rjmp	.+6      	; 0xa08 <vfprintf+0x16c>
 a02:	69 2d       	mov	r22, r9
 a04:	70 e0       	ldi	r23, 0x00	; 0
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <vfprintf+0x170>
 a08:	6f ef       	ldi	r22, 0xFF	; 255
 a0a:	7f ef       	ldi	r23, 0xFF	; 255
 a0c:	c5 01       	movw	r24, r10
 a0e:	4e d1       	rcall	.+668    	; 0xcac <strnlen>
 a10:	4c 01       	movw	r8, r24
 a12:	82 01       	movw	r16, r4
 a14:	f3 2d       	mov	r31, r3
 a16:	ff 77       	andi	r31, 0x7F	; 127
 a18:	3f 2e       	mov	r3, r31
 a1a:	15 c0       	rjmp	.+42     	; 0xa46 <vfprintf+0x1aa>
 a1c:	28 01       	movw	r4, r16
 a1e:	22 e0       	ldi	r18, 0x02	; 2
 a20:	42 0e       	add	r4, r18
 a22:	51 1c       	adc	r5, r1
 a24:	f8 01       	movw	r30, r16
 a26:	a0 80       	ld	r10, Z
 a28:	b1 80       	ldd	r11, Z+1	; 0x01
 a2a:	36 fe       	sbrs	r3, 6
 a2c:	03 c0       	rjmp	.+6      	; 0xa34 <vfprintf+0x198>
 a2e:	69 2d       	mov	r22, r9
 a30:	70 e0       	ldi	r23, 0x00	; 0
 a32:	02 c0       	rjmp	.+4      	; 0xa38 <vfprintf+0x19c>
 a34:	6f ef       	ldi	r22, 0xFF	; 255
 a36:	7f ef       	ldi	r23, 0xFF	; 255
 a38:	c5 01       	movw	r24, r10
 a3a:	2d d1       	rcall	.+602    	; 0xc96 <strnlen_P>
 a3c:	4c 01       	movw	r8, r24
 a3e:	f3 2d       	mov	r31, r3
 a40:	f0 68       	ori	r31, 0x80	; 128
 a42:	3f 2e       	mov	r3, r31
 a44:	82 01       	movw	r16, r4
 a46:	33 fc       	sbrc	r3, 3
 a48:	19 c0       	rjmp	.+50     	; 0xa7c <vfprintf+0x1e0>
 a4a:	82 2d       	mov	r24, r2
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	88 16       	cp	r8, r24
 a50:	99 06       	cpc	r9, r25
 a52:	a0 f4       	brcc	.+40     	; 0xa7c <vfprintf+0x1e0>
 a54:	b6 01       	movw	r22, r12
 a56:	80 e2       	ldi	r24, 0x20	; 32
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	33 d1       	rcall	.+614    	; 0xcc2 <fputc>
 a5c:	2a 94       	dec	r2
 a5e:	f5 cf       	rjmp	.-22     	; 0xa4a <vfprintf+0x1ae>
 a60:	f5 01       	movw	r30, r10
 a62:	37 fc       	sbrc	r3, 7
 a64:	85 91       	lpm	r24, Z+
 a66:	37 fe       	sbrs	r3, 7
 a68:	81 91       	ld	r24, Z+
 a6a:	5f 01       	movw	r10, r30
 a6c:	b6 01       	movw	r22, r12
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	28 d1       	rcall	.+592    	; 0xcc2 <fputc>
 a72:	21 10       	cpse	r2, r1
 a74:	2a 94       	dec	r2
 a76:	21 e0       	ldi	r18, 0x01	; 1
 a78:	82 1a       	sub	r8, r18
 a7a:	91 08       	sbc	r9, r1
 a7c:	81 14       	cp	r8, r1
 a7e:	91 04       	cpc	r9, r1
 a80:	79 f7       	brne	.-34     	; 0xa60 <vfprintf+0x1c4>
 a82:	e1 c0       	rjmp	.+450    	; 0xc46 <vfprintf+0x3aa>
 a84:	84 36       	cpi	r24, 0x64	; 100
 a86:	11 f0       	breq	.+4      	; 0xa8c <vfprintf+0x1f0>
 a88:	89 36       	cpi	r24, 0x69	; 105
 a8a:	39 f5       	brne	.+78     	; 0xada <vfprintf+0x23e>
 a8c:	f8 01       	movw	r30, r16
 a8e:	37 fe       	sbrs	r3, 7
 a90:	07 c0       	rjmp	.+14     	; 0xaa0 <vfprintf+0x204>
 a92:	60 81       	ld	r22, Z
 a94:	71 81       	ldd	r23, Z+1	; 0x01
 a96:	82 81       	ldd	r24, Z+2	; 0x02
 a98:	93 81       	ldd	r25, Z+3	; 0x03
 a9a:	0c 5f       	subi	r16, 0xFC	; 252
 a9c:	1f 4f       	sbci	r17, 0xFF	; 255
 a9e:	08 c0       	rjmp	.+16     	; 0xab0 <vfprintf+0x214>
 aa0:	60 81       	ld	r22, Z
 aa2:	71 81       	ldd	r23, Z+1	; 0x01
 aa4:	07 2e       	mov	r0, r23
 aa6:	00 0c       	add	r0, r0
 aa8:	88 0b       	sbc	r24, r24
 aaa:	99 0b       	sbc	r25, r25
 aac:	0e 5f       	subi	r16, 0xFE	; 254
 aae:	1f 4f       	sbci	r17, 0xFF	; 255
 ab0:	f3 2d       	mov	r31, r3
 ab2:	ff 76       	andi	r31, 0x6F	; 111
 ab4:	3f 2e       	mov	r3, r31
 ab6:	97 ff       	sbrs	r25, 7
 ab8:	09 c0       	rjmp	.+18     	; 0xacc <vfprintf+0x230>
 aba:	90 95       	com	r25
 abc:	80 95       	com	r24
 abe:	70 95       	com	r23
 ac0:	61 95       	neg	r22
 ac2:	7f 4f       	sbci	r23, 0xFF	; 255
 ac4:	8f 4f       	sbci	r24, 0xFF	; 255
 ac6:	9f 4f       	sbci	r25, 0xFF	; 255
 ac8:	f0 68       	ori	r31, 0x80	; 128
 aca:	3f 2e       	mov	r3, r31
 acc:	2a e0       	ldi	r18, 0x0A	; 10
 ace:	30 e0       	ldi	r19, 0x00	; 0
 ad0:	a3 01       	movw	r20, r6
 ad2:	33 d1       	rcall	.+614    	; 0xd3a <__ultoa_invert>
 ad4:	88 2e       	mov	r8, r24
 ad6:	86 18       	sub	r8, r6
 ad8:	44 c0       	rjmp	.+136    	; 0xb62 <vfprintf+0x2c6>
 ada:	85 37       	cpi	r24, 0x75	; 117
 adc:	31 f4       	brne	.+12     	; 0xaea <vfprintf+0x24e>
 ade:	23 2d       	mov	r18, r3
 ae0:	2f 7e       	andi	r18, 0xEF	; 239
 ae2:	b2 2e       	mov	r11, r18
 ae4:	2a e0       	ldi	r18, 0x0A	; 10
 ae6:	30 e0       	ldi	r19, 0x00	; 0
 ae8:	25 c0       	rjmp	.+74     	; 0xb34 <vfprintf+0x298>
 aea:	93 2d       	mov	r25, r3
 aec:	99 7f       	andi	r25, 0xF9	; 249
 aee:	b9 2e       	mov	r11, r25
 af0:	8f 36       	cpi	r24, 0x6F	; 111
 af2:	c1 f0       	breq	.+48     	; 0xb24 <vfprintf+0x288>
 af4:	18 f4       	brcc	.+6      	; 0xafc <vfprintf+0x260>
 af6:	88 35       	cpi	r24, 0x58	; 88
 af8:	79 f0       	breq	.+30     	; 0xb18 <vfprintf+0x27c>
 afa:	ae c0       	rjmp	.+348    	; 0xc58 <vfprintf+0x3bc>
 afc:	80 37       	cpi	r24, 0x70	; 112
 afe:	19 f0       	breq	.+6      	; 0xb06 <vfprintf+0x26a>
 b00:	88 37       	cpi	r24, 0x78	; 120
 b02:	21 f0       	breq	.+8      	; 0xb0c <vfprintf+0x270>
 b04:	a9 c0       	rjmp	.+338    	; 0xc58 <vfprintf+0x3bc>
 b06:	e9 2f       	mov	r30, r25
 b08:	e0 61       	ori	r30, 0x10	; 16
 b0a:	be 2e       	mov	r11, r30
 b0c:	b4 fe       	sbrs	r11, 4
 b0e:	0d c0       	rjmp	.+26     	; 0xb2a <vfprintf+0x28e>
 b10:	fb 2d       	mov	r31, r11
 b12:	f4 60       	ori	r31, 0x04	; 4
 b14:	bf 2e       	mov	r11, r31
 b16:	09 c0       	rjmp	.+18     	; 0xb2a <vfprintf+0x28e>
 b18:	34 fe       	sbrs	r3, 4
 b1a:	0a c0       	rjmp	.+20     	; 0xb30 <vfprintf+0x294>
 b1c:	29 2f       	mov	r18, r25
 b1e:	26 60       	ori	r18, 0x06	; 6
 b20:	b2 2e       	mov	r11, r18
 b22:	06 c0       	rjmp	.+12     	; 0xb30 <vfprintf+0x294>
 b24:	28 e0       	ldi	r18, 0x08	; 8
 b26:	30 e0       	ldi	r19, 0x00	; 0
 b28:	05 c0       	rjmp	.+10     	; 0xb34 <vfprintf+0x298>
 b2a:	20 e1       	ldi	r18, 0x10	; 16
 b2c:	30 e0       	ldi	r19, 0x00	; 0
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0x298>
 b30:	20 e1       	ldi	r18, 0x10	; 16
 b32:	32 e0       	ldi	r19, 0x02	; 2
 b34:	f8 01       	movw	r30, r16
 b36:	b7 fe       	sbrs	r11, 7
 b38:	07 c0       	rjmp	.+14     	; 0xb48 <vfprintf+0x2ac>
 b3a:	60 81       	ld	r22, Z
 b3c:	71 81       	ldd	r23, Z+1	; 0x01
 b3e:	82 81       	ldd	r24, Z+2	; 0x02
 b40:	93 81       	ldd	r25, Z+3	; 0x03
 b42:	0c 5f       	subi	r16, 0xFC	; 252
 b44:	1f 4f       	sbci	r17, 0xFF	; 255
 b46:	06 c0       	rjmp	.+12     	; 0xb54 <vfprintf+0x2b8>
 b48:	60 81       	ld	r22, Z
 b4a:	71 81       	ldd	r23, Z+1	; 0x01
 b4c:	80 e0       	ldi	r24, 0x00	; 0
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 5f       	subi	r16, 0xFE	; 254
 b52:	1f 4f       	sbci	r17, 0xFF	; 255
 b54:	a3 01       	movw	r20, r6
 b56:	f1 d0       	rcall	.+482    	; 0xd3a <__ultoa_invert>
 b58:	88 2e       	mov	r8, r24
 b5a:	86 18       	sub	r8, r6
 b5c:	fb 2d       	mov	r31, r11
 b5e:	ff 77       	andi	r31, 0x7F	; 127
 b60:	3f 2e       	mov	r3, r31
 b62:	36 fe       	sbrs	r3, 6
 b64:	0d c0       	rjmp	.+26     	; 0xb80 <vfprintf+0x2e4>
 b66:	23 2d       	mov	r18, r3
 b68:	2e 7f       	andi	r18, 0xFE	; 254
 b6a:	a2 2e       	mov	r10, r18
 b6c:	89 14       	cp	r8, r9
 b6e:	58 f4       	brcc	.+22     	; 0xb86 <vfprintf+0x2ea>
 b70:	34 fe       	sbrs	r3, 4
 b72:	0b c0       	rjmp	.+22     	; 0xb8a <vfprintf+0x2ee>
 b74:	32 fc       	sbrc	r3, 2
 b76:	09 c0       	rjmp	.+18     	; 0xb8a <vfprintf+0x2ee>
 b78:	83 2d       	mov	r24, r3
 b7a:	8e 7e       	andi	r24, 0xEE	; 238
 b7c:	a8 2e       	mov	r10, r24
 b7e:	05 c0       	rjmp	.+10     	; 0xb8a <vfprintf+0x2ee>
 b80:	b8 2c       	mov	r11, r8
 b82:	a3 2c       	mov	r10, r3
 b84:	03 c0       	rjmp	.+6      	; 0xb8c <vfprintf+0x2f0>
 b86:	b8 2c       	mov	r11, r8
 b88:	01 c0       	rjmp	.+2      	; 0xb8c <vfprintf+0x2f0>
 b8a:	b9 2c       	mov	r11, r9
 b8c:	a4 fe       	sbrs	r10, 4
 b8e:	0f c0       	rjmp	.+30     	; 0xbae <vfprintf+0x312>
 b90:	fe 01       	movw	r30, r28
 b92:	e8 0d       	add	r30, r8
 b94:	f1 1d       	adc	r31, r1
 b96:	80 81       	ld	r24, Z
 b98:	80 33       	cpi	r24, 0x30	; 48
 b9a:	21 f4       	brne	.+8      	; 0xba4 <vfprintf+0x308>
 b9c:	9a 2d       	mov	r25, r10
 b9e:	99 7e       	andi	r25, 0xE9	; 233
 ba0:	a9 2e       	mov	r10, r25
 ba2:	09 c0       	rjmp	.+18     	; 0xbb6 <vfprintf+0x31a>
 ba4:	a2 fe       	sbrs	r10, 2
 ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <vfprintf+0x318>
 ba8:	b3 94       	inc	r11
 baa:	b3 94       	inc	r11
 bac:	04 c0       	rjmp	.+8      	; 0xbb6 <vfprintf+0x31a>
 bae:	8a 2d       	mov	r24, r10
 bb0:	86 78       	andi	r24, 0x86	; 134
 bb2:	09 f0       	breq	.+2      	; 0xbb6 <vfprintf+0x31a>
 bb4:	b3 94       	inc	r11
 bb6:	a3 fc       	sbrc	r10, 3
 bb8:	10 c0       	rjmp	.+32     	; 0xbda <vfprintf+0x33e>
 bba:	a0 fe       	sbrs	r10, 0
 bbc:	06 c0       	rjmp	.+12     	; 0xbca <vfprintf+0x32e>
 bbe:	b2 14       	cp	r11, r2
 bc0:	80 f4       	brcc	.+32     	; 0xbe2 <vfprintf+0x346>
 bc2:	28 0c       	add	r2, r8
 bc4:	92 2c       	mov	r9, r2
 bc6:	9b 18       	sub	r9, r11
 bc8:	0d c0       	rjmp	.+26     	; 0xbe4 <vfprintf+0x348>
 bca:	b2 14       	cp	r11, r2
 bcc:	58 f4       	brcc	.+22     	; 0xbe4 <vfprintf+0x348>
 bce:	b6 01       	movw	r22, r12
 bd0:	80 e2       	ldi	r24, 0x20	; 32
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	76 d0       	rcall	.+236    	; 0xcc2 <fputc>
 bd6:	b3 94       	inc	r11
 bd8:	f8 cf       	rjmp	.-16     	; 0xbca <vfprintf+0x32e>
 bda:	b2 14       	cp	r11, r2
 bdc:	18 f4       	brcc	.+6      	; 0xbe4 <vfprintf+0x348>
 bde:	2b 18       	sub	r2, r11
 be0:	02 c0       	rjmp	.+4      	; 0xbe6 <vfprintf+0x34a>
 be2:	98 2c       	mov	r9, r8
 be4:	21 2c       	mov	r2, r1
 be6:	a4 fe       	sbrs	r10, 4
 be8:	0f c0       	rjmp	.+30     	; 0xc08 <vfprintf+0x36c>
 bea:	b6 01       	movw	r22, r12
 bec:	80 e3       	ldi	r24, 0x30	; 48
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	68 d0       	rcall	.+208    	; 0xcc2 <fputc>
 bf2:	a2 fe       	sbrs	r10, 2
 bf4:	16 c0       	rjmp	.+44     	; 0xc22 <vfprintf+0x386>
 bf6:	a1 fc       	sbrc	r10, 1
 bf8:	03 c0       	rjmp	.+6      	; 0xc00 <vfprintf+0x364>
 bfa:	88 e7       	ldi	r24, 0x78	; 120
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	02 c0       	rjmp	.+4      	; 0xc04 <vfprintf+0x368>
 c00:	88 e5       	ldi	r24, 0x58	; 88
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	b6 01       	movw	r22, r12
 c06:	0c c0       	rjmp	.+24     	; 0xc20 <vfprintf+0x384>
 c08:	8a 2d       	mov	r24, r10
 c0a:	86 78       	andi	r24, 0x86	; 134
 c0c:	51 f0       	breq	.+20     	; 0xc22 <vfprintf+0x386>
 c0e:	a1 fe       	sbrs	r10, 1
 c10:	02 c0       	rjmp	.+4      	; 0xc16 <vfprintf+0x37a>
 c12:	8b e2       	ldi	r24, 0x2B	; 43
 c14:	01 c0       	rjmp	.+2      	; 0xc18 <vfprintf+0x37c>
 c16:	80 e2       	ldi	r24, 0x20	; 32
 c18:	a7 fc       	sbrc	r10, 7
 c1a:	8d e2       	ldi	r24, 0x2D	; 45
 c1c:	b6 01       	movw	r22, r12
 c1e:	90 e0       	ldi	r25, 0x00	; 0
 c20:	50 d0       	rcall	.+160    	; 0xcc2 <fputc>
 c22:	89 14       	cp	r8, r9
 c24:	30 f4       	brcc	.+12     	; 0xc32 <vfprintf+0x396>
 c26:	b6 01       	movw	r22, r12
 c28:	80 e3       	ldi	r24, 0x30	; 48
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	4a d0       	rcall	.+148    	; 0xcc2 <fputc>
 c2e:	9a 94       	dec	r9
 c30:	f8 cf       	rjmp	.-16     	; 0xc22 <vfprintf+0x386>
 c32:	8a 94       	dec	r8
 c34:	f3 01       	movw	r30, r6
 c36:	e8 0d       	add	r30, r8
 c38:	f1 1d       	adc	r31, r1
 c3a:	80 81       	ld	r24, Z
 c3c:	b6 01       	movw	r22, r12
 c3e:	90 e0       	ldi	r25, 0x00	; 0
 c40:	40 d0       	rcall	.+128    	; 0xcc2 <fputc>
 c42:	81 10       	cpse	r8, r1
 c44:	f6 cf       	rjmp	.-20     	; 0xc32 <vfprintf+0x396>
 c46:	22 20       	and	r2, r2
 c48:	09 f4       	brne	.+2      	; 0xc4c <vfprintf+0x3b0>
 c4a:	4e ce       	rjmp	.-868    	; 0x8e8 <vfprintf+0x4c>
 c4c:	b6 01       	movw	r22, r12
 c4e:	80 e2       	ldi	r24, 0x20	; 32
 c50:	90 e0       	ldi	r25, 0x00	; 0
 c52:	37 d0       	rcall	.+110    	; 0xcc2 <fputc>
 c54:	2a 94       	dec	r2
 c56:	f7 cf       	rjmp	.-18     	; 0xc46 <vfprintf+0x3aa>
 c58:	f6 01       	movw	r30, r12
 c5a:	86 81       	ldd	r24, Z+6	; 0x06
 c5c:	97 81       	ldd	r25, Z+7	; 0x07
 c5e:	02 c0       	rjmp	.+4      	; 0xc64 <vfprintf+0x3c8>
 c60:	8f ef       	ldi	r24, 0xFF	; 255
 c62:	9f ef       	ldi	r25, 0xFF	; 255
 c64:	2b 96       	adiw	r28, 0x0b	; 11
 c66:	0f b6       	in	r0, 0x3f	; 63
 c68:	f8 94       	cli
 c6a:	de bf       	out	0x3e, r29	; 62
 c6c:	0f be       	out	0x3f, r0	; 63
 c6e:	cd bf       	out	0x3d, r28	; 61
 c70:	df 91       	pop	r29
 c72:	cf 91       	pop	r28
 c74:	1f 91       	pop	r17
 c76:	0f 91       	pop	r16
 c78:	ff 90       	pop	r15
 c7a:	ef 90       	pop	r14
 c7c:	df 90       	pop	r13
 c7e:	cf 90       	pop	r12
 c80:	bf 90       	pop	r11
 c82:	af 90       	pop	r10
 c84:	9f 90       	pop	r9
 c86:	8f 90       	pop	r8
 c88:	7f 90       	pop	r7
 c8a:	6f 90       	pop	r6
 c8c:	5f 90       	pop	r5
 c8e:	4f 90       	pop	r4
 c90:	3f 90       	pop	r3
 c92:	2f 90       	pop	r2
 c94:	08 95       	ret

00000c96 <strnlen_P>:
 c96:	fc 01       	movw	r30, r24
 c98:	05 90       	lpm	r0, Z+
 c9a:	61 50       	subi	r22, 0x01	; 1
 c9c:	70 40       	sbci	r23, 0x00	; 0
 c9e:	01 10       	cpse	r0, r1
 ca0:	d8 f7       	brcc	.-10     	; 0xc98 <strnlen_P+0x2>
 ca2:	80 95       	com	r24
 ca4:	90 95       	com	r25
 ca6:	8e 0f       	add	r24, r30
 ca8:	9f 1f       	adc	r25, r31
 caa:	08 95       	ret

00000cac <strnlen>:
 cac:	fc 01       	movw	r30, r24
 cae:	61 50       	subi	r22, 0x01	; 1
 cb0:	70 40       	sbci	r23, 0x00	; 0
 cb2:	01 90       	ld	r0, Z+
 cb4:	01 10       	cpse	r0, r1
 cb6:	d8 f7       	brcc	.-10     	; 0xcae <strnlen+0x2>
 cb8:	80 95       	com	r24
 cba:	90 95       	com	r25
 cbc:	8e 0f       	add	r24, r30
 cbe:	9f 1f       	adc	r25, r31
 cc0:	08 95       	ret

00000cc2 <fputc>:
 cc2:	0f 93       	push	r16
 cc4:	1f 93       	push	r17
 cc6:	cf 93       	push	r28
 cc8:	df 93       	push	r29
 cca:	fb 01       	movw	r30, r22
 ccc:	23 81       	ldd	r18, Z+3	; 0x03
 cce:	21 fd       	sbrc	r18, 1
 cd0:	03 c0       	rjmp	.+6      	; 0xcd8 <fputc+0x16>
 cd2:	8f ef       	ldi	r24, 0xFF	; 255
 cd4:	9f ef       	ldi	r25, 0xFF	; 255
 cd6:	2c c0       	rjmp	.+88     	; 0xd30 <fputc+0x6e>
 cd8:	22 ff       	sbrs	r18, 2
 cda:	16 c0       	rjmp	.+44     	; 0xd08 <fputc+0x46>
 cdc:	46 81       	ldd	r20, Z+6	; 0x06
 cde:	57 81       	ldd	r21, Z+7	; 0x07
 ce0:	24 81       	ldd	r18, Z+4	; 0x04
 ce2:	35 81       	ldd	r19, Z+5	; 0x05
 ce4:	42 17       	cp	r20, r18
 ce6:	53 07       	cpc	r21, r19
 ce8:	44 f4       	brge	.+16     	; 0xcfa <fputc+0x38>
 cea:	a0 81       	ld	r26, Z
 cec:	b1 81       	ldd	r27, Z+1	; 0x01
 cee:	9d 01       	movw	r18, r26
 cf0:	2f 5f       	subi	r18, 0xFF	; 255
 cf2:	3f 4f       	sbci	r19, 0xFF	; 255
 cf4:	31 83       	std	Z+1, r19	; 0x01
 cf6:	20 83       	st	Z, r18
 cf8:	8c 93       	st	X, r24
 cfa:	26 81       	ldd	r18, Z+6	; 0x06
 cfc:	37 81       	ldd	r19, Z+7	; 0x07
 cfe:	2f 5f       	subi	r18, 0xFF	; 255
 d00:	3f 4f       	sbci	r19, 0xFF	; 255
 d02:	37 83       	std	Z+7, r19	; 0x07
 d04:	26 83       	std	Z+6, r18	; 0x06
 d06:	14 c0       	rjmp	.+40     	; 0xd30 <fputc+0x6e>
 d08:	8b 01       	movw	r16, r22
 d0a:	ec 01       	movw	r28, r24
 d0c:	fb 01       	movw	r30, r22
 d0e:	00 84       	ldd	r0, Z+8	; 0x08
 d10:	f1 85       	ldd	r31, Z+9	; 0x09
 d12:	e0 2d       	mov	r30, r0
 d14:	19 95       	eicall
 d16:	89 2b       	or	r24, r25
 d18:	e1 f6       	brne	.-72     	; 0xcd2 <fputc+0x10>
 d1a:	d8 01       	movw	r26, r16
 d1c:	16 96       	adiw	r26, 0x06	; 6
 d1e:	8d 91       	ld	r24, X+
 d20:	9c 91       	ld	r25, X
 d22:	17 97       	sbiw	r26, 0x07	; 7
 d24:	01 96       	adiw	r24, 0x01	; 1
 d26:	17 96       	adiw	r26, 0x07	; 7
 d28:	9c 93       	st	X, r25
 d2a:	8e 93       	st	-X, r24
 d2c:	16 97       	sbiw	r26, 0x06	; 6
 d2e:	ce 01       	movw	r24, r28
 d30:	df 91       	pop	r29
 d32:	cf 91       	pop	r28
 d34:	1f 91       	pop	r17
 d36:	0f 91       	pop	r16
 d38:	08 95       	ret

00000d3a <__ultoa_invert>:
 d3a:	fa 01       	movw	r30, r20
 d3c:	aa 27       	eor	r26, r26
 d3e:	28 30       	cpi	r18, 0x08	; 8
 d40:	51 f1       	breq	.+84     	; 0xd96 <__ultoa_invert+0x5c>
 d42:	20 31       	cpi	r18, 0x10	; 16
 d44:	81 f1       	breq	.+96     	; 0xda6 <__ultoa_invert+0x6c>
 d46:	e8 94       	clt
 d48:	6f 93       	push	r22
 d4a:	6e 7f       	andi	r22, 0xFE	; 254
 d4c:	6e 5f       	subi	r22, 0xFE	; 254
 d4e:	7f 4f       	sbci	r23, 0xFF	; 255
 d50:	8f 4f       	sbci	r24, 0xFF	; 255
 d52:	9f 4f       	sbci	r25, 0xFF	; 255
 d54:	af 4f       	sbci	r26, 0xFF	; 255
 d56:	b1 e0       	ldi	r27, 0x01	; 1
 d58:	3e d0       	rcall	.+124    	; 0xdd6 <__ultoa_invert+0x9c>
 d5a:	b4 e0       	ldi	r27, 0x04	; 4
 d5c:	3c d0       	rcall	.+120    	; 0xdd6 <__ultoa_invert+0x9c>
 d5e:	67 0f       	add	r22, r23
 d60:	78 1f       	adc	r23, r24
 d62:	89 1f       	adc	r24, r25
 d64:	9a 1f       	adc	r25, r26
 d66:	a1 1d       	adc	r26, r1
 d68:	68 0f       	add	r22, r24
 d6a:	79 1f       	adc	r23, r25
 d6c:	8a 1f       	adc	r24, r26
 d6e:	91 1d       	adc	r25, r1
 d70:	a1 1d       	adc	r26, r1
 d72:	6a 0f       	add	r22, r26
 d74:	71 1d       	adc	r23, r1
 d76:	81 1d       	adc	r24, r1
 d78:	91 1d       	adc	r25, r1
 d7a:	a1 1d       	adc	r26, r1
 d7c:	20 d0       	rcall	.+64     	; 0xdbe <__ultoa_invert+0x84>
 d7e:	09 f4       	brne	.+2      	; 0xd82 <__ultoa_invert+0x48>
 d80:	68 94       	set
 d82:	3f 91       	pop	r19
 d84:	2a e0       	ldi	r18, 0x0A	; 10
 d86:	26 9f       	mul	r18, r22
 d88:	11 24       	eor	r1, r1
 d8a:	30 19       	sub	r19, r0
 d8c:	30 5d       	subi	r19, 0xD0	; 208
 d8e:	31 93       	st	Z+, r19
 d90:	de f6       	brtc	.-74     	; 0xd48 <__ultoa_invert+0xe>
 d92:	cf 01       	movw	r24, r30
 d94:	08 95       	ret
 d96:	46 2f       	mov	r20, r22
 d98:	47 70       	andi	r20, 0x07	; 7
 d9a:	40 5d       	subi	r20, 0xD0	; 208
 d9c:	41 93       	st	Z+, r20
 d9e:	b3 e0       	ldi	r27, 0x03	; 3
 da0:	0f d0       	rcall	.+30     	; 0xdc0 <__ultoa_invert+0x86>
 da2:	c9 f7       	brne	.-14     	; 0xd96 <__ultoa_invert+0x5c>
 da4:	f6 cf       	rjmp	.-20     	; 0xd92 <__ultoa_invert+0x58>
 da6:	46 2f       	mov	r20, r22
 da8:	4f 70       	andi	r20, 0x0F	; 15
 daa:	40 5d       	subi	r20, 0xD0	; 208
 dac:	4a 33       	cpi	r20, 0x3A	; 58
 dae:	18 f0       	brcs	.+6      	; 0xdb6 <__ultoa_invert+0x7c>
 db0:	49 5d       	subi	r20, 0xD9	; 217
 db2:	31 fd       	sbrc	r19, 1
 db4:	40 52       	subi	r20, 0x20	; 32
 db6:	41 93       	st	Z+, r20
 db8:	02 d0       	rcall	.+4      	; 0xdbe <__ultoa_invert+0x84>
 dba:	a9 f7       	brne	.-22     	; 0xda6 <__ultoa_invert+0x6c>
 dbc:	ea cf       	rjmp	.-44     	; 0xd92 <__ultoa_invert+0x58>
 dbe:	b4 e0       	ldi	r27, 0x04	; 4
 dc0:	a6 95       	lsr	r26
 dc2:	97 95       	ror	r25
 dc4:	87 95       	ror	r24
 dc6:	77 95       	ror	r23
 dc8:	67 95       	ror	r22
 dca:	ba 95       	dec	r27
 dcc:	c9 f7       	brne	.-14     	; 0xdc0 <__ultoa_invert+0x86>
 dce:	00 97       	sbiw	r24, 0x00	; 0
 dd0:	61 05       	cpc	r22, r1
 dd2:	71 05       	cpc	r23, r1
 dd4:	08 95       	ret
 dd6:	9b 01       	movw	r18, r22
 dd8:	ac 01       	movw	r20, r24
 dda:	0a 2e       	mov	r0, r26
 ddc:	06 94       	lsr	r0
 dde:	57 95       	ror	r21
 de0:	47 95       	ror	r20
 de2:	37 95       	ror	r19
 de4:	27 95       	ror	r18
 de6:	ba 95       	dec	r27
 de8:	c9 f7       	brne	.-14     	; 0xddc <__ultoa_invert+0xa2>
 dea:	62 0f       	add	r22, r18
 dec:	73 1f       	adc	r23, r19
 dee:	84 1f       	adc	r24, r20
 df0:	95 1f       	adc	r25, r21
 df2:	a0 1d       	adc	r26, r0
 df4:	08 95       	ret

00000df6 <_exit>:
 df6:	f8 94       	cli

00000df8 <__stop_program>:
 df8:	ff cf       	rjmp	.-2      	; 0xdf8 <__stop_program>
