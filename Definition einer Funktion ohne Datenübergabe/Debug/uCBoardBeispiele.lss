
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000d70  00000e04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d70  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000e78  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e78  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ed4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00000f14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240d  00000000  00000000  00001104  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f8c  00000000  00000000  00003511  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000137b  00000000  00000000  0000449d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  00005818  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ce0  00000000  00000000  00005ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000019c2  00000000  00000000  00006b80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  00008542  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4a c3       	rjmp	.+1684   	; 0x6f2 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e7       	ldi	r30, 0x70	; 112
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	06 d0       	rcall	.+12     	; 0x12c <main>
 120:	25 c6       	rjmp	.+3146   	; 0xd6c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <alleLedsAusschslten>:
//uC-Board-Treiber hinzuf체gen
#include "ucBoardDriver.h"

//Funktionen
void alleLedsAusschslten(void){
    ledWriteAll(0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	05 c0       	rjmp	.+10     	; 0x134 <ledWriteAll>
 12a:	08 95       	ret

0000012c <main>:
int main(void)
{
    //Variablen
    
    //Initialisieren
    initBoard(0);
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	5e d1       	rcall	.+700    	; 0x3ec <initBoard>
    alleLedsAusschslten();
 130:	f9 df       	rcall	.-14     	; 0x124 <alleLedsAusschslten>
 132:	ff cf       	rjmp	.-2      	; 0x132 <main+0x6>

00000134 <ledWriteAll>:
 134:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position f체r das n채chste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das n채chste Zeichen richten
    }
}
 136:	95 b9       	out	0x05, r25	; 5
 138:	08 95       	ret

0000013a <startSystemTimeMs>:
 13a:	83 e0       	ldi	r24, 0x03	; 3
 13c:	84 bd       	out	0x24, r24	; 36
 13e:	8b e0       	ldi	r24, 0x0B	; 11
 140:	85 bd       	out	0x25, r24	; 37
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 148:	89 ef       	ldi	r24, 0xF9	; 249
 14a:	87 bd       	out	0x27, r24	; 39
 14c:	08 95       	ret

0000014e <initAdc>:
 14e:	11 ba       	out	0x11, r1	; 17
 150:	10 ba       	out	0x10, r1	; 16
 152:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 156:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 15a:	80 e4       	ldi	r24, 0x40	; 64
 15c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 160:	8f e0       	ldi	r24, 0x0F	; 15
 162:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 166:	8f ef       	ldi	r24, 0xFF	; 255
 168:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 16c:	ea e7       	ldi	r30, 0x7A	; 122
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	87 ea       	ldi	r24, 0xA7	; 167
 172:	80 83       	st	Z, r24
 174:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 178:	80 81       	ld	r24, Z
 17a:	80 64       	ori	r24, 0x40	; 64
 17c:	80 83       	st	Z, r24
 17e:	80 81       	ld	r24, Z
 180:	84 ff       	sbrs	r24, 4
 182:	fd cf       	rjmp	.-6      	; 0x17e <initAdc+0x30>
 184:	ea e7       	ldi	r30, 0x7A	; 122
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	8f 7e       	andi	r24, 0xEF	; 239
 18c:	80 83       	st	Z, r24
 18e:	08 95       	ret

00000190 <rgbWrite>:
 190:	2f ef       	ldi	r18, 0xFF	; 255
 192:	33 e0       	ldi	r19, 0x03	; 3
 194:	f9 01       	movw	r30, r18
 196:	e8 1b       	sub	r30, r24
 198:	f9 0b       	sbc	r31, r25
 19a:	c9 01       	movw	r24, r18
 19c:	86 1b       	sub	r24, r22
 19e:	97 0b       	sbc	r25, r23
 1a0:	24 1b       	sub	r18, r20
 1a2:	35 0b       	sbc	r19, r21
 1a4:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 1a8:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 1ac:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 1b0:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 1b4:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 1b8:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 1bc:	08 95       	ret

000001be <initRgb>:
 1be:	8e ef       	ldi	r24, 0xFE	; 254
 1c0:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 1c4:	8b e1       	ldi	r24, 0x1B	; 27
 1c6:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 1ca:	83 e0       	ldi	r24, 0x03	; 3
 1cc:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 1d0:	8f ef       	ldi	r24, 0xFF	; 255
 1d2:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 1d6:	40 e0       	ldi	r20, 0x00	; 0
 1d8:	50 e0       	ldi	r21, 0x00	; 0
 1da:	60 e0       	ldi	r22, 0x00	; 0
 1dc:	70 e0       	ldi	r23, 0x00	; 0
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	d6 cf       	rjmp	.-84     	; 0x190 <rgbWrite>
 1e4:	08 95       	ret

000001e6 <lcdSid>:
 1e6:	88 23       	and	r24, r24
 1e8:	11 f0       	breq	.+4      	; 0x1ee <lcdSid+0x8>
 1ea:	a0 9a       	sbi	0x14, 0	; 20
 1ec:	08 95       	ret
 1ee:	a0 98       	cbi	0x14, 0	; 20
 1f0:	08 95       	ret

000001f2 <lcdSclk>:
 1f2:	88 23       	and	r24, r24
 1f4:	11 f0       	breq	.+4      	; 0x1fa <lcdSclk+0x8>
 1f6:	a1 9a       	sbi	0x14, 1	; 20
 1f8:	08 95       	ret
 1fa:	a1 98       	cbi	0x14, 1	; 20
 1fc:	08 95       	ret

000001fe <lcdLight>:
 1fe:	81 11       	cpse	r24, r1
 200:	04 c0       	rjmp	.+8      	; 0x20a <lcdLight+0xc>
 202:	84 b5       	in	r24, 0x24	; 36
 204:	8f 7d       	andi	r24, 0xDF	; 223
 206:	84 bd       	out	0x24, r24	; 36
 208:	08 95       	ret
 20a:	94 b5       	in	r25, 0x24	; 36
 20c:	90 62       	ori	r25, 0x20	; 32
 20e:	94 bd       	out	0x24, r25	; 36
 210:	88 bd       	out	0x28, r24	; 40
 212:	08 95       	ret

00000214 <writeLcdF>:
 214:	ef 92       	push	r14
 216:	ff 92       	push	r15
 218:	0f 93       	push	r16
 21a:	1f 93       	push	r17
 21c:	cf 93       	push	r28
 21e:	df 93       	push	r29
 220:	7c 01       	movw	r14, r24
 222:	eb 01       	movw	r28, r22
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	df df       	rcall	.-66     	; 0x1e6 <lcdSid>
 228:	05 e0       	ldi	r16, 0x05	; 5
 22a:	10 e0       	ldi	r17, 0x00	; 0
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	e1 df       	rcall	.-62     	; 0x1f2 <lcdSclk>
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	df df       	rcall	.-66     	; 0x1f2 <lcdSclk>
 234:	01 50       	subi	r16, 0x01	; 1
 236:	11 09       	sbc	r17, r1
 238:	c9 f7       	brne	.-14     	; 0x22c <writeLcdF+0x18>
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	d4 df       	rcall	.-88     	; 0x1e6 <lcdSid>
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	d8 df       	rcall	.-80     	; 0x1f2 <lcdSclk>
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	d6 df       	rcall	.-84     	; 0x1f2 <lcdSclk>
 246:	83 e4       	ldi	r24, 0x43	; 67
 248:	e8 16       	cp	r14, r24
 24a:	f1 04       	cpc	r15, r1
 24c:	19 f4       	brne	.+6      	; 0x254 <writeLcdF+0x40>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	ca df       	rcall	.-108    	; 0x1e6 <lcdSid>
 252:	02 c0       	rjmp	.+4      	; 0x258 <writeLcdF+0x44>
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	c7 df       	rcall	.-114    	; 0x1e6 <lcdSid>
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	cb df       	rcall	.-106    	; 0x1f2 <lcdSclk>
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	c9 df       	rcall	.-110    	; 0x1f2 <lcdSclk>
 260:	80 e0       	ldi	r24, 0x00	; 0
 262:	c1 df       	rcall	.-126    	; 0x1e6 <lcdSid>
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	c5 df       	rcall	.-118    	; 0x1f2 <lcdSclk>
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	c3 df       	rcall	.-122    	; 0x1f2 <lcdSclk>
 26c:	04 e0       	ldi	r16, 0x04	; 4
 26e:	10 e0       	ldi	r17, 0x00	; 0
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	bf df       	rcall	.-130    	; 0x1f2 <lcdSclk>
 274:	c0 ff       	sbrs	r28, 0
 276:	03 c0       	rjmp	.+6      	; 0x27e <writeLcdF+0x6a>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	b5 df       	rcall	.-150    	; 0x1e6 <lcdSid>
 27c:	02 c0       	rjmp	.+4      	; 0x282 <writeLcdF+0x6e>
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	b2 df       	rcall	.-156    	; 0x1e6 <lcdSid>
 282:	d6 95       	lsr	r29
 284:	c7 95       	ror	r28
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	b4 df       	rcall	.-152    	; 0x1f2 <lcdSclk>
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	b2 df       	rcall	.-156    	; 0x1f2 <lcdSclk>
 28e:	01 50       	subi	r16, 0x01	; 1
 290:	11 09       	sbc	r17, r1
 292:	71 f7       	brne	.-36     	; 0x270 <writeLcdF+0x5c>
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	a7 df       	rcall	.-178    	; 0x1e6 <lcdSid>
 298:	04 e0       	ldi	r16, 0x04	; 4
 29a:	10 e0       	ldi	r17, 0x00	; 0
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	a9 df       	rcall	.-174    	; 0x1f2 <lcdSclk>
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	a7 df       	rcall	.-178    	; 0x1f2 <lcdSclk>
 2a4:	01 50       	subi	r16, 0x01	; 1
 2a6:	11 09       	sbc	r17, r1
 2a8:	c9 f7       	brne	.-14     	; 0x29c <writeLcdF+0x88>
 2aa:	04 e0       	ldi	r16, 0x04	; 4
 2ac:	10 e0       	ldi	r17, 0x00	; 0
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	a0 df       	rcall	.-192    	; 0x1f2 <lcdSclk>
 2b2:	c0 ff       	sbrs	r28, 0
 2b4:	03 c0       	rjmp	.+6      	; 0x2bc <writeLcdF+0xa8>
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	96 df       	rcall	.-212    	; 0x1e6 <lcdSid>
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <writeLcdF+0xac>
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	93 df       	rcall	.-218    	; 0x1e6 <lcdSid>
 2c0:	d6 95       	lsr	r29
 2c2:	c7 95       	ror	r28
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	95 df       	rcall	.-214    	; 0x1f2 <lcdSclk>
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	93 df       	rcall	.-218    	; 0x1f2 <lcdSclk>
 2cc:	01 50       	subi	r16, 0x01	; 1
 2ce:	11 09       	sbc	r17, r1
 2d0:	71 f7       	brne	.-36     	; 0x2ae <writeLcdF+0x9a>
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	88 df       	rcall	.-240    	; 0x1e6 <lcdSid>
 2d6:	c4 e0       	ldi	r28, 0x04	; 4
 2d8:	d0 e0       	ldi	r29, 0x00	; 0
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	8a df       	rcall	.-236    	; 0x1f2 <lcdSclk>
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	88 df       	rcall	.-240    	; 0x1f2 <lcdSclk>
 2e2:	21 97       	sbiw	r28, 0x01	; 1
 2e4:	d1 f7       	brne	.-12     	; 0x2da <writeLcdF+0xc6>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	7e df       	rcall	.-260    	; 0x1e6 <lcdSid>
 2ea:	87 ec       	ldi	r24, 0xC7	; 199
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	01 97       	sbiw	r24, 0x01	; 1
 2f0:	f1 f7       	brne	.-4      	; 0x2ee <writeLcdF+0xda>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <writeLcdF+0xe0>
 2f4:	00 00       	nop
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	1f 91       	pop	r17
 2fc:	0f 91       	pop	r16
 2fe:	ff 90       	pop	r15
 300:	ef 90       	pop	r14
 302:	08 95       	ret

00000304 <lcdWriteText>:
 304:	1f 93       	push	r17
 306:	cf 93       	push	r28
 308:	df 93       	push	r29
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	65 97       	sbiw	r28, 0x15	; 21
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
 31a:	9e 01       	movw	r18, r28
 31c:	20 5e       	subi	r18, 0xE0	; 224
 31e:	3f 4f       	sbci	r19, 0xFF	; 255
 320:	4e 8d       	ldd	r20, Y+30	; 0x1e
 322:	5f 8d       	ldd	r21, Y+31	; 0x1f
 324:	65 e1       	ldi	r22, 0x15	; 21
 326:	70 e0       	ldi	r23, 0x00	; 0
 328:	ce 01       	movw	r24, r28
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	3a d2       	rcall	.+1140   	; 0x7a2 <vsnprintf>
 32e:	6d 8d       	ldd	r22, Y+29	; 0x1d
 330:	8c 8d       	ldd	r24, Y+28	; 0x1c
 332:	90 e2       	ldi	r25, 0x20	; 32
 334:	89 9f       	mul	r24, r25
 336:	60 0d       	add	r22, r0
 338:	11 24       	eor	r1, r1
 33a:	60 68       	ori	r22, 0x80	; 128
 33c:	70 e0       	ldi	r23, 0x00	; 0
 33e:	83 e4       	ldi	r24, 0x43	; 67
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	68 df       	rcall	.-304    	; 0x214 <writeLcdF>
 344:	69 81       	ldd	r22, Y+1	; 0x01
 346:	66 23       	and	r22, r22
 348:	79 f0       	breq	.+30     	; 0x368 <lcdWriteText+0x64>
 34a:	10 e0       	ldi	r17, 0x00	; 0
 34c:	1f 5f       	subi	r17, 0xFF	; 255
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	84 e4       	ldi	r24, 0x44	; 68
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	5f df       	rcall	.-322    	; 0x214 <writeLcdF>
 356:	e1 e0       	ldi	r30, 0x01	; 1
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	ec 0f       	add	r30, r28
 35c:	fd 1f       	adc	r31, r29
 35e:	e1 0f       	add	r30, r17
 360:	f1 1d       	adc	r31, r1
 362:	60 81       	ld	r22, Z
 364:	61 11       	cpse	r22, r1
 366:	f2 cf       	rjmp	.-28     	; 0x34c <lcdWriteText+0x48>
 368:	65 96       	adiw	r28, 0x15	; 21
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	f8 94       	cli
 36e:	de bf       	out	0x3e, r29	; 62
 370:	0f be       	out	0x3f, r0	; 63
 372:	cd bf       	out	0x3d, r28	; 61
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	1f 91       	pop	r17
 37a:	08 95       	ret

0000037c <lcdClear>:
 37c:	61 e0       	ldi	r22, 0x01	; 1
 37e:	70 e0       	ldi	r23, 0x00	; 0
 380:	83 e4       	ldi	r24, 0x43	; 67
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	47 df       	rcall	.-370    	; 0x214 <writeLcdF>
 386:	8f e3       	ldi	r24, 0x3F	; 63
 388:	9f e1       	ldi	r25, 0x1F	; 31
 38a:	01 97       	sbiw	r24, 0x01	; 1
 38c:	f1 f7       	brne	.-4      	; 0x38a <lcdClear+0xe>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <lcdClear+0x14>
 390:	00 00       	nop
 392:	80 e3       	ldi	r24, 0x30	; 48
 394:	92 e0       	ldi	r25, 0x02	; 2
 396:	9f 93       	push	r25
 398:	8f 93       	push	r24
 39a:	1f 92       	push	r1
 39c:	1f 92       	push	r1
 39e:	b2 df       	rcall	.-156    	; 0x304 <lcdWriteText>
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	0f 90       	pop	r0
 3a6:	0f 90       	pop	r0
 3a8:	08 95       	ret

000003aa <initLcd>:
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	22 df       	rcall	.-444    	; 0x1f2 <lcdSclk>
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	1a df       	rcall	.-460    	; 0x1e6 <lcdSid>
 3b2:	64 e3       	ldi	r22, 0x34	; 52
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	83 e4       	ldi	r24, 0x43	; 67
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	2c df       	rcall	.-424    	; 0x214 <writeLcdF>
 3bc:	69 e0       	ldi	r22, 0x09	; 9
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	83 e4       	ldi	r24, 0x43	; 67
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	27 df       	rcall	.-434    	; 0x214 <writeLcdF>
 3c6:	60 e3       	ldi	r22, 0x30	; 48
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	83 e4       	ldi	r24, 0x43	; 67
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	22 df       	rcall	.-444    	; 0x214 <writeLcdF>
 3d0:	6c e0       	ldi	r22, 0x0C	; 12
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	83 e4       	ldi	r24, 0x43	; 67
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	1d df       	rcall	.-454    	; 0x214 <writeLcdF>
 3da:	d0 df       	rcall	.-96     	; 0x37c <lcdClear>
 3dc:	67 e0       	ldi	r22, 0x07	; 7
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	83 e4       	ldi	r24, 0x43	; 67
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	17 df       	rcall	.-466    	; 0x214 <writeLcdF>
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	0a cf       	rjmp	.-492    	; 0x1fe <lcdLight>
 3ea:	08 95       	ret

000003ec <initBoard>:
 3ec:	4f 92       	push	r4
 3ee:	5f 92       	push	r5
 3f0:	6f 92       	push	r6
 3f2:	7f 92       	push	r7
 3f4:	8f 92       	push	r8
 3f6:	9f 92       	push	r9
 3f8:	af 92       	push	r10
 3fa:	bf 92       	push	r11
 3fc:	cf 92       	push	r12
 3fe:	df 92       	push	r13
 400:	ef 92       	push	r14
 402:	ff 92       	push	r15
 404:	0f 93       	push	r16
 406:	1f 93       	push	r17
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	c8 2f       	mov	r28, r24
 40e:	85 b7       	in	r24, 0x35	; 53
 410:	85 bf       	out	0x35, r24	; 53
 412:	12 b8       	out	0x02, r1	; 2
 414:	8f ef       	ldi	r24, 0xFF	; 255
 416:	81 b9       	out	0x01, r24	; 1
 418:	15 b8       	out	0x05, r1	; 5
 41a:	84 b9       	out	0x04, r24	; 4
 41c:	88 b9       	out	0x08, r24	; 8
 41e:	17 b8       	out	0x07, r1	; 7
 420:	8b b9       	out	0x0b, r24	; 11
 422:	1a b8       	out	0x0a, r1	; 10
 424:	8e b9       	out	0x0e, r24	; 14
 426:	1d b8       	out	0x0d, r1	; 13
 428:	72 98       	cbi	0x0e, 2	; 14
 42a:	11 ba       	out	0x11, r1	; 17
 42c:	10 ba       	out	0x10, r1	; 16
 42e:	94 e0       	ldi	r25, 0x04	; 4
 430:	94 bb       	out	0x14, r25	; 20
 432:	93 b3       	in	r25, 0x13	; 19
 434:	93 60       	ori	r25, 0x03	; 3
 436:	93 bb       	out	0x13, r25	; 19
 438:	9d 9a       	sbi	0x13, 5	; 19
 43a:	97 ec       	ldi	r25, 0xC7	; 199
 43c:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 440:	98 e3       	ldi	r25, 0x38	; 56
 442:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 446:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 44a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 44e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 452:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 456:	8c e3       	ldi	r24, 0x3C	; 60
 458:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 45c:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 460:	78 94       	sei
 462:	6b de       	rcall	.-810    	; 0x13a <startSystemTimeMs>
 464:	a2 df       	rcall	.-188    	; 0x3aa <initLcd>
 466:	73 de       	rcall	.-794    	; 0x14e <initAdc>
 468:	aa de       	rcall	.-684    	; 0x1be <initRgb>
 46a:	cc 23       	and	r28, r28
 46c:	09 f4       	brne	.+2      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 46e:	b8 c0       	rjmp	.+368    	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 470:	8f ef       	ldi	r24, 0xFF	; 255
 472:	c5 de       	rcall	.-630    	; 0x1fe <lcdLight>
 474:	40 e0       	ldi	r20, 0x00	; 0
 476:	50 e0       	ldi	r21, 0x00	; 0
 478:	6f ef       	ldi	r22, 0xFF	; 255
 47a:	73 e0       	ldi	r23, 0x03	; 3
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	87 de       	rcall	.-754    	; 0x190 <rgbWrite>
 482:	8d e1       	ldi	r24, 0x1D	; 29
 484:	92 e0       	ldi	r25, 0x02	; 2
 486:	9f 93       	push	r25
 488:	8f 93       	push	r24
 48a:	1f 92       	push	r1
 48c:	1f 92       	push	r1
 48e:	3a df       	rcall	.-396    	; 0x304 <lcdWriteText>
 490:	82 e3       	ldi	r24, 0x32	; 50
 492:	92 e0       	ldi	r25, 0x02	; 2
 494:	9f 93       	push	r25
 496:	8f 93       	push	r24
 498:	1f 92       	push	r1
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	8f 93       	push	r24
 49e:	32 df       	rcall	.-412    	; 0x304 <lcdWriteText>
 4a0:	88 e0       	ldi	r24, 0x08	; 8
 4a2:	92 e0       	ldi	r25, 0x02	; 2
 4a4:	9f 93       	push	r25
 4a6:	8f 93       	push	r24
 4a8:	1f 92       	push	r1
 4aa:	82 e0       	ldi	r24, 0x02	; 2
 4ac:	8f 93       	push	r24
 4ae:	2a df       	rcall	.-428    	; 0x304 <lcdWriteText>
 4b0:	87 e4       	ldi	r24, 0x47	; 71
 4b2:	92 e0       	ldi	r25, 0x02	; 2
 4b4:	9f 93       	push	r25
 4b6:	8f 93       	push	r24
 4b8:	1f 92       	push	r1
 4ba:	83 e0       	ldi	r24, 0x03	; 3
 4bc:	8f 93       	push	r24
 4be:	22 df       	rcall	.-444    	; 0x304 <lcdWriteText>
 4c0:	8d b7       	in	r24, 0x3d	; 61
 4c2:	9e b7       	in	r25, 0x3e	; 62
 4c4:	40 96       	adiw	r24, 0x10	; 16
 4c6:	0f b6       	in	r0, 0x3f	; 63
 4c8:	f8 94       	cli
 4ca:	9e bf       	out	0x3e, r25	; 62
 4cc:	0f be       	out	0x3f, r0	; 63
 4ce:	8d bf       	out	0x3d, r24	; 61
 4d0:	88 24       	eor	r8, r8
 4d2:	83 94       	inc	r8
 4d4:	c0 e0       	ldi	r28, 0x00	; 0
 4d6:	71 2c       	mov	r7, r1
 4d8:	99 24       	eor	r9, r9
 4da:	93 94       	inc	r9
 4dc:	d0 e0       	ldi	r29, 0x00	; 0
 4de:	cc 24       	eor	r12, r12
 4e0:	c3 94       	inc	r12
 4e2:	d1 2c       	mov	r13, r1
 4e4:	e1 2c       	mov	r14, r1
 4e6:	68 94       	set
 4e8:	ff 24       	eor	r15, r15
 4ea:	f7 f8       	bld	r15, 7
 4ec:	66 24       	eor	r6, r6
 4ee:	63 94       	inc	r6
 4f0:	51 2c       	mov	r5, r1
 4f2:	09 e0       	ldi	r16, 0x09	; 9
 4f4:	11 e0       	ldi	r17, 0x01	; 1
 4f6:	0f 2e       	mov	r0, r31
 4f8:	fc e5       	ldi	r31, 0x5C	; 92
 4fa:	af 2e       	mov	r10, r31
 4fc:	f2 e0       	ldi	r31, 0x02	; 2
 4fe:	bf 2e       	mov	r11, r31
 500:	f0 2d       	mov	r31, r0
 502:	0f 2e       	mov	r0, r31
 504:	f3 e0       	ldi	r31, 0x03	; 3
 506:	4f 2e       	mov	r4, r31
 508:	f0 2d       	mov	r31, r0
 50a:	99 20       	and	r9, r9
 50c:	49 f0       	breq	.+18     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 50e:	c7 01       	movw	r24, r14
 510:	0d 2e       	mov	r0, r29
 512:	02 c0       	rjmp	.+4      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 514:	96 95       	lsr	r25
 516:	87 95       	ror	r24
 518:	0a 94       	dec	r0
 51a:	e2 f7       	brpl	.-8      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 51c:	0b de       	rcall	.-1002   	; 0x134 <ledWriteAll>
 51e:	08 c0       	rjmp	.+16     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 520:	c6 01       	movw	r24, r12
 522:	0d 2e       	mov	r0, r29
 524:	02 c0       	rjmp	.+4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 526:	88 0f       	add	r24, r24
 528:	99 1f       	adc	r25, r25
 52a:	0a 94       	dec	r0
 52c:	e2 f7       	brpl	.-8      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 52e:	02 de       	rcall	.-1020   	; 0x134 <ledWriteAll>
 530:	df 5f       	subi	r29, 0xFF	; 255
 532:	d1 31       	cpi	r29, 0x11	; 17
 534:	28 f0       	brcs	.+10     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 536:	86 2d       	mov	r24, r6
 538:	91 10       	cpse	r9, r1
 53a:	85 2d       	mov	r24, r5
 53c:	98 2e       	mov	r9, r24
 53e:	d0 e0       	ldi	r29, 0x00	; 0
 540:	88 20       	and	r8, r8
 542:	11 f0       	breq	.+4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 544:	ce 5f       	subi	r28, 0xFE	; 254
 546:	01 c0       	rjmp	.+2      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 548:	c2 50       	subi	r28, 0x02	; 2
 54a:	8c 2f       	mov	r24, r28
 54c:	58 de       	rcall	.-848    	; 0x1fe <lcdLight>
 54e:	ce 3f       	cpi	r28, 0xFE	; 254
 550:	21 f0       	breq	.+8      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 552:	c8 37       	cpi	r28, 0x78	; 120
 554:	19 f4       	brne	.+6      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 556:	86 2c       	mov	r8, r6
 558:	01 c0       	rjmp	.+2      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 55a:	85 2c       	mov	r8, r5
 55c:	71 10       	cpse	r7, r1
 55e:	3b c0       	rjmp	.+118    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 560:	f8 01       	movw	r30, r16
 562:	80 81       	ld	r24, Z
 564:	83 7c       	andi	r24, 0xC3	; 195
 566:	91 f0       	breq	.+36     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 568:	40 e0       	ldi	r20, 0x00	; 0
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	66 e2       	ldi	r22, 0x26	; 38
 56e:	72 e0       	ldi	r23, 0x02	; 2
 570:	8f ef       	ldi	r24, 0xFF	; 255
 572:	93 e0       	ldi	r25, 0x03	; 3
 574:	0d de       	rcall	.-998    	; 0x190 <rgbWrite>
 576:	bf 92       	push	r11
 578:	af 92       	push	r10
 57a:	1f 92       	push	r1
 57c:	4f 92       	push	r4
 57e:	c2 de       	rcall	.-636    	; 0x304 <lcdWriteText>
 580:	0f 90       	pop	r0
 582:	0f 90       	pop	r0
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	76 2c       	mov	r7, r6
 58a:	25 c0       	rjmp	.+74     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 58c:	8f ef       	ldi	r24, 0xFF	; 255
 58e:	9c e7       	ldi	r25, 0x7C	; 124
 590:	01 97       	sbiw	r24, 0x01	; 1
 592:	f1 f7       	brne	.-4      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 594:	00 c0       	rjmp	.+0      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 596:	00 00       	nop
 598:	b8 cf       	rjmp	.-144    	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 59a:	f0 de       	rcall	.-544    	; 0x37c <lcdClear>
 59c:	80 e0       	ldi	r24, 0x00	; 0
 59e:	2f de       	rcall	.-930    	; 0x1fe <lcdLight>
 5a0:	80 e0       	ldi	r24, 0x00	; 0
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	c7 dd       	rcall	.-1138   	; 0x134 <ledWriteAll>
 5a6:	40 e0       	ldi	r20, 0x00	; 0
 5a8:	50 e0       	ldi	r21, 0x00	; 0
 5aa:	60 e0       	ldi	r22, 0x00	; 0
 5ac:	70 e0       	ldi	r23, 0x00	; 0
 5ae:	80 e0       	ldi	r24, 0x00	; 0
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	ee dd       	rcall	.-1060   	; 0x190 <rgbWrite>
 5b4:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 5b8:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 5bc:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 5c0:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 5c4:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 5c8:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 5cc:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 5d0:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 5d4:	05 c0       	rjmp	.+10     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d6:	f8 01       	movw	r30, r16
 5d8:	80 81       	ld	r24, Z
 5da:	83 7c       	andi	r24, 0xC3	; 195
 5dc:	b9 f6       	brne	.-82     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 5de:	dd cf       	rjmp	.-70     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 5e0:	df 91       	pop	r29
 5e2:	cf 91       	pop	r28
 5e4:	1f 91       	pop	r17
 5e6:	0f 91       	pop	r16
 5e8:	ff 90       	pop	r15
 5ea:	ef 90       	pop	r14
 5ec:	df 90       	pop	r13
 5ee:	cf 90       	pop	r12
 5f0:	bf 90       	pop	r11
 5f2:	af 90       	pop	r10
 5f4:	9f 90       	pop	r9
 5f6:	8f 90       	pop	r8
 5f8:	7f 90       	pop	r7
 5fa:	6f 90       	pop	r6
 5fc:	5f 90       	pop	r5
 5fe:	4f 90       	pop	r4
 600:	08 95       	ret

00000602 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
 606:	cd b7       	in	r28, 0x3d	; 61
 608:	de b7       	in	r29, 0x3e	; 62
 60a:	28 97       	sbiw	r28, 0x08	; 8
 60c:	0f b6       	in	r0, 0x3f	; 63
 60e:	f8 94       	cli
 610:	de bf       	out	0x3e, r29	; 62
 612:	0f be       	out	0x3f, r0	; 63
 614:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 616:	88 e0       	ldi	r24, 0x08	; 8
 618:	e0 e0       	ldi	r30, 0x00	; 0
 61a:	f2 e0       	ldi	r31, 0x02	; 2
 61c:	de 01       	movw	r26, r28
 61e:	11 96       	adiw	r26, 0x01	; 1
 620:	01 90       	ld	r0, Z+
 622:	0d 92       	st	X+, r0
 624:	8a 95       	dec	r24
 626:	e1 f7       	brne	.-8      	; 0x620 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 628:	e5 e0       	ldi	r30, 0x05	; 5
 62a:	f1 e0       	ldi	r31, 0x01	; 1
 62c:	80 81       	ld	r24, Z
 62e:	8f 7b       	andi	r24, 0xBF	; 191
 630:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 632:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2731>
 636:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2731+0x1>
 63a:	81 e0       	ldi	r24, 0x01	; 1
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	8c 0f       	add	r24, r28
 640:	9d 1f       	adc	r25, r29
 642:	e8 0f       	add	r30, r24
 644:	f9 1f       	adc	r31, r25
 646:	80 81       	ld	r24, Z
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 64e:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 652:	a2 ef       	ldi	r26, 0xF2	; 242
 654:	b2 e0       	ldi	r27, 0x02	; 2
 656:	22 e8       	ldi	r18, 0x82	; 130
 658:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 65a:	e5 e0       	ldi	r30, 0x05	; 5
 65c:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und 체berp체fen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 65e:	5e 91       	ld	r21, -X
 660:	4e 91       	ld	r20, -X
 662:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 666:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 66a:	84 23       	and	r24, r20
 66c:	95 23       	and	r25, r21
 66e:	89 2b       	or	r24, r25
 670:	21 f0       	breq	.+8      	; 0x67a <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 672:	80 81       	ld	r24, Z
 674:	80 62       	ori	r24, 0x20	; 32
 676:	80 83       	st	Z, r24
 678:	03 c0       	rjmp	.+6      	; 0x680 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 67a:	80 81       	ld	r24, Z
 67c:	8f 7d       	andi	r24, 0xDF	; 223
 67e:	80 83       	st	Z, r24
        }
        CLOCK_1;
 680:	80 81       	ld	r24, Z
 682:	80 61       	ori	r24, 0x10	; 16
 684:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals 체bernommen
 686:	80 81       	ld	r24, Z
 688:	8f 7e       	andi	r24, 0xEF	; 239
 68a:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und 체berp체fen, ob Bit gesetzt ist
 68c:	a2 17       	cp	r26, r18
 68e:	b3 07       	cpc	r27, r19
 690:	31 f7       	brne	.-52     	; 0x65e <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals 체bernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 692:	e5 e0       	ldi	r30, 0x05	; 5
 694:	f1 e0       	ldi	r31, 0x01	; 1
 696:	80 81       	ld	r24, Z
 698:	87 7f       	andi	r24, 0xF7	; 247
 69a:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 69c:	80 81       	ld	r24, Z
 69e:	88 7f       	andi	r24, 0xF8	; 248
 6a0:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gew체nschte Zeile einstellen
 6a2:	90 81       	ld	r25, Z
 6a4:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2731>
 6a8:	89 2b       	or	r24, r25
 6aa:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 6ac:	80 81       	ld	r24, Z
 6ae:	80 64       	ori	r24, 0x40	; 64
 6b0:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 6b2:	80 81       	ld	r24, Z
 6b4:	88 60       	ori	r24, 0x08	; 8
 6b6:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 6b8:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2731>
 6bc:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2731+0x1>
 6c0:	87 30       	cpi	r24, 0x07	; 7
 6c2:	91 05       	cpc	r25, r1
 6c4:	30 f4       	brcc	.+12     	; 0x6d2 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 6c6:	01 96       	adiw	r24, 0x01	; 1
 6c8:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2731+0x1>
 6cc:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2731>
 6d0:	07 c0       	rjmp	.+14     	; 0x6e0 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 6d2:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2731+0x1>
 6d6:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2731>
        writeTextFinished = 1;
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 6e0:	28 96       	adiw	r28, 0x08	; 8
 6e2:	0f b6       	in	r0, 0x3f	; 63
 6e4:	f8 94       	cli
 6e6:	de bf       	out	0x3e, r29	; 62
 6e8:	0f be       	out	0x3f, r0	; 63
 6ea:	cd bf       	out	0x3d, r28	; 61
 6ec:	df 91       	pop	r29
 6ee:	cf 91       	pop	r28
 6f0:	08 95       	ret

000006f2 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 6f2:	1f 92       	push	r1
 6f4:	0f 92       	push	r0
 6f6:	0f b6       	in	r0, 0x3f	; 63
 6f8:	0f 92       	push	r0
 6fa:	11 24       	eor	r1, r1
 6fc:	0b b6       	in	r0, 0x3b	; 59
 6fe:	0f 92       	push	r0
 700:	2f 93       	push	r18
 702:	3f 93       	push	r19
 704:	4f 93       	push	r20
 706:	5f 93       	push	r21
 708:	6f 93       	push	r22
 70a:	7f 93       	push	r23
 70c:	8f 93       	push	r24
 70e:	9f 93       	push	r25
 710:	af 93       	push	r26
 712:	bf 93       	push	r27
 714:	ef 93       	push	r30
 716:	ff 93       	push	r31
    systemTimeMs += 1;
 718:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 71c:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 720:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 724:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 728:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 72c:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 730:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 734:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 738:	a1 e0       	ldi	r26, 0x01	; 1
 73a:	27 d0       	rcall	.+78     	; 0x78a <__adddi3_s8>
 73c:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 740:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 744:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 748:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 74c:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 750:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 754:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 758:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 75c:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 760:	81 11       	cpse	r24, r1
 762:	4f df       	rcall	.-354    	; 0x602 <matrixWriteNextLine>
}
 764:	ff 91       	pop	r31
 766:	ef 91       	pop	r30
 768:	bf 91       	pop	r27
 76a:	af 91       	pop	r26
 76c:	9f 91       	pop	r25
 76e:	8f 91       	pop	r24
 770:	7f 91       	pop	r23
 772:	6f 91       	pop	r22
 774:	5f 91       	pop	r21
 776:	4f 91       	pop	r20
 778:	3f 91       	pop	r19
 77a:	2f 91       	pop	r18
 77c:	0f 90       	pop	r0
 77e:	0b be       	out	0x3b, r0	; 59
 780:	0f 90       	pop	r0
 782:	0f be       	out	0x3f, r0	; 63
 784:	0f 90       	pop	r0
 786:	1f 90       	pop	r1
 788:	18 95       	reti

0000078a <__adddi3_s8>:
 78a:	00 24       	eor	r0, r0
 78c:	a7 fd       	sbrc	r26, 7
 78e:	00 94       	com	r0
 790:	2a 0f       	add	r18, r26
 792:	30 1d       	adc	r19, r0
 794:	40 1d       	adc	r20, r0
 796:	50 1d       	adc	r21, r0
 798:	60 1d       	adc	r22, r0
 79a:	70 1d       	adc	r23, r0
 79c:	80 1d       	adc	r24, r0
 79e:	90 1d       	adc	r25, r0
 7a0:	08 95       	ret

000007a2 <vsnprintf>:
 7a2:	0f 93       	push	r16
 7a4:	1f 93       	push	r17
 7a6:	cf 93       	push	r28
 7a8:	df 93       	push	r29
 7aa:	cd b7       	in	r28, 0x3d	; 61
 7ac:	de b7       	in	r29, 0x3e	; 62
 7ae:	2e 97       	sbiw	r28, 0x0e	; 14
 7b0:	0f b6       	in	r0, 0x3f	; 63
 7b2:	f8 94       	cli
 7b4:	de bf       	out	0x3e, r29	; 62
 7b6:	0f be       	out	0x3f, r0	; 63
 7b8:	cd bf       	out	0x3d, r28	; 61
 7ba:	8c 01       	movw	r16, r24
 7bc:	fa 01       	movw	r30, r20
 7be:	86 e0       	ldi	r24, 0x06	; 6
 7c0:	8c 83       	std	Y+4, r24	; 0x04
 7c2:	1a 83       	std	Y+2, r17	; 0x02
 7c4:	09 83       	std	Y+1, r16	; 0x01
 7c6:	77 ff       	sbrs	r23, 7
 7c8:	02 c0       	rjmp	.+4      	; 0x7ce <vsnprintf+0x2c>
 7ca:	60 e0       	ldi	r22, 0x00	; 0
 7cc:	70 e8       	ldi	r23, 0x80	; 128
 7ce:	cb 01       	movw	r24, r22
 7d0:	01 97       	sbiw	r24, 0x01	; 1
 7d2:	9e 83       	std	Y+6, r25	; 0x06
 7d4:	8d 83       	std	Y+5, r24	; 0x05
 7d6:	a9 01       	movw	r20, r18
 7d8:	bf 01       	movw	r22, r30
 7da:	ce 01       	movw	r24, r28
 7dc:	01 96       	adiw	r24, 0x01	; 1
 7de:	19 d0       	rcall	.+50     	; 0x812 <vfprintf>
 7e0:	4d 81       	ldd	r20, Y+5	; 0x05
 7e2:	5e 81       	ldd	r21, Y+6	; 0x06
 7e4:	57 fd       	sbrc	r21, 7
 7e6:	0a c0       	rjmp	.+20     	; 0x7fc <vsnprintf+0x5a>
 7e8:	2f 81       	ldd	r18, Y+7	; 0x07
 7ea:	38 85       	ldd	r19, Y+8	; 0x08
 7ec:	42 17       	cp	r20, r18
 7ee:	53 07       	cpc	r21, r19
 7f0:	0c f4       	brge	.+2      	; 0x7f4 <vsnprintf+0x52>
 7f2:	9a 01       	movw	r18, r20
 7f4:	f8 01       	movw	r30, r16
 7f6:	e2 0f       	add	r30, r18
 7f8:	f3 1f       	adc	r31, r19
 7fa:	10 82       	st	Z, r1
 7fc:	2e 96       	adiw	r28, 0x0e	; 14
 7fe:	0f b6       	in	r0, 0x3f	; 63
 800:	f8 94       	cli
 802:	de bf       	out	0x3e, r29	; 62
 804:	0f be       	out	0x3f, r0	; 63
 806:	cd bf       	out	0x3d, r28	; 61
 808:	df 91       	pop	r29
 80a:	cf 91       	pop	r28
 80c:	1f 91       	pop	r17
 80e:	0f 91       	pop	r16
 810:	08 95       	ret

00000812 <vfprintf>:
 812:	2f 92       	push	r2
 814:	3f 92       	push	r3
 816:	4f 92       	push	r4
 818:	5f 92       	push	r5
 81a:	6f 92       	push	r6
 81c:	7f 92       	push	r7
 81e:	8f 92       	push	r8
 820:	9f 92       	push	r9
 822:	af 92       	push	r10
 824:	bf 92       	push	r11
 826:	cf 92       	push	r12
 828:	df 92       	push	r13
 82a:	ef 92       	push	r14
 82c:	ff 92       	push	r15
 82e:	0f 93       	push	r16
 830:	1f 93       	push	r17
 832:	cf 93       	push	r28
 834:	df 93       	push	r29
 836:	cd b7       	in	r28, 0x3d	; 61
 838:	de b7       	in	r29, 0x3e	; 62
 83a:	2b 97       	sbiw	r28, 0x0b	; 11
 83c:	0f b6       	in	r0, 0x3f	; 63
 83e:	f8 94       	cli
 840:	de bf       	out	0x3e, r29	; 62
 842:	0f be       	out	0x3f, r0	; 63
 844:	cd bf       	out	0x3d, r28	; 61
 846:	6c 01       	movw	r12, r24
 848:	7b 01       	movw	r14, r22
 84a:	8a 01       	movw	r16, r20
 84c:	fc 01       	movw	r30, r24
 84e:	17 82       	std	Z+7, r1	; 0x07
 850:	16 82       	std	Z+6, r1	; 0x06
 852:	83 81       	ldd	r24, Z+3	; 0x03
 854:	81 ff       	sbrs	r24, 1
 856:	bf c1       	rjmp	.+894    	; 0xbd6 <vfprintf+0x3c4>
 858:	ce 01       	movw	r24, r28
 85a:	01 96       	adiw	r24, 0x01	; 1
 85c:	3c 01       	movw	r6, r24
 85e:	f6 01       	movw	r30, r12
 860:	93 81       	ldd	r25, Z+3	; 0x03
 862:	f7 01       	movw	r30, r14
 864:	93 fd       	sbrc	r25, 3
 866:	85 91       	lpm	r24, Z+
 868:	93 ff       	sbrs	r25, 3
 86a:	81 91       	ld	r24, Z+
 86c:	7f 01       	movw	r14, r30
 86e:	88 23       	and	r24, r24
 870:	09 f4       	brne	.+2      	; 0x874 <vfprintf+0x62>
 872:	ad c1       	rjmp	.+858    	; 0xbce <vfprintf+0x3bc>
 874:	85 32       	cpi	r24, 0x25	; 37
 876:	39 f4       	brne	.+14     	; 0x886 <vfprintf+0x74>
 878:	93 fd       	sbrc	r25, 3
 87a:	85 91       	lpm	r24, Z+
 87c:	93 ff       	sbrs	r25, 3
 87e:	81 91       	ld	r24, Z+
 880:	7f 01       	movw	r14, r30
 882:	85 32       	cpi	r24, 0x25	; 37
 884:	21 f4       	brne	.+8      	; 0x88e <vfprintf+0x7c>
 886:	b6 01       	movw	r22, r12
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	d6 d1       	rcall	.+940    	; 0xc38 <fputc>
 88c:	e8 cf       	rjmp	.-48     	; 0x85e <vfprintf+0x4c>
 88e:	91 2c       	mov	r9, r1
 890:	21 2c       	mov	r2, r1
 892:	31 2c       	mov	r3, r1
 894:	ff e1       	ldi	r31, 0x1F	; 31
 896:	f3 15       	cp	r31, r3
 898:	d8 f0       	brcs	.+54     	; 0x8d0 <vfprintf+0xbe>
 89a:	8b 32       	cpi	r24, 0x2B	; 43
 89c:	79 f0       	breq	.+30     	; 0x8bc <vfprintf+0xaa>
 89e:	38 f4       	brcc	.+14     	; 0x8ae <vfprintf+0x9c>
 8a0:	80 32       	cpi	r24, 0x20	; 32
 8a2:	79 f0       	breq	.+30     	; 0x8c2 <vfprintf+0xb0>
 8a4:	83 32       	cpi	r24, 0x23	; 35
 8a6:	a1 f4       	brne	.+40     	; 0x8d0 <vfprintf+0xbe>
 8a8:	23 2d       	mov	r18, r3
 8aa:	20 61       	ori	r18, 0x10	; 16
 8ac:	1d c0       	rjmp	.+58     	; 0x8e8 <vfprintf+0xd6>
 8ae:	8d 32       	cpi	r24, 0x2D	; 45
 8b0:	61 f0       	breq	.+24     	; 0x8ca <vfprintf+0xb8>
 8b2:	80 33       	cpi	r24, 0x30	; 48
 8b4:	69 f4       	brne	.+26     	; 0x8d0 <vfprintf+0xbe>
 8b6:	23 2d       	mov	r18, r3
 8b8:	21 60       	ori	r18, 0x01	; 1
 8ba:	16 c0       	rjmp	.+44     	; 0x8e8 <vfprintf+0xd6>
 8bc:	83 2d       	mov	r24, r3
 8be:	82 60       	ori	r24, 0x02	; 2
 8c0:	38 2e       	mov	r3, r24
 8c2:	e3 2d       	mov	r30, r3
 8c4:	e4 60       	ori	r30, 0x04	; 4
 8c6:	3e 2e       	mov	r3, r30
 8c8:	2a c0       	rjmp	.+84     	; 0x91e <vfprintf+0x10c>
 8ca:	f3 2d       	mov	r31, r3
 8cc:	f8 60       	ori	r31, 0x08	; 8
 8ce:	1d c0       	rjmp	.+58     	; 0x90a <vfprintf+0xf8>
 8d0:	37 fc       	sbrc	r3, 7
 8d2:	2d c0       	rjmp	.+90     	; 0x92e <vfprintf+0x11c>
 8d4:	20 ed       	ldi	r18, 0xD0	; 208
 8d6:	28 0f       	add	r18, r24
 8d8:	2a 30       	cpi	r18, 0x0A	; 10
 8da:	40 f0       	brcs	.+16     	; 0x8ec <vfprintf+0xda>
 8dc:	8e 32       	cpi	r24, 0x2E	; 46
 8de:	b9 f4       	brne	.+46     	; 0x90e <vfprintf+0xfc>
 8e0:	36 fc       	sbrc	r3, 6
 8e2:	75 c1       	rjmp	.+746    	; 0xbce <vfprintf+0x3bc>
 8e4:	23 2d       	mov	r18, r3
 8e6:	20 64       	ori	r18, 0x40	; 64
 8e8:	32 2e       	mov	r3, r18
 8ea:	19 c0       	rjmp	.+50     	; 0x91e <vfprintf+0x10c>
 8ec:	36 fe       	sbrs	r3, 6
 8ee:	06 c0       	rjmp	.+12     	; 0x8fc <vfprintf+0xea>
 8f0:	8a e0       	ldi	r24, 0x0A	; 10
 8f2:	98 9e       	mul	r9, r24
 8f4:	20 0d       	add	r18, r0
 8f6:	11 24       	eor	r1, r1
 8f8:	92 2e       	mov	r9, r18
 8fa:	11 c0       	rjmp	.+34     	; 0x91e <vfprintf+0x10c>
 8fc:	ea e0       	ldi	r30, 0x0A	; 10
 8fe:	2e 9e       	mul	r2, r30
 900:	20 0d       	add	r18, r0
 902:	11 24       	eor	r1, r1
 904:	22 2e       	mov	r2, r18
 906:	f3 2d       	mov	r31, r3
 908:	f0 62       	ori	r31, 0x20	; 32
 90a:	3f 2e       	mov	r3, r31
 90c:	08 c0       	rjmp	.+16     	; 0x91e <vfprintf+0x10c>
 90e:	8c 36       	cpi	r24, 0x6C	; 108
 910:	21 f4       	brne	.+8      	; 0x91a <vfprintf+0x108>
 912:	83 2d       	mov	r24, r3
 914:	80 68       	ori	r24, 0x80	; 128
 916:	38 2e       	mov	r3, r24
 918:	02 c0       	rjmp	.+4      	; 0x91e <vfprintf+0x10c>
 91a:	88 36       	cpi	r24, 0x68	; 104
 91c:	41 f4       	brne	.+16     	; 0x92e <vfprintf+0x11c>
 91e:	f7 01       	movw	r30, r14
 920:	93 fd       	sbrc	r25, 3
 922:	85 91       	lpm	r24, Z+
 924:	93 ff       	sbrs	r25, 3
 926:	81 91       	ld	r24, Z+
 928:	7f 01       	movw	r14, r30
 92a:	81 11       	cpse	r24, r1
 92c:	b3 cf       	rjmp	.-154    	; 0x894 <vfprintf+0x82>
 92e:	98 2f       	mov	r25, r24
 930:	9f 7d       	andi	r25, 0xDF	; 223
 932:	95 54       	subi	r25, 0x45	; 69
 934:	93 30       	cpi	r25, 0x03	; 3
 936:	28 f4       	brcc	.+10     	; 0x942 <vfprintf+0x130>
 938:	0c 5f       	subi	r16, 0xFC	; 252
 93a:	1f 4f       	sbci	r17, 0xFF	; 255
 93c:	9f e3       	ldi	r25, 0x3F	; 63
 93e:	99 83       	std	Y+1, r25	; 0x01
 940:	0d c0       	rjmp	.+26     	; 0x95c <vfprintf+0x14a>
 942:	83 36       	cpi	r24, 0x63	; 99
 944:	31 f0       	breq	.+12     	; 0x952 <vfprintf+0x140>
 946:	83 37       	cpi	r24, 0x73	; 115
 948:	71 f0       	breq	.+28     	; 0x966 <vfprintf+0x154>
 94a:	83 35       	cpi	r24, 0x53	; 83
 94c:	09 f0       	breq	.+2      	; 0x950 <vfprintf+0x13e>
 94e:	55 c0       	rjmp	.+170    	; 0x9fa <vfprintf+0x1e8>
 950:	20 c0       	rjmp	.+64     	; 0x992 <vfprintf+0x180>
 952:	f8 01       	movw	r30, r16
 954:	80 81       	ld	r24, Z
 956:	89 83       	std	Y+1, r24	; 0x01
 958:	0e 5f       	subi	r16, 0xFE	; 254
 95a:	1f 4f       	sbci	r17, 0xFF	; 255
 95c:	88 24       	eor	r8, r8
 95e:	83 94       	inc	r8
 960:	91 2c       	mov	r9, r1
 962:	53 01       	movw	r10, r6
 964:	12 c0       	rjmp	.+36     	; 0x98a <vfprintf+0x178>
 966:	28 01       	movw	r4, r16
 968:	f2 e0       	ldi	r31, 0x02	; 2
 96a:	4f 0e       	add	r4, r31
 96c:	51 1c       	adc	r5, r1
 96e:	f8 01       	movw	r30, r16
 970:	a0 80       	ld	r10, Z
 972:	b1 80       	ldd	r11, Z+1	; 0x01
 974:	36 fe       	sbrs	r3, 6
 976:	03 c0       	rjmp	.+6      	; 0x97e <vfprintf+0x16c>
 978:	69 2d       	mov	r22, r9
 97a:	70 e0       	ldi	r23, 0x00	; 0
 97c:	02 c0       	rjmp	.+4      	; 0x982 <vfprintf+0x170>
 97e:	6f ef       	ldi	r22, 0xFF	; 255
 980:	7f ef       	ldi	r23, 0xFF	; 255
 982:	c5 01       	movw	r24, r10
 984:	4e d1       	rcall	.+668    	; 0xc22 <strnlen>
 986:	4c 01       	movw	r8, r24
 988:	82 01       	movw	r16, r4
 98a:	f3 2d       	mov	r31, r3
 98c:	ff 77       	andi	r31, 0x7F	; 127
 98e:	3f 2e       	mov	r3, r31
 990:	15 c0       	rjmp	.+42     	; 0x9bc <vfprintf+0x1aa>
 992:	28 01       	movw	r4, r16
 994:	22 e0       	ldi	r18, 0x02	; 2
 996:	42 0e       	add	r4, r18
 998:	51 1c       	adc	r5, r1
 99a:	f8 01       	movw	r30, r16
 99c:	a0 80       	ld	r10, Z
 99e:	b1 80       	ldd	r11, Z+1	; 0x01
 9a0:	36 fe       	sbrs	r3, 6
 9a2:	03 c0       	rjmp	.+6      	; 0x9aa <vfprintf+0x198>
 9a4:	69 2d       	mov	r22, r9
 9a6:	70 e0       	ldi	r23, 0x00	; 0
 9a8:	02 c0       	rjmp	.+4      	; 0x9ae <vfprintf+0x19c>
 9aa:	6f ef       	ldi	r22, 0xFF	; 255
 9ac:	7f ef       	ldi	r23, 0xFF	; 255
 9ae:	c5 01       	movw	r24, r10
 9b0:	2d d1       	rcall	.+602    	; 0xc0c <strnlen_P>
 9b2:	4c 01       	movw	r8, r24
 9b4:	f3 2d       	mov	r31, r3
 9b6:	f0 68       	ori	r31, 0x80	; 128
 9b8:	3f 2e       	mov	r3, r31
 9ba:	82 01       	movw	r16, r4
 9bc:	33 fc       	sbrc	r3, 3
 9be:	19 c0       	rjmp	.+50     	; 0x9f2 <vfprintf+0x1e0>
 9c0:	82 2d       	mov	r24, r2
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	88 16       	cp	r8, r24
 9c6:	99 06       	cpc	r9, r25
 9c8:	a0 f4       	brcc	.+40     	; 0x9f2 <vfprintf+0x1e0>
 9ca:	b6 01       	movw	r22, r12
 9cc:	80 e2       	ldi	r24, 0x20	; 32
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	33 d1       	rcall	.+614    	; 0xc38 <fputc>
 9d2:	2a 94       	dec	r2
 9d4:	f5 cf       	rjmp	.-22     	; 0x9c0 <vfprintf+0x1ae>
 9d6:	f5 01       	movw	r30, r10
 9d8:	37 fc       	sbrc	r3, 7
 9da:	85 91       	lpm	r24, Z+
 9dc:	37 fe       	sbrs	r3, 7
 9de:	81 91       	ld	r24, Z+
 9e0:	5f 01       	movw	r10, r30
 9e2:	b6 01       	movw	r22, r12
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	28 d1       	rcall	.+592    	; 0xc38 <fputc>
 9e8:	21 10       	cpse	r2, r1
 9ea:	2a 94       	dec	r2
 9ec:	21 e0       	ldi	r18, 0x01	; 1
 9ee:	82 1a       	sub	r8, r18
 9f0:	91 08       	sbc	r9, r1
 9f2:	81 14       	cp	r8, r1
 9f4:	91 04       	cpc	r9, r1
 9f6:	79 f7       	brne	.-34     	; 0x9d6 <vfprintf+0x1c4>
 9f8:	e1 c0       	rjmp	.+450    	; 0xbbc <vfprintf+0x3aa>
 9fa:	84 36       	cpi	r24, 0x64	; 100
 9fc:	11 f0       	breq	.+4      	; 0xa02 <vfprintf+0x1f0>
 9fe:	89 36       	cpi	r24, 0x69	; 105
 a00:	39 f5       	brne	.+78     	; 0xa50 <vfprintf+0x23e>
 a02:	f8 01       	movw	r30, r16
 a04:	37 fe       	sbrs	r3, 7
 a06:	07 c0       	rjmp	.+14     	; 0xa16 <vfprintf+0x204>
 a08:	60 81       	ld	r22, Z
 a0a:	71 81       	ldd	r23, Z+1	; 0x01
 a0c:	82 81       	ldd	r24, Z+2	; 0x02
 a0e:	93 81       	ldd	r25, Z+3	; 0x03
 a10:	0c 5f       	subi	r16, 0xFC	; 252
 a12:	1f 4f       	sbci	r17, 0xFF	; 255
 a14:	08 c0       	rjmp	.+16     	; 0xa26 <vfprintf+0x214>
 a16:	60 81       	ld	r22, Z
 a18:	71 81       	ldd	r23, Z+1	; 0x01
 a1a:	07 2e       	mov	r0, r23
 a1c:	00 0c       	add	r0, r0
 a1e:	88 0b       	sbc	r24, r24
 a20:	99 0b       	sbc	r25, r25
 a22:	0e 5f       	subi	r16, 0xFE	; 254
 a24:	1f 4f       	sbci	r17, 0xFF	; 255
 a26:	f3 2d       	mov	r31, r3
 a28:	ff 76       	andi	r31, 0x6F	; 111
 a2a:	3f 2e       	mov	r3, r31
 a2c:	97 ff       	sbrs	r25, 7
 a2e:	09 c0       	rjmp	.+18     	; 0xa42 <vfprintf+0x230>
 a30:	90 95       	com	r25
 a32:	80 95       	com	r24
 a34:	70 95       	com	r23
 a36:	61 95       	neg	r22
 a38:	7f 4f       	sbci	r23, 0xFF	; 255
 a3a:	8f 4f       	sbci	r24, 0xFF	; 255
 a3c:	9f 4f       	sbci	r25, 0xFF	; 255
 a3e:	f0 68       	ori	r31, 0x80	; 128
 a40:	3f 2e       	mov	r3, r31
 a42:	2a e0       	ldi	r18, 0x0A	; 10
 a44:	30 e0       	ldi	r19, 0x00	; 0
 a46:	a3 01       	movw	r20, r6
 a48:	33 d1       	rcall	.+614    	; 0xcb0 <__ultoa_invert>
 a4a:	88 2e       	mov	r8, r24
 a4c:	86 18       	sub	r8, r6
 a4e:	44 c0       	rjmp	.+136    	; 0xad8 <vfprintf+0x2c6>
 a50:	85 37       	cpi	r24, 0x75	; 117
 a52:	31 f4       	brne	.+12     	; 0xa60 <vfprintf+0x24e>
 a54:	23 2d       	mov	r18, r3
 a56:	2f 7e       	andi	r18, 0xEF	; 239
 a58:	b2 2e       	mov	r11, r18
 a5a:	2a e0       	ldi	r18, 0x0A	; 10
 a5c:	30 e0       	ldi	r19, 0x00	; 0
 a5e:	25 c0       	rjmp	.+74     	; 0xaaa <vfprintf+0x298>
 a60:	93 2d       	mov	r25, r3
 a62:	99 7f       	andi	r25, 0xF9	; 249
 a64:	b9 2e       	mov	r11, r25
 a66:	8f 36       	cpi	r24, 0x6F	; 111
 a68:	c1 f0       	breq	.+48     	; 0xa9a <vfprintf+0x288>
 a6a:	18 f4       	brcc	.+6      	; 0xa72 <vfprintf+0x260>
 a6c:	88 35       	cpi	r24, 0x58	; 88
 a6e:	79 f0       	breq	.+30     	; 0xa8e <vfprintf+0x27c>
 a70:	ae c0       	rjmp	.+348    	; 0xbce <vfprintf+0x3bc>
 a72:	80 37       	cpi	r24, 0x70	; 112
 a74:	19 f0       	breq	.+6      	; 0xa7c <vfprintf+0x26a>
 a76:	88 37       	cpi	r24, 0x78	; 120
 a78:	21 f0       	breq	.+8      	; 0xa82 <vfprintf+0x270>
 a7a:	a9 c0       	rjmp	.+338    	; 0xbce <vfprintf+0x3bc>
 a7c:	e9 2f       	mov	r30, r25
 a7e:	e0 61       	ori	r30, 0x10	; 16
 a80:	be 2e       	mov	r11, r30
 a82:	b4 fe       	sbrs	r11, 4
 a84:	0d c0       	rjmp	.+26     	; 0xaa0 <vfprintf+0x28e>
 a86:	fb 2d       	mov	r31, r11
 a88:	f4 60       	ori	r31, 0x04	; 4
 a8a:	bf 2e       	mov	r11, r31
 a8c:	09 c0       	rjmp	.+18     	; 0xaa0 <vfprintf+0x28e>
 a8e:	34 fe       	sbrs	r3, 4
 a90:	0a c0       	rjmp	.+20     	; 0xaa6 <vfprintf+0x294>
 a92:	29 2f       	mov	r18, r25
 a94:	26 60       	ori	r18, 0x06	; 6
 a96:	b2 2e       	mov	r11, r18
 a98:	06 c0       	rjmp	.+12     	; 0xaa6 <vfprintf+0x294>
 a9a:	28 e0       	ldi	r18, 0x08	; 8
 a9c:	30 e0       	ldi	r19, 0x00	; 0
 a9e:	05 c0       	rjmp	.+10     	; 0xaaa <vfprintf+0x298>
 aa0:	20 e1       	ldi	r18, 0x10	; 16
 aa2:	30 e0       	ldi	r19, 0x00	; 0
 aa4:	02 c0       	rjmp	.+4      	; 0xaaa <vfprintf+0x298>
 aa6:	20 e1       	ldi	r18, 0x10	; 16
 aa8:	32 e0       	ldi	r19, 0x02	; 2
 aaa:	f8 01       	movw	r30, r16
 aac:	b7 fe       	sbrs	r11, 7
 aae:	07 c0       	rjmp	.+14     	; 0xabe <vfprintf+0x2ac>
 ab0:	60 81       	ld	r22, Z
 ab2:	71 81       	ldd	r23, Z+1	; 0x01
 ab4:	82 81       	ldd	r24, Z+2	; 0x02
 ab6:	93 81       	ldd	r25, Z+3	; 0x03
 ab8:	0c 5f       	subi	r16, 0xFC	; 252
 aba:	1f 4f       	sbci	r17, 0xFF	; 255
 abc:	06 c0       	rjmp	.+12     	; 0xaca <vfprintf+0x2b8>
 abe:	60 81       	ld	r22, Z
 ac0:	71 81       	ldd	r23, Z+1	; 0x01
 ac2:	80 e0       	ldi	r24, 0x00	; 0
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	0e 5f       	subi	r16, 0xFE	; 254
 ac8:	1f 4f       	sbci	r17, 0xFF	; 255
 aca:	a3 01       	movw	r20, r6
 acc:	f1 d0       	rcall	.+482    	; 0xcb0 <__ultoa_invert>
 ace:	88 2e       	mov	r8, r24
 ad0:	86 18       	sub	r8, r6
 ad2:	fb 2d       	mov	r31, r11
 ad4:	ff 77       	andi	r31, 0x7F	; 127
 ad6:	3f 2e       	mov	r3, r31
 ad8:	36 fe       	sbrs	r3, 6
 ada:	0d c0       	rjmp	.+26     	; 0xaf6 <vfprintf+0x2e4>
 adc:	23 2d       	mov	r18, r3
 ade:	2e 7f       	andi	r18, 0xFE	; 254
 ae0:	a2 2e       	mov	r10, r18
 ae2:	89 14       	cp	r8, r9
 ae4:	58 f4       	brcc	.+22     	; 0xafc <vfprintf+0x2ea>
 ae6:	34 fe       	sbrs	r3, 4
 ae8:	0b c0       	rjmp	.+22     	; 0xb00 <vfprintf+0x2ee>
 aea:	32 fc       	sbrc	r3, 2
 aec:	09 c0       	rjmp	.+18     	; 0xb00 <vfprintf+0x2ee>
 aee:	83 2d       	mov	r24, r3
 af0:	8e 7e       	andi	r24, 0xEE	; 238
 af2:	a8 2e       	mov	r10, r24
 af4:	05 c0       	rjmp	.+10     	; 0xb00 <vfprintf+0x2ee>
 af6:	b8 2c       	mov	r11, r8
 af8:	a3 2c       	mov	r10, r3
 afa:	03 c0       	rjmp	.+6      	; 0xb02 <vfprintf+0x2f0>
 afc:	b8 2c       	mov	r11, r8
 afe:	01 c0       	rjmp	.+2      	; 0xb02 <vfprintf+0x2f0>
 b00:	b9 2c       	mov	r11, r9
 b02:	a4 fe       	sbrs	r10, 4
 b04:	0f c0       	rjmp	.+30     	; 0xb24 <vfprintf+0x312>
 b06:	fe 01       	movw	r30, r28
 b08:	e8 0d       	add	r30, r8
 b0a:	f1 1d       	adc	r31, r1
 b0c:	80 81       	ld	r24, Z
 b0e:	80 33       	cpi	r24, 0x30	; 48
 b10:	21 f4       	brne	.+8      	; 0xb1a <vfprintf+0x308>
 b12:	9a 2d       	mov	r25, r10
 b14:	99 7e       	andi	r25, 0xE9	; 233
 b16:	a9 2e       	mov	r10, r25
 b18:	09 c0       	rjmp	.+18     	; 0xb2c <vfprintf+0x31a>
 b1a:	a2 fe       	sbrs	r10, 2
 b1c:	06 c0       	rjmp	.+12     	; 0xb2a <vfprintf+0x318>
 b1e:	b3 94       	inc	r11
 b20:	b3 94       	inc	r11
 b22:	04 c0       	rjmp	.+8      	; 0xb2c <vfprintf+0x31a>
 b24:	8a 2d       	mov	r24, r10
 b26:	86 78       	andi	r24, 0x86	; 134
 b28:	09 f0       	breq	.+2      	; 0xb2c <vfprintf+0x31a>
 b2a:	b3 94       	inc	r11
 b2c:	a3 fc       	sbrc	r10, 3
 b2e:	10 c0       	rjmp	.+32     	; 0xb50 <vfprintf+0x33e>
 b30:	a0 fe       	sbrs	r10, 0
 b32:	06 c0       	rjmp	.+12     	; 0xb40 <vfprintf+0x32e>
 b34:	b2 14       	cp	r11, r2
 b36:	80 f4       	brcc	.+32     	; 0xb58 <vfprintf+0x346>
 b38:	28 0c       	add	r2, r8
 b3a:	92 2c       	mov	r9, r2
 b3c:	9b 18       	sub	r9, r11
 b3e:	0d c0       	rjmp	.+26     	; 0xb5a <vfprintf+0x348>
 b40:	b2 14       	cp	r11, r2
 b42:	58 f4       	brcc	.+22     	; 0xb5a <vfprintf+0x348>
 b44:	b6 01       	movw	r22, r12
 b46:	80 e2       	ldi	r24, 0x20	; 32
 b48:	90 e0       	ldi	r25, 0x00	; 0
 b4a:	76 d0       	rcall	.+236    	; 0xc38 <fputc>
 b4c:	b3 94       	inc	r11
 b4e:	f8 cf       	rjmp	.-16     	; 0xb40 <vfprintf+0x32e>
 b50:	b2 14       	cp	r11, r2
 b52:	18 f4       	brcc	.+6      	; 0xb5a <vfprintf+0x348>
 b54:	2b 18       	sub	r2, r11
 b56:	02 c0       	rjmp	.+4      	; 0xb5c <vfprintf+0x34a>
 b58:	98 2c       	mov	r9, r8
 b5a:	21 2c       	mov	r2, r1
 b5c:	a4 fe       	sbrs	r10, 4
 b5e:	0f c0       	rjmp	.+30     	; 0xb7e <vfprintf+0x36c>
 b60:	b6 01       	movw	r22, r12
 b62:	80 e3       	ldi	r24, 0x30	; 48
 b64:	90 e0       	ldi	r25, 0x00	; 0
 b66:	68 d0       	rcall	.+208    	; 0xc38 <fputc>
 b68:	a2 fe       	sbrs	r10, 2
 b6a:	16 c0       	rjmp	.+44     	; 0xb98 <vfprintf+0x386>
 b6c:	a1 fc       	sbrc	r10, 1
 b6e:	03 c0       	rjmp	.+6      	; 0xb76 <vfprintf+0x364>
 b70:	88 e7       	ldi	r24, 0x78	; 120
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	02 c0       	rjmp	.+4      	; 0xb7a <vfprintf+0x368>
 b76:	88 e5       	ldi	r24, 0x58	; 88
 b78:	90 e0       	ldi	r25, 0x00	; 0
 b7a:	b6 01       	movw	r22, r12
 b7c:	0c c0       	rjmp	.+24     	; 0xb96 <vfprintf+0x384>
 b7e:	8a 2d       	mov	r24, r10
 b80:	86 78       	andi	r24, 0x86	; 134
 b82:	51 f0       	breq	.+20     	; 0xb98 <vfprintf+0x386>
 b84:	a1 fe       	sbrs	r10, 1
 b86:	02 c0       	rjmp	.+4      	; 0xb8c <vfprintf+0x37a>
 b88:	8b e2       	ldi	r24, 0x2B	; 43
 b8a:	01 c0       	rjmp	.+2      	; 0xb8e <vfprintf+0x37c>
 b8c:	80 e2       	ldi	r24, 0x20	; 32
 b8e:	a7 fc       	sbrc	r10, 7
 b90:	8d e2       	ldi	r24, 0x2D	; 45
 b92:	b6 01       	movw	r22, r12
 b94:	90 e0       	ldi	r25, 0x00	; 0
 b96:	50 d0       	rcall	.+160    	; 0xc38 <fputc>
 b98:	89 14       	cp	r8, r9
 b9a:	30 f4       	brcc	.+12     	; 0xba8 <vfprintf+0x396>
 b9c:	b6 01       	movw	r22, r12
 b9e:	80 e3       	ldi	r24, 0x30	; 48
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	4a d0       	rcall	.+148    	; 0xc38 <fputc>
 ba4:	9a 94       	dec	r9
 ba6:	f8 cf       	rjmp	.-16     	; 0xb98 <vfprintf+0x386>
 ba8:	8a 94       	dec	r8
 baa:	f3 01       	movw	r30, r6
 bac:	e8 0d       	add	r30, r8
 bae:	f1 1d       	adc	r31, r1
 bb0:	80 81       	ld	r24, Z
 bb2:	b6 01       	movw	r22, r12
 bb4:	90 e0       	ldi	r25, 0x00	; 0
 bb6:	40 d0       	rcall	.+128    	; 0xc38 <fputc>
 bb8:	81 10       	cpse	r8, r1
 bba:	f6 cf       	rjmp	.-20     	; 0xba8 <vfprintf+0x396>
 bbc:	22 20       	and	r2, r2
 bbe:	09 f4       	brne	.+2      	; 0xbc2 <vfprintf+0x3b0>
 bc0:	4e ce       	rjmp	.-868    	; 0x85e <vfprintf+0x4c>
 bc2:	b6 01       	movw	r22, r12
 bc4:	80 e2       	ldi	r24, 0x20	; 32
 bc6:	90 e0       	ldi	r25, 0x00	; 0
 bc8:	37 d0       	rcall	.+110    	; 0xc38 <fputc>
 bca:	2a 94       	dec	r2
 bcc:	f7 cf       	rjmp	.-18     	; 0xbbc <vfprintf+0x3aa>
 bce:	f6 01       	movw	r30, r12
 bd0:	86 81       	ldd	r24, Z+6	; 0x06
 bd2:	97 81       	ldd	r25, Z+7	; 0x07
 bd4:	02 c0       	rjmp	.+4      	; 0xbda <vfprintf+0x3c8>
 bd6:	8f ef       	ldi	r24, 0xFF	; 255
 bd8:	9f ef       	ldi	r25, 0xFF	; 255
 bda:	2b 96       	adiw	r28, 0x0b	; 11
 bdc:	0f b6       	in	r0, 0x3f	; 63
 bde:	f8 94       	cli
 be0:	de bf       	out	0x3e, r29	; 62
 be2:	0f be       	out	0x3f, r0	; 63
 be4:	cd bf       	out	0x3d, r28	; 61
 be6:	df 91       	pop	r29
 be8:	cf 91       	pop	r28
 bea:	1f 91       	pop	r17
 bec:	0f 91       	pop	r16
 bee:	ff 90       	pop	r15
 bf0:	ef 90       	pop	r14
 bf2:	df 90       	pop	r13
 bf4:	cf 90       	pop	r12
 bf6:	bf 90       	pop	r11
 bf8:	af 90       	pop	r10
 bfa:	9f 90       	pop	r9
 bfc:	8f 90       	pop	r8
 bfe:	7f 90       	pop	r7
 c00:	6f 90       	pop	r6
 c02:	5f 90       	pop	r5
 c04:	4f 90       	pop	r4
 c06:	3f 90       	pop	r3
 c08:	2f 90       	pop	r2
 c0a:	08 95       	ret

00000c0c <strnlen_P>:
 c0c:	fc 01       	movw	r30, r24
 c0e:	05 90       	lpm	r0, Z+
 c10:	61 50       	subi	r22, 0x01	; 1
 c12:	70 40       	sbci	r23, 0x00	; 0
 c14:	01 10       	cpse	r0, r1
 c16:	d8 f7       	brcc	.-10     	; 0xc0e <strnlen_P+0x2>
 c18:	80 95       	com	r24
 c1a:	90 95       	com	r25
 c1c:	8e 0f       	add	r24, r30
 c1e:	9f 1f       	adc	r25, r31
 c20:	08 95       	ret

00000c22 <strnlen>:
 c22:	fc 01       	movw	r30, r24
 c24:	61 50       	subi	r22, 0x01	; 1
 c26:	70 40       	sbci	r23, 0x00	; 0
 c28:	01 90       	ld	r0, Z+
 c2a:	01 10       	cpse	r0, r1
 c2c:	d8 f7       	brcc	.-10     	; 0xc24 <strnlen+0x2>
 c2e:	80 95       	com	r24
 c30:	90 95       	com	r25
 c32:	8e 0f       	add	r24, r30
 c34:	9f 1f       	adc	r25, r31
 c36:	08 95       	ret

00000c38 <fputc>:
 c38:	0f 93       	push	r16
 c3a:	1f 93       	push	r17
 c3c:	cf 93       	push	r28
 c3e:	df 93       	push	r29
 c40:	fb 01       	movw	r30, r22
 c42:	23 81       	ldd	r18, Z+3	; 0x03
 c44:	21 fd       	sbrc	r18, 1
 c46:	03 c0       	rjmp	.+6      	; 0xc4e <fputc+0x16>
 c48:	8f ef       	ldi	r24, 0xFF	; 255
 c4a:	9f ef       	ldi	r25, 0xFF	; 255
 c4c:	2c c0       	rjmp	.+88     	; 0xca6 <fputc+0x6e>
 c4e:	22 ff       	sbrs	r18, 2
 c50:	16 c0       	rjmp	.+44     	; 0xc7e <fputc+0x46>
 c52:	46 81       	ldd	r20, Z+6	; 0x06
 c54:	57 81       	ldd	r21, Z+7	; 0x07
 c56:	24 81       	ldd	r18, Z+4	; 0x04
 c58:	35 81       	ldd	r19, Z+5	; 0x05
 c5a:	42 17       	cp	r20, r18
 c5c:	53 07       	cpc	r21, r19
 c5e:	44 f4       	brge	.+16     	; 0xc70 <fputc+0x38>
 c60:	a0 81       	ld	r26, Z
 c62:	b1 81       	ldd	r27, Z+1	; 0x01
 c64:	9d 01       	movw	r18, r26
 c66:	2f 5f       	subi	r18, 0xFF	; 255
 c68:	3f 4f       	sbci	r19, 0xFF	; 255
 c6a:	31 83       	std	Z+1, r19	; 0x01
 c6c:	20 83       	st	Z, r18
 c6e:	8c 93       	st	X, r24
 c70:	26 81       	ldd	r18, Z+6	; 0x06
 c72:	37 81       	ldd	r19, Z+7	; 0x07
 c74:	2f 5f       	subi	r18, 0xFF	; 255
 c76:	3f 4f       	sbci	r19, 0xFF	; 255
 c78:	37 83       	std	Z+7, r19	; 0x07
 c7a:	26 83       	std	Z+6, r18	; 0x06
 c7c:	14 c0       	rjmp	.+40     	; 0xca6 <fputc+0x6e>
 c7e:	8b 01       	movw	r16, r22
 c80:	ec 01       	movw	r28, r24
 c82:	fb 01       	movw	r30, r22
 c84:	00 84       	ldd	r0, Z+8	; 0x08
 c86:	f1 85       	ldd	r31, Z+9	; 0x09
 c88:	e0 2d       	mov	r30, r0
 c8a:	19 95       	eicall
 c8c:	89 2b       	or	r24, r25
 c8e:	e1 f6       	brne	.-72     	; 0xc48 <fputc+0x10>
 c90:	d8 01       	movw	r26, r16
 c92:	16 96       	adiw	r26, 0x06	; 6
 c94:	8d 91       	ld	r24, X+
 c96:	9c 91       	ld	r25, X
 c98:	17 97       	sbiw	r26, 0x07	; 7
 c9a:	01 96       	adiw	r24, 0x01	; 1
 c9c:	17 96       	adiw	r26, 0x07	; 7
 c9e:	9c 93       	st	X, r25
 ca0:	8e 93       	st	-X, r24
 ca2:	16 97       	sbiw	r26, 0x06	; 6
 ca4:	ce 01       	movw	r24, r28
 ca6:	df 91       	pop	r29
 ca8:	cf 91       	pop	r28
 caa:	1f 91       	pop	r17
 cac:	0f 91       	pop	r16
 cae:	08 95       	ret

00000cb0 <__ultoa_invert>:
 cb0:	fa 01       	movw	r30, r20
 cb2:	aa 27       	eor	r26, r26
 cb4:	28 30       	cpi	r18, 0x08	; 8
 cb6:	51 f1       	breq	.+84     	; 0xd0c <__ultoa_invert+0x5c>
 cb8:	20 31       	cpi	r18, 0x10	; 16
 cba:	81 f1       	breq	.+96     	; 0xd1c <__ultoa_invert+0x6c>
 cbc:	e8 94       	clt
 cbe:	6f 93       	push	r22
 cc0:	6e 7f       	andi	r22, 0xFE	; 254
 cc2:	6e 5f       	subi	r22, 0xFE	; 254
 cc4:	7f 4f       	sbci	r23, 0xFF	; 255
 cc6:	8f 4f       	sbci	r24, 0xFF	; 255
 cc8:	9f 4f       	sbci	r25, 0xFF	; 255
 cca:	af 4f       	sbci	r26, 0xFF	; 255
 ccc:	b1 e0       	ldi	r27, 0x01	; 1
 cce:	3e d0       	rcall	.+124    	; 0xd4c <__ultoa_invert+0x9c>
 cd0:	b4 e0       	ldi	r27, 0x04	; 4
 cd2:	3c d0       	rcall	.+120    	; 0xd4c <__ultoa_invert+0x9c>
 cd4:	67 0f       	add	r22, r23
 cd6:	78 1f       	adc	r23, r24
 cd8:	89 1f       	adc	r24, r25
 cda:	9a 1f       	adc	r25, r26
 cdc:	a1 1d       	adc	r26, r1
 cde:	68 0f       	add	r22, r24
 ce0:	79 1f       	adc	r23, r25
 ce2:	8a 1f       	adc	r24, r26
 ce4:	91 1d       	adc	r25, r1
 ce6:	a1 1d       	adc	r26, r1
 ce8:	6a 0f       	add	r22, r26
 cea:	71 1d       	adc	r23, r1
 cec:	81 1d       	adc	r24, r1
 cee:	91 1d       	adc	r25, r1
 cf0:	a1 1d       	adc	r26, r1
 cf2:	20 d0       	rcall	.+64     	; 0xd34 <__ultoa_invert+0x84>
 cf4:	09 f4       	brne	.+2      	; 0xcf8 <__ultoa_invert+0x48>
 cf6:	68 94       	set
 cf8:	3f 91       	pop	r19
 cfa:	2a e0       	ldi	r18, 0x0A	; 10
 cfc:	26 9f       	mul	r18, r22
 cfe:	11 24       	eor	r1, r1
 d00:	30 19       	sub	r19, r0
 d02:	30 5d       	subi	r19, 0xD0	; 208
 d04:	31 93       	st	Z+, r19
 d06:	de f6       	brtc	.-74     	; 0xcbe <__ultoa_invert+0xe>
 d08:	cf 01       	movw	r24, r30
 d0a:	08 95       	ret
 d0c:	46 2f       	mov	r20, r22
 d0e:	47 70       	andi	r20, 0x07	; 7
 d10:	40 5d       	subi	r20, 0xD0	; 208
 d12:	41 93       	st	Z+, r20
 d14:	b3 e0       	ldi	r27, 0x03	; 3
 d16:	0f d0       	rcall	.+30     	; 0xd36 <__ultoa_invert+0x86>
 d18:	c9 f7       	brne	.-14     	; 0xd0c <__ultoa_invert+0x5c>
 d1a:	f6 cf       	rjmp	.-20     	; 0xd08 <__ultoa_invert+0x58>
 d1c:	46 2f       	mov	r20, r22
 d1e:	4f 70       	andi	r20, 0x0F	; 15
 d20:	40 5d       	subi	r20, 0xD0	; 208
 d22:	4a 33       	cpi	r20, 0x3A	; 58
 d24:	18 f0       	brcs	.+6      	; 0xd2c <__ultoa_invert+0x7c>
 d26:	49 5d       	subi	r20, 0xD9	; 217
 d28:	31 fd       	sbrc	r19, 1
 d2a:	40 52       	subi	r20, 0x20	; 32
 d2c:	41 93       	st	Z+, r20
 d2e:	02 d0       	rcall	.+4      	; 0xd34 <__ultoa_invert+0x84>
 d30:	a9 f7       	brne	.-22     	; 0xd1c <__ultoa_invert+0x6c>
 d32:	ea cf       	rjmp	.-44     	; 0xd08 <__ultoa_invert+0x58>
 d34:	b4 e0       	ldi	r27, 0x04	; 4
 d36:	a6 95       	lsr	r26
 d38:	97 95       	ror	r25
 d3a:	87 95       	ror	r24
 d3c:	77 95       	ror	r23
 d3e:	67 95       	ror	r22
 d40:	ba 95       	dec	r27
 d42:	c9 f7       	brne	.-14     	; 0xd36 <__ultoa_invert+0x86>
 d44:	00 97       	sbiw	r24, 0x00	; 0
 d46:	61 05       	cpc	r22, r1
 d48:	71 05       	cpc	r23, r1
 d4a:	08 95       	ret
 d4c:	9b 01       	movw	r18, r22
 d4e:	ac 01       	movw	r20, r24
 d50:	0a 2e       	mov	r0, r26
 d52:	06 94       	lsr	r0
 d54:	57 95       	ror	r21
 d56:	47 95       	ror	r20
 d58:	37 95       	ror	r19
 d5a:	27 95       	ror	r18
 d5c:	ba 95       	dec	r27
 d5e:	c9 f7       	brne	.-14     	; 0xd52 <__ultoa_invert+0xa2>
 d60:	62 0f       	add	r22, r18
 d62:	73 1f       	adc	r23, r19
 d64:	84 1f       	adc	r24, r20
 d66:	95 1f       	adc	r25, r21
 d68:	a0 1d       	adc	r26, r0
 d6a:	08 95       	ret

00000d6c <_exit>:
 d6c:	f8 94       	cli

00000d6e <__stop_program>:
 d6e:	ff cf       	rjmp	.-2      	; 0xd6e <__stop_program>
