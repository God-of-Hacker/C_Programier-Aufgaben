
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  0000135c  000013f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000135c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000080  00800224  00800224  00001414  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001444  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  00001484  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026f4  00000000  00000000  00001654  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001109  00000000  00000000  00003d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001338  00000000  00000000  00004e51  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004dc  00000000  00000000  0000618c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bf0  00000000  00000000  00006668  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016ea  00000000  00000000  00007258  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  00008942  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5c c6       	rjmp	.+3256   	; 0xd16 <__vector_23>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ec e5       	ldi	r30, 0x5C	; 92
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 32       	cpi	r26, 0x24	; 36
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a4 e2       	ldi	r26, 0x24	; 36
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a4 3a       	cpi	r26, 0xA4	; 164
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	67 d0       	rcall	.+206    	; 0x1ee <main>
     120:	0c 94 ac 09 	jmp	0x1358	; 0x1358 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <led_strip_set_pixel>:
#include "ucBoardDriver.h"
#include "ws2812.h"


led_strip_set_pixel(uint8_t posX, uint8_t posY, rgb_color color, rgb_color * ledArray)
{
     126:	0f 93       	push	r16
     128:	1f 93       	push	r17
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
     132:	29 97       	sbiw	r28, 0x09	; 9
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	f8 94       	cli
     138:	de bf       	out	0x3e, r29	; 62
     13a:	0f be       	out	0x3f, r0	; 63
     13c:	cd bf       	out	0x3d, r28	; 61
     13e:	8b 83       	std	Y+3, r24	; 0x03
     140:	6c 83       	std	Y+4, r22	; 0x04
     142:	2d 83       	std	Y+5, r18	; 0x05
     144:	3e 83       	std	Y+6, r19	; 0x06
     146:	4f 83       	std	Y+7, r20	; 0x07
     148:	19 87       	std	Y+9, r17	; 0x09
     14a:	08 87       	std	Y+8, r16	; 0x08
    uint16_t valueArrayIndexSelected = 0;
     14c:	1a 82       	std	Y+2, r1	; 0x02
     14e:	19 82       	std	Y+1, r1	; 0x01
    if (posX%2)
     150:	8b 81       	ldd	r24, Y+3	; 0x03
     152:	81 70       	andi	r24, 0x01	; 1
     154:	88 23       	and	r24, r24
     156:	b1 f0       	breq	.+44     	; 0x184 <led_strip_set_pixel+0x5e>
    {
        valueArrayIndexSelected = posX * 8 + 7 - posY;
     158:	8b 81       	ldd	r24, Y+3	; 0x03
     15a:	88 2f       	mov	r24, r24
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	88 0f       	add	r24, r24
     160:	99 1f       	adc	r25, r25
     162:	88 0f       	add	r24, r24
     164:	99 1f       	adc	r25, r25
     166:	88 0f       	add	r24, r24
     168:	99 1f       	adc	r25, r25
     16a:	9c 01       	movw	r18, r24
     16c:	29 5f       	subi	r18, 0xF9	; 249
     16e:	3f 4f       	sbci	r19, 0xFF	; 255
     170:	8c 81       	ldd	r24, Y+4	; 0x04
     172:	88 2f       	mov	r24, r24
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	a9 01       	movw	r20, r18
     178:	48 1b       	sub	r20, r24
     17a:	59 0b       	sbc	r21, r25
     17c:	ca 01       	movw	r24, r20
     17e:	9a 83       	std	Y+2, r25	; 0x02
     180:	89 83       	std	Y+1, r24	; 0x01
     182:	11 c0       	rjmp	.+34     	; 0x1a6 <led_strip_set_pixel+0x80>
    }
    else
    {
        valueArrayIndexSelected = posX * 8 + posY;
     184:	8b 81       	ldd	r24, Y+3	; 0x03
     186:	88 2f       	mov	r24, r24
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	9c 01       	movw	r18, r24
     18c:	22 0f       	add	r18, r18
     18e:	33 1f       	adc	r19, r19
     190:	22 0f       	add	r18, r18
     192:	33 1f       	adc	r19, r19
     194:	22 0f       	add	r18, r18
     196:	33 1f       	adc	r19, r19
     198:	8c 81       	ldd	r24, Y+4	; 0x04
     19a:	88 2f       	mov	r24, r24
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	82 0f       	add	r24, r18
     1a0:	93 1f       	adc	r25, r19
     1a2:	9a 83       	std	Y+2, r25	; 0x02
     1a4:	89 83       	std	Y+1, r24	; 0x01
    }
    if (valueArrayIndexSelected<LED_COUNT)
     1a6:	89 81       	ldd	r24, Y+1	; 0x01
     1a8:	9a 81       	ldd	r25, Y+2	; 0x02
     1aa:	8f 3f       	cpi	r24, 0xFF	; 255
     1ac:	91 05       	cpc	r25, r1
     1ae:	09 f0       	breq	.+2      	; 0x1b2 <led_strip_set_pixel+0x8c>
     1b0:	90 f4       	brcc	.+36     	; 0x1d6 <led_strip_set_pixel+0xb0>
    {
        ledArray[valueArrayIndexSelected] = color;
     1b2:	29 81       	ldd	r18, Y+1	; 0x01
     1b4:	3a 81       	ldd	r19, Y+2	; 0x02
     1b6:	c9 01       	movw	r24, r18
     1b8:	88 0f       	add	r24, r24
     1ba:	99 1f       	adc	r25, r25
     1bc:	82 0f       	add	r24, r18
     1be:	93 1f       	adc	r25, r19
     1c0:	28 85       	ldd	r18, Y+8	; 0x08
     1c2:	39 85       	ldd	r19, Y+9	; 0x09
     1c4:	28 0f       	add	r18, r24
     1c6:	39 1f       	adc	r19, r25
     1c8:	8d 81       	ldd	r24, Y+5	; 0x05
     1ca:	9e 81       	ldd	r25, Y+6	; 0x06
     1cc:	af 81       	ldd	r26, Y+7	; 0x07
     1ce:	f9 01       	movw	r30, r18
     1d0:	80 83       	st	Z, r24
     1d2:	91 83       	std	Z+1, r25	; 0x01
     1d4:	a2 83       	std	Z+2, r26	; 0x02
    }
}
     1d6:	00 00       	nop
     1d8:	29 96       	adiw	r28, 0x09	; 9
     1da:	0f b6       	in	r0, 0x3f	; 63
     1dc:	f8 94       	cli
     1de:	de bf       	out	0x3e, r29	; 62
     1e0:	0f be       	out	0x3f, r0	; 63
     1e2:	cd bf       	out	0x3d, r28	; 61
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	1f 91       	pop	r17
     1ea:	0f 91       	pop	r16
     1ec:	08 95       	ret

000001ee <main>:
//Hauptprogramm
int main(void){
     1ee:	0f 93       	push	r16
     1f0:	1f 93       	push	r17
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	cd b7       	in	r28, 0x3d	; 61
     1f8:	de b7       	in	r29, 0x3e	; 62
     1fa:	cd 55       	subi	r28, 0x5D	; 93
     1fc:	d3 40       	sbci	r29, 0x03	; 3
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	f8 94       	cli
     202:	de bf       	out	0x3e, r29	; 62
     204:	0f be       	out	0x3f, r0	; 63
     206:	cd bf       	out	0x3d, r28	; 61
    //Variablen
    rgb_color leds[LED_COUNT];
    uint16_t i = 0;
     208:	1a 82       	std	Y+2, r1	; 0x02
     20a:	19 82       	std	Y+1, r1	; 0x01
    uint16_t j = 0;
     20c:	1c 82       	std	Y+4, r1	; 0x04
     20e:	1b 82       	std	Y+3, r1	; 0x03
    uint16_t schreiben = 1;
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	9e 83       	std	Y+6, r25	; 0x06
     216:	8d 83       	std	Y+5, r24	; 0x05
    
    
    //Initialisieren
    initBoard();
     218:	d7 d4       	rcall	.+2478   	; 0xbc8 <initBoard>
    //Anfangswert für Zufallsgenerator setzen, gleicher Anfengswert ergibt die gleiche
    //.. Abfolge von Zufallszahlen. Wir lesen einen offenen (undefinierten) ADC ein
    //.. und setzen somit einen undefinierten (zufälligen) Anfangswert.
    srandom(adcRead(ADC_00_X4_PORTF_BIT0));
     21a:	80 e0       	ldi	r24, 0x00	; 0
     21c:	93 d3       	rcall	.+1830   	; 0x944 <adcRead>
     21e:	cc 01       	movw	r24, r24
     220:	a0 e0       	ldi	r26, 0x00	; 0
     222:	b0 e0       	ldi	r27, 0x00	; 0
     224:	bc 01       	movw	r22, r24
     226:	cd 01       	movw	r24, r26
     228:	0e 94 46 09 	call	0x128c	; 0x128c <srandom>
    
    //Unendlichschlaufe
    while(1)
    {
        //TEST---------------------------------------------------------------------
        for (i=0; i<8; i=i+1)
     22c:	1a 82       	std	Y+2, r1	; 0x02
     22e:	19 82       	std	Y+1, r1	; 0x01
     230:	96 c2       	rjmp	.+1324   	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
        {
            
                if ((j== 0 ||j== 8 || j==16 || j==32 ||j== 40 ||j== 48||j== 56)&&schreiben)
     232:	8b 81       	ldd	r24, Y+3	; 0x03
     234:	9c 81       	ldd	r25, Y+4	; 0x04
     236:	89 2b       	or	r24, r25
     238:	c9 f0       	breq	.+50     	; 0x26c <main+0x7e>
     23a:	8b 81       	ldd	r24, Y+3	; 0x03
     23c:	9c 81       	ldd	r25, Y+4	; 0x04
     23e:	08 97       	sbiw	r24, 0x08	; 8
     240:	a9 f0       	breq	.+42     	; 0x26c <main+0x7e>
     242:	8b 81       	ldd	r24, Y+3	; 0x03
     244:	9c 81       	ldd	r25, Y+4	; 0x04
     246:	40 97       	sbiw	r24, 0x10	; 16
     248:	89 f0       	breq	.+34     	; 0x26c <main+0x7e>
     24a:	8b 81       	ldd	r24, Y+3	; 0x03
     24c:	9c 81       	ldd	r25, Y+4	; 0x04
     24e:	80 97       	sbiw	r24, 0x20	; 32
     250:	69 f0       	breq	.+26     	; 0x26c <main+0x7e>
     252:	8b 81       	ldd	r24, Y+3	; 0x03
     254:	9c 81       	ldd	r25, Y+4	; 0x04
     256:	88 97       	sbiw	r24, 0x28	; 40
     258:	49 f0       	breq	.+18     	; 0x26c <main+0x7e>
     25a:	8b 81       	ldd	r24, Y+3	; 0x03
     25c:	9c 81       	ldd	r25, Y+4	; 0x04
     25e:	c0 97       	sbiw	r24, 0x30	; 48
     260:	29 f0       	breq	.+10     	; 0x26c <main+0x7e>
     262:	8b 81       	ldd	r24, Y+3	; 0x03
     264:	9c 81       	ldd	r25, Y+4	; 0x04
     266:	c8 97       	sbiw	r24, 0x38	; 56
     268:	09 f0       	breq	.+2      	; 0x26c <main+0x7e>
     26a:	46 c2       	rjmp	.+1164   	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
     26c:	8d 81       	ldd	r24, Y+5	; 0x05
     26e:	9e 81       	ldd	r25, Y+6	; 0x06
     270:	89 2b       	or	r24, r25
     272:	09 f4       	brne	.+2      	; 0x276 <main+0x88>
     274:	41 c2       	rjmp	.+1154   	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
                {
                   uint8_t x=2;
     276:	82 e0       	ldi	r24, 0x02	; 2
     278:	8f 83       	std	Y+7, r24	; 0x07
                   
                   led_strip_set_pixel(x,0,(rgb_color){20,0,20},leds);
     27a:	ce 01       	movw	r24, r28
     27c:	85 5a       	subi	r24, 0xA5	; 165
     27e:	9f 4f       	sbci	r25, 0xFF	; 255
     280:	24 e1       	ldi	r18, 0x14	; 20
     282:	fc 01       	movw	r30, r24
     284:	20 83       	st	Z, r18
     286:	ce 01       	movw	r24, r28
     288:	85 5a       	subi	r24, 0xA5	; 165
     28a:	9f 4f       	sbci	r25, 0xFF	; 255
     28c:	fc 01       	movw	r30, r24
     28e:	11 82       	std	Z+1, r1	; 0x01
     290:	ce 01       	movw	r24, r28
     292:	85 5a       	subi	r24, 0xA5	; 165
     294:	9f 4f       	sbci	r25, 0xFF	; 255
     296:	24 e1       	ldi	r18, 0x14	; 20
     298:	fc 01       	movw	r30, r24
     29a:	22 83       	std	Z+2, r18	; 0x02
     29c:	9e 01       	movw	r18, r28
     29e:	22 5a       	subi	r18, 0xA2	; 162
     2a0:	3f 4f       	sbci	r19, 0xFF	; 255
     2a2:	ce 01       	movw	r24, r28
     2a4:	85 5a       	subi	r24, 0xA5	; 165
     2a6:	9f 4f       	sbci	r25, 0xFF	; 255
     2a8:	fc 01       	movw	r30, r24
     2aa:	80 81       	ld	r24, Z
     2ac:	91 81       	ldd	r25, Z+1	; 0x01
     2ae:	a2 81       	ldd	r26, Z+2	; 0x02
     2b0:	89 01       	movw	r16, r18
     2b2:	9c 01       	movw	r18, r24
     2b4:	4a 2f       	mov	r20, r26
     2b6:	60 e0       	ldi	r22, 0x00	; 0
     2b8:	8f 81       	ldd	r24, Y+7	; 0x07
     2ba:	35 df       	rcall	.-406    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,1,(rgb_color){20,0,20},leds);
     2bc:	ce 01       	movw	r24, r28
     2be:	88 5a       	subi	r24, 0xA8	; 168
     2c0:	9f 4f       	sbci	r25, 0xFF	; 255
     2c2:	24 e1       	ldi	r18, 0x14	; 20
     2c4:	fc 01       	movw	r30, r24
     2c6:	20 83       	st	Z, r18
     2c8:	ce 01       	movw	r24, r28
     2ca:	88 5a       	subi	r24, 0xA8	; 168
     2cc:	9f 4f       	sbci	r25, 0xFF	; 255
     2ce:	fc 01       	movw	r30, r24
     2d0:	11 82       	std	Z+1, r1	; 0x01
     2d2:	ce 01       	movw	r24, r28
     2d4:	88 5a       	subi	r24, 0xA8	; 168
     2d6:	9f 4f       	sbci	r25, 0xFF	; 255
     2d8:	24 e1       	ldi	r18, 0x14	; 20
     2da:	fc 01       	movw	r30, r24
     2dc:	22 83       	std	Z+2, r18	; 0x02
     2de:	9e 01       	movw	r18, r28
     2e0:	22 5a       	subi	r18, 0xA2	; 162
     2e2:	3f 4f       	sbci	r19, 0xFF	; 255
     2e4:	ce 01       	movw	r24, r28
     2e6:	88 5a       	subi	r24, 0xA8	; 168
     2e8:	9f 4f       	sbci	r25, 0xFF	; 255
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	91 81       	ldd	r25, Z+1	; 0x01
     2f0:	a2 81       	ldd	r26, Z+2	; 0x02
     2f2:	89 01       	movw	r16, r18
     2f4:	9c 01       	movw	r18, r24
     2f6:	4a 2f       	mov	r20, r26
     2f8:	61 e0       	ldi	r22, 0x01	; 1
     2fa:	8f 81       	ldd	r24, Y+7	; 0x07
     2fc:	14 df       	rcall	.-472    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,2,(rgb_color){20,0,20},leds);
     2fe:	ce 01       	movw	r24, r28
     300:	8b 5a       	subi	r24, 0xAB	; 171
     302:	9f 4f       	sbci	r25, 0xFF	; 255
     304:	24 e1       	ldi	r18, 0x14	; 20
     306:	fc 01       	movw	r30, r24
     308:	20 83       	st	Z, r18
     30a:	ce 01       	movw	r24, r28
     30c:	8b 5a       	subi	r24, 0xAB	; 171
     30e:	9f 4f       	sbci	r25, 0xFF	; 255
     310:	fc 01       	movw	r30, r24
     312:	11 82       	std	Z+1, r1	; 0x01
     314:	ce 01       	movw	r24, r28
     316:	8b 5a       	subi	r24, 0xAB	; 171
     318:	9f 4f       	sbci	r25, 0xFF	; 255
     31a:	24 e1       	ldi	r18, 0x14	; 20
     31c:	fc 01       	movw	r30, r24
     31e:	22 83       	std	Z+2, r18	; 0x02
     320:	9e 01       	movw	r18, r28
     322:	22 5a       	subi	r18, 0xA2	; 162
     324:	3f 4f       	sbci	r19, 0xFF	; 255
     326:	ce 01       	movw	r24, r28
     328:	8b 5a       	subi	r24, 0xAB	; 171
     32a:	9f 4f       	sbci	r25, 0xFF	; 255
     32c:	fc 01       	movw	r30, r24
     32e:	80 81       	ld	r24, Z
     330:	91 81       	ldd	r25, Z+1	; 0x01
     332:	a2 81       	ldd	r26, Z+2	; 0x02
     334:	89 01       	movw	r16, r18
     336:	9c 01       	movw	r18, r24
     338:	4a 2f       	mov	r20, r26
     33a:	62 e0       	ldi	r22, 0x02	; 2
     33c:	8f 81       	ldd	r24, Y+7	; 0x07
     33e:	f3 de       	rcall	.-538    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,3,(rgb_color){20,0,20},leds);
     340:	ce 01       	movw	r24, r28
     342:	8e 5a       	subi	r24, 0xAE	; 174
     344:	9f 4f       	sbci	r25, 0xFF	; 255
     346:	24 e1       	ldi	r18, 0x14	; 20
     348:	fc 01       	movw	r30, r24
     34a:	20 83       	st	Z, r18
     34c:	ce 01       	movw	r24, r28
     34e:	8e 5a       	subi	r24, 0xAE	; 174
     350:	9f 4f       	sbci	r25, 0xFF	; 255
     352:	fc 01       	movw	r30, r24
     354:	11 82       	std	Z+1, r1	; 0x01
     356:	ce 01       	movw	r24, r28
     358:	8e 5a       	subi	r24, 0xAE	; 174
     35a:	9f 4f       	sbci	r25, 0xFF	; 255
     35c:	24 e1       	ldi	r18, 0x14	; 20
     35e:	fc 01       	movw	r30, r24
     360:	22 83       	std	Z+2, r18	; 0x02
     362:	9e 01       	movw	r18, r28
     364:	22 5a       	subi	r18, 0xA2	; 162
     366:	3f 4f       	sbci	r19, 0xFF	; 255
     368:	ce 01       	movw	r24, r28
     36a:	8e 5a       	subi	r24, 0xAE	; 174
     36c:	9f 4f       	sbci	r25, 0xFF	; 255
     36e:	fc 01       	movw	r30, r24
     370:	80 81       	ld	r24, Z
     372:	91 81       	ldd	r25, Z+1	; 0x01
     374:	a2 81       	ldd	r26, Z+2	; 0x02
     376:	89 01       	movw	r16, r18
     378:	9c 01       	movw	r18, r24
     37a:	4a 2f       	mov	r20, r26
     37c:	63 e0       	ldi	r22, 0x03	; 3
     37e:	8f 81       	ldd	r24, Y+7	; 0x07
     380:	d2 de       	rcall	.-604    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,4,(rgb_color){20,0,20},leds);
     382:	ce 01       	movw	r24, r28
     384:	81 5b       	subi	r24, 0xB1	; 177
     386:	9f 4f       	sbci	r25, 0xFF	; 255
     388:	24 e1       	ldi	r18, 0x14	; 20
     38a:	fc 01       	movw	r30, r24
     38c:	20 83       	st	Z, r18
     38e:	ce 01       	movw	r24, r28
     390:	81 5b       	subi	r24, 0xB1	; 177
     392:	9f 4f       	sbci	r25, 0xFF	; 255
     394:	fc 01       	movw	r30, r24
     396:	11 82       	std	Z+1, r1	; 0x01
     398:	ce 01       	movw	r24, r28
     39a:	81 5b       	subi	r24, 0xB1	; 177
     39c:	9f 4f       	sbci	r25, 0xFF	; 255
     39e:	24 e1       	ldi	r18, 0x14	; 20
     3a0:	fc 01       	movw	r30, r24
     3a2:	22 83       	std	Z+2, r18	; 0x02
     3a4:	9e 01       	movw	r18, r28
     3a6:	22 5a       	subi	r18, 0xA2	; 162
     3a8:	3f 4f       	sbci	r19, 0xFF	; 255
     3aa:	ce 01       	movw	r24, r28
     3ac:	81 5b       	subi	r24, 0xB1	; 177
     3ae:	9f 4f       	sbci	r25, 0xFF	; 255
     3b0:	fc 01       	movw	r30, r24
     3b2:	80 81       	ld	r24, Z
     3b4:	91 81       	ldd	r25, Z+1	; 0x01
     3b6:	a2 81       	ldd	r26, Z+2	; 0x02
     3b8:	89 01       	movw	r16, r18
     3ba:	9c 01       	movw	r18, r24
     3bc:	4a 2f       	mov	r20, r26
     3be:	64 e0       	ldi	r22, 0x04	; 4
     3c0:	8f 81       	ldd	r24, Y+7	; 0x07
     3c2:	b1 de       	rcall	.-670    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,5,(rgb_color){20,0,20},leds);
     3c4:	ce 01       	movw	r24, r28
     3c6:	84 5b       	subi	r24, 0xB4	; 180
     3c8:	9f 4f       	sbci	r25, 0xFF	; 255
     3ca:	24 e1       	ldi	r18, 0x14	; 20
     3cc:	fc 01       	movw	r30, r24
     3ce:	20 83       	st	Z, r18
     3d0:	ce 01       	movw	r24, r28
     3d2:	84 5b       	subi	r24, 0xB4	; 180
     3d4:	9f 4f       	sbci	r25, 0xFF	; 255
     3d6:	fc 01       	movw	r30, r24
     3d8:	11 82       	std	Z+1, r1	; 0x01
     3da:	ce 01       	movw	r24, r28
     3dc:	84 5b       	subi	r24, 0xB4	; 180
     3de:	9f 4f       	sbci	r25, 0xFF	; 255
     3e0:	24 e1       	ldi	r18, 0x14	; 20
     3e2:	fc 01       	movw	r30, r24
     3e4:	22 83       	std	Z+2, r18	; 0x02
     3e6:	9e 01       	movw	r18, r28
     3e8:	22 5a       	subi	r18, 0xA2	; 162
     3ea:	3f 4f       	sbci	r19, 0xFF	; 255
     3ec:	ce 01       	movw	r24, r28
     3ee:	84 5b       	subi	r24, 0xB4	; 180
     3f0:	9f 4f       	sbci	r25, 0xFF	; 255
     3f2:	fc 01       	movw	r30, r24
     3f4:	80 81       	ld	r24, Z
     3f6:	91 81       	ldd	r25, Z+1	; 0x01
     3f8:	a2 81       	ldd	r26, Z+2	; 0x02
     3fa:	89 01       	movw	r16, r18
     3fc:	9c 01       	movw	r18, r24
     3fe:	4a 2f       	mov	r20, r26
     400:	65 e0       	ldi	r22, 0x05	; 5
     402:	8f 81       	ldd	r24, Y+7	; 0x07
     404:	90 de       	rcall	.-736    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,6,(rgb_color){20,0,20},leds);
     406:	ce 01       	movw	r24, r28
     408:	87 5b       	subi	r24, 0xB7	; 183
     40a:	9f 4f       	sbci	r25, 0xFF	; 255
     40c:	24 e1       	ldi	r18, 0x14	; 20
     40e:	fc 01       	movw	r30, r24
     410:	20 83       	st	Z, r18
     412:	ce 01       	movw	r24, r28
     414:	87 5b       	subi	r24, 0xB7	; 183
     416:	9f 4f       	sbci	r25, 0xFF	; 255
     418:	fc 01       	movw	r30, r24
     41a:	11 82       	std	Z+1, r1	; 0x01
     41c:	ce 01       	movw	r24, r28
     41e:	87 5b       	subi	r24, 0xB7	; 183
     420:	9f 4f       	sbci	r25, 0xFF	; 255
     422:	24 e1       	ldi	r18, 0x14	; 20
     424:	fc 01       	movw	r30, r24
     426:	22 83       	std	Z+2, r18	; 0x02
     428:	9e 01       	movw	r18, r28
     42a:	22 5a       	subi	r18, 0xA2	; 162
     42c:	3f 4f       	sbci	r19, 0xFF	; 255
     42e:	ce 01       	movw	r24, r28
     430:	87 5b       	subi	r24, 0xB7	; 183
     432:	9f 4f       	sbci	r25, 0xFF	; 255
     434:	fc 01       	movw	r30, r24
     436:	80 81       	ld	r24, Z
     438:	91 81       	ldd	r25, Z+1	; 0x01
     43a:	a2 81       	ldd	r26, Z+2	; 0x02
     43c:	89 01       	movw	r16, r18
     43e:	9c 01       	movw	r18, r24
     440:	4a 2f       	mov	r20, r26
     442:	66 e0       	ldi	r22, 0x06	; 6
     444:	8f 81       	ldd	r24, Y+7	; 0x07
     446:	6f de       	rcall	.-802    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,7,(rgb_color){20,0,20},leds);
     448:	ce 01       	movw	r24, r28
     44a:	8a 5b       	subi	r24, 0xBA	; 186
     44c:	9f 4f       	sbci	r25, 0xFF	; 255
     44e:	24 e1       	ldi	r18, 0x14	; 20
     450:	fc 01       	movw	r30, r24
     452:	20 83       	st	Z, r18
     454:	ce 01       	movw	r24, r28
     456:	8a 5b       	subi	r24, 0xBA	; 186
     458:	9f 4f       	sbci	r25, 0xFF	; 255
     45a:	fc 01       	movw	r30, r24
     45c:	11 82       	std	Z+1, r1	; 0x01
     45e:	ce 01       	movw	r24, r28
     460:	8a 5b       	subi	r24, 0xBA	; 186
     462:	9f 4f       	sbci	r25, 0xFF	; 255
     464:	24 e1       	ldi	r18, 0x14	; 20
     466:	fc 01       	movw	r30, r24
     468:	22 83       	std	Z+2, r18	; 0x02
     46a:	9e 01       	movw	r18, r28
     46c:	22 5a       	subi	r18, 0xA2	; 162
     46e:	3f 4f       	sbci	r19, 0xFF	; 255
     470:	ce 01       	movw	r24, r28
     472:	8a 5b       	subi	r24, 0xBA	; 186
     474:	9f 4f       	sbci	r25, 0xFF	; 255
     476:	fc 01       	movw	r30, r24
     478:	80 81       	ld	r24, Z
     47a:	91 81       	ldd	r25, Z+1	; 0x01
     47c:	a2 81       	ldd	r26, Z+2	; 0x02
     47e:	89 01       	movw	r16, r18
     480:	9c 01       	movw	r18, r24
     482:	4a 2f       	mov	r20, r26
     484:	67 e0       	ldi	r22, 0x07	; 7
     486:	8f 81       	ldd	r24, Y+7	; 0x07
     488:	4e de       	rcall	.-868    	; 0x126 <led_strip_set_pixel>
                   x=x+4;
     48a:	8f 81       	ldd	r24, Y+7	; 0x07
     48c:	8c 5f       	subi	r24, 0xFC	; 252
     48e:	8f 83       	std	Y+7, r24	; 0x07
                   led_strip_set_pixel(x,0,(rgb_color){20,0,20},leds);
     490:	ce 01       	movw	r24, r28
     492:	8d 5b       	subi	r24, 0xBD	; 189
     494:	9f 4f       	sbci	r25, 0xFF	; 255
     496:	24 e1       	ldi	r18, 0x14	; 20
     498:	fc 01       	movw	r30, r24
     49a:	20 83       	st	Z, r18
     49c:	ce 01       	movw	r24, r28
     49e:	8d 5b       	subi	r24, 0xBD	; 189
     4a0:	9f 4f       	sbci	r25, 0xFF	; 255
     4a2:	fc 01       	movw	r30, r24
     4a4:	11 82       	std	Z+1, r1	; 0x01
     4a6:	ce 01       	movw	r24, r28
     4a8:	8d 5b       	subi	r24, 0xBD	; 189
     4aa:	9f 4f       	sbci	r25, 0xFF	; 255
     4ac:	24 e1       	ldi	r18, 0x14	; 20
     4ae:	fc 01       	movw	r30, r24
     4b0:	22 83       	std	Z+2, r18	; 0x02
     4b2:	9e 01       	movw	r18, r28
     4b4:	22 5a       	subi	r18, 0xA2	; 162
     4b6:	3f 4f       	sbci	r19, 0xFF	; 255
     4b8:	ce 01       	movw	r24, r28
     4ba:	8d 5b       	subi	r24, 0xBD	; 189
     4bc:	9f 4f       	sbci	r25, 0xFF	; 255
     4be:	fc 01       	movw	r30, r24
     4c0:	80 81       	ld	r24, Z
     4c2:	91 81       	ldd	r25, Z+1	; 0x01
     4c4:	a2 81       	ldd	r26, Z+2	; 0x02
     4c6:	89 01       	movw	r16, r18
     4c8:	9c 01       	movw	r18, r24
     4ca:	4a 2f       	mov	r20, r26
     4cc:	60 e0       	ldi	r22, 0x00	; 0
     4ce:	8f 81       	ldd	r24, Y+7	; 0x07
     4d0:	2a de       	rcall	.-940    	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,1,(rgb_color){20,0,20},leds);
     4d2:	ce 01       	movw	r24, r28
     4d4:	80 5c       	subi	r24, 0xC0	; 192
     4d6:	9f 4f       	sbci	r25, 0xFF	; 255
     4d8:	24 e1       	ldi	r18, 0x14	; 20
     4da:	fc 01       	movw	r30, r24
     4dc:	20 83       	st	Z, r18
     4de:	ce 01       	movw	r24, r28
     4e0:	80 5c       	subi	r24, 0xC0	; 192
     4e2:	9f 4f       	sbci	r25, 0xFF	; 255
     4e4:	fc 01       	movw	r30, r24
     4e6:	11 82       	std	Z+1, r1	; 0x01
     4e8:	ce 01       	movw	r24, r28
     4ea:	80 5c       	subi	r24, 0xC0	; 192
     4ec:	9f 4f       	sbci	r25, 0xFF	; 255
     4ee:	24 e1       	ldi	r18, 0x14	; 20
     4f0:	fc 01       	movw	r30, r24
     4f2:	22 83       	std	Z+2, r18	; 0x02
     4f4:	9e 01       	movw	r18, r28
     4f6:	22 5a       	subi	r18, 0xA2	; 162
     4f8:	3f 4f       	sbci	r19, 0xFF	; 255
     4fa:	ce 01       	movw	r24, r28
     4fc:	80 5c       	subi	r24, 0xC0	; 192
     4fe:	9f 4f       	sbci	r25, 0xFF	; 255
     500:	fc 01       	movw	r30, r24
     502:	80 81       	ld	r24, Z
     504:	91 81       	ldd	r25, Z+1	; 0x01
     506:	a2 81       	ldd	r26, Z+2	; 0x02
     508:	89 01       	movw	r16, r18
     50a:	9c 01       	movw	r18, r24
     50c:	4a 2f       	mov	r20, r26
     50e:	61 e0       	ldi	r22, 0x01	; 1
     510:	8f 81       	ldd	r24, Y+7	; 0x07
     512:	09 de       	rcall	.-1006   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,2,(rgb_color){20,0,20},leds);
     514:	84 e1       	ldi	r24, 0x14	; 20
     516:	8d af       	std	Y+61, r24	; 0x3d
     518:	1e ae       	std	Y+62, r1	; 0x3e
     51a:	84 e1       	ldi	r24, 0x14	; 20
     51c:	8f af       	std	Y+63, r24	; 0x3f
     51e:	9e 01       	movw	r18, r28
     520:	22 5a       	subi	r18, 0xA2	; 162
     522:	3f 4f       	sbci	r19, 0xFF	; 255
     524:	8d ad       	ldd	r24, Y+61	; 0x3d
     526:	9e ad       	ldd	r25, Y+62	; 0x3e
     528:	af ad       	ldd	r26, Y+63	; 0x3f
     52a:	89 01       	movw	r16, r18
     52c:	9c 01       	movw	r18, r24
     52e:	4a 2f       	mov	r20, r26
     530:	62 e0       	ldi	r22, 0x02	; 2
     532:	8f 81       	ldd	r24, Y+7	; 0x07
     534:	f8 dd       	rcall	.-1040   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,3,(rgb_color){20,0,20},leds);
     536:	84 e1       	ldi	r24, 0x14	; 20
     538:	8a af       	std	Y+58, r24	; 0x3a
     53a:	1b ae       	std	Y+59, r1	; 0x3b
     53c:	84 e1       	ldi	r24, 0x14	; 20
     53e:	8c af       	std	Y+60, r24	; 0x3c
     540:	9e 01       	movw	r18, r28
     542:	22 5a       	subi	r18, 0xA2	; 162
     544:	3f 4f       	sbci	r19, 0xFF	; 255
     546:	8a ad       	ldd	r24, Y+58	; 0x3a
     548:	9b ad       	ldd	r25, Y+59	; 0x3b
     54a:	ac ad       	ldd	r26, Y+60	; 0x3c
     54c:	89 01       	movw	r16, r18
     54e:	9c 01       	movw	r18, r24
     550:	4a 2f       	mov	r20, r26
     552:	63 e0       	ldi	r22, 0x03	; 3
     554:	8f 81       	ldd	r24, Y+7	; 0x07
     556:	e7 dd       	rcall	.-1074   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,4,(rgb_color){20,0,20},leds);
     558:	84 e1       	ldi	r24, 0x14	; 20
     55a:	8f ab       	std	Y+55, r24	; 0x37
     55c:	18 ae       	std	Y+56, r1	; 0x38
     55e:	84 e1       	ldi	r24, 0x14	; 20
     560:	89 af       	std	Y+57, r24	; 0x39
     562:	9e 01       	movw	r18, r28
     564:	22 5a       	subi	r18, 0xA2	; 162
     566:	3f 4f       	sbci	r19, 0xFF	; 255
     568:	8f a9       	ldd	r24, Y+55	; 0x37
     56a:	98 ad       	ldd	r25, Y+56	; 0x38
     56c:	a9 ad       	ldd	r26, Y+57	; 0x39
     56e:	89 01       	movw	r16, r18
     570:	9c 01       	movw	r18, r24
     572:	4a 2f       	mov	r20, r26
     574:	64 e0       	ldi	r22, 0x04	; 4
     576:	8f 81       	ldd	r24, Y+7	; 0x07
     578:	d6 dd       	rcall	.-1108   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,5,(rgb_color){20,0,20},leds);
     57a:	84 e1       	ldi	r24, 0x14	; 20
     57c:	8c ab       	std	Y+52, r24	; 0x34
     57e:	1d aa       	std	Y+53, r1	; 0x35
     580:	84 e1       	ldi	r24, 0x14	; 20
     582:	8e ab       	std	Y+54, r24	; 0x36
     584:	9e 01       	movw	r18, r28
     586:	22 5a       	subi	r18, 0xA2	; 162
     588:	3f 4f       	sbci	r19, 0xFF	; 255
     58a:	8c a9       	ldd	r24, Y+52	; 0x34
     58c:	9d a9       	ldd	r25, Y+53	; 0x35
     58e:	ae a9       	ldd	r26, Y+54	; 0x36
     590:	89 01       	movw	r16, r18
     592:	9c 01       	movw	r18, r24
     594:	4a 2f       	mov	r20, r26
     596:	65 e0       	ldi	r22, 0x05	; 5
     598:	8f 81       	ldd	r24, Y+7	; 0x07
     59a:	c5 dd       	rcall	.-1142   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,6,(rgb_color){20,0,20},leds);
     59c:	84 e1       	ldi	r24, 0x14	; 20
     59e:	89 ab       	std	Y+49, r24	; 0x31
     5a0:	1a aa       	std	Y+50, r1	; 0x32
     5a2:	84 e1       	ldi	r24, 0x14	; 20
     5a4:	8b ab       	std	Y+51, r24	; 0x33
     5a6:	9e 01       	movw	r18, r28
     5a8:	22 5a       	subi	r18, 0xA2	; 162
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	89 a9       	ldd	r24, Y+49	; 0x31
     5ae:	9a a9       	ldd	r25, Y+50	; 0x32
     5b0:	ab a9       	ldd	r26, Y+51	; 0x33
     5b2:	89 01       	movw	r16, r18
     5b4:	9c 01       	movw	r18, r24
     5b6:	4a 2f       	mov	r20, r26
     5b8:	66 e0       	ldi	r22, 0x06	; 6
     5ba:	8f 81       	ldd	r24, Y+7	; 0x07
     5bc:	b4 dd       	rcall	.-1176   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,7,(rgb_color){20,0,20},leds);
     5be:	84 e1       	ldi	r24, 0x14	; 20
     5c0:	8e a7       	std	Y+46, r24	; 0x2e
     5c2:	1f a6       	std	Y+47, r1	; 0x2f
     5c4:	84 e1       	ldi	r24, 0x14	; 20
     5c6:	88 ab       	std	Y+48, r24	; 0x30
     5c8:	9e 01       	movw	r18, r28
     5ca:	22 5a       	subi	r18, 0xA2	; 162
     5cc:	3f 4f       	sbci	r19, 0xFF	; 255
     5ce:	8e a5       	ldd	r24, Y+46	; 0x2e
     5d0:	9f a5       	ldd	r25, Y+47	; 0x2f
     5d2:	a8 a9       	ldd	r26, Y+48	; 0x30
     5d4:	89 01       	movw	r16, r18
     5d6:	9c 01       	movw	r18, r24
     5d8:	4a 2f       	mov	r20, r26
     5da:	67 e0       	ldi	r22, 0x07	; 7
     5dc:	8f 81       	ldd	r24, Y+7	; 0x07
     5de:	a3 dd       	rcall	.-1210   	; 0x126 <led_strip_set_pixel>
     5e0:	8f 81       	ldd	r24, Y+7	; 0x07
                   
                   x=x+4;
     5e2:	8c 5f       	subi	r24, 0xFC	; 252
     5e4:	8f 83       	std	Y+7, r24	; 0x07
                   led_strip_set_pixel(x,0,(rgb_color){20,0,20},leds);
     5e6:	84 e1       	ldi	r24, 0x14	; 20
     5e8:	8b a7       	std	Y+43, r24	; 0x2b
     5ea:	1c a6       	std	Y+44, r1	; 0x2c
     5ec:	84 e1       	ldi	r24, 0x14	; 20
     5ee:	8d a7       	std	Y+45, r24	; 0x2d
     5f0:	9e 01       	movw	r18, r28
     5f2:	22 5a       	subi	r18, 0xA2	; 162
     5f4:	3f 4f       	sbci	r19, 0xFF	; 255
     5f6:	8b a5       	ldd	r24, Y+43	; 0x2b
     5f8:	9c a5       	ldd	r25, Y+44	; 0x2c
     5fa:	ad a5       	ldd	r26, Y+45	; 0x2d
     5fc:	89 01       	movw	r16, r18
     5fe:	9c 01       	movw	r18, r24
     600:	4a 2f       	mov	r20, r26
     602:	60 e0       	ldi	r22, 0x00	; 0
     604:	8f 81       	ldd	r24, Y+7	; 0x07
     606:	8f dd       	rcall	.-1250   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,1,(rgb_color){20,0,20},leds);
     608:	84 e1       	ldi	r24, 0x14	; 20
     60a:	88 a7       	std	Y+40, r24	; 0x28
     60c:	19 a6       	std	Y+41, r1	; 0x29
     60e:	84 e1       	ldi	r24, 0x14	; 20
     610:	8a a7       	std	Y+42, r24	; 0x2a
     612:	9e 01       	movw	r18, r28
     614:	22 5a       	subi	r18, 0xA2	; 162
     616:	3f 4f       	sbci	r19, 0xFF	; 255
     618:	88 a5       	ldd	r24, Y+40	; 0x28
     61a:	99 a5       	ldd	r25, Y+41	; 0x29
     61c:	aa a5       	ldd	r26, Y+42	; 0x2a
     61e:	89 01       	movw	r16, r18
     620:	9c 01       	movw	r18, r24
     622:	4a 2f       	mov	r20, r26
     624:	61 e0       	ldi	r22, 0x01	; 1
     626:	8f 81       	ldd	r24, Y+7	; 0x07
     628:	7e dd       	rcall	.-1284   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,2,(rgb_color){20,0,20},leds);
     62a:	84 e1       	ldi	r24, 0x14	; 20
     62c:	8d a3       	std	Y+37, r24	; 0x25
     62e:	1e a2       	std	Y+38, r1	; 0x26
     630:	84 e1       	ldi	r24, 0x14	; 20
     632:	8f a3       	std	Y+39, r24	; 0x27
     634:	9e 01       	movw	r18, r28
     636:	22 5a       	subi	r18, 0xA2	; 162
     638:	3f 4f       	sbci	r19, 0xFF	; 255
     63a:	8d a1       	ldd	r24, Y+37	; 0x25
     63c:	9e a1       	ldd	r25, Y+38	; 0x26
     63e:	af a1       	ldd	r26, Y+39	; 0x27
     640:	89 01       	movw	r16, r18
     642:	9c 01       	movw	r18, r24
     644:	4a 2f       	mov	r20, r26
     646:	62 e0       	ldi	r22, 0x02	; 2
     648:	8f 81       	ldd	r24, Y+7	; 0x07
     64a:	6d dd       	rcall	.-1318   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,3,(rgb_color){20,0,20},leds);
     64c:	84 e1       	ldi	r24, 0x14	; 20
     64e:	8a a3       	std	Y+34, r24	; 0x22
     650:	1b a2       	std	Y+35, r1	; 0x23
     652:	84 e1       	ldi	r24, 0x14	; 20
     654:	8c a3       	std	Y+36, r24	; 0x24
     656:	9e 01       	movw	r18, r28
     658:	22 5a       	subi	r18, 0xA2	; 162
     65a:	3f 4f       	sbci	r19, 0xFF	; 255
     65c:	8a a1       	ldd	r24, Y+34	; 0x22
     65e:	9b a1       	ldd	r25, Y+35	; 0x23
     660:	ac a1       	ldd	r26, Y+36	; 0x24
     662:	89 01       	movw	r16, r18
     664:	9c 01       	movw	r18, r24
     666:	4a 2f       	mov	r20, r26
     668:	63 e0       	ldi	r22, 0x03	; 3
     66a:	8f 81       	ldd	r24, Y+7	; 0x07
     66c:	5c dd       	rcall	.-1352   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,4,(rgb_color){20,0,20},leds);
     66e:	84 e1       	ldi	r24, 0x14	; 20
     670:	8f 8f       	std	Y+31, r24	; 0x1f
     672:	18 a2       	std	Y+32, r1	; 0x20
     674:	84 e1       	ldi	r24, 0x14	; 20
     676:	89 a3       	std	Y+33, r24	; 0x21
     678:	9e 01       	movw	r18, r28
     67a:	22 5a       	subi	r18, 0xA2	; 162
     67c:	3f 4f       	sbci	r19, 0xFF	; 255
     67e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     680:	98 a1       	ldd	r25, Y+32	; 0x20
     682:	a9 a1       	ldd	r26, Y+33	; 0x21
     684:	89 01       	movw	r16, r18
     686:	9c 01       	movw	r18, r24
     688:	4a 2f       	mov	r20, r26
     68a:	64 e0       	ldi	r22, 0x04	; 4
     68c:	8f 81       	ldd	r24, Y+7	; 0x07
     68e:	4b dd       	rcall	.-1386   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,5,(rgb_color){20,0,20},leds);
     690:	84 e1       	ldi	r24, 0x14	; 20
     692:	8c 8f       	std	Y+28, r24	; 0x1c
     694:	1d 8e       	std	Y+29, r1	; 0x1d
     696:	84 e1       	ldi	r24, 0x14	; 20
     698:	8e 8f       	std	Y+30, r24	; 0x1e
     69a:	9e 01       	movw	r18, r28
     69c:	22 5a       	subi	r18, 0xA2	; 162
     69e:	3f 4f       	sbci	r19, 0xFF	; 255
     6a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
     6a2:	9d 8d       	ldd	r25, Y+29	; 0x1d
     6a4:	ae 8d       	ldd	r26, Y+30	; 0x1e
     6a6:	89 01       	movw	r16, r18
     6a8:	9c 01       	movw	r18, r24
     6aa:	4a 2f       	mov	r20, r26
     6ac:	65 e0       	ldi	r22, 0x05	; 5
     6ae:	8f 81       	ldd	r24, Y+7	; 0x07
     6b0:	3a dd       	rcall	.-1420   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,6,(rgb_color){20,0,20},leds);
     6b2:	84 e1       	ldi	r24, 0x14	; 20
     6b4:	89 8f       	std	Y+25, r24	; 0x19
     6b6:	1a 8e       	std	Y+26, r1	; 0x1a
     6b8:	84 e1       	ldi	r24, 0x14	; 20
     6ba:	8b 8f       	std	Y+27, r24	; 0x1b
     6bc:	9e 01       	movw	r18, r28
     6be:	22 5a       	subi	r18, 0xA2	; 162
     6c0:	3f 4f       	sbci	r19, 0xFF	; 255
     6c2:	89 8d       	ldd	r24, Y+25	; 0x19
     6c4:	9a 8d       	ldd	r25, Y+26	; 0x1a
     6c6:	ab 8d       	ldd	r26, Y+27	; 0x1b
     6c8:	89 01       	movw	r16, r18
     6ca:	9c 01       	movw	r18, r24
     6cc:	4a 2f       	mov	r20, r26
     6ce:	66 e0       	ldi	r22, 0x06	; 6
     6d0:	8f 81       	ldd	r24, Y+7	; 0x07
     6d2:	29 dd       	rcall	.-1454   	; 0x126 <led_strip_set_pixel>
                   led_strip_set_pixel(x,7,(rgb_color){20,0,20},leds);
     6d4:	84 e1       	ldi	r24, 0x14	; 20
     6d6:	8e 8b       	std	Y+22, r24	; 0x16
     6d8:	1f 8a       	std	Y+23, r1	; 0x17
     6da:	84 e1       	ldi	r24, 0x14	; 20
     6dc:	88 8f       	std	Y+24, r24	; 0x18
     6de:	9e 01       	movw	r18, r28
     6e0:	22 5a       	subi	r18, 0xA2	; 162
     6e2:	3f 4f       	sbci	r19, 0xFF	; 255
     6e4:	8e 89       	ldd	r24, Y+22	; 0x16
     6e6:	9f 89       	ldd	r25, Y+23	; 0x17
     6e8:	a8 8d       	ldd	r26, Y+24	; 0x18
     6ea:	89 01       	movw	r16, r18
     6ec:	9c 01       	movw	r18, r24
     6ee:	4a 2f       	mov	r20, r26
     6f0:	67 e0       	ldi	r22, 0x07	; 7
     6f2:	8f 81       	ldd	r24, Y+7	; 0x07
     6f4:	18 dd       	rcall	.-1488   	; 0x126 <led_strip_set_pixel>
     6f6:	2e c0       	rjmp	.+92     	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
        //TEST---------------------------------------------------------------------
        for (i=0; i<8; i=i+1)
        {
            
                if ((j== 0 ||j== 8 || j==16 || j==32 ||j== 40 ||j== 48||j== 56)&&schreiben)
                {
     6f8:	29 81       	ldd	r18, Y+1	; 0x01
                   led_strip_set_pixel(x,6,(rgb_color){20,0,20},leds);
                   led_strip_set_pixel(x,7,(rgb_color){20,0,20},leds);
                } 
                else
                {
                    leds[i+j] = (rgb_color){0,0,0};
     6fa:	3a 81       	ldd	r19, Y+2	; 0x02
     6fc:	8b 81       	ldd	r24, Y+3	; 0x03
     6fe:	9c 81       	ldd	r25, Y+4	; 0x04
     700:	82 0f       	add	r24, r18
     702:	93 1f       	adc	r25, r19
     704:	ae 01       	movw	r20, r28
     706:	42 5a       	subi	r20, 0xA2	; 162
     708:	5f 4f       	sbci	r21, 0xFF	; 255
     70a:	9c 01       	movw	r18, r24
     70c:	22 0f       	add	r18, r18
     70e:	33 1f       	adc	r19, r19
     710:	28 0f       	add	r18, r24
     712:	39 1f       	adc	r19, r25
     714:	24 0f       	add	r18, r20
     716:	35 1f       	adc	r19, r21
     718:	f9 01       	movw	r30, r18
     71a:	10 82       	st	Z, r1
     71c:	ae 01       	movw	r20, r28
     71e:	42 5a       	subi	r20, 0xA2	; 162
     720:	5f 4f       	sbci	r21, 0xFF	; 255
     722:	9c 01       	movw	r18, r24
     724:	22 0f       	add	r18, r18
     726:	33 1f       	adc	r19, r19
     728:	28 0f       	add	r18, r24
     72a:	39 1f       	adc	r19, r25
     72c:	24 0f       	add	r18, r20
     72e:	35 1f       	adc	r19, r21
     730:	2f 5f       	subi	r18, 0xFF	; 255
     732:	3f 4f       	sbci	r19, 0xFF	; 255
     734:	f9 01       	movw	r30, r18
     736:	10 82       	st	Z, r1
     738:	ae 01       	movw	r20, r28
     73a:	42 5a       	subi	r20, 0xA2	; 162
     73c:	5f 4f       	sbci	r21, 0xFF	; 255
     73e:	9c 01       	movw	r18, r24
     740:	22 0f       	add	r18, r18
     742:	33 1f       	adc	r19, r19
     744:	28 0f       	add	r18, r24
     746:	39 1f       	adc	r19, r25
     748:	ca 01       	movw	r24, r20
     74a:	82 0f       	add	r24, r18
     74c:	93 1f       	adc	r25, r19
     74e:	02 96       	adiw	r24, 0x02	; 2
     750:	fc 01       	movw	r30, r24
     752:	10 82       	st	Z, r1
     754:	89 81       	ldd	r24, Y+1	; 0x01
    
    //Unendlichschlaufe
    while(1)
    {
        //TEST---------------------------------------------------------------------
        for (i=0; i<8; i=i+1)
     756:	9a 81       	ldd	r25, Y+2	; 0x02
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	9a 83       	std	Y+2, r25	; 0x02
     75c:	89 83       	std	Y+1, r24	; 0x01
     75e:	89 81       	ldd	r24, Y+1	; 0x01
     760:	9a 81       	ldd	r25, Y+2	; 0x02
     762:	08 97       	sbiw	r24, 0x08	; 8
     764:	08 f4       	brcc	.+2      	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
     766:	65 cd       	rjmp	.-1334   	; 0x232 <main+0x44>
     768:	8b 81       	ldd	r24, Y+3	; 0x03
                else
                {
                    leds[i+j] = (rgb_color){0,0,0};
                }
        }
        j = j+8;
     76a:	9c 81       	ldd	r25, Y+4	; 0x04
     76c:	08 96       	adiw	r24, 0x08	; 8
     76e:	9c 83       	std	Y+4, r25	; 0x04
     770:	8b 83       	std	Y+3, r24	; 0x03
     772:	8b 81       	ldd	r24, Y+3	; 0x03
       
        if (j > 248)
     774:	9c 81       	ldd	r25, Y+4	; 0x04
     776:	89 3f       	cpi	r24, 0xF9	; 249
     778:	91 05       	cpc	r25, r1
     77a:	60 f0       	brcs	.+24     	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
     77c:	1c 82       	std	Y+4, r1	; 0x04
        {
            j = 0;
     77e:	1b 82       	std	Y+3, r1	; 0x03
     780:	21 e0       	ldi	r18, 0x01	; 1
            schreiben=!schreiben;
     782:	8d 81       	ldd	r24, Y+5	; 0x05
     784:	9e 81       	ldd	r25, Y+6	; 0x06
     786:	89 2b       	or	r24, r25
     788:	09 f0       	breq	.+2      	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	82 2f       	mov	r24, r18
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	9e 83       	std	Y+6, r25	; 0x06
     792:	8d 83       	std	Y+5, r24	; 0x05
     794:	1a 82       	std	Y+2, r1	; 0x02
        }
        for (i=0; i<8; i=i+1)
     796:	19 82       	std	Y+1, r1	; 0x01
     798:	a0 c0       	rjmp	.+320    	; 0x8da <__LOCK_REGION_LENGTH__+0x4da>
     79a:	29 81       	ldd	r18, Y+1	; 0x01
       {
           leds[i+j] = (rgb_color){50,0,0};
     79c:	3a 81       	ldd	r19, Y+2	; 0x02
     79e:	8b 81       	ldd	r24, Y+3	; 0x03
     7a0:	9c 81       	ldd	r25, Y+4	; 0x04
     7a2:	82 0f       	add	r24, r18
     7a4:	93 1f       	adc	r25, r19
     7a6:	ae 01       	movw	r20, r28
     7a8:	42 5a       	subi	r20, 0xA2	; 162
     7aa:	5f 4f       	sbci	r21, 0xFF	; 255
     7ac:	9c 01       	movw	r18, r24
     7ae:	22 0f       	add	r18, r18
     7b0:	33 1f       	adc	r19, r19
     7b2:	28 0f       	add	r18, r24
     7b4:	39 1f       	adc	r19, r25
     7b6:	24 0f       	add	r18, r20
     7b8:	35 1f       	adc	r19, r21
     7ba:	42 e3       	ldi	r20, 0x32	; 50
     7bc:	f9 01       	movw	r30, r18
     7be:	40 83       	st	Z, r20
     7c0:	ae 01       	movw	r20, r28
     7c2:	42 5a       	subi	r20, 0xA2	; 162
     7c4:	5f 4f       	sbci	r21, 0xFF	; 255
     7c6:	9c 01       	movw	r18, r24
     7c8:	22 0f       	add	r18, r18
     7ca:	33 1f       	adc	r19, r19
     7cc:	28 0f       	add	r18, r24
     7ce:	39 1f       	adc	r19, r25
     7d0:	24 0f       	add	r18, r20
     7d2:	35 1f       	adc	r19, r21
     7d4:	2f 5f       	subi	r18, 0xFF	; 255
     7d6:	3f 4f       	sbci	r19, 0xFF	; 255
     7d8:	f9 01       	movw	r30, r18
     7da:	10 82       	st	Z, r1
     7dc:	ae 01       	movw	r20, r28
     7de:	42 5a       	subi	r20, 0xA2	; 162
     7e0:	5f 4f       	sbci	r21, 0xFF	; 255
     7e2:	9c 01       	movw	r18, r24
     7e4:	22 0f       	add	r18, r18
     7e6:	33 1f       	adc	r19, r19
     7e8:	28 0f       	add	r18, r24
     7ea:	39 1f       	adc	r19, r25
     7ec:	ca 01       	movw	r24, r20
     7ee:	82 0f       	add	r24, r18
     7f0:	93 1f       	adc	r25, r19
     7f2:	02 96       	adiw	r24, 0x02	; 2
     7f4:	fc 01       	movw	r30, r24
     7f6:	10 82       	st	Z, r1
     7f8:	80 e0       	ldi	r24, 0x00	; 0
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	a0 ea       	ldi	r26, 0xA0	; 160
     7fe:	b0 e4       	ldi	r27, 0x40	; 64
     800:	88 87       	std	Y+8, r24	; 0x08
     802:	99 87       	std	Y+9, r25	; 0x09
     804:	aa 87       	std	Y+10, r26	; 0x0a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     806:	bb 87       	std	Y+11, r27	; 0x0b
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	4a e7       	ldi	r20, 0x7A	; 122
     80e:	55 e4       	ldi	r21, 0x45	; 69
     810:	68 85       	ldd	r22, Y+8	; 0x08
     812:	79 85       	ldd	r23, Y+9	; 0x09
     814:	8a 85       	ldd	r24, Y+10	; 0x0a
     816:	9b 85       	ldd	r25, Y+11	; 0x0b
     818:	a5 d3       	rcall	.+1866   	; 0xf64 <__mulsf3>
     81a:	dc 01       	movw	r26, r24
     81c:	cb 01       	movw	r24, r22
     81e:	8c 87       	std	Y+12, r24	; 0x0c
     820:	9d 87       	std	Y+13, r25	; 0x0d
     822:	ae 87       	std	Y+14, r26	; 0x0e
	if (__tmp < 1.0)
     824:	bf 87       	std	Y+15, r27	; 0x0f
     826:	20 e0       	ldi	r18, 0x00	; 0
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	40 e8       	ldi	r20, 0x80	; 128
     82c:	5f e3       	ldi	r21, 0x3F	; 63
     82e:	6c 85       	ldd	r22, Y+12	; 0x0c
     830:	7d 85       	ldd	r23, Y+13	; 0x0d
     832:	8e 85       	ldd	r24, Y+14	; 0x0e
     834:	9f 85       	ldd	r25, Y+15	; 0x0f
     836:	15 d3       	rcall	.+1578   	; 0xe62 <__cmpsf2>
     838:	88 23       	and	r24, r24
		__ticks = 1;
     83a:	2c f4       	brge	.+10     	; 0x846 <__LOCK_REGION_LENGTH__+0x446>
     83c:	81 e0       	ldi	r24, 0x01	; 1
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	99 8b       	std	Y+17, r25	; 0x11
	else if (__tmp > 65535)
     842:	88 8b       	std	Y+16, r24	; 0x10
     844:	3b c0       	rjmp	.+118    	; 0x8bc <__LOCK_REGION_LENGTH__+0x4bc>
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	3f ef       	ldi	r19, 0xFF	; 255
     84a:	4f e7       	ldi	r20, 0x7F	; 127
     84c:	57 e4       	ldi	r21, 0x47	; 71
     84e:	6c 85       	ldd	r22, Y+12	; 0x0c
     850:	7d 85       	ldd	r23, Y+13	; 0x0d
     852:	8e 85       	ldd	r24, Y+14	; 0x0e
     854:	9f 85       	ldd	r25, Y+15	; 0x0f
     856:	82 d3       	rcall	.+1796   	; 0xf5c <__gesf2>
     858:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     85a:	3c f5       	brge	.+78     	; 0x8aa <__LOCK_REGION_LENGTH__+0x4aa>
     85c:	20 e0       	ldi	r18, 0x00	; 0
     85e:	30 e0       	ldi	r19, 0x00	; 0
     860:	40 e2       	ldi	r20, 0x20	; 32
     862:	51 e4       	ldi	r21, 0x41	; 65
     864:	68 85       	ldd	r22, Y+8	; 0x08
     866:	79 85       	ldd	r23, Y+9	; 0x09
     868:	8a 85       	ldd	r24, Y+10	; 0x0a
     86a:	9b 85       	ldd	r25, Y+11	; 0x0b
     86c:	7b d3       	rcall	.+1782   	; 0xf64 <__mulsf3>
     86e:	dc 01       	movw	r26, r24
     870:	cb 01       	movw	r24, r22
     872:	bc 01       	movw	r22, r24
     874:	cd 01       	movw	r24, r26
     876:	f9 d2       	rcall	.+1522   	; 0xe6a <__fixunssfsi>
     878:	dc 01       	movw	r26, r24
     87a:	cb 01       	movw	r24, r22
     87c:	99 8b       	std	Y+17, r25	; 0x11
     87e:	88 8b       	std	Y+16, r24	; 0x10
     880:	0f c0       	rjmp	.+30     	; 0x8a0 <__LOCK_REGION_LENGTH__+0x4a0>
     882:	80 e9       	ldi	r24, 0x90	; 144
     884:	91 e0       	ldi	r25, 0x01	; 1
     886:	9b 8b       	std	Y+19, r25	; 0x13
     888:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     88a:	8a 89       	ldd	r24, Y+18	; 0x12
     88c:	9b 89       	ldd	r25, Y+19	; 0x13
     88e:	01 97       	sbiw	r24, 0x01	; 1
     890:	f1 f7       	brne	.-4      	; 0x88e <__LOCK_REGION_LENGTH__+0x48e>
     892:	9b 8b       	std	Y+19, r25	; 0x13
     894:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     896:	88 89       	ldd	r24, Y+16	; 0x10
     898:	99 89       	ldd	r25, Y+17	; 0x11
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	99 8b       	std	Y+17, r25	; 0x11
     89e:	88 8b       	std	Y+16, r24	; 0x10
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8a0:	88 89       	ldd	r24, Y+16	; 0x10
     8a2:	99 89       	ldd	r25, Y+17	; 0x11
     8a4:	89 2b       	or	r24, r25
     8a6:	69 f7       	brne	.-38     	; 0x882 <__LOCK_REGION_LENGTH__+0x482>
     8a8:	13 c0       	rjmp	.+38     	; 0x8d0 <__LOCK_REGION_LENGTH__+0x4d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8aa:	6c 85       	ldd	r22, Y+12	; 0x0c
     8ac:	7d 85       	ldd	r23, Y+13	; 0x0d
     8ae:	8e 85       	ldd	r24, Y+14	; 0x0e
     8b0:	9f 85       	ldd	r25, Y+15	; 0x0f
     8b2:	db d2       	rcall	.+1462   	; 0xe6a <__fixunssfsi>
     8b4:	dc 01       	movw	r26, r24
     8b6:	cb 01       	movw	r24, r22
     8b8:	99 8b       	std	Y+17, r25	; 0x11
     8ba:	88 8b       	std	Y+16, r24	; 0x10
     8bc:	88 89       	ldd	r24, Y+16	; 0x10
     8be:	99 89       	ldd	r25, Y+17	; 0x11
     8c0:	9d 8b       	std	Y+21, r25	; 0x15
     8c2:	8c 8b       	std	Y+20, r24	; 0x14
     8c4:	8c 89       	ldd	r24, Y+20	; 0x14
     8c6:	9d 89       	ldd	r25, Y+21	; 0x15
     8c8:	01 97       	sbiw	r24, 0x01	; 1
     8ca:	f1 f7       	brne	.-4      	; 0x8c8 <__LOCK_REGION_LENGTH__+0x4c8>
     8cc:	9d 8b       	std	Y+21, r25	; 0x15
     8ce:	8c 8b       	std	Y+20, r24	; 0x14
        if (j > 248)
        {
            j = 0;
            schreiben=!schreiben;
        }
        for (i=0; i<8; i=i+1)
     8d0:	89 81       	ldd	r24, Y+1	; 0x01
     8d2:	9a 81       	ldd	r25, Y+2	; 0x02
     8d4:	01 96       	adiw	r24, 0x01	; 1
     8d6:	9a 83       	std	Y+2, r25	; 0x02
     8d8:	89 83       	std	Y+1, r24	; 0x01
     8da:	89 81       	ldd	r24, Y+1	; 0x01
     8dc:	9a 81       	ldd	r25, Y+2	; 0x02
     8de:	08 97       	sbiw	r24, 0x08	; 8
     8e0:	08 f4       	brcc	.+2      	; 0x8e4 <__LOCK_REGION_LENGTH__+0x4e4>
     8e2:	5b cf       	rjmp	.-330    	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
           leds[i+j] = (rgb_color){50,0,0};
            
           _delay_ms(5);
        }
        
        led_strip_write(leds);
     8e4:	ce 01       	movw	r24, r28
     8e6:	82 5a       	subi	r24, 0xA2	; 162
     8e8:	9f 4f       	sbci	r25, 0xFF	; 255
     8ea:	89 d2       	rcall	.+1298   	; 0xdfe <led_strip_write>
     8ec:	9f cc       	rjmp	.-1730   	; 0x22c <main+0x3e>

000008ee <startSystemTimeMs>:
        
        //Verarbeitung-------------------------------------------------------------
        
        //Ausgabe------------------------------------------------------------------
        
    }
     8ee:	83 e0       	ldi	r24, 0x03	; 3
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
     8f0:	84 bd       	out	0x24, r24	; 36
     8f2:	8b e0       	ldi	r24, 0x0B	; 11
     8f4:	85 bd       	out	0x25, r24	; 37
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
     8fc:	89 ef       	ldi	r24, 0xF9	; 249
     8fe:	87 bd       	out	0x27, r24	; 39
     900:	08 95       	ret

00000902 <initAdc>:
     902:	11 ba       	out	0x11, r1	; 17
     904:	10 ba       	out	0x10, r1	; 16
     906:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     90a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     90e:	80 e4       	ldi	r24, 0x40	; 64
     910:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     914:	8f e0       	ldi	r24, 0x0F	; 15
     916:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     91a:	8f ef       	ldi	r24, 0xFF	; 255
     91c:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     920:	ea e7       	ldi	r30, 0x7A	; 122
     922:	f0 e0       	ldi	r31, 0x00	; 0
     924:	87 ea       	ldi	r24, 0xA7	; 167
     926:	80 83       	st	Z, r24
     928:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     92c:	80 81       	ld	r24, Z
     92e:	80 64       	ori	r24, 0x40	; 64
     930:	80 83       	st	Z, r24
     932:	80 81       	ld	r24, Z
     934:	84 ff       	sbrs	r24, 4
     936:	fd cf       	rjmp	.-6      	; 0x932 <initAdc+0x30>
     938:	ea e7       	ldi	r30, 0x7A	; 122
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	80 81       	ld	r24, Z
     93e:	8f 7e       	andi	r24, 0xEF	; 239
     940:	80 83       	st	Z, r24
     942:	08 95       	ret

00000944 <adcRead>:
     944:	90 e4       	ldi	r25, 0x40	; 64
     946:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     94a:	88 30       	cpi	r24, 0x08	; 8
     94c:	60 f0       	brcs	.+24     	; 0x966 <adcRead+0x22>
     94e:	ec e7       	ldi	r30, 0x7C	; 124
     950:	f0 e0       	ldi	r31, 0x00	; 0
     952:	90 81       	ld	r25, Z
     954:	88 50       	subi	r24, 0x08	; 8
     956:	89 2b       	or	r24, r25
     958:	80 83       	st	Z, r24
     95a:	eb e7       	ldi	r30, 0x7B	; 123
     95c:	f0 e0       	ldi	r31, 0x00	; 0
     95e:	80 81       	ld	r24, Z
     960:	88 61       	ori	r24, 0x18	; 24
     962:	80 83       	st	Z, r24
     964:	0a c0       	rjmp	.+20     	; 0x97a <adcRead+0x36>
     966:	ec e7       	ldi	r30, 0x7C	; 124
     968:	f0 e0       	ldi	r31, 0x00	; 0
     96a:	90 81       	ld	r25, Z
     96c:	89 2b       	or	r24, r25
     96e:	80 83       	st	Z, r24
     970:	eb e7       	ldi	r30, 0x7B	; 123
     972:	f0 e0       	ldi	r31, 0x00	; 0
     974:	80 81       	ld	r24, Z
     976:	87 7e       	andi	r24, 0xE7	; 231
     978:	80 83       	st	Z, r24
     97a:	ea e7       	ldi	r30, 0x7A	; 122
     97c:	f0 e0       	ldi	r31, 0x00	; 0
     97e:	80 81       	ld	r24, Z
     980:	80 64       	ori	r24, 0x40	; 64
     982:	80 83       	st	Z, r24
     984:	80 81       	ld	r24, Z
     986:	84 ff       	sbrs	r24, 4
     988:	fd cf       	rjmp	.-6      	; 0x984 <adcRead+0x40>
     98a:	8f ea       	ldi	r24, 0xAF	; 175
     98c:	94 e0       	ldi	r25, 0x04	; 4
     98e:	01 97       	sbiw	r24, 0x01	; 1
     990:	f1 f7       	brne	.-4      	; 0x98e <adcRead+0x4a>
     992:	00 c0       	rjmp	.+0      	; 0x994 <adcRead+0x50>
     994:	00 00       	nop
     996:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     99a:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     99e:	ea e7       	ldi	r30, 0x7A	; 122
     9a0:	f0 e0       	ldi	r31, 0x00	; 0
     9a2:	90 81       	ld	r25, Z
     9a4:	9f 7e       	andi	r25, 0xEF	; 239
     9a6:	90 83       	st	Z, r25
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	92 2b       	or	r25, r18
     9ac:	08 95       	ret

000009ae <rgbWrite>:
     9ae:	2f ef       	ldi	r18, 0xFF	; 255
     9b0:	33 e0       	ldi	r19, 0x03	; 3
     9b2:	f9 01       	movw	r30, r18
     9b4:	e8 1b       	sub	r30, r24
     9b6:	f9 0b       	sbc	r31, r25
     9b8:	c9 01       	movw	r24, r18
     9ba:	86 1b       	sub	r24, r22
     9bc:	97 0b       	sbc	r25, r23
     9be:	24 1b       	sub	r18, r20
     9c0:	35 0b       	sbc	r19, r21
     9c2:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     9c6:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     9ca:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     9ce:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     9d2:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     9d6:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     9da:	08 95       	ret

000009dc <initRgb>:
     9dc:	8e ef       	ldi	r24, 0xFE	; 254
     9de:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
     9e2:	8b e1       	ldi	r24, 0x1B	; 27
     9e4:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
     9e8:	83 e0       	ldi	r24, 0x03	; 3
     9ea:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     9ee:	8f ef       	ldi	r24, 0xFF	; 255
     9f0:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     9f4:	40 e0       	ldi	r20, 0x00	; 0
     9f6:	50 e0       	ldi	r21, 0x00	; 0
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	d6 cf       	rjmp	.-84     	; 0x9ae <rgbWrite>
     a02:	08 95       	ret

00000a04 <lcdSid>:
     a04:	88 23       	and	r24, r24
     a06:	11 f0       	breq	.+4      	; 0xa0c <lcdSid+0x8>
     a08:	a0 9a       	sbi	0x14, 0	; 20
     a0a:	08 95       	ret
     a0c:	a0 98       	cbi	0x14, 0	; 20
     a0e:	08 95       	ret

00000a10 <lcdSclk>:
     a10:	88 23       	and	r24, r24
     a12:	11 f0       	breq	.+4      	; 0xa18 <lcdSclk+0x8>
     a14:	a1 9a       	sbi	0x14, 1	; 20
     a16:	08 95       	ret
     a18:	a1 98       	cbi	0x14, 1	; 20
     a1a:	08 95       	ret

00000a1c <lcdLight>:
     a1c:	81 11       	cpse	r24, r1
     a1e:	04 c0       	rjmp	.+8      	; 0xa28 <lcdLight+0xc>
     a20:	84 b5       	in	r24, 0x24	; 36
     a22:	8f 7d       	andi	r24, 0xDF	; 223
     a24:	84 bd       	out	0x24, r24	; 36
     a26:	08 95       	ret
     a28:	94 b5       	in	r25, 0x24	; 36
     a2a:	90 62       	ori	r25, 0x20	; 32
     a2c:	94 bd       	out	0x24, r25	; 36
     a2e:	88 bd       	out	0x28, r24	; 40
     a30:	08 95       	ret

00000a32 <writeLcdF>:
     a32:	ef 92       	push	r14
     a34:	ff 92       	push	r15
     a36:	0f 93       	push	r16
     a38:	1f 93       	push	r17
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	7c 01       	movw	r14, r24
     a40:	eb 01       	movw	r28, r22
     a42:	81 e0       	ldi	r24, 0x01	; 1
     a44:	df df       	rcall	.-66     	; 0xa04 <lcdSid>
     a46:	05 e0       	ldi	r16, 0x05	; 5
     a48:	10 e0       	ldi	r17, 0x00	; 0
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	e1 df       	rcall	.-62     	; 0xa10 <lcdSclk>
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	df df       	rcall	.-66     	; 0xa10 <lcdSclk>
     a52:	01 50       	subi	r16, 0x01	; 1
     a54:	11 09       	sbc	r17, r1
     a56:	c9 f7       	brne	.-14     	; 0xa4a <writeLcdF+0x18>
     a58:	80 e0       	ldi	r24, 0x00	; 0
     a5a:	d4 df       	rcall	.-88     	; 0xa04 <lcdSid>
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	d8 df       	rcall	.-80     	; 0xa10 <lcdSclk>
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	d6 df       	rcall	.-84     	; 0xa10 <lcdSclk>
     a64:	83 e4       	ldi	r24, 0x43	; 67
     a66:	e8 16       	cp	r14, r24
     a68:	f1 04       	cpc	r15, r1
     a6a:	19 f4       	brne	.+6      	; 0xa72 <writeLcdF+0x40>
     a6c:	80 e0       	ldi	r24, 0x00	; 0
     a6e:	ca df       	rcall	.-108    	; 0xa04 <lcdSid>
     a70:	02 c0       	rjmp	.+4      	; 0xa76 <writeLcdF+0x44>
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	c7 df       	rcall	.-114    	; 0xa04 <lcdSid>
     a76:	80 e0       	ldi	r24, 0x00	; 0
     a78:	cb df       	rcall	.-106    	; 0xa10 <lcdSclk>
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	c9 df       	rcall	.-110    	; 0xa10 <lcdSclk>
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	c1 df       	rcall	.-126    	; 0xa04 <lcdSid>
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	c5 df       	rcall	.-118    	; 0xa10 <lcdSclk>
     a86:	81 e0       	ldi	r24, 0x01	; 1
     a88:	c3 df       	rcall	.-122    	; 0xa10 <lcdSclk>
     a8a:	04 e0       	ldi	r16, 0x04	; 4
     a8c:	10 e0       	ldi	r17, 0x00	; 0
     a8e:	80 e0       	ldi	r24, 0x00	; 0
     a90:	bf df       	rcall	.-130    	; 0xa10 <lcdSclk>
     a92:	c0 ff       	sbrs	r28, 0
     a94:	03 c0       	rjmp	.+6      	; 0xa9c <writeLcdF+0x6a>
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	b5 df       	rcall	.-150    	; 0xa04 <lcdSid>
     a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <writeLcdF+0x6e>
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	b2 df       	rcall	.-156    	; 0xa04 <lcdSid>
     aa0:	d6 95       	lsr	r29
     aa2:	c7 95       	ror	r28
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	b4 df       	rcall	.-152    	; 0xa10 <lcdSclk>
     aa8:	81 e0       	ldi	r24, 0x01	; 1
     aaa:	b2 df       	rcall	.-156    	; 0xa10 <lcdSclk>
     aac:	01 50       	subi	r16, 0x01	; 1
     aae:	11 09       	sbc	r17, r1
     ab0:	71 f7       	brne	.-36     	; 0xa8e <writeLcdF+0x5c>
     ab2:	80 e0       	ldi	r24, 0x00	; 0
     ab4:	a7 df       	rcall	.-178    	; 0xa04 <lcdSid>
     ab6:	04 e0       	ldi	r16, 0x04	; 4
     ab8:	10 e0       	ldi	r17, 0x00	; 0
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	a9 df       	rcall	.-174    	; 0xa10 <lcdSclk>
     abe:	81 e0       	ldi	r24, 0x01	; 1
     ac0:	a7 df       	rcall	.-178    	; 0xa10 <lcdSclk>
     ac2:	01 50       	subi	r16, 0x01	; 1
     ac4:	11 09       	sbc	r17, r1
     ac6:	c9 f7       	brne	.-14     	; 0xaba <writeLcdF+0x88>
     ac8:	04 e0       	ldi	r16, 0x04	; 4
     aca:	10 e0       	ldi	r17, 0x00	; 0
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	a0 df       	rcall	.-192    	; 0xa10 <lcdSclk>
     ad0:	c0 ff       	sbrs	r28, 0
     ad2:	03 c0       	rjmp	.+6      	; 0xada <writeLcdF+0xa8>
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	96 df       	rcall	.-212    	; 0xa04 <lcdSid>
     ad8:	02 c0       	rjmp	.+4      	; 0xade <writeLcdF+0xac>
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	93 df       	rcall	.-218    	; 0xa04 <lcdSid>
     ade:	d6 95       	lsr	r29
     ae0:	c7 95       	ror	r28
     ae2:	80 e0       	ldi	r24, 0x00	; 0
     ae4:	95 df       	rcall	.-214    	; 0xa10 <lcdSclk>
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	93 df       	rcall	.-218    	; 0xa10 <lcdSclk>
     aea:	01 50       	subi	r16, 0x01	; 1
     aec:	11 09       	sbc	r17, r1
     aee:	71 f7       	brne	.-36     	; 0xacc <writeLcdF+0x9a>
     af0:	80 e0       	ldi	r24, 0x00	; 0
     af2:	88 df       	rcall	.-240    	; 0xa04 <lcdSid>
     af4:	c4 e0       	ldi	r28, 0x04	; 4
     af6:	d0 e0       	ldi	r29, 0x00	; 0
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	8a df       	rcall	.-236    	; 0xa10 <lcdSclk>
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	88 df       	rcall	.-240    	; 0xa10 <lcdSclk>
     b00:	21 97       	sbiw	r28, 0x01	; 1
     b02:	d1 f7       	brne	.-12     	; 0xaf8 <writeLcdF+0xc6>
     b04:	81 e0       	ldi	r24, 0x01	; 1
     b06:	7e df       	rcall	.-260    	; 0xa04 <lcdSid>
     b08:	87 ec       	ldi	r24, 0xC7	; 199
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	01 97       	sbiw	r24, 0x01	; 1
     b0e:	f1 f7       	brne	.-4      	; 0xb0c <writeLcdF+0xda>
     b10:	00 c0       	rjmp	.+0      	; 0xb12 <writeLcdF+0xe0>
     b12:	00 00       	nop
     b14:	df 91       	pop	r29
     b16:	cf 91       	pop	r28
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	08 95       	ret

00000b22 <lcdWriteText>:
     b22:	0f 93       	push	r16
     b24:	1f 93       	push	r17
     b26:	cf 93       	push	r28
     b28:	8a 01       	movw	r16, r20
     b2a:	90 e2       	ldi	r25, 0x20	; 32
     b2c:	89 9f       	mul	r24, r25
     b2e:	60 0d       	add	r22, r0
     b30:	11 24       	eor	r1, r1
     b32:	60 68       	ori	r22, 0x80	; 128
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	83 e4       	ldi	r24, 0x43	; 67
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	7b df       	rcall	.-266    	; 0xa32 <writeLcdF>
     b3c:	f8 01       	movw	r30, r16
     b3e:	60 81       	ld	r22, Z
     b40:	66 23       	and	r22, r22
     b42:	61 f0       	breq	.+24     	; 0xb5c <lcdWriteText+0x3a>
     b44:	c0 e0       	ldi	r28, 0x00	; 0
     b46:	cf 5f       	subi	r28, 0xFF	; 255
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	84 e4       	ldi	r24, 0x44	; 68
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	71 df       	rcall	.-286    	; 0xa32 <writeLcdF>
     b50:	f8 01       	movw	r30, r16
     b52:	ec 0f       	add	r30, r28
     b54:	f1 1d       	adc	r31, r1
     b56:	60 81       	ld	r22, Z
     b58:	61 11       	cpse	r22, r1
     b5a:	f5 cf       	rjmp	.-22     	; 0xb46 <lcdWriteText+0x24>
     b5c:	cf 91       	pop	r28
     b5e:	1f 91       	pop	r17
     b60:	0f 91       	pop	r16
     b62:	08 95       	ret

00000b64 <lcdClear>:
     b64:	61 e0       	ldi	r22, 0x01	; 1
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	83 e4       	ldi	r24, 0x43	; 67
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	62 df       	rcall	.-316    	; 0xa32 <writeLcdF>
     b6e:	8f e3       	ldi	r24, 0x3F	; 63
     b70:	9f e1       	ldi	r25, 0x1F	; 31
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	f1 f7       	brne	.-4      	; 0xb72 <lcdClear+0xe>
     b76:	00 c0       	rjmp	.+0      	; 0xb78 <lcdClear+0x14>
     b78:	00 00       	nop
     b7a:	41 e2       	ldi	r20, 0x21	; 33
     b7c:	52 e0       	ldi	r21, 0x02	; 2
     b7e:	60 e0       	ldi	r22, 0x00	; 0
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	cf cf       	rjmp	.-98     	; 0xb22 <lcdWriteText>
     b84:	08 95       	ret

00000b86 <initLcd>:
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	43 df       	rcall	.-378    	; 0xa10 <lcdSclk>
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	3b df       	rcall	.-394    	; 0xa04 <lcdSid>
     b8e:	64 e3       	ldi	r22, 0x34	; 52
     b90:	70 e0       	ldi	r23, 0x00	; 0
     b92:	83 e4       	ldi	r24, 0x43	; 67
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	4d df       	rcall	.-358    	; 0xa32 <writeLcdF>
     b98:	69 e0       	ldi	r22, 0x09	; 9
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	83 e4       	ldi	r24, 0x43	; 67
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	48 df       	rcall	.-368    	; 0xa32 <writeLcdF>
     ba2:	60 e3       	ldi	r22, 0x30	; 48
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	83 e4       	ldi	r24, 0x43	; 67
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	43 df       	rcall	.-378    	; 0xa32 <writeLcdF>
     bac:	6c e0       	ldi	r22, 0x0C	; 12
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	83 e4       	ldi	r24, 0x43	; 67
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	3e df       	rcall	.-388    	; 0xa32 <writeLcdF>
     bb6:	d6 df       	rcall	.-84     	; 0xb64 <lcdClear>
     bb8:	67 e0       	ldi	r22, 0x07	; 7
     bba:	70 e0       	ldi	r23, 0x00	; 0
     bbc:	83 e4       	ldi	r24, 0x43	; 67
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	38 df       	rcall	.-400    	; 0xa32 <writeLcdF>
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	2b cf       	rjmp	.-426    	; 0xa1c <lcdLight>
     bc6:	08 95       	ret

00000bc8 <initBoard>:
     bc8:	85 b7       	in	r24, 0x35	; 53
     bca:	85 bf       	out	0x35, r24	; 53
     bcc:	8f ef       	ldi	r24, 0xFF	; 255
     bce:	82 b9       	out	0x02, r24	; 2
     bd0:	81 b9       	out	0x01, r24	; 1
     bd2:	85 b9       	out	0x05, r24	; 5
     bd4:	84 b9       	out	0x04, r24	; 4
     bd6:	88 b9       	out	0x08, r24	; 8
     bd8:	17 b8       	out	0x07, r1	; 7
     bda:	8b b9       	out	0x0b, r24	; 11
     bdc:	1a b8       	out	0x0a, r1	; 10
     bde:	8e b9       	out	0x0e, r24	; 14
     be0:	1d b8       	out	0x0d, r1	; 13
     be2:	72 98       	cbi	0x0e, 2	; 14
     be4:	11 ba       	out	0x11, r1	; 17
     be6:	10 ba       	out	0x10, r1	; 16
     be8:	94 e0       	ldi	r25, 0x04	; 4
     bea:	94 bb       	out	0x14, r25	; 20
     bec:	93 b3       	in	r25, 0x13	; 19
     bee:	93 60       	ori	r25, 0x03	; 3
     bf0:	93 bb       	out	0x13, r25	; 19
     bf2:	9d 9a       	sbi	0x13, 5	; 19
     bf4:	97 ec       	ldi	r25, 0xC7	; 199
     bf6:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
     bfa:	98 e3       	ldi	r25, 0x38	; 56
     bfc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
     c00:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
     c04:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
     c08:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     c0c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     c10:	8c e3       	ldi	r24, 0x3C	; 60
     c12:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     c16:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
     c1a:	78 94       	sei
     c1c:	68 de       	rcall	.-816    	; 0x8ee <startSystemTimeMs>
     c1e:	b3 df       	rcall	.-154    	; 0xb86 <initLcd>
     c20:	70 de       	rcall	.-800    	; 0x902 <initAdc>
     c22:	dc ce       	rjmp	.-584    	; 0x9dc <initRgb>
     c24:	08 95       	ret

00000c26 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
     c26:	cf 93       	push	r28
     c28:	df 93       	push	r29
     c2a:	cd b7       	in	r28, 0x3d	; 61
     c2c:	de b7       	in	r29, 0x3e	; 62
     c2e:	28 97       	sbiw	r28, 0x08	; 8
     c30:	0f b6       	in	r0, 0x3f	; 63
     c32:	f8 94       	cli
     c34:	de bf       	out	0x3e, r29	; 62
     c36:	0f be       	out	0x3f, r0	; 63
     c38:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
     c3a:	88 e0       	ldi	r24, 0x08	; 8
     c3c:	e4 e0       	ldi	r30, 0x04	; 4
     c3e:	f2 e0       	ldi	r31, 0x02	; 2
     c40:	de 01       	movw	r26, r28
     c42:	11 96       	adiw	r26, 0x01	; 1
     c44:	01 90       	ld	r0, Z+
     c46:	0d 92       	st	X+, r0
     c48:	8a 95       	dec	r24
     c4a:	e1 f7       	brne	.-8      	; 0xc44 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
     c4c:	e5 e0       	ldi	r30, 0x05	; 5
     c4e:	f1 e0       	ldi	r31, 0x01	; 1
     c50:	80 81       	ld	r24, Z
     c52:	8f 7b       	andi	r24, 0xBF	; 191
     c54:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
     c56:	e0 91 26 02 	lds	r30, 0x0226	; 0x800226 <Zeilen_Nr.2131>
     c5a:	f0 91 27 02 	lds	r31, 0x0227	; 0x800227 <Zeilen_Nr.2131+0x1>
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	8c 0f       	add	r24, r28
     c64:	9d 1f       	adc	r25, r29
     c66:	e8 0f       	add	r30, r24
     c68:	f9 1f       	adc	r31, r25
     c6a:	80 81       	ld	r24, Z
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <__data_end+0x1>
     c72:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__data_end>
     c76:	a2 ea       	ldi	r26, 0xA2	; 162
     c78:	b2 e0       	ldi	r27, 0x02	; 2
     c7a:	22 e3       	ldi	r18, 0x32	; 50
     c7c:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     c7e:	e5 e0       	ldi	r30, 0x05	; 5
     c80:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
     c82:	5e 91       	ld	r21, -X
     c84:	4e 91       	ld	r20, -X
     c86:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__data_end>
     c8a:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <__data_end+0x1>
     c8e:	84 23       	and	r24, r20
     c90:	95 23       	and	r25, r21
     c92:	89 2b       	or	r24, r25
     c94:	21 f0       	breq	.+8      	; 0xc9e <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
     c96:	80 81       	ld	r24, Z
     c98:	80 62       	ori	r24, 0x20	; 32
     c9a:	80 83       	st	Z, r24
     c9c:	03 c0       	rjmp	.+6      	; 0xca4 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
     c9e:	80 81       	ld	r24, Z
     ca0:	8f 7d       	andi	r24, 0xDF	; 223
     ca2:	80 83       	st	Z, r24
        }
        CLOCK_1;
     ca4:	80 81       	ld	r24, Z
     ca6:	80 61       	ori	r24, 0x10	; 16
     ca8:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
     caa:	80 81       	ld	r24, Z
     cac:	8f 7e       	andi	r24, 0xEF	; 239
     cae:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
     cb0:	a2 17       	cp	r26, r18
     cb2:	b3 07       	cpc	r27, r19
     cb4:	31 f7       	brne	.-52     	; 0xc82 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
     cb6:	e5 e0       	ldi	r30, 0x05	; 5
     cb8:	f1 e0       	ldi	r31, 0x01	; 1
     cba:	80 81       	ld	r24, Z
     cbc:	87 7f       	andi	r24, 0xF7	; 247
     cbe:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
     cc0:	80 81       	ld	r24, Z
     cc2:	88 7f       	andi	r24, 0xF8	; 248
     cc4:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
     cc6:	90 81       	ld	r25, Z
     cc8:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <Zeilen_Nr.2131>
     ccc:	89 2b       	or	r24, r25
     cce:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
     cd0:	80 81       	ld	r24, Z
     cd2:	80 64       	ori	r24, 0x40	; 64
     cd4:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
     cd6:	80 81       	ld	r24, Z
     cd8:	88 60       	ori	r24, 0x08	; 8
     cda:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
     cdc:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <Zeilen_Nr.2131>
     ce0:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <Zeilen_Nr.2131+0x1>
     ce4:	87 30       	cpi	r24, 0x07	; 7
     ce6:	91 05       	cpc	r25, r1
     ce8:	30 f4       	brcc	.+12     	; 0xcf6 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <Zeilen_Nr.2131+0x1>
     cf0:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <Zeilen_Nr.2131>
     cf4:	07 c0       	rjmp	.+14     	; 0xd04 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
     cf6:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <Zeilen_Nr.2131+0x1>
     cfa:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <Zeilen_Nr.2131>
        writeTextFinished = 1;
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <writeTextFinished>
    }
    
     d04:	28 96       	adiw	r28, 0x08	; 8
     d06:	0f b6       	in	r0, 0x3f	; 63
     d08:	f8 94       	cli
     d0a:	de bf       	out	0x3e, r29	; 62
     d0c:	0f be       	out	0x3f, r0	; 63
     d0e:	cd bf       	out	0x3d, r28	; 61
     d10:	df 91       	pop	r29
     d12:	cf 91       	pop	r28
     d14:	08 95       	ret

00000d16 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
     d16:	1f 92       	push	r1
     d18:	0f 92       	push	r0
     d1a:	0f b6       	in	r0, 0x3f	; 63
     d1c:	0f 92       	push	r0
     d1e:	11 24       	eor	r1, r1
     d20:	0b b6       	in	r0, 0x3b	; 59
     d22:	0f 92       	push	r0
     d24:	af 92       	push	r10
     d26:	bf 92       	push	r11
     d28:	cf 92       	push	r12
     d2a:	df 92       	push	r13
     d2c:	ef 92       	push	r14
     d2e:	ff 92       	push	r15
     d30:	0f 93       	push	r16
     d32:	1f 93       	push	r17
     d34:	2f 93       	push	r18
     d36:	3f 93       	push	r19
     d38:	4f 93       	push	r20
     d3a:	5f 93       	push	r21
     d3c:	6f 93       	push	r22
     d3e:	7f 93       	push	r23
     d40:	8f 93       	push	r24
     d42:	9f 93       	push	r25
     d44:	af 93       	push	r26
     d46:	bf 93       	push	r27
     d48:	ef 93       	push	r30
     d4a:	ff 93       	push	r31
    systemTimeMs += 1;
     d4c:	20 91 29 02 	lds	r18, 0x0229	; 0x800229 <systemTimeMs>
     d50:	30 91 2a 02 	lds	r19, 0x022A	; 0x80022a <systemTimeMs+0x1>
     d54:	40 91 2b 02 	lds	r20, 0x022B	; 0x80022b <systemTimeMs+0x2>
     d58:	50 91 2c 02 	lds	r21, 0x022C	; 0x80022c <systemTimeMs+0x3>
     d5c:	60 91 2d 02 	lds	r22, 0x022D	; 0x80022d <systemTimeMs+0x4>
     d60:	70 91 2e 02 	lds	r23, 0x022E	; 0x80022e <systemTimeMs+0x5>
     d64:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <systemTimeMs+0x6>
     d68:	90 91 30 02 	lds	r25, 0x0230	; 0x800230 <systemTimeMs+0x7>
     d6c:	a1 e0       	ldi	r26, 0x01	; 1
     d6e:	e3 d1       	rcall	.+966    	; 0x1136 <__adddi3_s8>
     d70:	20 93 29 02 	sts	0x0229, r18	; 0x800229 <systemTimeMs>
     d74:	30 93 2a 02 	sts	0x022A, r19	; 0x80022a <systemTimeMs+0x1>
     d78:	40 93 2b 02 	sts	0x022B, r20	; 0x80022b <systemTimeMs+0x2>
     d7c:	50 93 2c 02 	sts	0x022C, r21	; 0x80022c <systemTimeMs+0x3>
     d80:	60 93 2d 02 	sts	0x022D, r22	; 0x80022d <systemTimeMs+0x4>
     d84:	70 93 2e 02 	sts	0x022E, r23	; 0x80022e <systemTimeMs+0x5>
     d88:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <systemTimeMs+0x6>
     d8c:	90 93 30 02 	sts	0x0230, r25	; 0x800230 <systemTimeMs+0x7>
    if (!(systemTimeMs%5))
     d90:	0f 2e       	mov	r0, r31
     d92:	f5 e0       	ldi	r31, 0x05	; 5
     d94:	af 2e       	mov	r10, r31
     d96:	f0 2d       	mov	r31, r0
     d98:	b1 2c       	mov	r11, r1
     d9a:	c1 2c       	mov	r12, r1
     d9c:	d1 2c       	mov	r13, r1
     d9e:	e1 2c       	mov	r14, r1
     da0:	f1 2c       	mov	r15, r1
     da2:	00 e0       	ldi	r16, 0x00	; 0
     da4:	10 e0       	ldi	r17, 0x00	; 0
     da6:	69 d1       	rcall	.+722    	; 0x107a <__umoddi3>
     da8:	a0 e0       	ldi	r26, 0x00	; 0
     daa:	d1 d1       	rcall	.+930    	; 0x114e <__cmpdi2_s8>
     dac:	49 f4       	brne	.+18     	; 0xdc0 <__vector_23+0xaa>
    {
        takt_5ms_zaehler --;
     dae:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <takt_5ms_zaehler>
     db2:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <takt_5ms_zaehler+0x1>
     db6:	01 97       	sbiw	r24, 0x01	; 1
     db8:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <takt_5ms_zaehler+0x1>
     dbc:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <takt_5ms_zaehler>
    }
    if(matrixRunning)matrixWriteNextLine();
     dc0:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <matrixRunning>
     dc4:	81 11       	cpse	r24, r1
     dc6:	2f df       	rcall	.-418    	; 0xc26 <matrixWriteNextLine>
}
     dc8:	ff 91       	pop	r31
     dca:	ef 91       	pop	r30
     dcc:	bf 91       	pop	r27
     dce:	af 91       	pop	r26
     dd0:	9f 91       	pop	r25
     dd2:	8f 91       	pop	r24
     dd4:	7f 91       	pop	r23
     dd6:	6f 91       	pop	r22
     dd8:	5f 91       	pop	r21
     dda:	4f 91       	pop	r20
     ddc:	3f 91       	pop	r19
     dde:	2f 91       	pop	r18
     de0:	1f 91       	pop	r17
     de2:	0f 91       	pop	r16
     de4:	ff 90       	pop	r15
     de6:	ef 90       	pop	r14
     de8:	df 90       	pop	r13
     dea:	cf 90       	pop	r12
     dec:	bf 90       	pop	r11
     dee:	af 90       	pop	r10
     df0:	0f 90       	pop	r0
     df2:	0b be       	out	0x3b, r0	; 59
     df4:	0f 90       	pop	r0
     df6:	0f be       	out	0x3f, r0	; 63
     df8:	0f 90       	pop	r0
     dfa:	1f 90       	pop	r1
     dfc:	18 95       	reti

00000dfe <led_strip_write>:
  0 pulse  = 400 ns
  1 pulse  = 850 ns
  "period" = 1300 ns
 */
void __attribute__((noinline)) led_strip_write(rgb_color * colors) 
{
     dfe:	fc 01       	movw	r30, r24
  unsigned int count = LED_COUNT;
  // Set the pin to be an output driving low.
  LED_STRIP_PORT &= ~(1<<LED_STRIP_PIN);
     e00:	58 98       	cbi	0x0b, 0	; 11
  LED_STRIP_DDR |= (1<<LED_STRIP_PIN);
     e02:	50 9a       	sbi	0x0a, 0	; 10

  cli();   // Disable interrupts temporarily because we don't want our pulse timing to be messed up.
     e04:	f8 94       	cli
     e06:	20 e0       	ldi	r18, 0x00	; 0
     e08:	31 e0       	ldi	r19, 0x01	; 1
  while(count--)
  {
    // Send a color to the LED strip.
    // The assembly below also increments the 'colors' pointer,
    // it will be pointing to the next color at the end of this loop.
    asm volatile(
     e0a:	01 90       	ld	r0, Z+
     e0c:	00 80       	ld	r0, Z
     e0e:	07 d0       	rcall	.+14     	; 0xe1e <send_led_strip_byte24>
     e10:	02 90       	ld	r0, -Z
     e12:	05 d0       	rcall	.+10     	; 0xe1e <send_led_strip_byte24>
     e14:	01 90       	ld	r0, Z+
     e16:	01 90       	ld	r0, Z+
     e18:	01 90       	ld	r0, Z+
     e1a:	01 d0       	rcall	.+2      	; 0xe1e <send_led_strip_byte24>
     e1c:	16 c0       	rjmp	.+44     	; 0xe4a <led_strip_asm_end24>

00000e1e <send_led_strip_byte24>:
     e1e:	07 d0       	rcall	.+14     	; 0xe2e <send_led_strip_bit24>
     e20:	06 d0       	rcall	.+12     	; 0xe2e <send_led_strip_bit24>
     e22:	05 d0       	rcall	.+10     	; 0xe2e <send_led_strip_bit24>
     e24:	04 d0       	rcall	.+8      	; 0xe2e <send_led_strip_bit24>
     e26:	03 d0       	rcall	.+6      	; 0xe2e <send_led_strip_bit24>
     e28:	02 d0       	rcall	.+4      	; 0xe2e <send_led_strip_bit24>
     e2a:	01 d0       	rcall	.+2      	; 0xe2e <send_led_strip_bit24>
     e2c:	00 c0       	rjmp	.+0      	; 0xe2e <send_led_strip_bit24>

00000e2e <send_led_strip_bit24>:
     e2e:	58 9a       	sbi	0x0b, 0	; 11
     e30:	00 1c       	adc	r0, r0
     e32:	00 00       	nop
     e34:	00 00       	nop
     e36:	08 f0       	brcs	.+2      	; 0xe3a <send_led_strip_bit24+0xc>
     e38:	58 98       	cbi	0x0b, 0	; 11
	...
     e42:	00 00       	nop
     e44:	08 f4       	brcc	.+2      	; 0xe48 <send_led_strip_bit24+0x1a>
     e46:	58 98       	cbi	0x0b, 0	; 11
     e48:	08 95       	ret

00000e4a <led_strip_asm_end24>:
     e4a:	21 50       	subi	r18, 0x01	; 1
     e4c:	31 09       	sbc	r19, r1
  // Set the pin to be an output driving low.
  LED_STRIP_PORT &= ~(1<<LED_STRIP_PIN);
  LED_STRIP_DDR |= (1<<LED_STRIP_PIN);

  cli();   // Disable interrupts temporarily because we don't want our pulse timing to be messed up.
  while(count--)
     e4e:	09 f0       	breq	.+2      	; 0xe52 <led_strip_asm_end24+0x8>
     e50:	dc cf       	rjmp	.-72     	; 0xe0a <led_strip_write+0xc>
    );

    // Uncomment the line below to temporarily enable interrupts between each color.
    //sei(); asm volatile("nop\n"); cli();
  }
  sei();          // Re-enable interrupts now that we are done.
     e52:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e54:	8f e3       	ldi	r24, 0x3F	; 63
     e56:	91 e0       	ldi	r25, 0x01	; 1
     e58:	01 97       	sbiw	r24, 0x01	; 1
     e5a:	f1 f7       	brne	.-4      	; 0xe58 <led_strip_asm_end24+0xe>
     e5c:	00 c0       	rjmp	.+0      	; 0xe5e <led_strip_asm_end24+0x14>
     e5e:	00 00       	nop
     e60:	08 95       	ret

00000e62 <__cmpsf2>:
     e62:	2f d0       	rcall	.+94     	; 0xec2 <__fp_cmp>
     e64:	08 f4       	brcc	.+2      	; 0xe68 <__cmpsf2+0x6>
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	08 95       	ret

00000e6a <__fixunssfsi>:
     e6a:	57 d0       	rcall	.+174    	; 0xf1a <__fp_splitA>
     e6c:	88 f0       	brcs	.+34     	; 0xe90 <__fixunssfsi+0x26>
     e6e:	9f 57       	subi	r25, 0x7F	; 127
     e70:	90 f0       	brcs	.+36     	; 0xe96 <__fixunssfsi+0x2c>
     e72:	b9 2f       	mov	r27, r25
     e74:	99 27       	eor	r25, r25
     e76:	b7 51       	subi	r27, 0x17	; 23
     e78:	a0 f0       	brcs	.+40     	; 0xea2 <__fixunssfsi+0x38>
     e7a:	d1 f0       	breq	.+52     	; 0xeb0 <__fixunssfsi+0x46>
     e7c:	66 0f       	add	r22, r22
     e7e:	77 1f       	adc	r23, r23
     e80:	88 1f       	adc	r24, r24
     e82:	99 1f       	adc	r25, r25
     e84:	1a f0       	brmi	.+6      	; 0xe8c <__fixunssfsi+0x22>
     e86:	ba 95       	dec	r27
     e88:	c9 f7       	brne	.-14     	; 0xe7c <__fixunssfsi+0x12>
     e8a:	12 c0       	rjmp	.+36     	; 0xeb0 <__fixunssfsi+0x46>
     e8c:	b1 30       	cpi	r27, 0x01	; 1
     e8e:	81 f0       	breq	.+32     	; 0xeb0 <__fixunssfsi+0x46>
     e90:	5e d0       	rcall	.+188    	; 0xf4e <__fp_zero>
     e92:	b1 e0       	ldi	r27, 0x01	; 1
     e94:	08 95       	ret
     e96:	5b c0       	rjmp	.+182    	; 0xf4e <__fp_zero>
     e98:	67 2f       	mov	r22, r23
     e9a:	78 2f       	mov	r23, r24
     e9c:	88 27       	eor	r24, r24
     e9e:	b8 5f       	subi	r27, 0xF8	; 248
     ea0:	39 f0       	breq	.+14     	; 0xeb0 <__fixunssfsi+0x46>
     ea2:	b9 3f       	cpi	r27, 0xF9	; 249
     ea4:	cc f3       	brlt	.-14     	; 0xe98 <__fixunssfsi+0x2e>
     ea6:	86 95       	lsr	r24
     ea8:	77 95       	ror	r23
     eaa:	67 95       	ror	r22
     eac:	b3 95       	inc	r27
     eae:	d9 f7       	brne	.-10     	; 0xea6 <__fixunssfsi+0x3c>
     eb0:	3e f4       	brtc	.+14     	; 0xec0 <__fixunssfsi+0x56>
     eb2:	90 95       	com	r25
     eb4:	80 95       	com	r24
     eb6:	70 95       	com	r23
     eb8:	61 95       	neg	r22
     eba:	7f 4f       	sbci	r23, 0xFF	; 255
     ebc:	8f 4f       	sbci	r24, 0xFF	; 255
     ebe:	9f 4f       	sbci	r25, 0xFF	; 255
     ec0:	08 95       	ret

00000ec2 <__fp_cmp>:
     ec2:	99 0f       	add	r25, r25
     ec4:	00 08       	sbc	r0, r0
     ec6:	55 0f       	add	r21, r21
     ec8:	aa 0b       	sbc	r26, r26
     eca:	e0 e8       	ldi	r30, 0x80	; 128
     ecc:	fe ef       	ldi	r31, 0xFE	; 254
     ece:	16 16       	cp	r1, r22
     ed0:	17 06       	cpc	r1, r23
     ed2:	e8 07       	cpc	r30, r24
     ed4:	f9 07       	cpc	r31, r25
     ed6:	c0 f0       	brcs	.+48     	; 0xf08 <__fp_cmp+0x46>
     ed8:	12 16       	cp	r1, r18
     eda:	13 06       	cpc	r1, r19
     edc:	e4 07       	cpc	r30, r20
     ede:	f5 07       	cpc	r31, r21
     ee0:	98 f0       	brcs	.+38     	; 0xf08 <__fp_cmp+0x46>
     ee2:	62 1b       	sub	r22, r18
     ee4:	73 0b       	sbc	r23, r19
     ee6:	84 0b       	sbc	r24, r20
     ee8:	95 0b       	sbc	r25, r21
     eea:	39 f4       	brne	.+14     	; 0xefa <__fp_cmp+0x38>
     eec:	0a 26       	eor	r0, r26
     eee:	61 f0       	breq	.+24     	; 0xf08 <__fp_cmp+0x46>
     ef0:	23 2b       	or	r18, r19
     ef2:	24 2b       	or	r18, r20
     ef4:	25 2b       	or	r18, r21
     ef6:	21 f4       	brne	.+8      	; 0xf00 <__fp_cmp+0x3e>
     ef8:	08 95       	ret
     efa:	0a 26       	eor	r0, r26
     efc:	09 f4       	brne	.+2      	; 0xf00 <__fp_cmp+0x3e>
     efe:	a1 40       	sbci	r26, 0x01	; 1
     f00:	a6 95       	lsr	r26
     f02:	8f ef       	ldi	r24, 0xFF	; 255
     f04:	81 1d       	adc	r24, r1
     f06:	81 1d       	adc	r24, r1
     f08:	08 95       	ret

00000f0a <__fp_split3>:
     f0a:	57 fd       	sbrc	r21, 7
     f0c:	90 58       	subi	r25, 0x80	; 128
     f0e:	44 0f       	add	r20, r20
     f10:	55 1f       	adc	r21, r21
     f12:	59 f0       	breq	.+22     	; 0xf2a <__fp_splitA+0x10>
     f14:	5f 3f       	cpi	r21, 0xFF	; 255
     f16:	71 f0       	breq	.+28     	; 0xf34 <__fp_splitA+0x1a>
     f18:	47 95       	ror	r20

00000f1a <__fp_splitA>:
     f1a:	88 0f       	add	r24, r24
     f1c:	97 fb       	bst	r25, 7
     f1e:	99 1f       	adc	r25, r25
     f20:	61 f0       	breq	.+24     	; 0xf3a <__fp_splitA+0x20>
     f22:	9f 3f       	cpi	r25, 0xFF	; 255
     f24:	79 f0       	breq	.+30     	; 0xf44 <__fp_splitA+0x2a>
     f26:	87 95       	ror	r24
     f28:	08 95       	ret
     f2a:	12 16       	cp	r1, r18
     f2c:	13 06       	cpc	r1, r19
     f2e:	14 06       	cpc	r1, r20
     f30:	55 1f       	adc	r21, r21
     f32:	f2 cf       	rjmp	.-28     	; 0xf18 <__fp_split3+0xe>
     f34:	46 95       	lsr	r20
     f36:	f1 df       	rcall	.-30     	; 0xf1a <__fp_splitA>
     f38:	08 c0       	rjmp	.+16     	; 0xf4a <__fp_splitA+0x30>
     f3a:	16 16       	cp	r1, r22
     f3c:	17 06       	cpc	r1, r23
     f3e:	18 06       	cpc	r1, r24
     f40:	99 1f       	adc	r25, r25
     f42:	f1 cf       	rjmp	.-30     	; 0xf26 <__fp_splitA+0xc>
     f44:	86 95       	lsr	r24
     f46:	71 05       	cpc	r23, r1
     f48:	61 05       	cpc	r22, r1
     f4a:	08 94       	sec
     f4c:	08 95       	ret

00000f4e <__fp_zero>:
     f4e:	e8 94       	clt

00000f50 <__fp_szero>:
     f50:	bb 27       	eor	r27, r27
     f52:	66 27       	eor	r22, r22
     f54:	77 27       	eor	r23, r23
     f56:	cb 01       	movw	r24, r22
     f58:	97 f9       	bld	r25, 7
     f5a:	08 95       	ret

00000f5c <__gesf2>:
     f5c:	b2 df       	rcall	.-156    	; 0xec2 <__fp_cmp>
     f5e:	08 f4       	brcc	.+2      	; 0xf62 <__gesf2+0x6>
     f60:	8f ef       	ldi	r24, 0xFF	; 255
     f62:	08 95       	ret

00000f64 <__mulsf3>:
     f64:	0b d0       	rcall	.+22     	; 0xf7c <__mulsf3x>
     f66:	78 c0       	rjmp	.+240    	; 0x1058 <__fp_round>
     f68:	69 d0       	rcall	.+210    	; 0x103c <__fp_pscA>
     f6a:	28 f0       	brcs	.+10     	; 0xf76 <__mulsf3+0x12>
     f6c:	6e d0       	rcall	.+220    	; 0x104a <__fp_pscB>
     f6e:	18 f0       	brcs	.+6      	; 0xf76 <__mulsf3+0x12>
     f70:	95 23       	and	r25, r21
     f72:	09 f0       	breq	.+2      	; 0xf76 <__mulsf3+0x12>
     f74:	5a c0       	rjmp	.+180    	; 0x102a <__fp_inf>
     f76:	5f c0       	rjmp	.+190    	; 0x1036 <__fp_nan>
     f78:	11 24       	eor	r1, r1
     f7a:	ea cf       	rjmp	.-44     	; 0xf50 <__fp_szero>

00000f7c <__mulsf3x>:
     f7c:	c6 df       	rcall	.-116    	; 0xf0a <__fp_split3>
     f7e:	a0 f3       	brcs	.-24     	; 0xf68 <__mulsf3+0x4>

00000f80 <__mulsf3_pse>:
     f80:	95 9f       	mul	r25, r21
     f82:	d1 f3       	breq	.-12     	; 0xf78 <__mulsf3+0x14>
     f84:	95 0f       	add	r25, r21
     f86:	50 e0       	ldi	r21, 0x00	; 0
     f88:	55 1f       	adc	r21, r21
     f8a:	62 9f       	mul	r22, r18
     f8c:	f0 01       	movw	r30, r0
     f8e:	72 9f       	mul	r23, r18
     f90:	bb 27       	eor	r27, r27
     f92:	f0 0d       	add	r31, r0
     f94:	b1 1d       	adc	r27, r1
     f96:	63 9f       	mul	r22, r19
     f98:	aa 27       	eor	r26, r26
     f9a:	f0 0d       	add	r31, r0
     f9c:	b1 1d       	adc	r27, r1
     f9e:	aa 1f       	adc	r26, r26
     fa0:	64 9f       	mul	r22, r20
     fa2:	66 27       	eor	r22, r22
     fa4:	b0 0d       	add	r27, r0
     fa6:	a1 1d       	adc	r26, r1
     fa8:	66 1f       	adc	r22, r22
     faa:	82 9f       	mul	r24, r18
     fac:	22 27       	eor	r18, r18
     fae:	b0 0d       	add	r27, r0
     fb0:	a1 1d       	adc	r26, r1
     fb2:	62 1f       	adc	r22, r18
     fb4:	73 9f       	mul	r23, r19
     fb6:	b0 0d       	add	r27, r0
     fb8:	a1 1d       	adc	r26, r1
     fba:	62 1f       	adc	r22, r18
     fbc:	83 9f       	mul	r24, r19
     fbe:	a0 0d       	add	r26, r0
     fc0:	61 1d       	adc	r22, r1
     fc2:	22 1f       	adc	r18, r18
     fc4:	74 9f       	mul	r23, r20
     fc6:	33 27       	eor	r19, r19
     fc8:	a0 0d       	add	r26, r0
     fca:	61 1d       	adc	r22, r1
     fcc:	23 1f       	adc	r18, r19
     fce:	84 9f       	mul	r24, r20
     fd0:	60 0d       	add	r22, r0
     fd2:	21 1d       	adc	r18, r1
     fd4:	82 2f       	mov	r24, r18
     fd6:	76 2f       	mov	r23, r22
     fd8:	6a 2f       	mov	r22, r26
     fda:	11 24       	eor	r1, r1
     fdc:	9f 57       	subi	r25, 0x7F	; 127
     fde:	50 40       	sbci	r21, 0x00	; 0
     fe0:	8a f0       	brmi	.+34     	; 0x1004 <__mulsf3_pse+0x84>
     fe2:	e1 f0       	breq	.+56     	; 0x101c <__mulsf3_pse+0x9c>
     fe4:	88 23       	and	r24, r24
     fe6:	4a f0       	brmi	.+18     	; 0xffa <__mulsf3_pse+0x7a>
     fe8:	ee 0f       	add	r30, r30
     fea:	ff 1f       	adc	r31, r31
     fec:	bb 1f       	adc	r27, r27
     fee:	66 1f       	adc	r22, r22
     ff0:	77 1f       	adc	r23, r23
     ff2:	88 1f       	adc	r24, r24
     ff4:	91 50       	subi	r25, 0x01	; 1
     ff6:	50 40       	sbci	r21, 0x00	; 0
     ff8:	a9 f7       	brne	.-22     	; 0xfe4 <__mulsf3_pse+0x64>
     ffa:	9e 3f       	cpi	r25, 0xFE	; 254
     ffc:	51 05       	cpc	r21, r1
     ffe:	70 f0       	brcs	.+28     	; 0x101c <__mulsf3_pse+0x9c>
    1000:	14 c0       	rjmp	.+40     	; 0x102a <__fp_inf>
    1002:	a6 cf       	rjmp	.-180    	; 0xf50 <__fp_szero>
    1004:	5f 3f       	cpi	r21, 0xFF	; 255
    1006:	ec f3       	brlt	.-6      	; 0x1002 <__mulsf3_pse+0x82>
    1008:	98 3e       	cpi	r25, 0xE8	; 232
    100a:	dc f3       	brlt	.-10     	; 0x1002 <__mulsf3_pse+0x82>
    100c:	86 95       	lsr	r24
    100e:	77 95       	ror	r23
    1010:	67 95       	ror	r22
    1012:	b7 95       	ror	r27
    1014:	f7 95       	ror	r31
    1016:	e7 95       	ror	r30
    1018:	9f 5f       	subi	r25, 0xFF	; 255
    101a:	c1 f7       	brne	.-16     	; 0x100c <__mulsf3_pse+0x8c>
    101c:	fe 2b       	or	r31, r30
    101e:	88 0f       	add	r24, r24
    1020:	91 1d       	adc	r25, r1
    1022:	96 95       	lsr	r25
    1024:	87 95       	ror	r24
    1026:	97 f9       	bld	r25, 7
    1028:	08 95       	ret

0000102a <__fp_inf>:
    102a:	97 f9       	bld	r25, 7
    102c:	9f 67       	ori	r25, 0x7F	; 127
    102e:	80 e8       	ldi	r24, 0x80	; 128
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	60 e0       	ldi	r22, 0x00	; 0
    1034:	08 95       	ret

00001036 <__fp_nan>:
    1036:	9f ef       	ldi	r25, 0xFF	; 255
    1038:	80 ec       	ldi	r24, 0xC0	; 192
    103a:	08 95       	ret

0000103c <__fp_pscA>:
    103c:	00 24       	eor	r0, r0
    103e:	0a 94       	dec	r0
    1040:	16 16       	cp	r1, r22
    1042:	17 06       	cpc	r1, r23
    1044:	18 06       	cpc	r1, r24
    1046:	09 06       	cpc	r0, r25
    1048:	08 95       	ret

0000104a <__fp_pscB>:
    104a:	00 24       	eor	r0, r0
    104c:	0a 94       	dec	r0
    104e:	12 16       	cp	r1, r18
    1050:	13 06       	cpc	r1, r19
    1052:	14 06       	cpc	r1, r20
    1054:	05 06       	cpc	r0, r21
    1056:	08 95       	ret

00001058 <__fp_round>:
    1058:	09 2e       	mov	r0, r25
    105a:	03 94       	inc	r0
    105c:	00 0c       	add	r0, r0
    105e:	11 f4       	brne	.+4      	; 0x1064 <__fp_round+0xc>
    1060:	88 23       	and	r24, r24
    1062:	52 f0       	brmi	.+20     	; 0x1078 <__fp_round+0x20>
    1064:	bb 0f       	add	r27, r27
    1066:	40 f4       	brcc	.+16     	; 0x1078 <__fp_round+0x20>
    1068:	bf 2b       	or	r27, r31
    106a:	11 f4       	brne	.+4      	; 0x1070 <__fp_round+0x18>
    106c:	60 ff       	sbrs	r22, 0
    106e:	04 c0       	rjmp	.+8      	; 0x1078 <__fp_round+0x20>
    1070:	6f 5f       	subi	r22, 0xFF	; 255
    1072:	7f 4f       	sbci	r23, 0xFF	; 255
    1074:	8f 4f       	sbci	r24, 0xFF	; 255
    1076:	9f 4f       	sbci	r25, 0xFF	; 255
    1078:	08 95       	ret

0000107a <__umoddi3>:
    107a:	68 94       	set
    107c:	01 c0       	rjmp	.+2      	; 0x1080 <__udivdi3_umoddi3>

0000107e <__udivdi3>:
    107e:	e8 94       	clt

00001080 <__udivdi3_umoddi3>:
    1080:	8f 92       	push	r8
    1082:	9f 92       	push	r9
    1084:	cf 93       	push	r28
    1086:	df 93       	push	r29
    1088:	05 d0       	rcall	.+10     	; 0x1094 <__udivmod64>
    108a:	df 91       	pop	r29
    108c:	cf 91       	pop	r28
    108e:	9f 90       	pop	r9
    1090:	8f 90       	pop	r8
    1092:	08 95       	ret

00001094 <__udivmod64>:
    1094:	88 24       	eor	r8, r8
    1096:	99 24       	eor	r9, r9
    1098:	f4 01       	movw	r30, r8
    109a:	e4 01       	movw	r28, r8
    109c:	b0 e4       	ldi	r27, 0x40	; 64
    109e:	9f 93       	push	r25
    10a0:	aa 27       	eor	r26, r26
    10a2:	9a 15       	cp	r25, r10
    10a4:	8b 04       	cpc	r8, r11
    10a6:	9c 04       	cpc	r9, r12
    10a8:	ed 05       	cpc	r30, r13
    10aa:	fe 05       	cpc	r31, r14
    10ac:	cf 05       	cpc	r28, r15
    10ae:	d0 07       	cpc	r29, r16
    10b0:	a1 07       	cpc	r26, r17
    10b2:	98 f4       	brcc	.+38     	; 0x10da <__udivmod64+0x46>
    10b4:	ad 2f       	mov	r26, r29
    10b6:	dc 2f       	mov	r29, r28
    10b8:	cf 2f       	mov	r28, r31
    10ba:	fe 2f       	mov	r31, r30
    10bc:	e9 2d       	mov	r30, r9
    10be:	98 2c       	mov	r9, r8
    10c0:	89 2e       	mov	r8, r25
    10c2:	98 2f       	mov	r25, r24
    10c4:	87 2f       	mov	r24, r23
    10c6:	76 2f       	mov	r23, r22
    10c8:	65 2f       	mov	r22, r21
    10ca:	54 2f       	mov	r21, r20
    10cc:	43 2f       	mov	r20, r19
    10ce:	32 2f       	mov	r19, r18
    10d0:	22 27       	eor	r18, r18
    10d2:	b8 50       	subi	r27, 0x08	; 8
    10d4:	31 f7       	brne	.-52     	; 0x10a2 <__udivmod64+0xe>
    10d6:	bf 91       	pop	r27
    10d8:	27 c0       	rjmp	.+78     	; 0x1128 <__udivmod64+0x94>
    10da:	1b 2e       	mov	r1, r27
    10dc:	bf 91       	pop	r27
    10de:	bb 27       	eor	r27, r27
    10e0:	22 0f       	add	r18, r18
    10e2:	33 1f       	adc	r19, r19
    10e4:	44 1f       	adc	r20, r20
    10e6:	55 1f       	adc	r21, r21
    10e8:	66 1f       	adc	r22, r22
    10ea:	77 1f       	adc	r23, r23
    10ec:	88 1f       	adc	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	88 1c       	adc	r8, r8
    10f2:	99 1c       	adc	r9, r9
    10f4:	ee 1f       	adc	r30, r30
    10f6:	ff 1f       	adc	r31, r31
    10f8:	cc 1f       	adc	r28, r28
    10fa:	dd 1f       	adc	r29, r29
    10fc:	aa 1f       	adc	r26, r26
    10fe:	bb 1f       	adc	r27, r27
    1100:	8a 14       	cp	r8, r10
    1102:	9b 04       	cpc	r9, r11
    1104:	ec 05       	cpc	r30, r12
    1106:	fd 05       	cpc	r31, r13
    1108:	ce 05       	cpc	r28, r14
    110a:	df 05       	cpc	r29, r15
    110c:	a0 07       	cpc	r26, r16
    110e:	b1 07       	cpc	r27, r17
    1110:	48 f0       	brcs	.+18     	; 0x1124 <__udivmod64+0x90>
    1112:	8a 18       	sub	r8, r10
    1114:	9b 08       	sbc	r9, r11
    1116:	ec 09       	sbc	r30, r12
    1118:	fd 09       	sbc	r31, r13
    111a:	ce 09       	sbc	r28, r14
    111c:	df 09       	sbc	r29, r15
    111e:	a0 0b       	sbc	r26, r16
    1120:	b1 0b       	sbc	r27, r17
    1122:	21 60       	ori	r18, 0x01	; 1
    1124:	1a 94       	dec	r1
    1126:	e1 f6       	brne	.-72     	; 0x10e0 <__udivmod64+0x4c>
    1128:	2e f4       	brtc	.+10     	; 0x1134 <__udivmod64+0xa0>
    112a:	94 01       	movw	r18, r8
    112c:	af 01       	movw	r20, r30
    112e:	be 01       	movw	r22, r28
    1130:	cd 01       	movw	r24, r26
    1132:	00 0c       	add	r0, r0
    1134:	08 95       	ret

00001136 <__adddi3_s8>:
    1136:	00 24       	eor	r0, r0
    1138:	a7 fd       	sbrc	r26, 7
    113a:	00 94       	com	r0
    113c:	2a 0f       	add	r18, r26
    113e:	30 1d       	adc	r19, r0
    1140:	40 1d       	adc	r20, r0
    1142:	50 1d       	adc	r21, r0
    1144:	60 1d       	adc	r22, r0
    1146:	70 1d       	adc	r23, r0
    1148:	80 1d       	adc	r24, r0
    114a:	90 1d       	adc	r25, r0
    114c:	08 95       	ret

0000114e <__cmpdi2_s8>:
    114e:	00 24       	eor	r0, r0
    1150:	a7 fd       	sbrc	r26, 7
    1152:	00 94       	com	r0
    1154:	2a 17       	cp	r18, r26
    1156:	30 05       	cpc	r19, r0
    1158:	40 05       	cpc	r20, r0
    115a:	50 05       	cpc	r21, r0
    115c:	60 05       	cpc	r22, r0
    115e:	70 05       	cpc	r23, r0
    1160:	80 05       	cpc	r24, r0
    1162:	90 05       	cpc	r25, r0
    1164:	08 95       	ret

00001166 <random_r>:
    1166:	8f 92       	push	r8
    1168:	9f 92       	push	r9
    116a:	af 92       	push	r10
    116c:	bf 92       	push	r11
    116e:	cf 92       	push	r12
    1170:	df 92       	push	r13
    1172:	ef 92       	push	r14
    1174:	ff 92       	push	r15
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	ec 01       	movw	r28, r24
    117c:	68 81       	ld	r22, Y
    117e:	79 81       	ldd	r23, Y+1	; 0x01
    1180:	8a 81       	ldd	r24, Y+2	; 0x02
    1182:	9b 81       	ldd	r25, Y+3	; 0x03
    1184:	61 15       	cp	r22, r1
    1186:	71 05       	cpc	r23, r1
    1188:	81 05       	cpc	r24, r1
    118a:	91 05       	cpc	r25, r1
    118c:	21 f4       	brne	.+8      	; 0x1196 <random_r+0x30>
    118e:	64 e2       	ldi	r22, 0x24	; 36
    1190:	79 ed       	ldi	r23, 0xD9	; 217
    1192:	8b e5       	ldi	r24, 0x5B	; 91
    1194:	97 e0       	ldi	r25, 0x07	; 7
    1196:	2d e1       	ldi	r18, 0x1D	; 29
    1198:	33 ef       	ldi	r19, 0xF3	; 243
    119a:	41 e0       	ldi	r20, 0x01	; 1
    119c:	50 e0       	ldi	r21, 0x00	; 0
    119e:	7f d0       	rcall	.+254    	; 0x129e <__divmodsi4>
    11a0:	49 01       	movw	r8, r18
    11a2:	5a 01       	movw	r10, r20
    11a4:	9b 01       	movw	r18, r22
    11a6:	ac 01       	movw	r20, r24
    11a8:	a7 ea       	ldi	r26, 0xA7	; 167
    11aa:	b1 e4       	ldi	r27, 0x41	; 65
    11ac:	94 d0       	rcall	.+296    	; 0x12d6 <__muluhisi3>
    11ae:	6b 01       	movw	r12, r22
    11b0:	7c 01       	movw	r14, r24
    11b2:	ac ee       	ldi	r26, 0xEC	; 236
    11b4:	b4 ef       	ldi	r27, 0xF4	; 244
    11b6:	a5 01       	movw	r20, r10
    11b8:	94 01       	movw	r18, r8
    11ba:	99 d0       	rcall	.+306    	; 0x12ee <__mulohisi3>
    11bc:	dc 01       	movw	r26, r24
    11be:	cb 01       	movw	r24, r22
    11c0:	8c 0d       	add	r24, r12
    11c2:	9d 1d       	adc	r25, r13
    11c4:	ae 1d       	adc	r26, r14
    11c6:	bf 1d       	adc	r27, r15
    11c8:	b7 ff       	sbrs	r27, 7
    11ca:	03 c0       	rjmp	.+6      	; 0x11d2 <random_r+0x6c>
    11cc:	01 97       	sbiw	r24, 0x01	; 1
    11ce:	a1 09       	sbc	r26, r1
    11d0:	b0 48       	sbci	r27, 0x80	; 128
    11d2:	88 83       	st	Y, r24
    11d4:	99 83       	std	Y+1, r25	; 0x01
    11d6:	aa 83       	std	Y+2, r26	; 0x02
    11d8:	bb 83       	std	Y+3, r27	; 0x03
    11da:	bc 01       	movw	r22, r24
    11dc:	cd 01       	movw	r24, r26
    11de:	9f 77       	andi	r25, 0x7F	; 127
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	ff 90       	pop	r15
    11e6:	ef 90       	pop	r14
    11e8:	df 90       	pop	r13
    11ea:	cf 90       	pop	r12
    11ec:	bf 90       	pop	r11
    11ee:	af 90       	pop	r10
    11f0:	9f 90       	pop	r9
    11f2:	8f 90       	pop	r8
    11f4:	08 95       	ret

000011f6 <random>:
    11f6:	8f 92       	push	r8
    11f8:	9f 92       	push	r9
    11fa:	af 92       	push	r10
    11fc:	bf 92       	push	r11
    11fe:	cf 92       	push	r12
    1200:	df 92       	push	r13
    1202:	ef 92       	push	r14
    1204:	ff 92       	push	r15
    1206:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    120a:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    120e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1212:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1216:	61 15       	cp	r22, r1
    1218:	71 05       	cpc	r23, r1
    121a:	81 05       	cpc	r24, r1
    121c:	91 05       	cpc	r25, r1
    121e:	21 f4       	brne	.+8      	; 0x1228 <random+0x32>
    1220:	64 e2       	ldi	r22, 0x24	; 36
    1222:	79 ed       	ldi	r23, 0xD9	; 217
    1224:	8b e5       	ldi	r24, 0x5B	; 91
    1226:	97 e0       	ldi	r25, 0x07	; 7
    1228:	2d e1       	ldi	r18, 0x1D	; 29
    122a:	33 ef       	ldi	r19, 0xF3	; 243
    122c:	41 e0       	ldi	r20, 0x01	; 1
    122e:	50 e0       	ldi	r21, 0x00	; 0
    1230:	36 d0       	rcall	.+108    	; 0x129e <__divmodsi4>
    1232:	49 01       	movw	r8, r18
    1234:	5a 01       	movw	r10, r20
    1236:	9b 01       	movw	r18, r22
    1238:	ac 01       	movw	r20, r24
    123a:	a7 ea       	ldi	r26, 0xA7	; 167
    123c:	b1 e4       	ldi	r27, 0x41	; 65
    123e:	4b d0       	rcall	.+150    	; 0x12d6 <__muluhisi3>
    1240:	6b 01       	movw	r12, r22
    1242:	7c 01       	movw	r14, r24
    1244:	ac ee       	ldi	r26, 0xEC	; 236
    1246:	b4 ef       	ldi	r27, 0xF4	; 244
    1248:	a5 01       	movw	r20, r10
    124a:	94 01       	movw	r18, r8
    124c:	50 d0       	rcall	.+160    	; 0x12ee <__mulohisi3>
    124e:	dc 01       	movw	r26, r24
    1250:	cb 01       	movw	r24, r22
    1252:	8c 0d       	add	r24, r12
    1254:	9d 1d       	adc	r25, r13
    1256:	ae 1d       	adc	r26, r14
    1258:	bf 1d       	adc	r27, r15
    125a:	b7 ff       	sbrs	r27, 7
    125c:	03 c0       	rjmp	.+6      	; 0x1264 <random+0x6e>
    125e:	01 97       	sbiw	r24, 0x01	; 1
    1260:	a1 09       	sbc	r26, r1
    1262:	b0 48       	sbci	r27, 0x80	; 128
    1264:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
    1268:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    126c:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1270:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    1274:	bc 01       	movw	r22, r24
    1276:	cd 01       	movw	r24, r26
    1278:	9f 77       	andi	r25, 0x7F	; 127
    127a:	ff 90       	pop	r15
    127c:	ef 90       	pop	r14
    127e:	df 90       	pop	r13
    1280:	cf 90       	pop	r12
    1282:	bf 90       	pop	r11
    1284:	af 90       	pop	r10
    1286:	9f 90       	pop	r9
    1288:	8f 90       	pop	r8
    128a:	08 95       	ret

0000128c <srandom>:
    128c:	60 93 00 02 	sts	0x0200, r22	; 0x800200 <__DATA_REGION_ORIGIN__>
    1290:	70 93 01 02 	sts	0x0201, r23	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    1294:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    1298:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    129c:	08 95       	ret

0000129e <__divmodsi4>:
    129e:	05 2e       	mov	r0, r21
    12a0:	97 fb       	bst	r25, 7
    12a2:	16 f4       	brtc	.+4      	; 0x12a8 <__divmodsi4+0xa>
    12a4:	00 94       	com	r0
    12a6:	0f d0       	rcall	.+30     	; 0x12c6 <__negsi2>
    12a8:	57 fd       	sbrc	r21, 7
    12aa:	05 d0       	rcall	.+10     	; 0x12b6 <__divmodsi4_neg2>
    12ac:	24 d0       	rcall	.+72     	; 0x12f6 <__udivmodsi4>
    12ae:	07 fc       	sbrc	r0, 7
    12b0:	02 d0       	rcall	.+4      	; 0x12b6 <__divmodsi4_neg2>
    12b2:	46 f4       	brtc	.+16     	; 0x12c4 <__divmodsi4_exit>
    12b4:	08 c0       	rjmp	.+16     	; 0x12c6 <__negsi2>

000012b6 <__divmodsi4_neg2>:
    12b6:	50 95       	com	r21
    12b8:	40 95       	com	r20
    12ba:	30 95       	com	r19
    12bc:	21 95       	neg	r18
    12be:	3f 4f       	sbci	r19, 0xFF	; 255
    12c0:	4f 4f       	sbci	r20, 0xFF	; 255
    12c2:	5f 4f       	sbci	r21, 0xFF	; 255

000012c4 <__divmodsi4_exit>:
    12c4:	08 95       	ret

000012c6 <__negsi2>:
    12c6:	90 95       	com	r25
    12c8:	80 95       	com	r24
    12ca:	70 95       	com	r23
    12cc:	61 95       	neg	r22
    12ce:	7f 4f       	sbci	r23, 0xFF	; 255
    12d0:	8f 4f       	sbci	r24, 0xFF	; 255
    12d2:	9f 4f       	sbci	r25, 0xFF	; 255
    12d4:	08 95       	ret

000012d6 <__muluhisi3>:
    12d6:	31 d0       	rcall	.+98     	; 0x133a <__umulhisi3>
    12d8:	a5 9f       	mul	r26, r21
    12da:	90 0d       	add	r25, r0
    12dc:	b4 9f       	mul	r27, r20
    12de:	90 0d       	add	r25, r0
    12e0:	a4 9f       	mul	r26, r20
    12e2:	80 0d       	add	r24, r0
    12e4:	91 1d       	adc	r25, r1
    12e6:	11 24       	eor	r1, r1
    12e8:	08 95       	ret

000012ea <__mulshisi3>:
    12ea:	b7 ff       	sbrs	r27, 7
    12ec:	f4 cf       	rjmp	.-24     	; 0x12d6 <__muluhisi3>

000012ee <__mulohisi3>:
    12ee:	f3 df       	rcall	.-26     	; 0x12d6 <__muluhisi3>
    12f0:	82 1b       	sub	r24, r18
    12f2:	93 0b       	sbc	r25, r19
    12f4:	08 95       	ret

000012f6 <__udivmodsi4>:
    12f6:	a1 e2       	ldi	r26, 0x21	; 33
    12f8:	1a 2e       	mov	r1, r26
    12fa:	aa 1b       	sub	r26, r26
    12fc:	bb 1b       	sub	r27, r27
    12fe:	fd 01       	movw	r30, r26
    1300:	0d c0       	rjmp	.+26     	; 0x131c <__udivmodsi4_ep>

00001302 <__udivmodsi4_loop>:
    1302:	aa 1f       	adc	r26, r26
    1304:	bb 1f       	adc	r27, r27
    1306:	ee 1f       	adc	r30, r30
    1308:	ff 1f       	adc	r31, r31
    130a:	a2 17       	cp	r26, r18
    130c:	b3 07       	cpc	r27, r19
    130e:	e4 07       	cpc	r30, r20
    1310:	f5 07       	cpc	r31, r21
    1312:	20 f0       	brcs	.+8      	; 0x131c <__udivmodsi4_ep>
    1314:	a2 1b       	sub	r26, r18
    1316:	b3 0b       	sbc	r27, r19
    1318:	e4 0b       	sbc	r30, r20
    131a:	f5 0b       	sbc	r31, r21

0000131c <__udivmodsi4_ep>:
    131c:	66 1f       	adc	r22, r22
    131e:	77 1f       	adc	r23, r23
    1320:	88 1f       	adc	r24, r24
    1322:	99 1f       	adc	r25, r25
    1324:	1a 94       	dec	r1
    1326:	69 f7       	brne	.-38     	; 0x1302 <__udivmodsi4_loop>
    1328:	60 95       	com	r22
    132a:	70 95       	com	r23
    132c:	80 95       	com	r24
    132e:	90 95       	com	r25
    1330:	9b 01       	movw	r18, r22
    1332:	ac 01       	movw	r20, r24
    1334:	bd 01       	movw	r22, r26
    1336:	cf 01       	movw	r24, r30
    1338:	08 95       	ret

0000133a <__umulhisi3>:
    133a:	a2 9f       	mul	r26, r18
    133c:	b0 01       	movw	r22, r0
    133e:	b3 9f       	mul	r27, r19
    1340:	c0 01       	movw	r24, r0
    1342:	a3 9f       	mul	r26, r19
    1344:	70 0d       	add	r23, r0
    1346:	81 1d       	adc	r24, r1
    1348:	11 24       	eor	r1, r1
    134a:	91 1d       	adc	r25, r1
    134c:	b2 9f       	mul	r27, r18
    134e:	70 0d       	add	r23, r0
    1350:	81 1d       	adc	r24, r1
    1352:	11 24       	eor	r1, r1
    1354:	91 1d       	adc	r25, r1
    1356:	08 95       	ret

00001358 <_exit>:
    1358:	f8 94       	cli

0000135a <__stop_program>:
    135a:	ff cf       	rjmp	.-2      	; 0x135a <__stop_program>
