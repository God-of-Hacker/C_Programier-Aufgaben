
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000d8c  00000e20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000e94  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e94  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ef0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00000f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000241a  00000000  00000000  00001110  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f83  00000000  00000000  0000352a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013e6  00000000  00000000  000044ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  00005894  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d40  00000000  00000000  00005efc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a9d  00000000  00000000  00006c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  000086d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	58 c3       	rjmp	.+1712   	; 0x70e <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e8       	ldi	r30, 0x8C	; 140
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	33 c6       	rjmp	.+3174   	; 0xd88 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    
    
    
    
    //Initialisieren
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	70 d1       	rcall	.+736    	; 0x408 <initBoard>
             outWohnzimmer = outWohnzimmer & ~(0x01);
        }
        if (inBad)
        {
            outBad = outBad | (0x02);
            Spiegelschrank = Spiegelschrank | (0x04);
 128:	14 e0       	ldi	r17, 0x04	; 4
        {  
             outWohnzimmer = outWohnzimmer & ~(0x01);
        }
        if (inBad)
        {
            outBad = outBad | (0x02);
 12a:	d2 e0       	ldi	r29, 0x02	; 2
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        schalter = switchReadAll();
 12c:	c0 e0       	ldi	r28, 0x00	; 0
 12e:	11 d0       	rcall	.+34     	; 0x152 <switchReadAll>
        inBad  = schalter & 0b00000010; 
        
        //Verarbeitung-------------------------------------------------------------
        if (inWohnzimmer)
        {   
            outWohnzimmer = outWohnzimmer | (0x01);
 130:	98 2f       	mov	r25, r24
 132:	91 70       	andi	r25, 0x01	; 1
        } 
        else
        {  
             outWohnzimmer = outWohnzimmer & ~(0x01);
        }
        if (inBad)
 134:	81 fd       	sbrc	r24, 1
 136:	03 c0       	rjmp	.+6      	; 0x13e <main+0x1a>
            Spiegelschrank = Spiegelschrank | (0x04);
        } 
        else
        {
            outBad = outBad & ~(0x02);
            Spiegelschrank = Spiegelschrank & ~(0x04);
 138:	8c 2f       	mov	r24, r28
            outBad = outBad | (0x02);
            Spiegelschrank = Spiegelschrank | (0x04);
        } 
        else
        {
            outBad = outBad & ~(0x02);
 13a:	2c 2f       	mov	r18, r28
 13c:	02 c0       	rjmp	.+4      	; 0x142 <main+0x1e>
             outWohnzimmer = outWohnzimmer & ~(0x01);
        }
        if (inBad)
        {
            outBad = outBad | (0x02);
            Spiegelschrank = Spiegelschrank | (0x04);
 13e:	81 2f       	mov	r24, r17
        {  
             outWohnzimmer = outWohnzimmer & ~(0x01);
        }
        if (inBad)
        {
            outBad = outBad | (0x02);
 140:	2d 2f       	mov	r18, r29
        {
            outBad = outBad & ~(0x02);
            Spiegelschrank = Spiegelschrank & ~(0x04);
        }
        //Ausgabe------------------------------------------------------------------
        ledWriteAll(outWohnzimmer | outBad | Spiegelschrank);
 142:	82 2b       	or	r24, r18
 144:	89 2b       	or	r24, r25
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	01 d0       	rcall	.+2      	; 0x14c <ledWriteAll>
    }
 14a:	f1 cf       	rjmp	.-30     	; 0x12e <main+0xa>

0000014c <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 14c:	82 b9       	out	0x02, r24	; 2
 14e:	95 b9       	out	0x05, r25	; 5
 150:	08 95       	ret

00000152 <switchReadAll>:
 152:	86 b1       	in	r24, 0x06	; 6
 154:	08 95       	ret

00000156 <startSystemTimeMs>:
 156:	83 e0       	ldi	r24, 0x03	; 3
 158:	84 bd       	out	0x24, r24	; 36
 15a:	8b e0       	ldi	r24, 0x0B	; 11
 15c:	85 bd       	out	0x25, r24	; 37
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 164:	89 ef       	ldi	r24, 0xF9	; 249
 166:	87 bd       	out	0x27, r24	; 39
 168:	08 95       	ret

0000016a <initAdc>:
 16a:	11 ba       	out	0x11, r1	; 17
 16c:	10 ba       	out	0x10, r1	; 16
 16e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 172:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 176:	80 e4       	ldi	r24, 0x40	; 64
 178:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 17c:	8f e0       	ldi	r24, 0x0F	; 15
 17e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 188:	ea e7       	ldi	r30, 0x7A	; 122
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	87 ea       	ldi	r24, 0xA7	; 167
 18e:	80 83       	st	Z, r24
 190:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 194:	80 81       	ld	r24, Z
 196:	80 64       	ori	r24, 0x40	; 64
 198:	80 83       	st	Z, r24
 19a:	80 81       	ld	r24, Z
 19c:	84 ff       	sbrs	r24, 4
 19e:	fd cf       	rjmp	.-6      	; 0x19a <initAdc+0x30>
 1a0:	ea e7       	ldi	r30, 0x7A	; 122
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	8f 7e       	andi	r24, 0xEF	; 239
 1a8:	80 83       	st	Z, r24
 1aa:	08 95       	ret

000001ac <rgbWrite>:
 1ac:	2f ef       	ldi	r18, 0xFF	; 255
 1ae:	33 e0       	ldi	r19, 0x03	; 3
 1b0:	f9 01       	movw	r30, r18
 1b2:	e8 1b       	sub	r30, r24
 1b4:	f9 0b       	sbc	r31, r25
 1b6:	c9 01       	movw	r24, r18
 1b8:	86 1b       	sub	r24, r22
 1ba:	97 0b       	sbc	r25, r23
 1bc:	24 1b       	sub	r18, r20
 1be:	35 0b       	sbc	r19, r21
 1c0:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 1c4:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 1c8:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 1cc:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 1d0:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 1d4:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 1d8:	08 95       	ret

000001da <initRgb>:
 1da:	8e ef       	ldi	r24, 0xFE	; 254
 1dc:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 1e0:	8b e1       	ldi	r24, 0x1B	; 27
 1e2:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 1e6:	83 e0       	ldi	r24, 0x03	; 3
 1e8:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 1ec:	8f ef       	ldi	r24, 0xFF	; 255
 1ee:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 1f2:	40 e0       	ldi	r20, 0x00	; 0
 1f4:	50 e0       	ldi	r21, 0x00	; 0
 1f6:	60 e0       	ldi	r22, 0x00	; 0
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	d6 cf       	rjmp	.-84     	; 0x1ac <rgbWrite>
 200:	08 95       	ret

00000202 <lcdSid>:
 202:	88 23       	and	r24, r24
 204:	11 f0       	breq	.+4      	; 0x20a <lcdSid+0x8>
 206:	a0 9a       	sbi	0x14, 0	; 20
 208:	08 95       	ret
 20a:	a0 98       	cbi	0x14, 0	; 20
 20c:	08 95       	ret

0000020e <lcdSclk>:
 20e:	88 23       	and	r24, r24
 210:	11 f0       	breq	.+4      	; 0x216 <lcdSclk+0x8>
 212:	a1 9a       	sbi	0x14, 1	; 20
 214:	08 95       	ret
 216:	a1 98       	cbi	0x14, 1	; 20
 218:	08 95       	ret

0000021a <lcdLight>:
 21a:	81 11       	cpse	r24, r1
 21c:	04 c0       	rjmp	.+8      	; 0x226 <lcdLight+0xc>
 21e:	84 b5       	in	r24, 0x24	; 36
 220:	8f 7d       	andi	r24, 0xDF	; 223
 222:	84 bd       	out	0x24, r24	; 36
 224:	08 95       	ret
 226:	94 b5       	in	r25, 0x24	; 36
 228:	90 62       	ori	r25, 0x20	; 32
 22a:	94 bd       	out	0x24, r25	; 36
 22c:	88 bd       	out	0x28, r24	; 40
 22e:	08 95       	ret

00000230 <writeLcdF>:
 230:	ef 92       	push	r14
 232:	ff 92       	push	r15
 234:	0f 93       	push	r16
 236:	1f 93       	push	r17
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	7c 01       	movw	r14, r24
 23e:	eb 01       	movw	r28, r22
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	df df       	rcall	.-66     	; 0x202 <lcdSid>
 244:	05 e0       	ldi	r16, 0x05	; 5
 246:	10 e0       	ldi	r17, 0x00	; 0
 248:	80 e0       	ldi	r24, 0x00	; 0
 24a:	e1 df       	rcall	.-62     	; 0x20e <lcdSclk>
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	df df       	rcall	.-66     	; 0x20e <lcdSclk>
 250:	01 50       	subi	r16, 0x01	; 1
 252:	11 09       	sbc	r17, r1
 254:	c9 f7       	brne	.-14     	; 0x248 <writeLcdF+0x18>
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	d4 df       	rcall	.-88     	; 0x202 <lcdSid>
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	d8 df       	rcall	.-80     	; 0x20e <lcdSclk>
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	d6 df       	rcall	.-84     	; 0x20e <lcdSclk>
 262:	83 e4       	ldi	r24, 0x43	; 67
 264:	e8 16       	cp	r14, r24
 266:	f1 04       	cpc	r15, r1
 268:	19 f4       	brne	.+6      	; 0x270 <writeLcdF+0x40>
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	ca df       	rcall	.-108    	; 0x202 <lcdSid>
 26e:	02 c0       	rjmp	.+4      	; 0x274 <writeLcdF+0x44>
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	c7 df       	rcall	.-114    	; 0x202 <lcdSid>
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	cb df       	rcall	.-106    	; 0x20e <lcdSclk>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	c9 df       	rcall	.-110    	; 0x20e <lcdSclk>
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	c1 df       	rcall	.-126    	; 0x202 <lcdSid>
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	c5 df       	rcall	.-118    	; 0x20e <lcdSclk>
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	c3 df       	rcall	.-122    	; 0x20e <lcdSclk>
 288:	04 e0       	ldi	r16, 0x04	; 4
 28a:	10 e0       	ldi	r17, 0x00	; 0
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	bf df       	rcall	.-130    	; 0x20e <lcdSclk>
 290:	c0 ff       	sbrs	r28, 0
 292:	03 c0       	rjmp	.+6      	; 0x29a <writeLcdF+0x6a>
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	b5 df       	rcall	.-150    	; 0x202 <lcdSid>
 298:	02 c0       	rjmp	.+4      	; 0x29e <writeLcdF+0x6e>
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	b2 df       	rcall	.-156    	; 0x202 <lcdSid>
 29e:	d6 95       	lsr	r29
 2a0:	c7 95       	ror	r28
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	b4 df       	rcall	.-152    	; 0x20e <lcdSclk>
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	b2 df       	rcall	.-156    	; 0x20e <lcdSclk>
 2aa:	01 50       	subi	r16, 0x01	; 1
 2ac:	11 09       	sbc	r17, r1
 2ae:	71 f7       	brne	.-36     	; 0x28c <writeLcdF+0x5c>
 2b0:	80 e0       	ldi	r24, 0x00	; 0
 2b2:	a7 df       	rcall	.-178    	; 0x202 <lcdSid>
 2b4:	04 e0       	ldi	r16, 0x04	; 4
 2b6:	10 e0       	ldi	r17, 0x00	; 0
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	a9 df       	rcall	.-174    	; 0x20e <lcdSclk>
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	a7 df       	rcall	.-178    	; 0x20e <lcdSclk>
 2c0:	01 50       	subi	r16, 0x01	; 1
 2c2:	11 09       	sbc	r17, r1
 2c4:	c9 f7       	brne	.-14     	; 0x2b8 <writeLcdF+0x88>
 2c6:	04 e0       	ldi	r16, 0x04	; 4
 2c8:	10 e0       	ldi	r17, 0x00	; 0
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	a0 df       	rcall	.-192    	; 0x20e <lcdSclk>
 2ce:	c0 ff       	sbrs	r28, 0
 2d0:	03 c0       	rjmp	.+6      	; 0x2d8 <writeLcdF+0xa8>
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	96 df       	rcall	.-212    	; 0x202 <lcdSid>
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <writeLcdF+0xac>
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	93 df       	rcall	.-218    	; 0x202 <lcdSid>
 2dc:	d6 95       	lsr	r29
 2de:	c7 95       	ror	r28
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	95 df       	rcall	.-214    	; 0x20e <lcdSclk>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	93 df       	rcall	.-218    	; 0x20e <lcdSclk>
 2e8:	01 50       	subi	r16, 0x01	; 1
 2ea:	11 09       	sbc	r17, r1
 2ec:	71 f7       	brne	.-36     	; 0x2ca <writeLcdF+0x9a>
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	88 df       	rcall	.-240    	; 0x202 <lcdSid>
 2f2:	c4 e0       	ldi	r28, 0x04	; 4
 2f4:	d0 e0       	ldi	r29, 0x00	; 0
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	8a df       	rcall	.-236    	; 0x20e <lcdSclk>
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	88 df       	rcall	.-240    	; 0x20e <lcdSclk>
 2fe:	21 97       	sbiw	r28, 0x01	; 1
 300:	d1 f7       	brne	.-12     	; 0x2f6 <writeLcdF+0xc6>
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	7e df       	rcall	.-260    	; 0x202 <lcdSid>
 306:	87 ec       	ldi	r24, 0xC7	; 199
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <writeLcdF+0xda>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <writeLcdF+0xe0>
 310:	00 00       	nop
 312:	df 91       	pop	r29
 314:	cf 91       	pop	r28
 316:	1f 91       	pop	r17
 318:	0f 91       	pop	r16
 31a:	ff 90       	pop	r15
 31c:	ef 90       	pop	r14
 31e:	08 95       	ret

00000320 <lcdWriteText>:
 320:	1f 93       	push	r17
 322:	cf 93       	push	r28
 324:	df 93       	push	r29
 326:	cd b7       	in	r28, 0x3d	; 61
 328:	de b7       	in	r29, 0x3e	; 62
 32a:	65 97       	sbiw	r28, 0x15	; 21
 32c:	0f b6       	in	r0, 0x3f	; 63
 32e:	f8 94       	cli
 330:	de bf       	out	0x3e, r29	; 62
 332:	0f be       	out	0x3f, r0	; 63
 334:	cd bf       	out	0x3d, r28	; 61
 336:	9e 01       	movw	r18, r28
 338:	20 5e       	subi	r18, 0xE0	; 224
 33a:	3f 4f       	sbci	r19, 0xFF	; 255
 33c:	4e 8d       	ldd	r20, Y+30	; 0x1e
 33e:	5f 8d       	ldd	r21, Y+31	; 0x1f
 340:	65 e1       	ldi	r22, 0x15	; 21
 342:	70 e0       	ldi	r23, 0x00	; 0
 344:	ce 01       	movw	r24, r28
 346:	01 96       	adiw	r24, 0x01	; 1
 348:	3a d2       	rcall	.+1140   	; 0x7be <vsnprintf>
 34a:	6d 8d       	ldd	r22, Y+29	; 0x1d
 34c:	8c 8d       	ldd	r24, Y+28	; 0x1c
 34e:	90 e2       	ldi	r25, 0x20	; 32
 350:	89 9f       	mul	r24, r25
 352:	60 0d       	add	r22, r0
 354:	11 24       	eor	r1, r1
 356:	60 68       	ori	r22, 0x80	; 128
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	83 e4       	ldi	r24, 0x43	; 67
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	68 df       	rcall	.-304    	; 0x230 <writeLcdF>
 360:	69 81       	ldd	r22, Y+1	; 0x01
 362:	66 23       	and	r22, r22
 364:	79 f0       	breq	.+30     	; 0x384 <lcdWriteText+0x64>
 366:	10 e0       	ldi	r17, 0x00	; 0
 368:	1f 5f       	subi	r17, 0xFF	; 255
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	84 e4       	ldi	r24, 0x44	; 68
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	5f df       	rcall	.-322    	; 0x230 <writeLcdF>
 372:	e1 e0       	ldi	r30, 0x01	; 1
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	ec 0f       	add	r30, r28
 378:	fd 1f       	adc	r31, r29
 37a:	e1 0f       	add	r30, r17
 37c:	f1 1d       	adc	r31, r1
 37e:	60 81       	ld	r22, Z
 380:	61 11       	cpse	r22, r1
 382:	f2 cf       	rjmp	.-28     	; 0x368 <lcdWriteText+0x48>
 384:	65 96       	adiw	r28, 0x15	; 21
 386:	0f b6       	in	r0, 0x3f	; 63
 388:	f8 94       	cli
 38a:	de bf       	out	0x3e, r29	; 62
 38c:	0f be       	out	0x3f, r0	; 63
 38e:	cd bf       	out	0x3d, r28	; 61
 390:	df 91       	pop	r29
 392:	cf 91       	pop	r28
 394:	1f 91       	pop	r17
 396:	08 95       	ret

00000398 <lcdClear>:
 398:	61 e0       	ldi	r22, 0x01	; 1
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	83 e4       	ldi	r24, 0x43	; 67
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	47 df       	rcall	.-370    	; 0x230 <writeLcdF>
 3a2:	8f e3       	ldi	r24, 0x3F	; 63
 3a4:	9f e1       	ldi	r25, 0x1F	; 31
 3a6:	01 97       	sbiw	r24, 0x01	; 1
 3a8:	f1 f7       	brne	.-4      	; 0x3a6 <lcdClear+0xe>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <lcdClear+0x14>
 3ac:	00 00       	nop
 3ae:	80 e3       	ldi	r24, 0x30	; 48
 3b0:	92 e0       	ldi	r25, 0x02	; 2
 3b2:	9f 93       	push	r25
 3b4:	8f 93       	push	r24
 3b6:	1f 92       	push	r1
 3b8:	1f 92       	push	r1
 3ba:	b2 df       	rcall	.-156    	; 0x320 <lcdWriteText>
 3bc:	0f 90       	pop	r0
 3be:	0f 90       	pop	r0
 3c0:	0f 90       	pop	r0
 3c2:	0f 90       	pop	r0
 3c4:	08 95       	ret

000003c6 <initLcd>:
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	22 df       	rcall	.-444    	; 0x20e <lcdSclk>
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	1a df       	rcall	.-460    	; 0x202 <lcdSid>
 3ce:	64 e3       	ldi	r22, 0x34	; 52
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	83 e4       	ldi	r24, 0x43	; 67
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	2c df       	rcall	.-424    	; 0x230 <writeLcdF>
 3d8:	69 e0       	ldi	r22, 0x09	; 9
 3da:	70 e0       	ldi	r23, 0x00	; 0
 3dc:	83 e4       	ldi	r24, 0x43	; 67
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	27 df       	rcall	.-434    	; 0x230 <writeLcdF>
 3e2:	60 e3       	ldi	r22, 0x30	; 48
 3e4:	70 e0       	ldi	r23, 0x00	; 0
 3e6:	83 e4       	ldi	r24, 0x43	; 67
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	22 df       	rcall	.-444    	; 0x230 <writeLcdF>
 3ec:	6c e0       	ldi	r22, 0x0C	; 12
 3ee:	70 e0       	ldi	r23, 0x00	; 0
 3f0:	83 e4       	ldi	r24, 0x43	; 67
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	1d df       	rcall	.-454    	; 0x230 <writeLcdF>
 3f6:	d0 df       	rcall	.-96     	; 0x398 <lcdClear>
 3f8:	67 e0       	ldi	r22, 0x07	; 7
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	83 e4       	ldi	r24, 0x43	; 67
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	17 df       	rcall	.-466    	; 0x230 <writeLcdF>
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	0a cf       	rjmp	.-492    	; 0x21a <lcdLight>
 406:	08 95       	ret

00000408 <initBoard>:
 408:	4f 92       	push	r4
 40a:	5f 92       	push	r5
 40c:	6f 92       	push	r6
 40e:	7f 92       	push	r7
 410:	8f 92       	push	r8
 412:	9f 92       	push	r9
 414:	af 92       	push	r10
 416:	bf 92       	push	r11
 418:	cf 92       	push	r12
 41a:	df 92       	push	r13
 41c:	ef 92       	push	r14
 41e:	ff 92       	push	r15
 420:	0f 93       	push	r16
 422:	1f 93       	push	r17
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	c8 2f       	mov	r28, r24
 42a:	85 b7       	in	r24, 0x35	; 53
 42c:	85 bf       	out	0x35, r24	; 53
 42e:	12 b8       	out	0x02, r1	; 2
 430:	8f ef       	ldi	r24, 0xFF	; 255
 432:	81 b9       	out	0x01, r24	; 1
 434:	15 b8       	out	0x05, r1	; 5
 436:	84 b9       	out	0x04, r24	; 4
 438:	88 b9       	out	0x08, r24	; 8
 43a:	17 b8       	out	0x07, r1	; 7
 43c:	8b b9       	out	0x0b, r24	; 11
 43e:	1a b8       	out	0x0a, r1	; 10
 440:	8e b9       	out	0x0e, r24	; 14
 442:	1d b8       	out	0x0d, r1	; 13
 444:	72 98       	cbi	0x0e, 2	; 14
 446:	11 ba       	out	0x11, r1	; 17
 448:	10 ba       	out	0x10, r1	; 16
 44a:	94 e0       	ldi	r25, 0x04	; 4
 44c:	94 bb       	out	0x14, r25	; 20
 44e:	93 b3       	in	r25, 0x13	; 19
 450:	93 60       	ori	r25, 0x03	; 3
 452:	93 bb       	out	0x13, r25	; 19
 454:	9d 9a       	sbi	0x13, 5	; 19
 456:	97 ec       	ldi	r25, 0xC7	; 199
 458:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 45c:	98 e3       	ldi	r25, 0x38	; 56
 45e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 462:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 466:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 46a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 46e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 472:	8c e3       	ldi	r24, 0x3C	; 60
 474:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 478:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 47c:	78 94       	sei
 47e:	6b de       	rcall	.-810    	; 0x156 <startSystemTimeMs>
 480:	a2 df       	rcall	.-188    	; 0x3c6 <initLcd>
 482:	73 de       	rcall	.-794    	; 0x16a <initAdc>
 484:	aa de       	rcall	.-684    	; 0x1da <initRgb>
 486:	cc 23       	and	r28, r28
 488:	09 f4       	brne	.+2      	; 0x48c <initBoard+0x84>
 48a:	b8 c0       	rjmp	.+368    	; 0x5fc <initBoard+0x1f4>
 48c:	8f ef       	ldi	r24, 0xFF	; 255
 48e:	c5 de       	rcall	.-630    	; 0x21a <lcdLight>
 490:	40 e0       	ldi	r20, 0x00	; 0
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	6f ef       	ldi	r22, 0xFF	; 255
 496:	73 e0       	ldi	r23, 0x03	; 3
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	87 de       	rcall	.-754    	; 0x1ac <rgbWrite>
 49e:	8d e1       	ldi	r24, 0x1D	; 29
 4a0:	92 e0       	ldi	r25, 0x02	; 2
 4a2:	9f 93       	push	r25
 4a4:	8f 93       	push	r24
 4a6:	1f 92       	push	r1
 4a8:	1f 92       	push	r1
 4aa:	3a df       	rcall	.-396    	; 0x320 <lcdWriteText>
 4ac:	82 e3       	ldi	r24, 0x32	; 50
 4ae:	92 e0       	ldi	r25, 0x02	; 2
 4b0:	9f 93       	push	r25
 4b2:	8f 93       	push	r24
 4b4:	1f 92       	push	r1
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	8f 93       	push	r24
 4ba:	32 df       	rcall	.-412    	; 0x320 <lcdWriteText>
 4bc:	88 e0       	ldi	r24, 0x08	; 8
 4be:	92 e0       	ldi	r25, 0x02	; 2
 4c0:	9f 93       	push	r25
 4c2:	8f 93       	push	r24
 4c4:	1f 92       	push	r1
 4c6:	82 e0       	ldi	r24, 0x02	; 2
 4c8:	8f 93       	push	r24
 4ca:	2a df       	rcall	.-428    	; 0x320 <lcdWriteText>
 4cc:	87 e4       	ldi	r24, 0x47	; 71
 4ce:	92 e0       	ldi	r25, 0x02	; 2
 4d0:	9f 93       	push	r25
 4d2:	8f 93       	push	r24
 4d4:	1f 92       	push	r1
 4d6:	83 e0       	ldi	r24, 0x03	; 3
 4d8:	8f 93       	push	r24
 4da:	22 df       	rcall	.-444    	; 0x320 <lcdWriteText>
 4dc:	8d b7       	in	r24, 0x3d	; 61
 4de:	9e b7       	in	r25, 0x3e	; 62
 4e0:	40 96       	adiw	r24, 0x10	; 16
 4e2:	0f b6       	in	r0, 0x3f	; 63
 4e4:	f8 94       	cli
 4e6:	9e bf       	out	0x3e, r25	; 62
 4e8:	0f be       	out	0x3f, r0	; 63
 4ea:	8d bf       	out	0x3d, r24	; 61
 4ec:	88 24       	eor	r8, r8
 4ee:	83 94       	inc	r8
 4f0:	c0 e0       	ldi	r28, 0x00	; 0
 4f2:	71 2c       	mov	r7, r1
 4f4:	99 24       	eor	r9, r9
 4f6:	93 94       	inc	r9
 4f8:	d0 e0       	ldi	r29, 0x00	; 0
 4fa:	cc 24       	eor	r12, r12
 4fc:	c3 94       	inc	r12
 4fe:	d1 2c       	mov	r13, r1
 500:	e1 2c       	mov	r14, r1
 502:	68 94       	set
 504:	ff 24       	eor	r15, r15
 506:	f7 f8       	bld	r15, 7
 508:	66 24       	eor	r6, r6
 50a:	63 94       	inc	r6
 50c:	51 2c       	mov	r5, r1
 50e:	09 e0       	ldi	r16, 0x09	; 9
 510:	11 e0       	ldi	r17, 0x01	; 1
 512:	0f 2e       	mov	r0, r31
 514:	fc e5       	ldi	r31, 0x5C	; 92
 516:	af 2e       	mov	r10, r31
 518:	f2 e0       	ldi	r31, 0x02	; 2
 51a:	bf 2e       	mov	r11, r31
 51c:	f0 2d       	mov	r31, r0
 51e:	0f 2e       	mov	r0, r31
 520:	f3 e0       	ldi	r31, 0x03	; 3
 522:	4f 2e       	mov	r4, r31
 524:	f0 2d       	mov	r31, r0
 526:	99 20       	and	r9, r9
 528:	49 f0       	breq	.+18     	; 0x53c <initBoard+0x134>
 52a:	c7 01       	movw	r24, r14
 52c:	0d 2e       	mov	r0, r29
 52e:	02 c0       	rjmp	.+4      	; 0x534 <initBoard+0x12c>
 530:	96 95       	lsr	r25
 532:	87 95       	ror	r24
 534:	0a 94       	dec	r0
 536:	e2 f7       	brpl	.-8      	; 0x530 <initBoard+0x128>
 538:	09 de       	rcall	.-1006   	; 0x14c <ledWriteAll>
 53a:	08 c0       	rjmp	.+16     	; 0x54c <initBoard+0x144>
 53c:	c6 01       	movw	r24, r12
 53e:	0d 2e       	mov	r0, r29
 540:	02 c0       	rjmp	.+4      	; 0x546 <initBoard+0x13e>
 542:	88 0f       	add	r24, r24
 544:	99 1f       	adc	r25, r25
 546:	0a 94       	dec	r0
 548:	e2 f7       	brpl	.-8      	; 0x542 <initBoard+0x13a>
 54a:	00 de       	rcall	.-1024   	; 0x14c <ledWriteAll>
 54c:	df 5f       	subi	r29, 0xFF	; 255
 54e:	d1 31       	cpi	r29, 0x11	; 17
 550:	28 f0       	brcs	.+10     	; 0x55c <initBoard+0x154>
 552:	86 2d       	mov	r24, r6
 554:	91 10       	cpse	r9, r1
 556:	85 2d       	mov	r24, r5
 558:	98 2e       	mov	r9, r24
 55a:	d0 e0       	ldi	r29, 0x00	; 0
 55c:	88 20       	and	r8, r8
 55e:	11 f0       	breq	.+4      	; 0x564 <initBoard+0x15c>
 560:	ce 5f       	subi	r28, 0xFE	; 254
 562:	01 c0       	rjmp	.+2      	; 0x566 <initBoard+0x15e>
 564:	c2 50       	subi	r28, 0x02	; 2
 566:	8c 2f       	mov	r24, r28
 568:	58 de       	rcall	.-848    	; 0x21a <lcdLight>
 56a:	ce 3f       	cpi	r28, 0xFE	; 254
 56c:	21 f0       	breq	.+8      	; 0x576 <initBoard+0x16e>
 56e:	c8 37       	cpi	r28, 0x78	; 120
 570:	19 f4       	brne	.+6      	; 0x578 <initBoard+0x170>
 572:	86 2c       	mov	r8, r6
 574:	01 c0       	rjmp	.+2      	; 0x578 <initBoard+0x170>
 576:	85 2c       	mov	r8, r5
 578:	71 10       	cpse	r7, r1
 57a:	3b c0       	rjmp	.+118    	; 0x5f2 <initBoard+0x1ea>
 57c:	f8 01       	movw	r30, r16
 57e:	80 81       	ld	r24, Z
 580:	83 7c       	andi	r24, 0xC3	; 195
 582:	91 f0       	breq	.+36     	; 0x5a8 <initBoard+0x1a0>
 584:	40 e0       	ldi	r20, 0x00	; 0
 586:	50 e0       	ldi	r21, 0x00	; 0
 588:	66 e2       	ldi	r22, 0x26	; 38
 58a:	72 e0       	ldi	r23, 0x02	; 2
 58c:	8f ef       	ldi	r24, 0xFF	; 255
 58e:	93 e0       	ldi	r25, 0x03	; 3
 590:	0d de       	rcall	.-998    	; 0x1ac <rgbWrite>
 592:	bf 92       	push	r11
 594:	af 92       	push	r10
 596:	1f 92       	push	r1
 598:	4f 92       	push	r4
 59a:	c2 de       	rcall	.-636    	; 0x320 <lcdWriteText>
 59c:	0f 90       	pop	r0
 59e:	0f 90       	pop	r0
 5a0:	0f 90       	pop	r0
 5a2:	0f 90       	pop	r0
 5a4:	76 2c       	mov	r7, r6
 5a6:	25 c0       	rjmp	.+74     	; 0x5f2 <initBoard+0x1ea>
 5a8:	8f ef       	ldi	r24, 0xFF	; 255
 5aa:	9c e7       	ldi	r25, 0x7C	; 124
 5ac:	01 97       	sbiw	r24, 0x01	; 1
 5ae:	f1 f7       	brne	.-4      	; 0x5ac <initBoard+0x1a4>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <initBoard+0x1aa>
 5b2:	00 00       	nop
 5b4:	b8 cf       	rjmp	.-144    	; 0x526 <initBoard+0x11e>
 5b6:	f0 de       	rcall	.-544    	; 0x398 <lcdClear>
 5b8:	80 e0       	ldi	r24, 0x00	; 0
 5ba:	2f de       	rcall	.-930    	; 0x21a <lcdLight>
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	c5 dd       	rcall	.-1142   	; 0x14c <ledWriteAll>
 5c2:	40 e0       	ldi	r20, 0x00	; 0
 5c4:	50 e0       	ldi	r21, 0x00	; 0
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	70 e0       	ldi	r23, 0x00	; 0
 5ca:	80 e0       	ldi	r24, 0x00	; 0
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	ee dd       	rcall	.-1060   	; 0x1ac <rgbWrite>
 5d0:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 5d4:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 5d8:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 5dc:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 5e0:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 5e4:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 5e8:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 5ec:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 5f0:	05 c0       	rjmp	.+10     	; 0x5fc <initBoard+0x1f4>
 5f2:	f8 01       	movw	r30, r16
 5f4:	80 81       	ld	r24, Z
 5f6:	83 7c       	andi	r24, 0xC3	; 195
 5f8:	b9 f6       	brne	.-82     	; 0x5a8 <initBoard+0x1a0>
 5fa:	dd cf       	rjmp	.-70     	; 0x5b6 <initBoard+0x1ae>
 5fc:	df 91       	pop	r29
 5fe:	cf 91       	pop	r28
 600:	1f 91       	pop	r17
 602:	0f 91       	pop	r16
 604:	ff 90       	pop	r15
 606:	ef 90       	pop	r14
 608:	df 90       	pop	r13
 60a:	cf 90       	pop	r12
 60c:	bf 90       	pop	r11
 60e:	af 90       	pop	r10
 610:	9f 90       	pop	r9
 612:	8f 90       	pop	r8
 614:	7f 90       	pop	r7
 616:	6f 90       	pop	r6
 618:	5f 90       	pop	r5
 61a:	4f 90       	pop	r4
 61c:	08 95       	ret

0000061e <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 61e:	cf 93       	push	r28
 620:	df 93       	push	r29
 622:	cd b7       	in	r28, 0x3d	; 61
 624:	de b7       	in	r29, 0x3e	; 62
 626:	28 97       	sbiw	r28, 0x08	; 8
 628:	0f b6       	in	r0, 0x3f	; 63
 62a:	f8 94       	cli
 62c:	de bf       	out	0x3e, r29	; 62
 62e:	0f be       	out	0x3f, r0	; 63
 630:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 632:	88 e0       	ldi	r24, 0x08	; 8
 634:	e0 e0       	ldi	r30, 0x00	; 0
 636:	f2 e0       	ldi	r31, 0x02	; 2
 638:	de 01       	movw	r26, r28
 63a:	11 96       	adiw	r26, 0x01	; 1
 63c:	01 90       	ld	r0, Z+
 63e:	0d 92       	st	X+, r0
 640:	8a 95       	dec	r24
 642:	e1 f7       	brne	.-8      	; 0x63c <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 644:	e5 e0       	ldi	r30, 0x05	; 5
 646:	f1 e0       	ldi	r31, 0x01	; 1
 648:	80 81       	ld	r24, Z
 64a:	8f 7b       	andi	r24, 0xBF	; 191
 64c:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 64e:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 652:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	8c 0f       	add	r24, r28
 65c:	9d 1f       	adc	r25, r29
 65e:	e8 0f       	add	r30, r24
 660:	f9 1f       	adc	r31, r25
 662:	80 81       	ld	r24, Z
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 66a:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 66e:	a2 ef       	ldi	r26, 0xF2	; 242
 670:	b2 e0       	ldi	r27, 0x02	; 2
 672:	22 e8       	ldi	r18, 0x82	; 130
 674:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 676:	e5 e0       	ldi	r30, 0x05	; 5
 678:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 67a:	5e 91       	ld	r21, -X
 67c:	4e 91       	ld	r20, -X
 67e:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 682:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 686:	84 23       	and	r24, r20
 688:	95 23       	and	r25, r21
 68a:	89 2b       	or	r24, r25
 68c:	21 f0       	breq	.+8      	; 0x696 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 68e:	80 81       	ld	r24, Z
 690:	80 62       	ori	r24, 0x20	; 32
 692:	80 83       	st	Z, r24
 694:	03 c0       	rjmp	.+6      	; 0x69c <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 696:	80 81       	ld	r24, Z
 698:	8f 7d       	andi	r24, 0xDF	; 223
 69a:	80 83       	st	Z, r24
        }
        CLOCK_1;
 69c:	80 81       	ld	r24, Z
 69e:	80 61       	ori	r24, 0x10	; 16
 6a0:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 6a2:	80 81       	ld	r24, Z
 6a4:	8f 7e       	andi	r24, 0xEF	; 239
 6a6:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 6a8:	a2 17       	cp	r26, r18
 6aa:	b3 07       	cpc	r27, r19
 6ac:	31 f7       	brne	.-52     	; 0x67a <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 6ae:	e5 e0       	ldi	r30, 0x05	; 5
 6b0:	f1 e0       	ldi	r31, 0x01	; 1
 6b2:	80 81       	ld	r24, Z
 6b4:	87 7f       	andi	r24, 0xF7	; 247
 6b6:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 6b8:	80 81       	ld	r24, Z
 6ba:	88 7f       	andi	r24, 0xF8	; 248
 6bc:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 6be:	90 81       	ld	r25, Z
 6c0:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 6c4:	89 2b       	or	r24, r25
 6c6:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 6c8:	80 81       	ld	r24, Z
 6ca:	80 64       	ori	r24, 0x40	; 64
 6cc:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 6ce:	80 81       	ld	r24, Z
 6d0:	88 60       	ori	r24, 0x08	; 8
 6d2:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 6d4:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 6d8:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 6dc:	87 30       	cpi	r24, 0x07	; 7
 6de:	91 05       	cpc	r25, r1
 6e0:	30 f4       	brcc	.+12     	; 0x6ee <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 6e2:	01 96       	adiw	r24, 0x01	; 1
 6e4:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2725+0x1>
 6e8:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2725>
 6ec:	07 c0       	rjmp	.+14     	; 0x6fc <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 6ee:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2725+0x1>
 6f2:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2725>
        writeTextFinished = 1;
 6f6:	81 e0       	ldi	r24, 0x01	; 1
 6f8:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 6fc:	28 96       	adiw	r28, 0x08	; 8
 6fe:	0f b6       	in	r0, 0x3f	; 63
 700:	f8 94       	cli
 702:	de bf       	out	0x3e, r29	; 62
 704:	0f be       	out	0x3f, r0	; 63
 706:	cd bf       	out	0x3d, r28	; 61
 708:	df 91       	pop	r29
 70a:	cf 91       	pop	r28
 70c:	08 95       	ret

0000070e <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 70e:	1f 92       	push	r1
 710:	0f 92       	push	r0
 712:	0f b6       	in	r0, 0x3f	; 63
 714:	0f 92       	push	r0
 716:	11 24       	eor	r1, r1
 718:	0b b6       	in	r0, 0x3b	; 59
 71a:	0f 92       	push	r0
 71c:	2f 93       	push	r18
 71e:	3f 93       	push	r19
 720:	4f 93       	push	r20
 722:	5f 93       	push	r21
 724:	6f 93       	push	r22
 726:	7f 93       	push	r23
 728:	8f 93       	push	r24
 72a:	9f 93       	push	r25
 72c:	af 93       	push	r26
 72e:	bf 93       	push	r27
 730:	ef 93       	push	r30
 732:	ff 93       	push	r31
    systemTimeMs += 1;
 734:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 738:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 73c:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 740:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 744:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 748:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 74c:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 750:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 754:	a1 e0       	ldi	r26, 0x01	; 1
 756:	27 d0       	rcall	.+78     	; 0x7a6 <__adddi3_s8>
 758:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 75c:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 760:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 764:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 768:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 76c:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 770:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 774:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 778:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 77c:	81 11       	cpse	r24, r1
 77e:	4f df       	rcall	.-354    	; 0x61e <matrixWriteNextLine>
}
 780:	ff 91       	pop	r31
 782:	ef 91       	pop	r30
 784:	bf 91       	pop	r27
 786:	af 91       	pop	r26
 788:	9f 91       	pop	r25
 78a:	8f 91       	pop	r24
 78c:	7f 91       	pop	r23
 78e:	6f 91       	pop	r22
 790:	5f 91       	pop	r21
 792:	4f 91       	pop	r20
 794:	3f 91       	pop	r19
 796:	2f 91       	pop	r18
 798:	0f 90       	pop	r0
 79a:	0b be       	out	0x3b, r0	; 59
 79c:	0f 90       	pop	r0
 79e:	0f be       	out	0x3f, r0	; 63
 7a0:	0f 90       	pop	r0
 7a2:	1f 90       	pop	r1
 7a4:	18 95       	reti

000007a6 <__adddi3_s8>:
 7a6:	00 24       	eor	r0, r0
 7a8:	a7 fd       	sbrc	r26, 7
 7aa:	00 94       	com	r0
 7ac:	2a 0f       	add	r18, r26
 7ae:	30 1d       	adc	r19, r0
 7b0:	40 1d       	adc	r20, r0
 7b2:	50 1d       	adc	r21, r0
 7b4:	60 1d       	adc	r22, r0
 7b6:	70 1d       	adc	r23, r0
 7b8:	80 1d       	adc	r24, r0
 7ba:	90 1d       	adc	r25, r0
 7bc:	08 95       	ret

000007be <vsnprintf>:
 7be:	0f 93       	push	r16
 7c0:	1f 93       	push	r17
 7c2:	cf 93       	push	r28
 7c4:	df 93       	push	r29
 7c6:	cd b7       	in	r28, 0x3d	; 61
 7c8:	de b7       	in	r29, 0x3e	; 62
 7ca:	2e 97       	sbiw	r28, 0x0e	; 14
 7cc:	0f b6       	in	r0, 0x3f	; 63
 7ce:	f8 94       	cli
 7d0:	de bf       	out	0x3e, r29	; 62
 7d2:	0f be       	out	0x3f, r0	; 63
 7d4:	cd bf       	out	0x3d, r28	; 61
 7d6:	8c 01       	movw	r16, r24
 7d8:	fa 01       	movw	r30, r20
 7da:	86 e0       	ldi	r24, 0x06	; 6
 7dc:	8c 83       	std	Y+4, r24	; 0x04
 7de:	1a 83       	std	Y+2, r17	; 0x02
 7e0:	09 83       	std	Y+1, r16	; 0x01
 7e2:	77 ff       	sbrs	r23, 7
 7e4:	02 c0       	rjmp	.+4      	; 0x7ea <vsnprintf+0x2c>
 7e6:	60 e0       	ldi	r22, 0x00	; 0
 7e8:	70 e8       	ldi	r23, 0x80	; 128
 7ea:	cb 01       	movw	r24, r22
 7ec:	01 97       	sbiw	r24, 0x01	; 1
 7ee:	9e 83       	std	Y+6, r25	; 0x06
 7f0:	8d 83       	std	Y+5, r24	; 0x05
 7f2:	a9 01       	movw	r20, r18
 7f4:	bf 01       	movw	r22, r30
 7f6:	ce 01       	movw	r24, r28
 7f8:	01 96       	adiw	r24, 0x01	; 1
 7fa:	19 d0       	rcall	.+50     	; 0x82e <vfprintf>
 7fc:	4d 81       	ldd	r20, Y+5	; 0x05
 7fe:	5e 81       	ldd	r21, Y+6	; 0x06
 800:	57 fd       	sbrc	r21, 7
 802:	0a c0       	rjmp	.+20     	; 0x818 <vsnprintf+0x5a>
 804:	2f 81       	ldd	r18, Y+7	; 0x07
 806:	38 85       	ldd	r19, Y+8	; 0x08
 808:	42 17       	cp	r20, r18
 80a:	53 07       	cpc	r21, r19
 80c:	0c f4       	brge	.+2      	; 0x810 <vsnprintf+0x52>
 80e:	9a 01       	movw	r18, r20
 810:	f8 01       	movw	r30, r16
 812:	e2 0f       	add	r30, r18
 814:	f3 1f       	adc	r31, r19
 816:	10 82       	st	Z, r1
 818:	2e 96       	adiw	r28, 0x0e	; 14
 81a:	0f b6       	in	r0, 0x3f	; 63
 81c:	f8 94       	cli
 81e:	de bf       	out	0x3e, r29	; 62
 820:	0f be       	out	0x3f, r0	; 63
 822:	cd bf       	out	0x3d, r28	; 61
 824:	df 91       	pop	r29
 826:	cf 91       	pop	r28
 828:	1f 91       	pop	r17
 82a:	0f 91       	pop	r16
 82c:	08 95       	ret

0000082e <vfprintf>:
 82e:	2f 92       	push	r2
 830:	3f 92       	push	r3
 832:	4f 92       	push	r4
 834:	5f 92       	push	r5
 836:	6f 92       	push	r6
 838:	7f 92       	push	r7
 83a:	8f 92       	push	r8
 83c:	9f 92       	push	r9
 83e:	af 92       	push	r10
 840:	bf 92       	push	r11
 842:	cf 92       	push	r12
 844:	df 92       	push	r13
 846:	ef 92       	push	r14
 848:	ff 92       	push	r15
 84a:	0f 93       	push	r16
 84c:	1f 93       	push	r17
 84e:	cf 93       	push	r28
 850:	df 93       	push	r29
 852:	cd b7       	in	r28, 0x3d	; 61
 854:	de b7       	in	r29, 0x3e	; 62
 856:	2b 97       	sbiw	r28, 0x0b	; 11
 858:	0f b6       	in	r0, 0x3f	; 63
 85a:	f8 94       	cli
 85c:	de bf       	out	0x3e, r29	; 62
 85e:	0f be       	out	0x3f, r0	; 63
 860:	cd bf       	out	0x3d, r28	; 61
 862:	6c 01       	movw	r12, r24
 864:	7b 01       	movw	r14, r22
 866:	8a 01       	movw	r16, r20
 868:	fc 01       	movw	r30, r24
 86a:	17 82       	std	Z+7, r1	; 0x07
 86c:	16 82       	std	Z+6, r1	; 0x06
 86e:	83 81       	ldd	r24, Z+3	; 0x03
 870:	81 ff       	sbrs	r24, 1
 872:	bf c1       	rjmp	.+894    	; 0xbf2 <vfprintf+0x3c4>
 874:	ce 01       	movw	r24, r28
 876:	01 96       	adiw	r24, 0x01	; 1
 878:	3c 01       	movw	r6, r24
 87a:	f6 01       	movw	r30, r12
 87c:	93 81       	ldd	r25, Z+3	; 0x03
 87e:	f7 01       	movw	r30, r14
 880:	93 fd       	sbrc	r25, 3
 882:	85 91       	lpm	r24, Z+
 884:	93 ff       	sbrs	r25, 3
 886:	81 91       	ld	r24, Z+
 888:	7f 01       	movw	r14, r30
 88a:	88 23       	and	r24, r24
 88c:	09 f4       	brne	.+2      	; 0x890 <vfprintf+0x62>
 88e:	ad c1       	rjmp	.+858    	; 0xbea <vfprintf+0x3bc>
 890:	85 32       	cpi	r24, 0x25	; 37
 892:	39 f4       	brne	.+14     	; 0x8a2 <vfprintf+0x74>
 894:	93 fd       	sbrc	r25, 3
 896:	85 91       	lpm	r24, Z+
 898:	93 ff       	sbrs	r25, 3
 89a:	81 91       	ld	r24, Z+
 89c:	7f 01       	movw	r14, r30
 89e:	85 32       	cpi	r24, 0x25	; 37
 8a0:	21 f4       	brne	.+8      	; 0x8aa <vfprintf+0x7c>
 8a2:	b6 01       	movw	r22, r12
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	d6 d1       	rcall	.+940    	; 0xc54 <fputc>
 8a8:	e8 cf       	rjmp	.-48     	; 0x87a <vfprintf+0x4c>
 8aa:	91 2c       	mov	r9, r1
 8ac:	21 2c       	mov	r2, r1
 8ae:	31 2c       	mov	r3, r1
 8b0:	ff e1       	ldi	r31, 0x1F	; 31
 8b2:	f3 15       	cp	r31, r3
 8b4:	d8 f0       	brcs	.+54     	; 0x8ec <vfprintf+0xbe>
 8b6:	8b 32       	cpi	r24, 0x2B	; 43
 8b8:	79 f0       	breq	.+30     	; 0x8d8 <vfprintf+0xaa>
 8ba:	38 f4       	brcc	.+14     	; 0x8ca <vfprintf+0x9c>
 8bc:	80 32       	cpi	r24, 0x20	; 32
 8be:	79 f0       	breq	.+30     	; 0x8de <vfprintf+0xb0>
 8c0:	83 32       	cpi	r24, 0x23	; 35
 8c2:	a1 f4       	brne	.+40     	; 0x8ec <vfprintf+0xbe>
 8c4:	23 2d       	mov	r18, r3
 8c6:	20 61       	ori	r18, 0x10	; 16
 8c8:	1d c0       	rjmp	.+58     	; 0x904 <vfprintf+0xd6>
 8ca:	8d 32       	cpi	r24, 0x2D	; 45
 8cc:	61 f0       	breq	.+24     	; 0x8e6 <vfprintf+0xb8>
 8ce:	80 33       	cpi	r24, 0x30	; 48
 8d0:	69 f4       	brne	.+26     	; 0x8ec <vfprintf+0xbe>
 8d2:	23 2d       	mov	r18, r3
 8d4:	21 60       	ori	r18, 0x01	; 1
 8d6:	16 c0       	rjmp	.+44     	; 0x904 <vfprintf+0xd6>
 8d8:	83 2d       	mov	r24, r3
 8da:	82 60       	ori	r24, 0x02	; 2
 8dc:	38 2e       	mov	r3, r24
 8de:	e3 2d       	mov	r30, r3
 8e0:	e4 60       	ori	r30, 0x04	; 4
 8e2:	3e 2e       	mov	r3, r30
 8e4:	2a c0       	rjmp	.+84     	; 0x93a <vfprintf+0x10c>
 8e6:	f3 2d       	mov	r31, r3
 8e8:	f8 60       	ori	r31, 0x08	; 8
 8ea:	1d c0       	rjmp	.+58     	; 0x926 <vfprintf+0xf8>
 8ec:	37 fc       	sbrc	r3, 7
 8ee:	2d c0       	rjmp	.+90     	; 0x94a <vfprintf+0x11c>
 8f0:	20 ed       	ldi	r18, 0xD0	; 208
 8f2:	28 0f       	add	r18, r24
 8f4:	2a 30       	cpi	r18, 0x0A	; 10
 8f6:	40 f0       	brcs	.+16     	; 0x908 <vfprintf+0xda>
 8f8:	8e 32       	cpi	r24, 0x2E	; 46
 8fa:	b9 f4       	brne	.+46     	; 0x92a <vfprintf+0xfc>
 8fc:	36 fc       	sbrc	r3, 6
 8fe:	75 c1       	rjmp	.+746    	; 0xbea <vfprintf+0x3bc>
 900:	23 2d       	mov	r18, r3
 902:	20 64       	ori	r18, 0x40	; 64
 904:	32 2e       	mov	r3, r18
 906:	19 c0       	rjmp	.+50     	; 0x93a <vfprintf+0x10c>
 908:	36 fe       	sbrs	r3, 6
 90a:	06 c0       	rjmp	.+12     	; 0x918 <vfprintf+0xea>
 90c:	8a e0       	ldi	r24, 0x0A	; 10
 90e:	98 9e       	mul	r9, r24
 910:	20 0d       	add	r18, r0
 912:	11 24       	eor	r1, r1
 914:	92 2e       	mov	r9, r18
 916:	11 c0       	rjmp	.+34     	; 0x93a <vfprintf+0x10c>
 918:	ea e0       	ldi	r30, 0x0A	; 10
 91a:	2e 9e       	mul	r2, r30
 91c:	20 0d       	add	r18, r0
 91e:	11 24       	eor	r1, r1
 920:	22 2e       	mov	r2, r18
 922:	f3 2d       	mov	r31, r3
 924:	f0 62       	ori	r31, 0x20	; 32
 926:	3f 2e       	mov	r3, r31
 928:	08 c0       	rjmp	.+16     	; 0x93a <vfprintf+0x10c>
 92a:	8c 36       	cpi	r24, 0x6C	; 108
 92c:	21 f4       	brne	.+8      	; 0x936 <vfprintf+0x108>
 92e:	83 2d       	mov	r24, r3
 930:	80 68       	ori	r24, 0x80	; 128
 932:	38 2e       	mov	r3, r24
 934:	02 c0       	rjmp	.+4      	; 0x93a <vfprintf+0x10c>
 936:	88 36       	cpi	r24, 0x68	; 104
 938:	41 f4       	brne	.+16     	; 0x94a <vfprintf+0x11c>
 93a:	f7 01       	movw	r30, r14
 93c:	93 fd       	sbrc	r25, 3
 93e:	85 91       	lpm	r24, Z+
 940:	93 ff       	sbrs	r25, 3
 942:	81 91       	ld	r24, Z+
 944:	7f 01       	movw	r14, r30
 946:	81 11       	cpse	r24, r1
 948:	b3 cf       	rjmp	.-154    	; 0x8b0 <vfprintf+0x82>
 94a:	98 2f       	mov	r25, r24
 94c:	9f 7d       	andi	r25, 0xDF	; 223
 94e:	95 54       	subi	r25, 0x45	; 69
 950:	93 30       	cpi	r25, 0x03	; 3
 952:	28 f4       	brcc	.+10     	; 0x95e <vfprintf+0x130>
 954:	0c 5f       	subi	r16, 0xFC	; 252
 956:	1f 4f       	sbci	r17, 0xFF	; 255
 958:	9f e3       	ldi	r25, 0x3F	; 63
 95a:	99 83       	std	Y+1, r25	; 0x01
 95c:	0d c0       	rjmp	.+26     	; 0x978 <vfprintf+0x14a>
 95e:	83 36       	cpi	r24, 0x63	; 99
 960:	31 f0       	breq	.+12     	; 0x96e <vfprintf+0x140>
 962:	83 37       	cpi	r24, 0x73	; 115
 964:	71 f0       	breq	.+28     	; 0x982 <vfprintf+0x154>
 966:	83 35       	cpi	r24, 0x53	; 83
 968:	09 f0       	breq	.+2      	; 0x96c <vfprintf+0x13e>
 96a:	55 c0       	rjmp	.+170    	; 0xa16 <vfprintf+0x1e8>
 96c:	20 c0       	rjmp	.+64     	; 0x9ae <vfprintf+0x180>
 96e:	f8 01       	movw	r30, r16
 970:	80 81       	ld	r24, Z
 972:	89 83       	std	Y+1, r24	; 0x01
 974:	0e 5f       	subi	r16, 0xFE	; 254
 976:	1f 4f       	sbci	r17, 0xFF	; 255
 978:	88 24       	eor	r8, r8
 97a:	83 94       	inc	r8
 97c:	91 2c       	mov	r9, r1
 97e:	53 01       	movw	r10, r6
 980:	12 c0       	rjmp	.+36     	; 0x9a6 <vfprintf+0x178>
 982:	28 01       	movw	r4, r16
 984:	f2 e0       	ldi	r31, 0x02	; 2
 986:	4f 0e       	add	r4, r31
 988:	51 1c       	adc	r5, r1
 98a:	f8 01       	movw	r30, r16
 98c:	a0 80       	ld	r10, Z
 98e:	b1 80       	ldd	r11, Z+1	; 0x01
 990:	36 fe       	sbrs	r3, 6
 992:	03 c0       	rjmp	.+6      	; 0x99a <vfprintf+0x16c>
 994:	69 2d       	mov	r22, r9
 996:	70 e0       	ldi	r23, 0x00	; 0
 998:	02 c0       	rjmp	.+4      	; 0x99e <vfprintf+0x170>
 99a:	6f ef       	ldi	r22, 0xFF	; 255
 99c:	7f ef       	ldi	r23, 0xFF	; 255
 99e:	c5 01       	movw	r24, r10
 9a0:	4e d1       	rcall	.+668    	; 0xc3e <strnlen>
 9a2:	4c 01       	movw	r8, r24
 9a4:	82 01       	movw	r16, r4
 9a6:	f3 2d       	mov	r31, r3
 9a8:	ff 77       	andi	r31, 0x7F	; 127
 9aa:	3f 2e       	mov	r3, r31
 9ac:	15 c0       	rjmp	.+42     	; 0x9d8 <vfprintf+0x1aa>
 9ae:	28 01       	movw	r4, r16
 9b0:	22 e0       	ldi	r18, 0x02	; 2
 9b2:	42 0e       	add	r4, r18
 9b4:	51 1c       	adc	r5, r1
 9b6:	f8 01       	movw	r30, r16
 9b8:	a0 80       	ld	r10, Z
 9ba:	b1 80       	ldd	r11, Z+1	; 0x01
 9bc:	36 fe       	sbrs	r3, 6
 9be:	03 c0       	rjmp	.+6      	; 0x9c6 <vfprintf+0x198>
 9c0:	69 2d       	mov	r22, r9
 9c2:	70 e0       	ldi	r23, 0x00	; 0
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <vfprintf+0x19c>
 9c6:	6f ef       	ldi	r22, 0xFF	; 255
 9c8:	7f ef       	ldi	r23, 0xFF	; 255
 9ca:	c5 01       	movw	r24, r10
 9cc:	2d d1       	rcall	.+602    	; 0xc28 <strnlen_P>
 9ce:	4c 01       	movw	r8, r24
 9d0:	f3 2d       	mov	r31, r3
 9d2:	f0 68       	ori	r31, 0x80	; 128
 9d4:	3f 2e       	mov	r3, r31
 9d6:	82 01       	movw	r16, r4
 9d8:	33 fc       	sbrc	r3, 3
 9da:	19 c0       	rjmp	.+50     	; 0xa0e <vfprintf+0x1e0>
 9dc:	82 2d       	mov	r24, r2
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	88 16       	cp	r8, r24
 9e2:	99 06       	cpc	r9, r25
 9e4:	a0 f4       	brcc	.+40     	; 0xa0e <vfprintf+0x1e0>
 9e6:	b6 01       	movw	r22, r12
 9e8:	80 e2       	ldi	r24, 0x20	; 32
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	33 d1       	rcall	.+614    	; 0xc54 <fputc>
 9ee:	2a 94       	dec	r2
 9f0:	f5 cf       	rjmp	.-22     	; 0x9dc <vfprintf+0x1ae>
 9f2:	f5 01       	movw	r30, r10
 9f4:	37 fc       	sbrc	r3, 7
 9f6:	85 91       	lpm	r24, Z+
 9f8:	37 fe       	sbrs	r3, 7
 9fa:	81 91       	ld	r24, Z+
 9fc:	5f 01       	movw	r10, r30
 9fe:	b6 01       	movw	r22, r12
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	28 d1       	rcall	.+592    	; 0xc54 <fputc>
 a04:	21 10       	cpse	r2, r1
 a06:	2a 94       	dec	r2
 a08:	21 e0       	ldi	r18, 0x01	; 1
 a0a:	82 1a       	sub	r8, r18
 a0c:	91 08       	sbc	r9, r1
 a0e:	81 14       	cp	r8, r1
 a10:	91 04       	cpc	r9, r1
 a12:	79 f7       	brne	.-34     	; 0x9f2 <vfprintf+0x1c4>
 a14:	e1 c0       	rjmp	.+450    	; 0xbd8 <vfprintf+0x3aa>
 a16:	84 36       	cpi	r24, 0x64	; 100
 a18:	11 f0       	breq	.+4      	; 0xa1e <vfprintf+0x1f0>
 a1a:	89 36       	cpi	r24, 0x69	; 105
 a1c:	39 f5       	brne	.+78     	; 0xa6c <vfprintf+0x23e>
 a1e:	f8 01       	movw	r30, r16
 a20:	37 fe       	sbrs	r3, 7
 a22:	07 c0       	rjmp	.+14     	; 0xa32 <vfprintf+0x204>
 a24:	60 81       	ld	r22, Z
 a26:	71 81       	ldd	r23, Z+1	; 0x01
 a28:	82 81       	ldd	r24, Z+2	; 0x02
 a2a:	93 81       	ldd	r25, Z+3	; 0x03
 a2c:	0c 5f       	subi	r16, 0xFC	; 252
 a2e:	1f 4f       	sbci	r17, 0xFF	; 255
 a30:	08 c0       	rjmp	.+16     	; 0xa42 <vfprintf+0x214>
 a32:	60 81       	ld	r22, Z
 a34:	71 81       	ldd	r23, Z+1	; 0x01
 a36:	07 2e       	mov	r0, r23
 a38:	00 0c       	add	r0, r0
 a3a:	88 0b       	sbc	r24, r24
 a3c:	99 0b       	sbc	r25, r25
 a3e:	0e 5f       	subi	r16, 0xFE	; 254
 a40:	1f 4f       	sbci	r17, 0xFF	; 255
 a42:	f3 2d       	mov	r31, r3
 a44:	ff 76       	andi	r31, 0x6F	; 111
 a46:	3f 2e       	mov	r3, r31
 a48:	97 ff       	sbrs	r25, 7
 a4a:	09 c0       	rjmp	.+18     	; 0xa5e <vfprintf+0x230>
 a4c:	90 95       	com	r25
 a4e:	80 95       	com	r24
 a50:	70 95       	com	r23
 a52:	61 95       	neg	r22
 a54:	7f 4f       	sbci	r23, 0xFF	; 255
 a56:	8f 4f       	sbci	r24, 0xFF	; 255
 a58:	9f 4f       	sbci	r25, 0xFF	; 255
 a5a:	f0 68       	ori	r31, 0x80	; 128
 a5c:	3f 2e       	mov	r3, r31
 a5e:	2a e0       	ldi	r18, 0x0A	; 10
 a60:	30 e0       	ldi	r19, 0x00	; 0
 a62:	a3 01       	movw	r20, r6
 a64:	33 d1       	rcall	.+614    	; 0xccc <__ultoa_invert>
 a66:	88 2e       	mov	r8, r24
 a68:	86 18       	sub	r8, r6
 a6a:	44 c0       	rjmp	.+136    	; 0xaf4 <vfprintf+0x2c6>
 a6c:	85 37       	cpi	r24, 0x75	; 117
 a6e:	31 f4       	brne	.+12     	; 0xa7c <vfprintf+0x24e>
 a70:	23 2d       	mov	r18, r3
 a72:	2f 7e       	andi	r18, 0xEF	; 239
 a74:	b2 2e       	mov	r11, r18
 a76:	2a e0       	ldi	r18, 0x0A	; 10
 a78:	30 e0       	ldi	r19, 0x00	; 0
 a7a:	25 c0       	rjmp	.+74     	; 0xac6 <vfprintf+0x298>
 a7c:	93 2d       	mov	r25, r3
 a7e:	99 7f       	andi	r25, 0xF9	; 249
 a80:	b9 2e       	mov	r11, r25
 a82:	8f 36       	cpi	r24, 0x6F	; 111
 a84:	c1 f0       	breq	.+48     	; 0xab6 <vfprintf+0x288>
 a86:	18 f4       	brcc	.+6      	; 0xa8e <vfprintf+0x260>
 a88:	88 35       	cpi	r24, 0x58	; 88
 a8a:	79 f0       	breq	.+30     	; 0xaaa <vfprintf+0x27c>
 a8c:	ae c0       	rjmp	.+348    	; 0xbea <vfprintf+0x3bc>
 a8e:	80 37       	cpi	r24, 0x70	; 112
 a90:	19 f0       	breq	.+6      	; 0xa98 <vfprintf+0x26a>
 a92:	88 37       	cpi	r24, 0x78	; 120
 a94:	21 f0       	breq	.+8      	; 0xa9e <vfprintf+0x270>
 a96:	a9 c0       	rjmp	.+338    	; 0xbea <vfprintf+0x3bc>
 a98:	e9 2f       	mov	r30, r25
 a9a:	e0 61       	ori	r30, 0x10	; 16
 a9c:	be 2e       	mov	r11, r30
 a9e:	b4 fe       	sbrs	r11, 4
 aa0:	0d c0       	rjmp	.+26     	; 0xabc <vfprintf+0x28e>
 aa2:	fb 2d       	mov	r31, r11
 aa4:	f4 60       	ori	r31, 0x04	; 4
 aa6:	bf 2e       	mov	r11, r31
 aa8:	09 c0       	rjmp	.+18     	; 0xabc <vfprintf+0x28e>
 aaa:	34 fe       	sbrs	r3, 4
 aac:	0a c0       	rjmp	.+20     	; 0xac2 <vfprintf+0x294>
 aae:	29 2f       	mov	r18, r25
 ab0:	26 60       	ori	r18, 0x06	; 6
 ab2:	b2 2e       	mov	r11, r18
 ab4:	06 c0       	rjmp	.+12     	; 0xac2 <vfprintf+0x294>
 ab6:	28 e0       	ldi	r18, 0x08	; 8
 ab8:	30 e0       	ldi	r19, 0x00	; 0
 aba:	05 c0       	rjmp	.+10     	; 0xac6 <vfprintf+0x298>
 abc:	20 e1       	ldi	r18, 0x10	; 16
 abe:	30 e0       	ldi	r19, 0x00	; 0
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0x298>
 ac2:	20 e1       	ldi	r18, 0x10	; 16
 ac4:	32 e0       	ldi	r19, 0x02	; 2
 ac6:	f8 01       	movw	r30, r16
 ac8:	b7 fe       	sbrs	r11, 7
 aca:	07 c0       	rjmp	.+14     	; 0xada <vfprintf+0x2ac>
 acc:	60 81       	ld	r22, Z
 ace:	71 81       	ldd	r23, Z+1	; 0x01
 ad0:	82 81       	ldd	r24, Z+2	; 0x02
 ad2:	93 81       	ldd	r25, Z+3	; 0x03
 ad4:	0c 5f       	subi	r16, 0xFC	; 252
 ad6:	1f 4f       	sbci	r17, 0xFF	; 255
 ad8:	06 c0       	rjmp	.+12     	; 0xae6 <vfprintf+0x2b8>
 ada:	60 81       	ld	r22, Z
 adc:	71 81       	ldd	r23, Z+1	; 0x01
 ade:	80 e0       	ldi	r24, 0x00	; 0
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	0e 5f       	subi	r16, 0xFE	; 254
 ae4:	1f 4f       	sbci	r17, 0xFF	; 255
 ae6:	a3 01       	movw	r20, r6
 ae8:	f1 d0       	rcall	.+482    	; 0xccc <__ultoa_invert>
 aea:	88 2e       	mov	r8, r24
 aec:	86 18       	sub	r8, r6
 aee:	fb 2d       	mov	r31, r11
 af0:	ff 77       	andi	r31, 0x7F	; 127
 af2:	3f 2e       	mov	r3, r31
 af4:	36 fe       	sbrs	r3, 6
 af6:	0d c0       	rjmp	.+26     	; 0xb12 <vfprintf+0x2e4>
 af8:	23 2d       	mov	r18, r3
 afa:	2e 7f       	andi	r18, 0xFE	; 254
 afc:	a2 2e       	mov	r10, r18
 afe:	89 14       	cp	r8, r9
 b00:	58 f4       	brcc	.+22     	; 0xb18 <vfprintf+0x2ea>
 b02:	34 fe       	sbrs	r3, 4
 b04:	0b c0       	rjmp	.+22     	; 0xb1c <vfprintf+0x2ee>
 b06:	32 fc       	sbrc	r3, 2
 b08:	09 c0       	rjmp	.+18     	; 0xb1c <vfprintf+0x2ee>
 b0a:	83 2d       	mov	r24, r3
 b0c:	8e 7e       	andi	r24, 0xEE	; 238
 b0e:	a8 2e       	mov	r10, r24
 b10:	05 c0       	rjmp	.+10     	; 0xb1c <vfprintf+0x2ee>
 b12:	b8 2c       	mov	r11, r8
 b14:	a3 2c       	mov	r10, r3
 b16:	03 c0       	rjmp	.+6      	; 0xb1e <vfprintf+0x2f0>
 b18:	b8 2c       	mov	r11, r8
 b1a:	01 c0       	rjmp	.+2      	; 0xb1e <vfprintf+0x2f0>
 b1c:	b9 2c       	mov	r11, r9
 b1e:	a4 fe       	sbrs	r10, 4
 b20:	0f c0       	rjmp	.+30     	; 0xb40 <vfprintf+0x312>
 b22:	fe 01       	movw	r30, r28
 b24:	e8 0d       	add	r30, r8
 b26:	f1 1d       	adc	r31, r1
 b28:	80 81       	ld	r24, Z
 b2a:	80 33       	cpi	r24, 0x30	; 48
 b2c:	21 f4       	brne	.+8      	; 0xb36 <vfprintf+0x308>
 b2e:	9a 2d       	mov	r25, r10
 b30:	99 7e       	andi	r25, 0xE9	; 233
 b32:	a9 2e       	mov	r10, r25
 b34:	09 c0       	rjmp	.+18     	; 0xb48 <vfprintf+0x31a>
 b36:	a2 fe       	sbrs	r10, 2
 b38:	06 c0       	rjmp	.+12     	; 0xb46 <vfprintf+0x318>
 b3a:	b3 94       	inc	r11
 b3c:	b3 94       	inc	r11
 b3e:	04 c0       	rjmp	.+8      	; 0xb48 <vfprintf+0x31a>
 b40:	8a 2d       	mov	r24, r10
 b42:	86 78       	andi	r24, 0x86	; 134
 b44:	09 f0       	breq	.+2      	; 0xb48 <vfprintf+0x31a>
 b46:	b3 94       	inc	r11
 b48:	a3 fc       	sbrc	r10, 3
 b4a:	10 c0       	rjmp	.+32     	; 0xb6c <vfprintf+0x33e>
 b4c:	a0 fe       	sbrs	r10, 0
 b4e:	06 c0       	rjmp	.+12     	; 0xb5c <vfprintf+0x32e>
 b50:	b2 14       	cp	r11, r2
 b52:	80 f4       	brcc	.+32     	; 0xb74 <vfprintf+0x346>
 b54:	28 0c       	add	r2, r8
 b56:	92 2c       	mov	r9, r2
 b58:	9b 18       	sub	r9, r11
 b5a:	0d c0       	rjmp	.+26     	; 0xb76 <vfprintf+0x348>
 b5c:	b2 14       	cp	r11, r2
 b5e:	58 f4       	brcc	.+22     	; 0xb76 <vfprintf+0x348>
 b60:	b6 01       	movw	r22, r12
 b62:	80 e2       	ldi	r24, 0x20	; 32
 b64:	90 e0       	ldi	r25, 0x00	; 0
 b66:	76 d0       	rcall	.+236    	; 0xc54 <fputc>
 b68:	b3 94       	inc	r11
 b6a:	f8 cf       	rjmp	.-16     	; 0xb5c <vfprintf+0x32e>
 b6c:	b2 14       	cp	r11, r2
 b6e:	18 f4       	brcc	.+6      	; 0xb76 <vfprintf+0x348>
 b70:	2b 18       	sub	r2, r11
 b72:	02 c0       	rjmp	.+4      	; 0xb78 <vfprintf+0x34a>
 b74:	98 2c       	mov	r9, r8
 b76:	21 2c       	mov	r2, r1
 b78:	a4 fe       	sbrs	r10, 4
 b7a:	0f c0       	rjmp	.+30     	; 0xb9a <vfprintf+0x36c>
 b7c:	b6 01       	movw	r22, r12
 b7e:	80 e3       	ldi	r24, 0x30	; 48
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	68 d0       	rcall	.+208    	; 0xc54 <fputc>
 b84:	a2 fe       	sbrs	r10, 2
 b86:	16 c0       	rjmp	.+44     	; 0xbb4 <vfprintf+0x386>
 b88:	a1 fc       	sbrc	r10, 1
 b8a:	03 c0       	rjmp	.+6      	; 0xb92 <vfprintf+0x364>
 b8c:	88 e7       	ldi	r24, 0x78	; 120
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	02 c0       	rjmp	.+4      	; 0xb96 <vfprintf+0x368>
 b92:	88 e5       	ldi	r24, 0x58	; 88
 b94:	90 e0       	ldi	r25, 0x00	; 0
 b96:	b6 01       	movw	r22, r12
 b98:	0c c0       	rjmp	.+24     	; 0xbb2 <vfprintf+0x384>
 b9a:	8a 2d       	mov	r24, r10
 b9c:	86 78       	andi	r24, 0x86	; 134
 b9e:	51 f0       	breq	.+20     	; 0xbb4 <vfprintf+0x386>
 ba0:	a1 fe       	sbrs	r10, 1
 ba2:	02 c0       	rjmp	.+4      	; 0xba8 <vfprintf+0x37a>
 ba4:	8b e2       	ldi	r24, 0x2B	; 43
 ba6:	01 c0       	rjmp	.+2      	; 0xbaa <vfprintf+0x37c>
 ba8:	80 e2       	ldi	r24, 0x20	; 32
 baa:	a7 fc       	sbrc	r10, 7
 bac:	8d e2       	ldi	r24, 0x2D	; 45
 bae:	b6 01       	movw	r22, r12
 bb0:	90 e0       	ldi	r25, 0x00	; 0
 bb2:	50 d0       	rcall	.+160    	; 0xc54 <fputc>
 bb4:	89 14       	cp	r8, r9
 bb6:	30 f4       	brcc	.+12     	; 0xbc4 <vfprintf+0x396>
 bb8:	b6 01       	movw	r22, r12
 bba:	80 e3       	ldi	r24, 0x30	; 48
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	4a d0       	rcall	.+148    	; 0xc54 <fputc>
 bc0:	9a 94       	dec	r9
 bc2:	f8 cf       	rjmp	.-16     	; 0xbb4 <vfprintf+0x386>
 bc4:	8a 94       	dec	r8
 bc6:	f3 01       	movw	r30, r6
 bc8:	e8 0d       	add	r30, r8
 bca:	f1 1d       	adc	r31, r1
 bcc:	80 81       	ld	r24, Z
 bce:	b6 01       	movw	r22, r12
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	40 d0       	rcall	.+128    	; 0xc54 <fputc>
 bd4:	81 10       	cpse	r8, r1
 bd6:	f6 cf       	rjmp	.-20     	; 0xbc4 <vfprintf+0x396>
 bd8:	22 20       	and	r2, r2
 bda:	09 f4       	brne	.+2      	; 0xbde <vfprintf+0x3b0>
 bdc:	4e ce       	rjmp	.-868    	; 0x87a <vfprintf+0x4c>
 bde:	b6 01       	movw	r22, r12
 be0:	80 e2       	ldi	r24, 0x20	; 32
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	37 d0       	rcall	.+110    	; 0xc54 <fputc>
 be6:	2a 94       	dec	r2
 be8:	f7 cf       	rjmp	.-18     	; 0xbd8 <vfprintf+0x3aa>
 bea:	f6 01       	movw	r30, r12
 bec:	86 81       	ldd	r24, Z+6	; 0x06
 bee:	97 81       	ldd	r25, Z+7	; 0x07
 bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <vfprintf+0x3c8>
 bf2:	8f ef       	ldi	r24, 0xFF	; 255
 bf4:	9f ef       	ldi	r25, 0xFF	; 255
 bf6:	2b 96       	adiw	r28, 0x0b	; 11
 bf8:	0f b6       	in	r0, 0x3f	; 63
 bfa:	f8 94       	cli
 bfc:	de bf       	out	0x3e, r29	; 62
 bfe:	0f be       	out	0x3f, r0	; 63
 c00:	cd bf       	out	0x3d, r28	; 61
 c02:	df 91       	pop	r29
 c04:	cf 91       	pop	r28
 c06:	1f 91       	pop	r17
 c08:	0f 91       	pop	r16
 c0a:	ff 90       	pop	r15
 c0c:	ef 90       	pop	r14
 c0e:	df 90       	pop	r13
 c10:	cf 90       	pop	r12
 c12:	bf 90       	pop	r11
 c14:	af 90       	pop	r10
 c16:	9f 90       	pop	r9
 c18:	8f 90       	pop	r8
 c1a:	7f 90       	pop	r7
 c1c:	6f 90       	pop	r6
 c1e:	5f 90       	pop	r5
 c20:	4f 90       	pop	r4
 c22:	3f 90       	pop	r3
 c24:	2f 90       	pop	r2
 c26:	08 95       	ret

00000c28 <strnlen_P>:
 c28:	fc 01       	movw	r30, r24
 c2a:	05 90       	lpm	r0, Z+
 c2c:	61 50       	subi	r22, 0x01	; 1
 c2e:	70 40       	sbci	r23, 0x00	; 0
 c30:	01 10       	cpse	r0, r1
 c32:	d8 f7       	brcc	.-10     	; 0xc2a <strnlen_P+0x2>
 c34:	80 95       	com	r24
 c36:	90 95       	com	r25
 c38:	8e 0f       	add	r24, r30
 c3a:	9f 1f       	adc	r25, r31
 c3c:	08 95       	ret

00000c3e <strnlen>:
 c3e:	fc 01       	movw	r30, r24
 c40:	61 50       	subi	r22, 0x01	; 1
 c42:	70 40       	sbci	r23, 0x00	; 0
 c44:	01 90       	ld	r0, Z+
 c46:	01 10       	cpse	r0, r1
 c48:	d8 f7       	brcc	.-10     	; 0xc40 <strnlen+0x2>
 c4a:	80 95       	com	r24
 c4c:	90 95       	com	r25
 c4e:	8e 0f       	add	r24, r30
 c50:	9f 1f       	adc	r25, r31
 c52:	08 95       	ret

00000c54 <fputc>:
 c54:	0f 93       	push	r16
 c56:	1f 93       	push	r17
 c58:	cf 93       	push	r28
 c5a:	df 93       	push	r29
 c5c:	fb 01       	movw	r30, r22
 c5e:	23 81       	ldd	r18, Z+3	; 0x03
 c60:	21 fd       	sbrc	r18, 1
 c62:	03 c0       	rjmp	.+6      	; 0xc6a <fputc+0x16>
 c64:	8f ef       	ldi	r24, 0xFF	; 255
 c66:	9f ef       	ldi	r25, 0xFF	; 255
 c68:	2c c0       	rjmp	.+88     	; 0xcc2 <fputc+0x6e>
 c6a:	22 ff       	sbrs	r18, 2
 c6c:	16 c0       	rjmp	.+44     	; 0xc9a <fputc+0x46>
 c6e:	46 81       	ldd	r20, Z+6	; 0x06
 c70:	57 81       	ldd	r21, Z+7	; 0x07
 c72:	24 81       	ldd	r18, Z+4	; 0x04
 c74:	35 81       	ldd	r19, Z+5	; 0x05
 c76:	42 17       	cp	r20, r18
 c78:	53 07       	cpc	r21, r19
 c7a:	44 f4       	brge	.+16     	; 0xc8c <fputc+0x38>
 c7c:	a0 81       	ld	r26, Z
 c7e:	b1 81       	ldd	r27, Z+1	; 0x01
 c80:	9d 01       	movw	r18, r26
 c82:	2f 5f       	subi	r18, 0xFF	; 255
 c84:	3f 4f       	sbci	r19, 0xFF	; 255
 c86:	31 83       	std	Z+1, r19	; 0x01
 c88:	20 83       	st	Z, r18
 c8a:	8c 93       	st	X, r24
 c8c:	26 81       	ldd	r18, Z+6	; 0x06
 c8e:	37 81       	ldd	r19, Z+7	; 0x07
 c90:	2f 5f       	subi	r18, 0xFF	; 255
 c92:	3f 4f       	sbci	r19, 0xFF	; 255
 c94:	37 83       	std	Z+7, r19	; 0x07
 c96:	26 83       	std	Z+6, r18	; 0x06
 c98:	14 c0       	rjmp	.+40     	; 0xcc2 <fputc+0x6e>
 c9a:	8b 01       	movw	r16, r22
 c9c:	ec 01       	movw	r28, r24
 c9e:	fb 01       	movw	r30, r22
 ca0:	00 84       	ldd	r0, Z+8	; 0x08
 ca2:	f1 85       	ldd	r31, Z+9	; 0x09
 ca4:	e0 2d       	mov	r30, r0
 ca6:	19 95       	eicall
 ca8:	89 2b       	or	r24, r25
 caa:	e1 f6       	brne	.-72     	; 0xc64 <fputc+0x10>
 cac:	d8 01       	movw	r26, r16
 cae:	16 96       	adiw	r26, 0x06	; 6
 cb0:	8d 91       	ld	r24, X+
 cb2:	9c 91       	ld	r25, X
 cb4:	17 97       	sbiw	r26, 0x07	; 7
 cb6:	01 96       	adiw	r24, 0x01	; 1
 cb8:	17 96       	adiw	r26, 0x07	; 7
 cba:	9c 93       	st	X, r25
 cbc:	8e 93       	st	-X, r24
 cbe:	16 97       	sbiw	r26, 0x06	; 6
 cc0:	ce 01       	movw	r24, r28
 cc2:	df 91       	pop	r29
 cc4:	cf 91       	pop	r28
 cc6:	1f 91       	pop	r17
 cc8:	0f 91       	pop	r16
 cca:	08 95       	ret

00000ccc <__ultoa_invert>:
 ccc:	fa 01       	movw	r30, r20
 cce:	aa 27       	eor	r26, r26
 cd0:	28 30       	cpi	r18, 0x08	; 8
 cd2:	51 f1       	breq	.+84     	; 0xd28 <__ultoa_invert+0x5c>
 cd4:	20 31       	cpi	r18, 0x10	; 16
 cd6:	81 f1       	breq	.+96     	; 0xd38 <__ultoa_invert+0x6c>
 cd8:	e8 94       	clt
 cda:	6f 93       	push	r22
 cdc:	6e 7f       	andi	r22, 0xFE	; 254
 cde:	6e 5f       	subi	r22, 0xFE	; 254
 ce0:	7f 4f       	sbci	r23, 0xFF	; 255
 ce2:	8f 4f       	sbci	r24, 0xFF	; 255
 ce4:	9f 4f       	sbci	r25, 0xFF	; 255
 ce6:	af 4f       	sbci	r26, 0xFF	; 255
 ce8:	b1 e0       	ldi	r27, 0x01	; 1
 cea:	3e d0       	rcall	.+124    	; 0xd68 <__ultoa_invert+0x9c>
 cec:	b4 e0       	ldi	r27, 0x04	; 4
 cee:	3c d0       	rcall	.+120    	; 0xd68 <__ultoa_invert+0x9c>
 cf0:	67 0f       	add	r22, r23
 cf2:	78 1f       	adc	r23, r24
 cf4:	89 1f       	adc	r24, r25
 cf6:	9a 1f       	adc	r25, r26
 cf8:	a1 1d       	adc	r26, r1
 cfa:	68 0f       	add	r22, r24
 cfc:	79 1f       	adc	r23, r25
 cfe:	8a 1f       	adc	r24, r26
 d00:	91 1d       	adc	r25, r1
 d02:	a1 1d       	adc	r26, r1
 d04:	6a 0f       	add	r22, r26
 d06:	71 1d       	adc	r23, r1
 d08:	81 1d       	adc	r24, r1
 d0a:	91 1d       	adc	r25, r1
 d0c:	a1 1d       	adc	r26, r1
 d0e:	20 d0       	rcall	.+64     	; 0xd50 <__ultoa_invert+0x84>
 d10:	09 f4       	brne	.+2      	; 0xd14 <__ultoa_invert+0x48>
 d12:	68 94       	set
 d14:	3f 91       	pop	r19
 d16:	2a e0       	ldi	r18, 0x0A	; 10
 d18:	26 9f       	mul	r18, r22
 d1a:	11 24       	eor	r1, r1
 d1c:	30 19       	sub	r19, r0
 d1e:	30 5d       	subi	r19, 0xD0	; 208
 d20:	31 93       	st	Z+, r19
 d22:	de f6       	brtc	.-74     	; 0xcda <__ultoa_invert+0xe>
 d24:	cf 01       	movw	r24, r30
 d26:	08 95       	ret
 d28:	46 2f       	mov	r20, r22
 d2a:	47 70       	andi	r20, 0x07	; 7
 d2c:	40 5d       	subi	r20, 0xD0	; 208
 d2e:	41 93       	st	Z+, r20
 d30:	b3 e0       	ldi	r27, 0x03	; 3
 d32:	0f d0       	rcall	.+30     	; 0xd52 <__ultoa_invert+0x86>
 d34:	c9 f7       	brne	.-14     	; 0xd28 <__ultoa_invert+0x5c>
 d36:	f6 cf       	rjmp	.-20     	; 0xd24 <__ultoa_invert+0x58>
 d38:	46 2f       	mov	r20, r22
 d3a:	4f 70       	andi	r20, 0x0F	; 15
 d3c:	40 5d       	subi	r20, 0xD0	; 208
 d3e:	4a 33       	cpi	r20, 0x3A	; 58
 d40:	18 f0       	brcs	.+6      	; 0xd48 <__ultoa_invert+0x7c>
 d42:	49 5d       	subi	r20, 0xD9	; 217
 d44:	31 fd       	sbrc	r19, 1
 d46:	40 52       	subi	r20, 0x20	; 32
 d48:	41 93       	st	Z+, r20
 d4a:	02 d0       	rcall	.+4      	; 0xd50 <__ultoa_invert+0x84>
 d4c:	a9 f7       	brne	.-22     	; 0xd38 <__ultoa_invert+0x6c>
 d4e:	ea cf       	rjmp	.-44     	; 0xd24 <__ultoa_invert+0x58>
 d50:	b4 e0       	ldi	r27, 0x04	; 4
 d52:	a6 95       	lsr	r26
 d54:	97 95       	ror	r25
 d56:	87 95       	ror	r24
 d58:	77 95       	ror	r23
 d5a:	67 95       	ror	r22
 d5c:	ba 95       	dec	r27
 d5e:	c9 f7       	brne	.-14     	; 0xd52 <__ultoa_invert+0x86>
 d60:	00 97       	sbiw	r24, 0x00	; 0
 d62:	61 05       	cpc	r22, r1
 d64:	71 05       	cpc	r23, r1
 d66:	08 95       	ret
 d68:	9b 01       	movw	r18, r22
 d6a:	ac 01       	movw	r20, r24
 d6c:	0a 2e       	mov	r0, r26
 d6e:	06 94       	lsr	r0
 d70:	57 95       	ror	r21
 d72:	47 95       	ror	r20
 d74:	37 95       	ror	r19
 d76:	27 95       	ror	r18
 d78:	ba 95       	dec	r27
 d7a:	c9 f7       	brne	.-14     	; 0xd6e <__ultoa_invert+0xa2>
 d7c:	62 0f       	add	r22, r18
 d7e:	73 1f       	adc	r23, r19
 d80:	84 1f       	adc	r24, r20
 d82:	95 1f       	adc	r25, r21
 d84:	a0 1d       	adc	r26, r0
 d86:	08 95       	ret

00000d88 <_exit>:
 d88:	f8 94       	cli

00000d8a <__stop_program>:
 d8a:	ff cf       	rjmp	.-2      	; 0xd8a <__stop_program>
