
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000d72  00000e06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000e7a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e7a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ed8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00000f18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023ed  00000000  00000000  000010f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f83  00000000  00000000  000034e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013aa  00000000  00000000  00004468  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  00005814  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d24  00000000  00000000  00005e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000019f8  00000000  00000000  00006ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  00008598  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4b c3       	rjmp	.+1686   	; 0x6f4 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e7       	ldi	r30, 0x72	; 114
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	26 c6       	rjmp	.+3148   	; 0xd6e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
    
    
    
    
    //Initialisieren
    initBoard(1);
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	63 d1       	rcall	.+710    	; 0x3ee <initBoard>
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        schalter = switchReadAll();
 128:	07 d0       	rcall	.+14     	; 0x138 <switchReadAll>
 12a:	81 70       	andi	r24, 0x01	; 1
        } 
        else
        {   outWohnzimmer = outWohnzimmer & 0;
        }
        //Ausgabe------------------------------------------------------------------
        ledWriteAll(outWohnzimmer);
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	01 d0       	rcall	.+2      	; 0x132 <ledWriteAll>
 130:	fb cf       	rjmp	.-10     	; 0x128 <main+0x4>

00000132 <ledWriteAll>:
 132:	82 b9       	out	0x02, r24	; 2
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 134:	95 b9       	out	0x05, r25	; 5
 136:	08 95       	ret

00000138 <switchReadAll>:
 138:	86 b1       	in	r24, 0x06	; 6
 13a:	08 95       	ret

0000013c <startSystemTimeMs>:
 13c:	83 e0       	ldi	r24, 0x03	; 3
 13e:	84 bd       	out	0x24, r24	; 36
 140:	8b e0       	ldi	r24, 0x0B	; 11
 142:	85 bd       	out	0x25, r24	; 37
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 14a:	89 ef       	ldi	r24, 0xF9	; 249
 14c:	87 bd       	out	0x27, r24	; 39
 14e:	08 95       	ret

00000150 <initAdc>:
 150:	11 ba       	out	0x11, r1	; 17
 152:	10 ba       	out	0x10, r1	; 16
 154:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 158:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 15c:	80 e4       	ldi	r24, 0x40	; 64
 15e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 162:	8f e0       	ldi	r24, 0x0F	; 15
 164:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 16e:	ea e7       	ldi	r30, 0x7A	; 122
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	87 ea       	ldi	r24, 0xA7	; 167
 174:	80 83       	st	Z, r24
 176:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 17a:	80 81       	ld	r24, Z
 17c:	80 64       	ori	r24, 0x40	; 64
 17e:	80 83       	st	Z, r24
 180:	80 81       	ld	r24, Z
 182:	84 ff       	sbrs	r24, 4
 184:	fd cf       	rjmp	.-6      	; 0x180 <initAdc+0x30>
 186:	ea e7       	ldi	r30, 0x7A	; 122
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	8f 7e       	andi	r24, 0xEF	; 239
 18e:	80 83       	st	Z, r24
 190:	08 95       	ret

00000192 <rgbWrite>:
 192:	2f ef       	ldi	r18, 0xFF	; 255
 194:	33 e0       	ldi	r19, 0x03	; 3
 196:	f9 01       	movw	r30, r18
 198:	e8 1b       	sub	r30, r24
 19a:	f9 0b       	sbc	r31, r25
 19c:	c9 01       	movw	r24, r18
 19e:	86 1b       	sub	r24, r22
 1a0:	97 0b       	sbc	r25, r23
 1a2:	24 1b       	sub	r18, r20
 1a4:	35 0b       	sbc	r19, r21
 1a6:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 1aa:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 1ae:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 1b2:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 1b6:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 1ba:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 1be:	08 95       	ret

000001c0 <initRgb>:
 1c0:	8e ef       	ldi	r24, 0xFE	; 254
 1c2:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 1c6:	8b e1       	ldi	r24, 0x1B	; 27
 1c8:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 1cc:	83 e0       	ldi	r24, 0x03	; 3
 1ce:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 1d2:	8f ef       	ldi	r24, 0xFF	; 255
 1d4:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 1d8:	40 e0       	ldi	r20, 0x00	; 0
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	60 e0       	ldi	r22, 0x00	; 0
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	d6 cf       	rjmp	.-84     	; 0x192 <rgbWrite>
 1e6:	08 95       	ret

000001e8 <lcdSid>:
 1e8:	88 23       	and	r24, r24
 1ea:	11 f0       	breq	.+4      	; 0x1f0 <lcdSid+0x8>
 1ec:	a0 9a       	sbi	0x14, 0	; 20
 1ee:	08 95       	ret
 1f0:	a0 98       	cbi	0x14, 0	; 20
 1f2:	08 95       	ret

000001f4 <lcdSclk>:
 1f4:	88 23       	and	r24, r24
 1f6:	11 f0       	breq	.+4      	; 0x1fc <lcdSclk+0x8>
 1f8:	a1 9a       	sbi	0x14, 1	; 20
 1fa:	08 95       	ret
 1fc:	a1 98       	cbi	0x14, 1	; 20
 1fe:	08 95       	ret

00000200 <lcdLight>:
 200:	81 11       	cpse	r24, r1
 202:	04 c0       	rjmp	.+8      	; 0x20c <lcdLight+0xc>
 204:	84 b5       	in	r24, 0x24	; 36
 206:	8f 7d       	andi	r24, 0xDF	; 223
 208:	84 bd       	out	0x24, r24	; 36
 20a:	08 95       	ret
 20c:	94 b5       	in	r25, 0x24	; 36
 20e:	90 62       	ori	r25, 0x20	; 32
 210:	94 bd       	out	0x24, r25	; 36
 212:	88 bd       	out	0x28, r24	; 40
 214:	08 95       	ret

00000216 <writeLcdF>:
 216:	ef 92       	push	r14
 218:	ff 92       	push	r15
 21a:	0f 93       	push	r16
 21c:	1f 93       	push	r17
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	7c 01       	movw	r14, r24
 224:	eb 01       	movw	r28, r22
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	df df       	rcall	.-66     	; 0x1e8 <lcdSid>
 22a:	05 e0       	ldi	r16, 0x05	; 5
 22c:	10 e0       	ldi	r17, 0x00	; 0
 22e:	80 e0       	ldi	r24, 0x00	; 0
 230:	e1 df       	rcall	.-62     	; 0x1f4 <lcdSclk>
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	df df       	rcall	.-66     	; 0x1f4 <lcdSclk>
 236:	01 50       	subi	r16, 0x01	; 1
 238:	11 09       	sbc	r17, r1
 23a:	c9 f7       	brne	.-14     	; 0x22e <writeLcdF+0x18>
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	d4 df       	rcall	.-88     	; 0x1e8 <lcdSid>
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	d8 df       	rcall	.-80     	; 0x1f4 <lcdSclk>
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	d6 df       	rcall	.-84     	; 0x1f4 <lcdSclk>
 248:	83 e4       	ldi	r24, 0x43	; 67
 24a:	e8 16       	cp	r14, r24
 24c:	f1 04       	cpc	r15, r1
 24e:	19 f4       	brne	.+6      	; 0x256 <writeLcdF+0x40>
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	ca df       	rcall	.-108    	; 0x1e8 <lcdSid>
 254:	02 c0       	rjmp	.+4      	; 0x25a <writeLcdF+0x44>
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	c7 df       	rcall	.-114    	; 0x1e8 <lcdSid>
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	cb df       	rcall	.-106    	; 0x1f4 <lcdSclk>
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	c9 df       	rcall	.-110    	; 0x1f4 <lcdSclk>
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	c1 df       	rcall	.-126    	; 0x1e8 <lcdSid>
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	c5 df       	rcall	.-118    	; 0x1f4 <lcdSclk>
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	c3 df       	rcall	.-122    	; 0x1f4 <lcdSclk>
 26e:	04 e0       	ldi	r16, 0x04	; 4
 270:	10 e0       	ldi	r17, 0x00	; 0
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	bf df       	rcall	.-130    	; 0x1f4 <lcdSclk>
 276:	c0 ff       	sbrs	r28, 0
 278:	03 c0       	rjmp	.+6      	; 0x280 <writeLcdF+0x6a>
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	b5 df       	rcall	.-150    	; 0x1e8 <lcdSid>
 27e:	02 c0       	rjmp	.+4      	; 0x284 <writeLcdF+0x6e>
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	b2 df       	rcall	.-156    	; 0x1e8 <lcdSid>
 284:	d6 95       	lsr	r29
 286:	c7 95       	ror	r28
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	b4 df       	rcall	.-152    	; 0x1f4 <lcdSclk>
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	b2 df       	rcall	.-156    	; 0x1f4 <lcdSclk>
 290:	01 50       	subi	r16, 0x01	; 1
 292:	11 09       	sbc	r17, r1
 294:	71 f7       	brne	.-36     	; 0x272 <writeLcdF+0x5c>
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	a7 df       	rcall	.-178    	; 0x1e8 <lcdSid>
 29a:	04 e0       	ldi	r16, 0x04	; 4
 29c:	10 e0       	ldi	r17, 0x00	; 0
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	a9 df       	rcall	.-174    	; 0x1f4 <lcdSclk>
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	a7 df       	rcall	.-178    	; 0x1f4 <lcdSclk>
 2a6:	01 50       	subi	r16, 0x01	; 1
 2a8:	11 09       	sbc	r17, r1
 2aa:	c9 f7       	brne	.-14     	; 0x29e <writeLcdF+0x88>
 2ac:	04 e0       	ldi	r16, 0x04	; 4
 2ae:	10 e0       	ldi	r17, 0x00	; 0
 2b0:	80 e0       	ldi	r24, 0x00	; 0
 2b2:	a0 df       	rcall	.-192    	; 0x1f4 <lcdSclk>
 2b4:	c0 ff       	sbrs	r28, 0
 2b6:	03 c0       	rjmp	.+6      	; 0x2be <writeLcdF+0xa8>
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	96 df       	rcall	.-212    	; 0x1e8 <lcdSid>
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <writeLcdF+0xac>
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	93 df       	rcall	.-218    	; 0x1e8 <lcdSid>
 2c2:	d6 95       	lsr	r29
 2c4:	c7 95       	ror	r28
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	95 df       	rcall	.-214    	; 0x1f4 <lcdSclk>
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	93 df       	rcall	.-218    	; 0x1f4 <lcdSclk>
 2ce:	01 50       	subi	r16, 0x01	; 1
 2d0:	11 09       	sbc	r17, r1
 2d2:	71 f7       	brne	.-36     	; 0x2b0 <writeLcdF+0x9a>
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	88 df       	rcall	.-240    	; 0x1e8 <lcdSid>
 2d8:	c4 e0       	ldi	r28, 0x04	; 4
 2da:	d0 e0       	ldi	r29, 0x00	; 0
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	8a df       	rcall	.-236    	; 0x1f4 <lcdSclk>
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	88 df       	rcall	.-240    	; 0x1f4 <lcdSclk>
 2e4:	21 97       	sbiw	r28, 0x01	; 1
 2e6:	d1 f7       	brne	.-12     	; 0x2dc <writeLcdF+0xc6>
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	7e df       	rcall	.-260    	; 0x1e8 <lcdSid>
 2ec:	87 ec       	ldi	r24, 0xC7	; 199
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <writeLcdF+0xda>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <writeLcdF+0xe0>
 2f6:	00 00       	nop
 2f8:	df 91       	pop	r29
 2fa:	cf 91       	pop	r28
 2fc:	1f 91       	pop	r17
 2fe:	0f 91       	pop	r16
 300:	ff 90       	pop	r15
 302:	ef 90       	pop	r14
 304:	08 95       	ret

00000306 <lcdWriteText>:
 306:	1f 93       	push	r17
 308:	cf 93       	push	r28
 30a:	df 93       	push	r29
 30c:	cd b7       	in	r28, 0x3d	; 61
 30e:	de b7       	in	r29, 0x3e	; 62
 310:	65 97       	sbiw	r28, 0x15	; 21
 312:	0f b6       	in	r0, 0x3f	; 63
 314:	f8 94       	cli
 316:	de bf       	out	0x3e, r29	; 62
 318:	0f be       	out	0x3f, r0	; 63
 31a:	cd bf       	out	0x3d, r28	; 61
 31c:	9e 01       	movw	r18, r28
 31e:	20 5e       	subi	r18, 0xE0	; 224
 320:	3f 4f       	sbci	r19, 0xFF	; 255
 322:	4e 8d       	ldd	r20, Y+30	; 0x1e
 324:	5f 8d       	ldd	r21, Y+31	; 0x1f
 326:	65 e1       	ldi	r22, 0x15	; 21
 328:	70 e0       	ldi	r23, 0x00	; 0
 32a:	ce 01       	movw	r24, r28
 32c:	01 96       	adiw	r24, 0x01	; 1
 32e:	3a d2       	rcall	.+1140   	; 0x7a4 <vsnprintf>
 330:	6d 8d       	ldd	r22, Y+29	; 0x1d
 332:	8c 8d       	ldd	r24, Y+28	; 0x1c
 334:	90 e2       	ldi	r25, 0x20	; 32
 336:	89 9f       	mul	r24, r25
 338:	60 0d       	add	r22, r0
 33a:	11 24       	eor	r1, r1
 33c:	60 68       	ori	r22, 0x80	; 128
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	83 e4       	ldi	r24, 0x43	; 67
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	68 df       	rcall	.-304    	; 0x216 <writeLcdF>
 346:	69 81       	ldd	r22, Y+1	; 0x01
 348:	66 23       	and	r22, r22
 34a:	79 f0       	breq	.+30     	; 0x36a <lcdWriteText+0x64>
 34c:	10 e0       	ldi	r17, 0x00	; 0
 34e:	1f 5f       	subi	r17, 0xFF	; 255
 350:	70 e0       	ldi	r23, 0x00	; 0
 352:	84 e4       	ldi	r24, 0x44	; 68
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	5f df       	rcall	.-322    	; 0x216 <writeLcdF>
 358:	e1 e0       	ldi	r30, 0x01	; 1
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	ec 0f       	add	r30, r28
 35e:	fd 1f       	adc	r31, r29
 360:	e1 0f       	add	r30, r17
 362:	f1 1d       	adc	r31, r1
 364:	60 81       	ld	r22, Z
 366:	61 11       	cpse	r22, r1
 368:	f2 cf       	rjmp	.-28     	; 0x34e <lcdWriteText+0x48>
 36a:	65 96       	adiw	r28, 0x15	; 21
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	f8 94       	cli
 370:	de bf       	out	0x3e, r29	; 62
 372:	0f be       	out	0x3f, r0	; 63
 374:	cd bf       	out	0x3d, r28	; 61
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	1f 91       	pop	r17
 37c:	08 95       	ret

0000037e <lcdClear>:
 37e:	61 e0       	ldi	r22, 0x01	; 1
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	83 e4       	ldi	r24, 0x43	; 67
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	47 df       	rcall	.-370    	; 0x216 <writeLcdF>
 388:	8f e3       	ldi	r24, 0x3F	; 63
 38a:	9f e1       	ldi	r25, 0x1F	; 31
 38c:	01 97       	sbiw	r24, 0x01	; 1
 38e:	f1 f7       	brne	.-4      	; 0x38c <lcdClear+0xe>
 390:	00 c0       	rjmp	.+0      	; 0x392 <lcdClear+0x14>
 392:	00 00       	nop
 394:	80 e3       	ldi	r24, 0x30	; 48
 396:	92 e0       	ldi	r25, 0x02	; 2
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	1f 92       	push	r1
 39e:	1f 92       	push	r1
 3a0:	b2 df       	rcall	.-156    	; 0x306 <lcdWriteText>
 3a2:	0f 90       	pop	r0
 3a4:	0f 90       	pop	r0
 3a6:	0f 90       	pop	r0
 3a8:	0f 90       	pop	r0
 3aa:	08 95       	ret

000003ac <initLcd>:
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	22 df       	rcall	.-444    	; 0x1f4 <lcdSclk>
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	1a df       	rcall	.-460    	; 0x1e8 <lcdSid>
 3b4:	64 e3       	ldi	r22, 0x34	; 52
 3b6:	70 e0       	ldi	r23, 0x00	; 0
 3b8:	83 e4       	ldi	r24, 0x43	; 67
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	2c df       	rcall	.-424    	; 0x216 <writeLcdF>
 3be:	69 e0       	ldi	r22, 0x09	; 9
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	83 e4       	ldi	r24, 0x43	; 67
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	27 df       	rcall	.-434    	; 0x216 <writeLcdF>
 3c8:	60 e3       	ldi	r22, 0x30	; 48
 3ca:	70 e0       	ldi	r23, 0x00	; 0
 3cc:	83 e4       	ldi	r24, 0x43	; 67
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	22 df       	rcall	.-444    	; 0x216 <writeLcdF>
 3d2:	6c e0       	ldi	r22, 0x0C	; 12
 3d4:	70 e0       	ldi	r23, 0x00	; 0
 3d6:	83 e4       	ldi	r24, 0x43	; 67
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	1d df       	rcall	.-454    	; 0x216 <writeLcdF>
 3dc:	d0 df       	rcall	.-96     	; 0x37e <lcdClear>
 3de:	67 e0       	ldi	r22, 0x07	; 7
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	83 e4       	ldi	r24, 0x43	; 67
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	17 df       	rcall	.-466    	; 0x216 <writeLcdF>
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	0a cf       	rjmp	.-492    	; 0x200 <lcdLight>
 3ec:	08 95       	ret

000003ee <initBoard>:
 3ee:	4f 92       	push	r4
 3f0:	5f 92       	push	r5
 3f2:	6f 92       	push	r6
 3f4:	7f 92       	push	r7
 3f6:	8f 92       	push	r8
 3f8:	9f 92       	push	r9
 3fa:	af 92       	push	r10
 3fc:	bf 92       	push	r11
 3fe:	cf 92       	push	r12
 400:	df 92       	push	r13
 402:	ef 92       	push	r14
 404:	ff 92       	push	r15
 406:	0f 93       	push	r16
 408:	1f 93       	push	r17
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	c8 2f       	mov	r28, r24
 410:	85 b7       	in	r24, 0x35	; 53
 412:	85 bf       	out	0x35, r24	; 53
 414:	12 b8       	out	0x02, r1	; 2
 416:	8f ef       	ldi	r24, 0xFF	; 255
 418:	81 b9       	out	0x01, r24	; 1
 41a:	15 b8       	out	0x05, r1	; 5
 41c:	84 b9       	out	0x04, r24	; 4
 41e:	88 b9       	out	0x08, r24	; 8
 420:	17 b8       	out	0x07, r1	; 7
 422:	8b b9       	out	0x0b, r24	; 11
 424:	1a b8       	out	0x0a, r1	; 10
 426:	8e b9       	out	0x0e, r24	; 14
 428:	1d b8       	out	0x0d, r1	; 13
 42a:	72 98       	cbi	0x0e, 2	; 14
 42c:	11 ba       	out	0x11, r1	; 17
 42e:	10 ba       	out	0x10, r1	; 16
 430:	94 e0       	ldi	r25, 0x04	; 4
 432:	94 bb       	out	0x14, r25	; 20
 434:	93 b3       	in	r25, 0x13	; 19
 436:	93 60       	ori	r25, 0x03	; 3
 438:	93 bb       	out	0x13, r25	; 19
 43a:	9d 9a       	sbi	0x13, 5	; 19
 43c:	97 ec       	ldi	r25, 0xC7	; 199
 43e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 442:	98 e3       	ldi	r25, 0x38	; 56
 444:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 448:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 44c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 450:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 454:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 458:	8c e3       	ldi	r24, 0x3C	; 60
 45a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 45e:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 462:	78 94       	sei
 464:	6b de       	rcall	.-810    	; 0x13c <startSystemTimeMs>
 466:	a2 df       	rcall	.-188    	; 0x3ac <initLcd>
 468:	73 de       	rcall	.-794    	; 0x150 <initAdc>
 46a:	aa de       	rcall	.-684    	; 0x1c0 <initRgb>
 46c:	cc 23       	and	r28, r28
 46e:	09 f4       	brne	.+2      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 470:	b8 c0       	rjmp	.+368    	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 472:	8f ef       	ldi	r24, 0xFF	; 255
 474:	c5 de       	rcall	.-630    	; 0x200 <lcdLight>
 476:	40 e0       	ldi	r20, 0x00	; 0
 478:	50 e0       	ldi	r21, 0x00	; 0
 47a:	6f ef       	ldi	r22, 0xFF	; 255
 47c:	73 e0       	ldi	r23, 0x03	; 3
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	87 de       	rcall	.-754    	; 0x192 <rgbWrite>
 484:	8d e1       	ldi	r24, 0x1D	; 29
 486:	92 e0       	ldi	r25, 0x02	; 2
 488:	9f 93       	push	r25
 48a:	8f 93       	push	r24
 48c:	1f 92       	push	r1
 48e:	1f 92       	push	r1
 490:	3a df       	rcall	.-396    	; 0x306 <lcdWriteText>
 492:	82 e3       	ldi	r24, 0x32	; 50
 494:	92 e0       	ldi	r25, 0x02	; 2
 496:	9f 93       	push	r25
 498:	8f 93       	push	r24
 49a:	1f 92       	push	r1
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	8f 93       	push	r24
 4a0:	32 df       	rcall	.-412    	; 0x306 <lcdWriteText>
 4a2:	88 e0       	ldi	r24, 0x08	; 8
 4a4:	92 e0       	ldi	r25, 0x02	; 2
 4a6:	9f 93       	push	r25
 4a8:	8f 93       	push	r24
 4aa:	1f 92       	push	r1
 4ac:	82 e0       	ldi	r24, 0x02	; 2
 4ae:	8f 93       	push	r24
 4b0:	2a df       	rcall	.-428    	; 0x306 <lcdWriteText>
 4b2:	87 e4       	ldi	r24, 0x47	; 71
 4b4:	92 e0       	ldi	r25, 0x02	; 2
 4b6:	9f 93       	push	r25
 4b8:	8f 93       	push	r24
 4ba:	1f 92       	push	r1
 4bc:	83 e0       	ldi	r24, 0x03	; 3
 4be:	8f 93       	push	r24
 4c0:	22 df       	rcall	.-444    	; 0x306 <lcdWriteText>
 4c2:	8d b7       	in	r24, 0x3d	; 61
 4c4:	9e b7       	in	r25, 0x3e	; 62
 4c6:	40 96       	adiw	r24, 0x10	; 16
 4c8:	0f b6       	in	r0, 0x3f	; 63
 4ca:	f8 94       	cli
 4cc:	9e bf       	out	0x3e, r25	; 62
 4ce:	0f be       	out	0x3f, r0	; 63
 4d0:	8d bf       	out	0x3d, r24	; 61
 4d2:	88 24       	eor	r8, r8
 4d4:	83 94       	inc	r8
 4d6:	c0 e0       	ldi	r28, 0x00	; 0
 4d8:	71 2c       	mov	r7, r1
 4da:	99 24       	eor	r9, r9
 4dc:	93 94       	inc	r9
 4de:	d0 e0       	ldi	r29, 0x00	; 0
 4e0:	cc 24       	eor	r12, r12
 4e2:	c3 94       	inc	r12
 4e4:	d1 2c       	mov	r13, r1
 4e6:	e1 2c       	mov	r14, r1
 4e8:	68 94       	set
 4ea:	ff 24       	eor	r15, r15
 4ec:	f7 f8       	bld	r15, 7
 4ee:	66 24       	eor	r6, r6
 4f0:	63 94       	inc	r6
 4f2:	51 2c       	mov	r5, r1
 4f4:	09 e0       	ldi	r16, 0x09	; 9
 4f6:	11 e0       	ldi	r17, 0x01	; 1
 4f8:	0f 2e       	mov	r0, r31
 4fa:	fc e5       	ldi	r31, 0x5C	; 92
 4fc:	af 2e       	mov	r10, r31
 4fe:	f2 e0       	ldi	r31, 0x02	; 2
 500:	bf 2e       	mov	r11, r31
 502:	f0 2d       	mov	r31, r0
 504:	0f 2e       	mov	r0, r31
 506:	f3 e0       	ldi	r31, 0x03	; 3
 508:	4f 2e       	mov	r4, r31
 50a:	f0 2d       	mov	r31, r0
 50c:	99 20       	and	r9, r9
 50e:	49 f0       	breq	.+18     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 510:	c7 01       	movw	r24, r14
 512:	0d 2e       	mov	r0, r29
 514:	02 c0       	rjmp	.+4      	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 516:	96 95       	lsr	r25
 518:	87 95       	ror	r24
 51a:	0a 94       	dec	r0
 51c:	e2 f7       	brpl	.-8      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 51e:	09 de       	rcall	.-1006   	; 0x132 <ledWriteAll>
 520:	08 c0       	rjmp	.+16     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 522:	c6 01       	movw	r24, r12
 524:	0d 2e       	mov	r0, r29
 526:	02 c0       	rjmp	.+4      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 528:	88 0f       	add	r24, r24
 52a:	99 1f       	adc	r25, r25
 52c:	0a 94       	dec	r0
 52e:	e2 f7       	brpl	.-8      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 530:	00 de       	rcall	.-1024   	; 0x132 <ledWriteAll>
 532:	df 5f       	subi	r29, 0xFF	; 255
 534:	d1 31       	cpi	r29, 0x11	; 17
 536:	28 f0       	brcs	.+10     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 538:	86 2d       	mov	r24, r6
 53a:	91 10       	cpse	r9, r1
 53c:	85 2d       	mov	r24, r5
 53e:	98 2e       	mov	r9, r24
 540:	d0 e0       	ldi	r29, 0x00	; 0
 542:	88 20       	and	r8, r8
 544:	11 f0       	breq	.+4      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 546:	ce 5f       	subi	r28, 0xFE	; 254
 548:	01 c0       	rjmp	.+2      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 54a:	c2 50       	subi	r28, 0x02	; 2
 54c:	8c 2f       	mov	r24, r28
 54e:	58 de       	rcall	.-848    	; 0x200 <lcdLight>
 550:	ce 3f       	cpi	r28, 0xFE	; 254
 552:	21 f0       	breq	.+8      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 554:	c8 37       	cpi	r28, 0x78	; 120
 556:	19 f4       	brne	.+6      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 558:	86 2c       	mov	r8, r6
 55a:	01 c0       	rjmp	.+2      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 55c:	85 2c       	mov	r8, r5
 55e:	71 10       	cpse	r7, r1
 560:	3b c0       	rjmp	.+118    	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 562:	f8 01       	movw	r30, r16
 564:	80 81       	ld	r24, Z
 566:	83 7c       	andi	r24, 0xC3	; 195
 568:	91 f0       	breq	.+36     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 56a:	40 e0       	ldi	r20, 0x00	; 0
 56c:	50 e0       	ldi	r21, 0x00	; 0
 56e:	66 e2       	ldi	r22, 0x26	; 38
 570:	72 e0       	ldi	r23, 0x02	; 2
 572:	8f ef       	ldi	r24, 0xFF	; 255
 574:	93 e0       	ldi	r25, 0x03	; 3
 576:	0d de       	rcall	.-998    	; 0x192 <rgbWrite>
 578:	bf 92       	push	r11
 57a:	af 92       	push	r10
 57c:	1f 92       	push	r1
 57e:	4f 92       	push	r4
 580:	c2 de       	rcall	.-636    	; 0x306 <lcdWriteText>
 582:	0f 90       	pop	r0
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	0f 90       	pop	r0
 58a:	76 2c       	mov	r7, r6
 58c:	25 c0       	rjmp	.+74     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 58e:	8f ef       	ldi	r24, 0xFF	; 255
 590:	9c e7       	ldi	r25, 0x7C	; 124
 592:	01 97       	sbiw	r24, 0x01	; 1
 594:	f1 f7       	brne	.-4      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 596:	00 c0       	rjmp	.+0      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 598:	00 00       	nop
 59a:	b8 cf       	rjmp	.-144    	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 59c:	f0 de       	rcall	.-544    	; 0x37e <lcdClear>
 59e:	80 e0       	ldi	r24, 0x00	; 0
 5a0:	2f de       	rcall	.-930    	; 0x200 <lcdLight>
 5a2:	80 e0       	ldi	r24, 0x00	; 0
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	c5 dd       	rcall	.-1142   	; 0x132 <ledWriteAll>
 5a8:	40 e0       	ldi	r20, 0x00	; 0
 5aa:	50 e0       	ldi	r21, 0x00	; 0
 5ac:	60 e0       	ldi	r22, 0x00	; 0
 5ae:	70 e0       	ldi	r23, 0x00	; 0
 5b0:	80 e0       	ldi	r24, 0x00	; 0
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	ee dd       	rcall	.-1060   	; 0x192 <rgbWrite>
 5b6:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 5ba:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 5be:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 5c2:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 5c6:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 5ca:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 5ce:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 5d2:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 5d6:	05 c0       	rjmp	.+10     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5d8:	f8 01       	movw	r30, r16
 5da:	80 81       	ld	r24, Z
 5dc:	83 7c       	andi	r24, 0xC3	; 195
 5de:	b9 f6       	brne	.-82     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 5e0:	dd cf       	rjmp	.-70     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 5e2:	df 91       	pop	r29
 5e4:	cf 91       	pop	r28
 5e6:	1f 91       	pop	r17
 5e8:	0f 91       	pop	r16
 5ea:	ff 90       	pop	r15
 5ec:	ef 90       	pop	r14
 5ee:	df 90       	pop	r13
 5f0:	cf 90       	pop	r12
 5f2:	bf 90       	pop	r11
 5f4:	af 90       	pop	r10
 5f6:	9f 90       	pop	r9
 5f8:	8f 90       	pop	r8
 5fa:	7f 90       	pop	r7
 5fc:	6f 90       	pop	r6
 5fe:	5f 90       	pop	r5
 600:	4f 90       	pop	r4
 602:	08 95       	ret

00000604 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 604:	cf 93       	push	r28
 606:	df 93       	push	r29
 608:	cd b7       	in	r28, 0x3d	; 61
 60a:	de b7       	in	r29, 0x3e	; 62
 60c:	28 97       	sbiw	r28, 0x08	; 8
 60e:	0f b6       	in	r0, 0x3f	; 63
 610:	f8 94       	cli
 612:	de bf       	out	0x3e, r29	; 62
 614:	0f be       	out	0x3f, r0	; 63
 616:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 618:	88 e0       	ldi	r24, 0x08	; 8
 61a:	e0 e0       	ldi	r30, 0x00	; 0
 61c:	f2 e0       	ldi	r31, 0x02	; 2
 61e:	de 01       	movw	r26, r28
 620:	11 96       	adiw	r26, 0x01	; 1
 622:	01 90       	ld	r0, Z+
 624:	0d 92       	st	X+, r0
 626:	8a 95       	dec	r24
 628:	e1 f7       	brne	.-8      	; 0x622 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 62a:	e5 e0       	ldi	r30, 0x05	; 5
 62c:	f1 e0       	ldi	r31, 0x01	; 1
 62e:	80 81       	ld	r24, Z
 630:	8f 7b       	andi	r24, 0xBF	; 191
 632:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 634:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 638:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 63c:	81 e0       	ldi	r24, 0x01	; 1
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	8c 0f       	add	r24, r28
 642:	9d 1f       	adc	r25, r29
 644:	e8 0f       	add	r30, r24
 646:	f9 1f       	adc	r31, r25
 648:	80 81       	ld	r24, Z
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 650:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 654:	a2 ef       	ldi	r26, 0xF2	; 242
 656:	b2 e0       	ldi	r27, 0x02	; 2
 658:	22 e8       	ldi	r18, 0x82	; 130
 65a:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 65c:	e5 e0       	ldi	r30, 0x05	; 5
 65e:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 660:	5e 91       	ld	r21, -X
 662:	4e 91       	ld	r20, -X
 664:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 668:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 66c:	84 23       	and	r24, r20
 66e:	95 23       	and	r25, r21
 670:	89 2b       	or	r24, r25
 672:	21 f0       	breq	.+8      	; 0x67c <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 674:	80 81       	ld	r24, Z
 676:	80 62       	ori	r24, 0x20	; 32
 678:	80 83       	st	Z, r24
 67a:	03 c0       	rjmp	.+6      	; 0x682 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 67c:	80 81       	ld	r24, Z
 67e:	8f 7d       	andi	r24, 0xDF	; 223
 680:	80 83       	st	Z, r24
        }
        CLOCK_1;
 682:	80 81       	ld	r24, Z
 684:	80 61       	ori	r24, 0x10	; 16
 686:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 688:	80 81       	ld	r24, Z
 68a:	8f 7e       	andi	r24, 0xEF	; 239
 68c:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 68e:	a2 17       	cp	r26, r18
 690:	b3 07       	cpc	r27, r19
 692:	31 f7       	brne	.-52     	; 0x660 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 694:	e5 e0       	ldi	r30, 0x05	; 5
 696:	f1 e0       	ldi	r31, 0x01	; 1
 698:	80 81       	ld	r24, Z
 69a:	87 7f       	andi	r24, 0xF7	; 247
 69c:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 69e:	80 81       	ld	r24, Z
 6a0:	88 7f       	andi	r24, 0xF8	; 248
 6a2:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 6a4:	90 81       	ld	r25, Z
 6a6:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 6aa:	89 2b       	or	r24, r25
 6ac:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 6ae:	80 81       	ld	r24, Z
 6b0:	80 64       	ori	r24, 0x40	; 64
 6b2:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 6b4:	80 81       	ld	r24, Z
 6b6:	88 60       	ori	r24, 0x08	; 8
 6b8:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 6ba:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 6be:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 6c2:	87 30       	cpi	r24, 0x07	; 7
 6c4:	91 05       	cpc	r25, r1
 6c6:	30 f4       	brcc	.+12     	; 0x6d4 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 6c8:	01 96       	adiw	r24, 0x01	; 1
 6ca:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2725+0x1>
 6ce:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2725>
 6d2:	07 c0       	rjmp	.+14     	; 0x6e2 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 6d4:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2725+0x1>
 6d8:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2725>
        writeTextFinished = 1;
 6dc:	81 e0       	ldi	r24, 0x01	; 1
 6de:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 6e2:	28 96       	adiw	r28, 0x08	; 8
 6e4:	0f b6       	in	r0, 0x3f	; 63
 6e6:	f8 94       	cli
 6e8:	de bf       	out	0x3e, r29	; 62
 6ea:	0f be       	out	0x3f, r0	; 63
 6ec:	cd bf       	out	0x3d, r28	; 61
 6ee:	df 91       	pop	r29
 6f0:	cf 91       	pop	r28
 6f2:	08 95       	ret

000006f4 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 6f4:	1f 92       	push	r1
 6f6:	0f 92       	push	r0
 6f8:	0f b6       	in	r0, 0x3f	; 63
 6fa:	0f 92       	push	r0
 6fc:	11 24       	eor	r1, r1
 6fe:	0b b6       	in	r0, 0x3b	; 59
 700:	0f 92       	push	r0
 702:	2f 93       	push	r18
 704:	3f 93       	push	r19
 706:	4f 93       	push	r20
 708:	5f 93       	push	r21
 70a:	6f 93       	push	r22
 70c:	7f 93       	push	r23
 70e:	8f 93       	push	r24
 710:	9f 93       	push	r25
 712:	af 93       	push	r26
 714:	bf 93       	push	r27
 716:	ef 93       	push	r30
 718:	ff 93       	push	r31
    systemTimeMs += 1;
 71a:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 71e:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 722:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 726:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 72a:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 72e:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 732:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 736:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 73a:	a1 e0       	ldi	r26, 0x01	; 1
 73c:	27 d0       	rcall	.+78     	; 0x78c <__adddi3_s8>
 73e:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 742:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 746:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 74a:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 74e:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 752:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 756:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 75a:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 75e:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 762:	81 11       	cpse	r24, r1
 764:	4f df       	rcall	.-354    	; 0x604 <matrixWriteNextLine>
}
 766:	ff 91       	pop	r31
 768:	ef 91       	pop	r30
 76a:	bf 91       	pop	r27
 76c:	af 91       	pop	r26
 76e:	9f 91       	pop	r25
 770:	8f 91       	pop	r24
 772:	7f 91       	pop	r23
 774:	6f 91       	pop	r22
 776:	5f 91       	pop	r21
 778:	4f 91       	pop	r20
 77a:	3f 91       	pop	r19
 77c:	2f 91       	pop	r18
 77e:	0f 90       	pop	r0
 780:	0b be       	out	0x3b, r0	; 59
 782:	0f 90       	pop	r0
 784:	0f be       	out	0x3f, r0	; 63
 786:	0f 90       	pop	r0
 788:	1f 90       	pop	r1
 78a:	18 95       	reti

0000078c <__adddi3_s8>:
 78c:	00 24       	eor	r0, r0
 78e:	a7 fd       	sbrc	r26, 7
 790:	00 94       	com	r0
 792:	2a 0f       	add	r18, r26
 794:	30 1d       	adc	r19, r0
 796:	40 1d       	adc	r20, r0
 798:	50 1d       	adc	r21, r0
 79a:	60 1d       	adc	r22, r0
 79c:	70 1d       	adc	r23, r0
 79e:	80 1d       	adc	r24, r0
 7a0:	90 1d       	adc	r25, r0
 7a2:	08 95       	ret

000007a4 <vsnprintf>:
 7a4:	0f 93       	push	r16
 7a6:	1f 93       	push	r17
 7a8:	cf 93       	push	r28
 7aa:	df 93       	push	r29
 7ac:	cd b7       	in	r28, 0x3d	; 61
 7ae:	de b7       	in	r29, 0x3e	; 62
 7b0:	2e 97       	sbiw	r28, 0x0e	; 14
 7b2:	0f b6       	in	r0, 0x3f	; 63
 7b4:	f8 94       	cli
 7b6:	de bf       	out	0x3e, r29	; 62
 7b8:	0f be       	out	0x3f, r0	; 63
 7ba:	cd bf       	out	0x3d, r28	; 61
 7bc:	8c 01       	movw	r16, r24
 7be:	fa 01       	movw	r30, r20
 7c0:	86 e0       	ldi	r24, 0x06	; 6
 7c2:	8c 83       	std	Y+4, r24	; 0x04
 7c4:	1a 83       	std	Y+2, r17	; 0x02
 7c6:	09 83       	std	Y+1, r16	; 0x01
 7c8:	77 ff       	sbrs	r23, 7
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <vsnprintf+0x2c>
 7cc:	60 e0       	ldi	r22, 0x00	; 0
 7ce:	70 e8       	ldi	r23, 0x80	; 128
 7d0:	cb 01       	movw	r24, r22
 7d2:	01 97       	sbiw	r24, 0x01	; 1
 7d4:	9e 83       	std	Y+6, r25	; 0x06
 7d6:	8d 83       	std	Y+5, r24	; 0x05
 7d8:	a9 01       	movw	r20, r18
 7da:	bf 01       	movw	r22, r30
 7dc:	ce 01       	movw	r24, r28
 7de:	01 96       	adiw	r24, 0x01	; 1
 7e0:	19 d0       	rcall	.+50     	; 0x814 <vfprintf>
 7e2:	4d 81       	ldd	r20, Y+5	; 0x05
 7e4:	5e 81       	ldd	r21, Y+6	; 0x06
 7e6:	57 fd       	sbrc	r21, 7
 7e8:	0a c0       	rjmp	.+20     	; 0x7fe <vsnprintf+0x5a>
 7ea:	2f 81       	ldd	r18, Y+7	; 0x07
 7ec:	38 85       	ldd	r19, Y+8	; 0x08
 7ee:	42 17       	cp	r20, r18
 7f0:	53 07       	cpc	r21, r19
 7f2:	0c f4       	brge	.+2      	; 0x7f6 <vsnprintf+0x52>
 7f4:	9a 01       	movw	r18, r20
 7f6:	f8 01       	movw	r30, r16
 7f8:	e2 0f       	add	r30, r18
 7fa:	f3 1f       	adc	r31, r19
 7fc:	10 82       	st	Z, r1
 7fe:	2e 96       	adiw	r28, 0x0e	; 14
 800:	0f b6       	in	r0, 0x3f	; 63
 802:	f8 94       	cli
 804:	de bf       	out	0x3e, r29	; 62
 806:	0f be       	out	0x3f, r0	; 63
 808:	cd bf       	out	0x3d, r28	; 61
 80a:	df 91       	pop	r29
 80c:	cf 91       	pop	r28
 80e:	1f 91       	pop	r17
 810:	0f 91       	pop	r16
 812:	08 95       	ret

00000814 <vfprintf>:
 814:	2f 92       	push	r2
 816:	3f 92       	push	r3
 818:	4f 92       	push	r4
 81a:	5f 92       	push	r5
 81c:	6f 92       	push	r6
 81e:	7f 92       	push	r7
 820:	8f 92       	push	r8
 822:	9f 92       	push	r9
 824:	af 92       	push	r10
 826:	bf 92       	push	r11
 828:	cf 92       	push	r12
 82a:	df 92       	push	r13
 82c:	ef 92       	push	r14
 82e:	ff 92       	push	r15
 830:	0f 93       	push	r16
 832:	1f 93       	push	r17
 834:	cf 93       	push	r28
 836:	df 93       	push	r29
 838:	cd b7       	in	r28, 0x3d	; 61
 83a:	de b7       	in	r29, 0x3e	; 62
 83c:	2b 97       	sbiw	r28, 0x0b	; 11
 83e:	0f b6       	in	r0, 0x3f	; 63
 840:	f8 94       	cli
 842:	de bf       	out	0x3e, r29	; 62
 844:	0f be       	out	0x3f, r0	; 63
 846:	cd bf       	out	0x3d, r28	; 61
 848:	6c 01       	movw	r12, r24
 84a:	7b 01       	movw	r14, r22
 84c:	8a 01       	movw	r16, r20
 84e:	fc 01       	movw	r30, r24
 850:	17 82       	std	Z+7, r1	; 0x07
 852:	16 82       	std	Z+6, r1	; 0x06
 854:	83 81       	ldd	r24, Z+3	; 0x03
 856:	81 ff       	sbrs	r24, 1
 858:	bf c1       	rjmp	.+894    	; 0xbd8 <vfprintf+0x3c4>
 85a:	ce 01       	movw	r24, r28
 85c:	01 96       	adiw	r24, 0x01	; 1
 85e:	3c 01       	movw	r6, r24
 860:	f6 01       	movw	r30, r12
 862:	93 81       	ldd	r25, Z+3	; 0x03
 864:	f7 01       	movw	r30, r14
 866:	93 fd       	sbrc	r25, 3
 868:	85 91       	lpm	r24, Z+
 86a:	93 ff       	sbrs	r25, 3
 86c:	81 91       	ld	r24, Z+
 86e:	7f 01       	movw	r14, r30
 870:	88 23       	and	r24, r24
 872:	09 f4       	brne	.+2      	; 0x876 <vfprintf+0x62>
 874:	ad c1       	rjmp	.+858    	; 0xbd0 <vfprintf+0x3bc>
 876:	85 32       	cpi	r24, 0x25	; 37
 878:	39 f4       	brne	.+14     	; 0x888 <vfprintf+0x74>
 87a:	93 fd       	sbrc	r25, 3
 87c:	85 91       	lpm	r24, Z+
 87e:	93 ff       	sbrs	r25, 3
 880:	81 91       	ld	r24, Z+
 882:	7f 01       	movw	r14, r30
 884:	85 32       	cpi	r24, 0x25	; 37
 886:	21 f4       	brne	.+8      	; 0x890 <vfprintf+0x7c>
 888:	b6 01       	movw	r22, r12
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	d6 d1       	rcall	.+940    	; 0xc3a <fputc>
 88e:	e8 cf       	rjmp	.-48     	; 0x860 <vfprintf+0x4c>
 890:	91 2c       	mov	r9, r1
 892:	21 2c       	mov	r2, r1
 894:	31 2c       	mov	r3, r1
 896:	ff e1       	ldi	r31, 0x1F	; 31
 898:	f3 15       	cp	r31, r3
 89a:	d8 f0       	brcs	.+54     	; 0x8d2 <vfprintf+0xbe>
 89c:	8b 32       	cpi	r24, 0x2B	; 43
 89e:	79 f0       	breq	.+30     	; 0x8be <vfprintf+0xaa>
 8a0:	38 f4       	brcc	.+14     	; 0x8b0 <vfprintf+0x9c>
 8a2:	80 32       	cpi	r24, 0x20	; 32
 8a4:	79 f0       	breq	.+30     	; 0x8c4 <vfprintf+0xb0>
 8a6:	83 32       	cpi	r24, 0x23	; 35
 8a8:	a1 f4       	brne	.+40     	; 0x8d2 <vfprintf+0xbe>
 8aa:	23 2d       	mov	r18, r3
 8ac:	20 61       	ori	r18, 0x10	; 16
 8ae:	1d c0       	rjmp	.+58     	; 0x8ea <vfprintf+0xd6>
 8b0:	8d 32       	cpi	r24, 0x2D	; 45
 8b2:	61 f0       	breq	.+24     	; 0x8cc <vfprintf+0xb8>
 8b4:	80 33       	cpi	r24, 0x30	; 48
 8b6:	69 f4       	brne	.+26     	; 0x8d2 <vfprintf+0xbe>
 8b8:	23 2d       	mov	r18, r3
 8ba:	21 60       	ori	r18, 0x01	; 1
 8bc:	16 c0       	rjmp	.+44     	; 0x8ea <vfprintf+0xd6>
 8be:	83 2d       	mov	r24, r3
 8c0:	82 60       	ori	r24, 0x02	; 2
 8c2:	38 2e       	mov	r3, r24
 8c4:	e3 2d       	mov	r30, r3
 8c6:	e4 60       	ori	r30, 0x04	; 4
 8c8:	3e 2e       	mov	r3, r30
 8ca:	2a c0       	rjmp	.+84     	; 0x920 <vfprintf+0x10c>
 8cc:	f3 2d       	mov	r31, r3
 8ce:	f8 60       	ori	r31, 0x08	; 8
 8d0:	1d c0       	rjmp	.+58     	; 0x90c <vfprintf+0xf8>
 8d2:	37 fc       	sbrc	r3, 7
 8d4:	2d c0       	rjmp	.+90     	; 0x930 <vfprintf+0x11c>
 8d6:	20 ed       	ldi	r18, 0xD0	; 208
 8d8:	28 0f       	add	r18, r24
 8da:	2a 30       	cpi	r18, 0x0A	; 10
 8dc:	40 f0       	brcs	.+16     	; 0x8ee <vfprintf+0xda>
 8de:	8e 32       	cpi	r24, 0x2E	; 46
 8e0:	b9 f4       	brne	.+46     	; 0x910 <vfprintf+0xfc>
 8e2:	36 fc       	sbrc	r3, 6
 8e4:	75 c1       	rjmp	.+746    	; 0xbd0 <vfprintf+0x3bc>
 8e6:	23 2d       	mov	r18, r3
 8e8:	20 64       	ori	r18, 0x40	; 64
 8ea:	32 2e       	mov	r3, r18
 8ec:	19 c0       	rjmp	.+50     	; 0x920 <vfprintf+0x10c>
 8ee:	36 fe       	sbrs	r3, 6
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <vfprintf+0xea>
 8f2:	8a e0       	ldi	r24, 0x0A	; 10
 8f4:	98 9e       	mul	r9, r24
 8f6:	20 0d       	add	r18, r0
 8f8:	11 24       	eor	r1, r1
 8fa:	92 2e       	mov	r9, r18
 8fc:	11 c0       	rjmp	.+34     	; 0x920 <vfprintf+0x10c>
 8fe:	ea e0       	ldi	r30, 0x0A	; 10
 900:	2e 9e       	mul	r2, r30
 902:	20 0d       	add	r18, r0
 904:	11 24       	eor	r1, r1
 906:	22 2e       	mov	r2, r18
 908:	f3 2d       	mov	r31, r3
 90a:	f0 62       	ori	r31, 0x20	; 32
 90c:	3f 2e       	mov	r3, r31
 90e:	08 c0       	rjmp	.+16     	; 0x920 <vfprintf+0x10c>
 910:	8c 36       	cpi	r24, 0x6C	; 108
 912:	21 f4       	brne	.+8      	; 0x91c <vfprintf+0x108>
 914:	83 2d       	mov	r24, r3
 916:	80 68       	ori	r24, 0x80	; 128
 918:	38 2e       	mov	r3, r24
 91a:	02 c0       	rjmp	.+4      	; 0x920 <vfprintf+0x10c>
 91c:	88 36       	cpi	r24, 0x68	; 104
 91e:	41 f4       	brne	.+16     	; 0x930 <vfprintf+0x11c>
 920:	f7 01       	movw	r30, r14
 922:	93 fd       	sbrc	r25, 3
 924:	85 91       	lpm	r24, Z+
 926:	93 ff       	sbrs	r25, 3
 928:	81 91       	ld	r24, Z+
 92a:	7f 01       	movw	r14, r30
 92c:	81 11       	cpse	r24, r1
 92e:	b3 cf       	rjmp	.-154    	; 0x896 <vfprintf+0x82>
 930:	98 2f       	mov	r25, r24
 932:	9f 7d       	andi	r25, 0xDF	; 223
 934:	95 54       	subi	r25, 0x45	; 69
 936:	93 30       	cpi	r25, 0x03	; 3
 938:	28 f4       	brcc	.+10     	; 0x944 <vfprintf+0x130>
 93a:	0c 5f       	subi	r16, 0xFC	; 252
 93c:	1f 4f       	sbci	r17, 0xFF	; 255
 93e:	9f e3       	ldi	r25, 0x3F	; 63
 940:	99 83       	std	Y+1, r25	; 0x01
 942:	0d c0       	rjmp	.+26     	; 0x95e <vfprintf+0x14a>
 944:	83 36       	cpi	r24, 0x63	; 99
 946:	31 f0       	breq	.+12     	; 0x954 <vfprintf+0x140>
 948:	83 37       	cpi	r24, 0x73	; 115
 94a:	71 f0       	breq	.+28     	; 0x968 <vfprintf+0x154>
 94c:	83 35       	cpi	r24, 0x53	; 83
 94e:	09 f0       	breq	.+2      	; 0x952 <vfprintf+0x13e>
 950:	55 c0       	rjmp	.+170    	; 0x9fc <vfprintf+0x1e8>
 952:	20 c0       	rjmp	.+64     	; 0x994 <vfprintf+0x180>
 954:	f8 01       	movw	r30, r16
 956:	80 81       	ld	r24, Z
 958:	89 83       	std	Y+1, r24	; 0x01
 95a:	0e 5f       	subi	r16, 0xFE	; 254
 95c:	1f 4f       	sbci	r17, 0xFF	; 255
 95e:	88 24       	eor	r8, r8
 960:	83 94       	inc	r8
 962:	91 2c       	mov	r9, r1
 964:	53 01       	movw	r10, r6
 966:	12 c0       	rjmp	.+36     	; 0x98c <vfprintf+0x178>
 968:	28 01       	movw	r4, r16
 96a:	f2 e0       	ldi	r31, 0x02	; 2
 96c:	4f 0e       	add	r4, r31
 96e:	51 1c       	adc	r5, r1
 970:	f8 01       	movw	r30, r16
 972:	a0 80       	ld	r10, Z
 974:	b1 80       	ldd	r11, Z+1	; 0x01
 976:	36 fe       	sbrs	r3, 6
 978:	03 c0       	rjmp	.+6      	; 0x980 <vfprintf+0x16c>
 97a:	69 2d       	mov	r22, r9
 97c:	70 e0       	ldi	r23, 0x00	; 0
 97e:	02 c0       	rjmp	.+4      	; 0x984 <vfprintf+0x170>
 980:	6f ef       	ldi	r22, 0xFF	; 255
 982:	7f ef       	ldi	r23, 0xFF	; 255
 984:	c5 01       	movw	r24, r10
 986:	4e d1       	rcall	.+668    	; 0xc24 <strnlen>
 988:	4c 01       	movw	r8, r24
 98a:	82 01       	movw	r16, r4
 98c:	f3 2d       	mov	r31, r3
 98e:	ff 77       	andi	r31, 0x7F	; 127
 990:	3f 2e       	mov	r3, r31
 992:	15 c0       	rjmp	.+42     	; 0x9be <vfprintf+0x1aa>
 994:	28 01       	movw	r4, r16
 996:	22 e0       	ldi	r18, 0x02	; 2
 998:	42 0e       	add	r4, r18
 99a:	51 1c       	adc	r5, r1
 99c:	f8 01       	movw	r30, r16
 99e:	a0 80       	ld	r10, Z
 9a0:	b1 80       	ldd	r11, Z+1	; 0x01
 9a2:	36 fe       	sbrs	r3, 6
 9a4:	03 c0       	rjmp	.+6      	; 0x9ac <vfprintf+0x198>
 9a6:	69 2d       	mov	r22, r9
 9a8:	70 e0       	ldi	r23, 0x00	; 0
 9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <vfprintf+0x19c>
 9ac:	6f ef       	ldi	r22, 0xFF	; 255
 9ae:	7f ef       	ldi	r23, 0xFF	; 255
 9b0:	c5 01       	movw	r24, r10
 9b2:	2d d1       	rcall	.+602    	; 0xc0e <strnlen_P>
 9b4:	4c 01       	movw	r8, r24
 9b6:	f3 2d       	mov	r31, r3
 9b8:	f0 68       	ori	r31, 0x80	; 128
 9ba:	3f 2e       	mov	r3, r31
 9bc:	82 01       	movw	r16, r4
 9be:	33 fc       	sbrc	r3, 3
 9c0:	19 c0       	rjmp	.+50     	; 0x9f4 <vfprintf+0x1e0>
 9c2:	82 2d       	mov	r24, r2
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	88 16       	cp	r8, r24
 9c8:	99 06       	cpc	r9, r25
 9ca:	a0 f4       	brcc	.+40     	; 0x9f4 <vfprintf+0x1e0>
 9cc:	b6 01       	movw	r22, r12
 9ce:	80 e2       	ldi	r24, 0x20	; 32
 9d0:	90 e0       	ldi	r25, 0x00	; 0
 9d2:	33 d1       	rcall	.+614    	; 0xc3a <fputc>
 9d4:	2a 94       	dec	r2
 9d6:	f5 cf       	rjmp	.-22     	; 0x9c2 <vfprintf+0x1ae>
 9d8:	f5 01       	movw	r30, r10
 9da:	37 fc       	sbrc	r3, 7
 9dc:	85 91       	lpm	r24, Z+
 9de:	37 fe       	sbrs	r3, 7
 9e0:	81 91       	ld	r24, Z+
 9e2:	5f 01       	movw	r10, r30
 9e4:	b6 01       	movw	r22, r12
 9e6:	90 e0       	ldi	r25, 0x00	; 0
 9e8:	28 d1       	rcall	.+592    	; 0xc3a <fputc>
 9ea:	21 10       	cpse	r2, r1
 9ec:	2a 94       	dec	r2
 9ee:	21 e0       	ldi	r18, 0x01	; 1
 9f0:	82 1a       	sub	r8, r18
 9f2:	91 08       	sbc	r9, r1
 9f4:	81 14       	cp	r8, r1
 9f6:	91 04       	cpc	r9, r1
 9f8:	79 f7       	brne	.-34     	; 0x9d8 <vfprintf+0x1c4>
 9fa:	e1 c0       	rjmp	.+450    	; 0xbbe <vfprintf+0x3aa>
 9fc:	84 36       	cpi	r24, 0x64	; 100
 9fe:	11 f0       	breq	.+4      	; 0xa04 <vfprintf+0x1f0>
 a00:	89 36       	cpi	r24, 0x69	; 105
 a02:	39 f5       	brne	.+78     	; 0xa52 <vfprintf+0x23e>
 a04:	f8 01       	movw	r30, r16
 a06:	37 fe       	sbrs	r3, 7
 a08:	07 c0       	rjmp	.+14     	; 0xa18 <vfprintf+0x204>
 a0a:	60 81       	ld	r22, Z
 a0c:	71 81       	ldd	r23, Z+1	; 0x01
 a0e:	82 81       	ldd	r24, Z+2	; 0x02
 a10:	93 81       	ldd	r25, Z+3	; 0x03
 a12:	0c 5f       	subi	r16, 0xFC	; 252
 a14:	1f 4f       	sbci	r17, 0xFF	; 255
 a16:	08 c0       	rjmp	.+16     	; 0xa28 <vfprintf+0x214>
 a18:	60 81       	ld	r22, Z
 a1a:	71 81       	ldd	r23, Z+1	; 0x01
 a1c:	07 2e       	mov	r0, r23
 a1e:	00 0c       	add	r0, r0
 a20:	88 0b       	sbc	r24, r24
 a22:	99 0b       	sbc	r25, r25
 a24:	0e 5f       	subi	r16, 0xFE	; 254
 a26:	1f 4f       	sbci	r17, 0xFF	; 255
 a28:	f3 2d       	mov	r31, r3
 a2a:	ff 76       	andi	r31, 0x6F	; 111
 a2c:	3f 2e       	mov	r3, r31
 a2e:	97 ff       	sbrs	r25, 7
 a30:	09 c0       	rjmp	.+18     	; 0xa44 <vfprintf+0x230>
 a32:	90 95       	com	r25
 a34:	80 95       	com	r24
 a36:	70 95       	com	r23
 a38:	61 95       	neg	r22
 a3a:	7f 4f       	sbci	r23, 0xFF	; 255
 a3c:	8f 4f       	sbci	r24, 0xFF	; 255
 a3e:	9f 4f       	sbci	r25, 0xFF	; 255
 a40:	f0 68       	ori	r31, 0x80	; 128
 a42:	3f 2e       	mov	r3, r31
 a44:	2a e0       	ldi	r18, 0x0A	; 10
 a46:	30 e0       	ldi	r19, 0x00	; 0
 a48:	a3 01       	movw	r20, r6
 a4a:	33 d1       	rcall	.+614    	; 0xcb2 <__ultoa_invert>
 a4c:	88 2e       	mov	r8, r24
 a4e:	86 18       	sub	r8, r6
 a50:	44 c0       	rjmp	.+136    	; 0xada <vfprintf+0x2c6>
 a52:	85 37       	cpi	r24, 0x75	; 117
 a54:	31 f4       	brne	.+12     	; 0xa62 <vfprintf+0x24e>
 a56:	23 2d       	mov	r18, r3
 a58:	2f 7e       	andi	r18, 0xEF	; 239
 a5a:	b2 2e       	mov	r11, r18
 a5c:	2a e0       	ldi	r18, 0x0A	; 10
 a5e:	30 e0       	ldi	r19, 0x00	; 0
 a60:	25 c0       	rjmp	.+74     	; 0xaac <vfprintf+0x298>
 a62:	93 2d       	mov	r25, r3
 a64:	99 7f       	andi	r25, 0xF9	; 249
 a66:	b9 2e       	mov	r11, r25
 a68:	8f 36       	cpi	r24, 0x6F	; 111
 a6a:	c1 f0       	breq	.+48     	; 0xa9c <vfprintf+0x288>
 a6c:	18 f4       	brcc	.+6      	; 0xa74 <vfprintf+0x260>
 a6e:	88 35       	cpi	r24, 0x58	; 88
 a70:	79 f0       	breq	.+30     	; 0xa90 <vfprintf+0x27c>
 a72:	ae c0       	rjmp	.+348    	; 0xbd0 <vfprintf+0x3bc>
 a74:	80 37       	cpi	r24, 0x70	; 112
 a76:	19 f0       	breq	.+6      	; 0xa7e <vfprintf+0x26a>
 a78:	88 37       	cpi	r24, 0x78	; 120
 a7a:	21 f0       	breq	.+8      	; 0xa84 <vfprintf+0x270>
 a7c:	a9 c0       	rjmp	.+338    	; 0xbd0 <vfprintf+0x3bc>
 a7e:	e9 2f       	mov	r30, r25
 a80:	e0 61       	ori	r30, 0x10	; 16
 a82:	be 2e       	mov	r11, r30
 a84:	b4 fe       	sbrs	r11, 4
 a86:	0d c0       	rjmp	.+26     	; 0xaa2 <vfprintf+0x28e>
 a88:	fb 2d       	mov	r31, r11
 a8a:	f4 60       	ori	r31, 0x04	; 4
 a8c:	bf 2e       	mov	r11, r31
 a8e:	09 c0       	rjmp	.+18     	; 0xaa2 <vfprintf+0x28e>
 a90:	34 fe       	sbrs	r3, 4
 a92:	0a c0       	rjmp	.+20     	; 0xaa8 <vfprintf+0x294>
 a94:	29 2f       	mov	r18, r25
 a96:	26 60       	ori	r18, 0x06	; 6
 a98:	b2 2e       	mov	r11, r18
 a9a:	06 c0       	rjmp	.+12     	; 0xaa8 <vfprintf+0x294>
 a9c:	28 e0       	ldi	r18, 0x08	; 8
 a9e:	30 e0       	ldi	r19, 0x00	; 0
 aa0:	05 c0       	rjmp	.+10     	; 0xaac <vfprintf+0x298>
 aa2:	20 e1       	ldi	r18, 0x10	; 16
 aa4:	30 e0       	ldi	r19, 0x00	; 0
 aa6:	02 c0       	rjmp	.+4      	; 0xaac <vfprintf+0x298>
 aa8:	20 e1       	ldi	r18, 0x10	; 16
 aaa:	32 e0       	ldi	r19, 0x02	; 2
 aac:	f8 01       	movw	r30, r16
 aae:	b7 fe       	sbrs	r11, 7
 ab0:	07 c0       	rjmp	.+14     	; 0xac0 <vfprintf+0x2ac>
 ab2:	60 81       	ld	r22, Z
 ab4:	71 81       	ldd	r23, Z+1	; 0x01
 ab6:	82 81       	ldd	r24, Z+2	; 0x02
 ab8:	93 81       	ldd	r25, Z+3	; 0x03
 aba:	0c 5f       	subi	r16, 0xFC	; 252
 abc:	1f 4f       	sbci	r17, 0xFF	; 255
 abe:	06 c0       	rjmp	.+12     	; 0xacc <vfprintf+0x2b8>
 ac0:	60 81       	ld	r22, Z
 ac2:	71 81       	ldd	r23, Z+1	; 0x01
 ac4:	80 e0       	ldi	r24, 0x00	; 0
 ac6:	90 e0       	ldi	r25, 0x00	; 0
 ac8:	0e 5f       	subi	r16, 0xFE	; 254
 aca:	1f 4f       	sbci	r17, 0xFF	; 255
 acc:	a3 01       	movw	r20, r6
 ace:	f1 d0       	rcall	.+482    	; 0xcb2 <__ultoa_invert>
 ad0:	88 2e       	mov	r8, r24
 ad2:	86 18       	sub	r8, r6
 ad4:	fb 2d       	mov	r31, r11
 ad6:	ff 77       	andi	r31, 0x7F	; 127
 ad8:	3f 2e       	mov	r3, r31
 ada:	36 fe       	sbrs	r3, 6
 adc:	0d c0       	rjmp	.+26     	; 0xaf8 <vfprintf+0x2e4>
 ade:	23 2d       	mov	r18, r3
 ae0:	2e 7f       	andi	r18, 0xFE	; 254
 ae2:	a2 2e       	mov	r10, r18
 ae4:	89 14       	cp	r8, r9
 ae6:	58 f4       	brcc	.+22     	; 0xafe <vfprintf+0x2ea>
 ae8:	34 fe       	sbrs	r3, 4
 aea:	0b c0       	rjmp	.+22     	; 0xb02 <vfprintf+0x2ee>
 aec:	32 fc       	sbrc	r3, 2
 aee:	09 c0       	rjmp	.+18     	; 0xb02 <vfprintf+0x2ee>
 af0:	83 2d       	mov	r24, r3
 af2:	8e 7e       	andi	r24, 0xEE	; 238
 af4:	a8 2e       	mov	r10, r24
 af6:	05 c0       	rjmp	.+10     	; 0xb02 <vfprintf+0x2ee>
 af8:	b8 2c       	mov	r11, r8
 afa:	a3 2c       	mov	r10, r3
 afc:	03 c0       	rjmp	.+6      	; 0xb04 <vfprintf+0x2f0>
 afe:	b8 2c       	mov	r11, r8
 b00:	01 c0       	rjmp	.+2      	; 0xb04 <vfprintf+0x2f0>
 b02:	b9 2c       	mov	r11, r9
 b04:	a4 fe       	sbrs	r10, 4
 b06:	0f c0       	rjmp	.+30     	; 0xb26 <vfprintf+0x312>
 b08:	fe 01       	movw	r30, r28
 b0a:	e8 0d       	add	r30, r8
 b0c:	f1 1d       	adc	r31, r1
 b0e:	80 81       	ld	r24, Z
 b10:	80 33       	cpi	r24, 0x30	; 48
 b12:	21 f4       	brne	.+8      	; 0xb1c <vfprintf+0x308>
 b14:	9a 2d       	mov	r25, r10
 b16:	99 7e       	andi	r25, 0xE9	; 233
 b18:	a9 2e       	mov	r10, r25
 b1a:	09 c0       	rjmp	.+18     	; 0xb2e <vfprintf+0x31a>
 b1c:	a2 fe       	sbrs	r10, 2
 b1e:	06 c0       	rjmp	.+12     	; 0xb2c <vfprintf+0x318>
 b20:	b3 94       	inc	r11
 b22:	b3 94       	inc	r11
 b24:	04 c0       	rjmp	.+8      	; 0xb2e <vfprintf+0x31a>
 b26:	8a 2d       	mov	r24, r10
 b28:	86 78       	andi	r24, 0x86	; 134
 b2a:	09 f0       	breq	.+2      	; 0xb2e <vfprintf+0x31a>
 b2c:	b3 94       	inc	r11
 b2e:	a3 fc       	sbrc	r10, 3
 b30:	10 c0       	rjmp	.+32     	; 0xb52 <vfprintf+0x33e>
 b32:	a0 fe       	sbrs	r10, 0
 b34:	06 c0       	rjmp	.+12     	; 0xb42 <vfprintf+0x32e>
 b36:	b2 14       	cp	r11, r2
 b38:	80 f4       	brcc	.+32     	; 0xb5a <vfprintf+0x346>
 b3a:	28 0c       	add	r2, r8
 b3c:	92 2c       	mov	r9, r2
 b3e:	9b 18       	sub	r9, r11
 b40:	0d c0       	rjmp	.+26     	; 0xb5c <vfprintf+0x348>
 b42:	b2 14       	cp	r11, r2
 b44:	58 f4       	brcc	.+22     	; 0xb5c <vfprintf+0x348>
 b46:	b6 01       	movw	r22, r12
 b48:	80 e2       	ldi	r24, 0x20	; 32
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	76 d0       	rcall	.+236    	; 0xc3a <fputc>
 b4e:	b3 94       	inc	r11
 b50:	f8 cf       	rjmp	.-16     	; 0xb42 <vfprintf+0x32e>
 b52:	b2 14       	cp	r11, r2
 b54:	18 f4       	brcc	.+6      	; 0xb5c <vfprintf+0x348>
 b56:	2b 18       	sub	r2, r11
 b58:	02 c0       	rjmp	.+4      	; 0xb5e <vfprintf+0x34a>
 b5a:	98 2c       	mov	r9, r8
 b5c:	21 2c       	mov	r2, r1
 b5e:	a4 fe       	sbrs	r10, 4
 b60:	0f c0       	rjmp	.+30     	; 0xb80 <vfprintf+0x36c>
 b62:	b6 01       	movw	r22, r12
 b64:	80 e3       	ldi	r24, 0x30	; 48
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	68 d0       	rcall	.+208    	; 0xc3a <fputc>
 b6a:	a2 fe       	sbrs	r10, 2
 b6c:	16 c0       	rjmp	.+44     	; 0xb9a <vfprintf+0x386>
 b6e:	a1 fc       	sbrc	r10, 1
 b70:	03 c0       	rjmp	.+6      	; 0xb78 <vfprintf+0x364>
 b72:	88 e7       	ldi	r24, 0x78	; 120
 b74:	90 e0       	ldi	r25, 0x00	; 0
 b76:	02 c0       	rjmp	.+4      	; 0xb7c <vfprintf+0x368>
 b78:	88 e5       	ldi	r24, 0x58	; 88
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	b6 01       	movw	r22, r12
 b7e:	0c c0       	rjmp	.+24     	; 0xb98 <vfprintf+0x384>
 b80:	8a 2d       	mov	r24, r10
 b82:	86 78       	andi	r24, 0x86	; 134
 b84:	51 f0       	breq	.+20     	; 0xb9a <vfprintf+0x386>
 b86:	a1 fe       	sbrs	r10, 1
 b88:	02 c0       	rjmp	.+4      	; 0xb8e <vfprintf+0x37a>
 b8a:	8b e2       	ldi	r24, 0x2B	; 43
 b8c:	01 c0       	rjmp	.+2      	; 0xb90 <vfprintf+0x37c>
 b8e:	80 e2       	ldi	r24, 0x20	; 32
 b90:	a7 fc       	sbrc	r10, 7
 b92:	8d e2       	ldi	r24, 0x2D	; 45
 b94:	b6 01       	movw	r22, r12
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	50 d0       	rcall	.+160    	; 0xc3a <fputc>
 b9a:	89 14       	cp	r8, r9
 b9c:	30 f4       	brcc	.+12     	; 0xbaa <vfprintf+0x396>
 b9e:	b6 01       	movw	r22, r12
 ba0:	80 e3       	ldi	r24, 0x30	; 48
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	4a d0       	rcall	.+148    	; 0xc3a <fputc>
 ba6:	9a 94       	dec	r9
 ba8:	f8 cf       	rjmp	.-16     	; 0xb9a <vfprintf+0x386>
 baa:	8a 94       	dec	r8
 bac:	f3 01       	movw	r30, r6
 bae:	e8 0d       	add	r30, r8
 bb0:	f1 1d       	adc	r31, r1
 bb2:	80 81       	ld	r24, Z
 bb4:	b6 01       	movw	r22, r12
 bb6:	90 e0       	ldi	r25, 0x00	; 0
 bb8:	40 d0       	rcall	.+128    	; 0xc3a <fputc>
 bba:	81 10       	cpse	r8, r1
 bbc:	f6 cf       	rjmp	.-20     	; 0xbaa <vfprintf+0x396>
 bbe:	22 20       	and	r2, r2
 bc0:	09 f4       	brne	.+2      	; 0xbc4 <vfprintf+0x3b0>
 bc2:	4e ce       	rjmp	.-868    	; 0x860 <vfprintf+0x4c>
 bc4:	b6 01       	movw	r22, r12
 bc6:	80 e2       	ldi	r24, 0x20	; 32
 bc8:	90 e0       	ldi	r25, 0x00	; 0
 bca:	37 d0       	rcall	.+110    	; 0xc3a <fputc>
 bcc:	2a 94       	dec	r2
 bce:	f7 cf       	rjmp	.-18     	; 0xbbe <vfprintf+0x3aa>
 bd0:	f6 01       	movw	r30, r12
 bd2:	86 81       	ldd	r24, Z+6	; 0x06
 bd4:	97 81       	ldd	r25, Z+7	; 0x07
 bd6:	02 c0       	rjmp	.+4      	; 0xbdc <vfprintf+0x3c8>
 bd8:	8f ef       	ldi	r24, 0xFF	; 255
 bda:	9f ef       	ldi	r25, 0xFF	; 255
 bdc:	2b 96       	adiw	r28, 0x0b	; 11
 bde:	0f b6       	in	r0, 0x3f	; 63
 be0:	f8 94       	cli
 be2:	de bf       	out	0x3e, r29	; 62
 be4:	0f be       	out	0x3f, r0	; 63
 be6:	cd bf       	out	0x3d, r28	; 61
 be8:	df 91       	pop	r29
 bea:	cf 91       	pop	r28
 bec:	1f 91       	pop	r17
 bee:	0f 91       	pop	r16
 bf0:	ff 90       	pop	r15
 bf2:	ef 90       	pop	r14
 bf4:	df 90       	pop	r13
 bf6:	cf 90       	pop	r12
 bf8:	bf 90       	pop	r11
 bfa:	af 90       	pop	r10
 bfc:	9f 90       	pop	r9
 bfe:	8f 90       	pop	r8
 c00:	7f 90       	pop	r7
 c02:	6f 90       	pop	r6
 c04:	5f 90       	pop	r5
 c06:	4f 90       	pop	r4
 c08:	3f 90       	pop	r3
 c0a:	2f 90       	pop	r2
 c0c:	08 95       	ret

00000c0e <strnlen_P>:
 c0e:	fc 01       	movw	r30, r24
 c10:	05 90       	lpm	r0, Z+
 c12:	61 50       	subi	r22, 0x01	; 1
 c14:	70 40       	sbci	r23, 0x00	; 0
 c16:	01 10       	cpse	r0, r1
 c18:	d8 f7       	brcc	.-10     	; 0xc10 <strnlen_P+0x2>
 c1a:	80 95       	com	r24
 c1c:	90 95       	com	r25
 c1e:	8e 0f       	add	r24, r30
 c20:	9f 1f       	adc	r25, r31
 c22:	08 95       	ret

00000c24 <strnlen>:
 c24:	fc 01       	movw	r30, r24
 c26:	61 50       	subi	r22, 0x01	; 1
 c28:	70 40       	sbci	r23, 0x00	; 0
 c2a:	01 90       	ld	r0, Z+
 c2c:	01 10       	cpse	r0, r1
 c2e:	d8 f7       	brcc	.-10     	; 0xc26 <strnlen+0x2>
 c30:	80 95       	com	r24
 c32:	90 95       	com	r25
 c34:	8e 0f       	add	r24, r30
 c36:	9f 1f       	adc	r25, r31
 c38:	08 95       	ret

00000c3a <fputc>:
 c3a:	0f 93       	push	r16
 c3c:	1f 93       	push	r17
 c3e:	cf 93       	push	r28
 c40:	df 93       	push	r29
 c42:	fb 01       	movw	r30, r22
 c44:	23 81       	ldd	r18, Z+3	; 0x03
 c46:	21 fd       	sbrc	r18, 1
 c48:	03 c0       	rjmp	.+6      	; 0xc50 <fputc+0x16>
 c4a:	8f ef       	ldi	r24, 0xFF	; 255
 c4c:	9f ef       	ldi	r25, 0xFF	; 255
 c4e:	2c c0       	rjmp	.+88     	; 0xca8 <fputc+0x6e>
 c50:	22 ff       	sbrs	r18, 2
 c52:	16 c0       	rjmp	.+44     	; 0xc80 <fputc+0x46>
 c54:	46 81       	ldd	r20, Z+6	; 0x06
 c56:	57 81       	ldd	r21, Z+7	; 0x07
 c58:	24 81       	ldd	r18, Z+4	; 0x04
 c5a:	35 81       	ldd	r19, Z+5	; 0x05
 c5c:	42 17       	cp	r20, r18
 c5e:	53 07       	cpc	r21, r19
 c60:	44 f4       	brge	.+16     	; 0xc72 <fputc+0x38>
 c62:	a0 81       	ld	r26, Z
 c64:	b1 81       	ldd	r27, Z+1	; 0x01
 c66:	9d 01       	movw	r18, r26
 c68:	2f 5f       	subi	r18, 0xFF	; 255
 c6a:	3f 4f       	sbci	r19, 0xFF	; 255
 c6c:	31 83       	std	Z+1, r19	; 0x01
 c6e:	20 83       	st	Z, r18
 c70:	8c 93       	st	X, r24
 c72:	26 81       	ldd	r18, Z+6	; 0x06
 c74:	37 81       	ldd	r19, Z+7	; 0x07
 c76:	2f 5f       	subi	r18, 0xFF	; 255
 c78:	3f 4f       	sbci	r19, 0xFF	; 255
 c7a:	37 83       	std	Z+7, r19	; 0x07
 c7c:	26 83       	std	Z+6, r18	; 0x06
 c7e:	14 c0       	rjmp	.+40     	; 0xca8 <fputc+0x6e>
 c80:	8b 01       	movw	r16, r22
 c82:	ec 01       	movw	r28, r24
 c84:	fb 01       	movw	r30, r22
 c86:	00 84       	ldd	r0, Z+8	; 0x08
 c88:	f1 85       	ldd	r31, Z+9	; 0x09
 c8a:	e0 2d       	mov	r30, r0
 c8c:	19 95       	eicall
 c8e:	89 2b       	or	r24, r25
 c90:	e1 f6       	brne	.-72     	; 0xc4a <fputc+0x10>
 c92:	d8 01       	movw	r26, r16
 c94:	16 96       	adiw	r26, 0x06	; 6
 c96:	8d 91       	ld	r24, X+
 c98:	9c 91       	ld	r25, X
 c9a:	17 97       	sbiw	r26, 0x07	; 7
 c9c:	01 96       	adiw	r24, 0x01	; 1
 c9e:	17 96       	adiw	r26, 0x07	; 7
 ca0:	9c 93       	st	X, r25
 ca2:	8e 93       	st	-X, r24
 ca4:	16 97       	sbiw	r26, 0x06	; 6
 ca6:	ce 01       	movw	r24, r28
 ca8:	df 91       	pop	r29
 caa:	cf 91       	pop	r28
 cac:	1f 91       	pop	r17
 cae:	0f 91       	pop	r16
 cb0:	08 95       	ret

00000cb2 <__ultoa_invert>:
 cb2:	fa 01       	movw	r30, r20
 cb4:	aa 27       	eor	r26, r26
 cb6:	28 30       	cpi	r18, 0x08	; 8
 cb8:	51 f1       	breq	.+84     	; 0xd0e <__ultoa_invert+0x5c>
 cba:	20 31       	cpi	r18, 0x10	; 16
 cbc:	81 f1       	breq	.+96     	; 0xd1e <__ultoa_invert+0x6c>
 cbe:	e8 94       	clt
 cc0:	6f 93       	push	r22
 cc2:	6e 7f       	andi	r22, 0xFE	; 254
 cc4:	6e 5f       	subi	r22, 0xFE	; 254
 cc6:	7f 4f       	sbci	r23, 0xFF	; 255
 cc8:	8f 4f       	sbci	r24, 0xFF	; 255
 cca:	9f 4f       	sbci	r25, 0xFF	; 255
 ccc:	af 4f       	sbci	r26, 0xFF	; 255
 cce:	b1 e0       	ldi	r27, 0x01	; 1
 cd0:	3e d0       	rcall	.+124    	; 0xd4e <__ultoa_invert+0x9c>
 cd2:	b4 e0       	ldi	r27, 0x04	; 4
 cd4:	3c d0       	rcall	.+120    	; 0xd4e <__ultoa_invert+0x9c>
 cd6:	67 0f       	add	r22, r23
 cd8:	78 1f       	adc	r23, r24
 cda:	89 1f       	adc	r24, r25
 cdc:	9a 1f       	adc	r25, r26
 cde:	a1 1d       	adc	r26, r1
 ce0:	68 0f       	add	r22, r24
 ce2:	79 1f       	adc	r23, r25
 ce4:	8a 1f       	adc	r24, r26
 ce6:	91 1d       	adc	r25, r1
 ce8:	a1 1d       	adc	r26, r1
 cea:	6a 0f       	add	r22, r26
 cec:	71 1d       	adc	r23, r1
 cee:	81 1d       	adc	r24, r1
 cf0:	91 1d       	adc	r25, r1
 cf2:	a1 1d       	adc	r26, r1
 cf4:	20 d0       	rcall	.+64     	; 0xd36 <__ultoa_invert+0x84>
 cf6:	09 f4       	brne	.+2      	; 0xcfa <__ultoa_invert+0x48>
 cf8:	68 94       	set
 cfa:	3f 91       	pop	r19
 cfc:	2a e0       	ldi	r18, 0x0A	; 10
 cfe:	26 9f       	mul	r18, r22
 d00:	11 24       	eor	r1, r1
 d02:	30 19       	sub	r19, r0
 d04:	30 5d       	subi	r19, 0xD0	; 208
 d06:	31 93       	st	Z+, r19
 d08:	de f6       	brtc	.-74     	; 0xcc0 <__ultoa_invert+0xe>
 d0a:	cf 01       	movw	r24, r30
 d0c:	08 95       	ret
 d0e:	46 2f       	mov	r20, r22
 d10:	47 70       	andi	r20, 0x07	; 7
 d12:	40 5d       	subi	r20, 0xD0	; 208
 d14:	41 93       	st	Z+, r20
 d16:	b3 e0       	ldi	r27, 0x03	; 3
 d18:	0f d0       	rcall	.+30     	; 0xd38 <__ultoa_invert+0x86>
 d1a:	c9 f7       	brne	.-14     	; 0xd0e <__ultoa_invert+0x5c>
 d1c:	f6 cf       	rjmp	.-20     	; 0xd0a <__ultoa_invert+0x58>
 d1e:	46 2f       	mov	r20, r22
 d20:	4f 70       	andi	r20, 0x0F	; 15
 d22:	40 5d       	subi	r20, 0xD0	; 208
 d24:	4a 33       	cpi	r20, 0x3A	; 58
 d26:	18 f0       	brcs	.+6      	; 0xd2e <__ultoa_invert+0x7c>
 d28:	49 5d       	subi	r20, 0xD9	; 217
 d2a:	31 fd       	sbrc	r19, 1
 d2c:	40 52       	subi	r20, 0x20	; 32
 d2e:	41 93       	st	Z+, r20
 d30:	02 d0       	rcall	.+4      	; 0xd36 <__ultoa_invert+0x84>
 d32:	a9 f7       	brne	.-22     	; 0xd1e <__ultoa_invert+0x6c>
 d34:	ea cf       	rjmp	.-44     	; 0xd0a <__ultoa_invert+0x58>
 d36:	b4 e0       	ldi	r27, 0x04	; 4
 d38:	a6 95       	lsr	r26
 d3a:	97 95       	ror	r25
 d3c:	87 95       	ror	r24
 d3e:	77 95       	ror	r23
 d40:	67 95       	ror	r22
 d42:	ba 95       	dec	r27
 d44:	c9 f7       	brne	.-14     	; 0xd38 <__ultoa_invert+0x86>
 d46:	00 97       	sbiw	r24, 0x00	; 0
 d48:	61 05       	cpc	r22, r1
 d4a:	71 05       	cpc	r23, r1
 d4c:	08 95       	ret
 d4e:	9b 01       	movw	r18, r22
 d50:	ac 01       	movw	r20, r24
 d52:	0a 2e       	mov	r0, r26
 d54:	06 94       	lsr	r0
 d56:	57 95       	ror	r21
 d58:	47 95       	ror	r20
 d5a:	37 95       	ror	r19
 d5c:	27 95       	ror	r18
 d5e:	ba 95       	dec	r27
 d60:	c9 f7       	brne	.-14     	; 0xd54 <__ultoa_invert+0xa2>
 d62:	62 0f       	add	r22, r18
 d64:	73 1f       	adc	r23, r19
 d66:	84 1f       	adc	r24, r20
 d68:	95 1f       	adc	r25, r21
 d6a:	a0 1d       	adc	r26, r0
 d6c:	08 95       	ret

00000d6e <_exit>:
 d6e:	f8 94       	cli

00000d70 <__stop_program>:
 d70:	ff cf       	rjmp	.-2      	; 0xd70 <__stop_program>
