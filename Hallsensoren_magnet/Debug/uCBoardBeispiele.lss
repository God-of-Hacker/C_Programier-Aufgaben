
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800200  00000ff6  0000108a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ff6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800298  00800298  00001122  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001122  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001180  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000011c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000255a  00000000  00000000  000013a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fac  00000000  00000000  00003902  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001459  00000000  00000000  000048ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  00005d08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d04  00000000  00000000  00006390  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b6b  00000000  00000000  00007094  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008bff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	35 c4       	rjmp	.+2154   	; 0x8c8 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 ef       	ldi	r30, 0xF6	; 246
  fc:	ff e0       	ldi	r31, 0x0F	; 15
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 39       	cpi	r26, 0x98	; 152
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a8 e9       	ldi	r26, 0x98	; 152
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 31       	cpi	r26, 0x16	; 22
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	68 c7       	rjmp	.+3792   	; 0xff2 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
//uC-Board-Treiber hinzuf√ºgen
#include "ucBoardDriver.h"

//Hauptprogramm
int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	00 d0       	rcall	.+0      	; 0x12a <main+0x6>
 12a:	1f 92       	push	r1
 12c:	cd b7       	in	r28, 0x3d	; 61
 12e:	de b7       	in	r29, 0x3e	; 62
    int16_t outgausshall1 = 0;
    int16_t outgausshall2 = 0;
    int16_t uT1 = 0;
    int16_t uT2 = 0;
    //Initialisieren
    initBoard(1);
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	47 d2       	rcall	.+1166   	; 0x5c2 <initBoard>
        outgausshall2 = (inHall2_mv - 2500) *10/15;
        uT1 = outgausshall1 * 100;
        uT2 = outgausshall2 * 100;
        //Ausgabe------------------------------------------------------------------   //Zeile von rechts nach links ,spalte von oben nach unten
        lcdWriteText(0,0,"ADC: %4d",inAdcHall1);  
        lcdWriteText(0,12,"%4d",inAdcHall2);
 134:	0f 2e       	mov	r0, r31
 136:	f6 e1       	ldi	r31, 0x16	; 22
 138:	6f 2e       	mov	r6, r31
 13a:	f2 e0       	ldi	r31, 0x02	; 2
 13c:	7f 2e       	mov	r7, r31
 13e:	f0 2d       	mov	r31, r0
 140:	0f 2e       	mov	r0, r31
 142:	fc e0       	ldi	r31, 0x0C	; 12
 144:	3f 2e       	mov	r3, r31
 146:	f0 2d       	mov	r31, r0
        lcdWriteText(1,0,"mv:  %4d",inHall1_mv);  
 148:	22 24       	eor	r2, r2
 14a:	23 94       	inc	r2
    initBoard(1);
    
    //Unendlichschlaufe
    while(1)
    {
        inAdcHall1 = adcRead(ADC_14_MAGNET_1);  //0v...5v
 14c:	8e e0       	ldi	r24, 0x0E	; 14
 14e:	d6 d0       	rcall	.+428    	; 0x2fc <adcRead>
 150:	89 83       	std	Y+1, r24	; 0x01
 152:	9a 83       	std	Y+2, r25	; 0x02
        inAdcHall2 = adcRead(ADC_15_MAGNET_2);  //0v...5v
 154:	8f e0       	ldi	r24, 0x0F	; 15
 156:	d2 d0       	rcall	.+420    	; 0x2fc <adcRead>
 158:	08 2f       	mov	r16, r24
 15a:	19 2f       	mov	r17, r25
 15c:	29 81       	ldd	r18, Y+1	; 0x01

        //Eingabe------------------------------------------------------------------
        inHall1_mv = (uint32_t)inAdcHall1 * 5000 /1023;  //0mv...5000mv
 15e:	3a 81       	ldd	r19, Y+2	; 0x02
 160:	a8 e8       	ldi	r26, 0x88	; 136
 162:	b3 e1       	ldi	r27, 0x13	; 19
 164:	32 d4       	rcall	.+2148   	; 0x9ca <__umulhisi3>
 166:	2f ef       	ldi	r18, 0xFF	; 255
 168:	33 e0       	ldi	r19, 0x03	; 3
 16a:	40 e0       	ldi	r20, 0x00	; 0
 16c:	50 e0       	ldi	r21, 0x00	; 0
 16e:	0b d4       	rcall	.+2070   	; 0x986 <__udivmodsi4>
 170:	49 01       	movw	r8, r18
 172:	5a 01       	movw	r10, r20
 174:	20 2f       	mov	r18, r16
        inHall2_mv = (uint32_t)inAdcHall2 * 5000 /1023;  //0mv...5000mv
 176:	31 2f       	mov	r19, r17
 178:	a8 e8       	ldi	r26, 0x88	; 136
 17a:	b3 e1       	ldi	r27, 0x13	; 19
 17c:	26 d4       	rcall	.+2124   	; 0x9ca <__umulhisi3>
 17e:	2f ef       	ldi	r18, 0xFF	; 255
 180:	33 e0       	ldi	r19, 0x03	; 3
 182:	40 e0       	ldi	r20, 0x00	; 0
 184:	50 e0       	ldi	r21, 0x00	; 0
 186:	ff d3       	rcall	.+2046   	; 0x986 <__udivmodsi4>
 188:	69 01       	movw	r12, r18
 18a:	7a 01       	movw	r14, r20
 18c:	94 01       	movw	r18, r8
 18e:	24 5c       	subi	r18, 0xC4	; 196
        //Verarbeitung------------------------------------------------------------- // unsigned ohne Vorzeichen, signed mit Vorzeigen
        outgausshall1 = (inHall1_mv - 2500) *10/15;
 190:	39 40       	sbci	r19, 0x09	; 9
 192:	a9 01       	movw	r20, r18
 194:	44 0f       	add	r20, r20
 196:	55 1f       	adc	r21, r21
 198:	22 0f       	add	r18, r18
 19a:	33 1f       	adc	r19, r19
 19c:	22 0f       	add	r18, r18
 19e:	33 1f       	adc	r19, r19
 1a0:	22 0f       	add	r18, r18
 1a2:	33 1f       	adc	r19, r19
 1a4:	ca 01       	movw	r24, r20
 1a6:	82 0f       	add	r24, r18
 1a8:	93 1f       	adc	r25, r19
 1aa:	6f e0       	ldi	r22, 0x0F	; 15
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	d8 d3       	rcall	.+1968   	; 0x960 <__divmodhi4>
 1b0:	2b 01       	movw	r4, r22
 1b2:	96 01       	movw	r18, r12
 1b4:	24 5c       	subi	r18, 0xC4	; 196
        outgausshall2 = (inHall2_mv - 2500) *10/15;
 1b6:	39 40       	sbci	r19, 0x09	; 9
 1b8:	a9 01       	movw	r20, r18
 1ba:	44 0f       	add	r20, r20
 1bc:	55 1f       	adc	r21, r21
 1be:	22 0f       	add	r18, r18
 1c0:	33 1f       	adc	r19, r19
 1c2:	22 0f       	add	r18, r18
 1c4:	33 1f       	adc	r19, r19
 1c6:	22 0f       	add	r18, r18
 1c8:	33 1f       	adc	r19, r19
 1ca:	ca 01       	movw	r24, r20
 1cc:	82 0f       	add	r24, r18
 1ce:	93 1f       	adc	r25, r19
 1d0:	6f e0       	ldi	r22, 0x0F	; 15
 1d2:	70 e0       	ldi	r23, 0x00	; 0
 1d4:	c5 d3       	rcall	.+1930   	; 0x960 <__divmodhi4>
 1d6:	7c 83       	std	Y+4, r23	; 0x04
 1d8:	6b 83       	std	Y+3, r22	; 0x03
 1da:	2a 81       	ldd	r18, Y+2	; 0x02
 1dc:	2f 93       	push	r18
        uT1 = outgausshall1 * 100;
        uT2 = outgausshall2 * 100;
        //Ausgabe------------------------------------------------------------------   //Zeile von rechts nach links ,spalte von oben nach unten
        lcdWriteText(0,0,"ADC: %4d",inAdcHall1);  
 1de:	39 81       	ldd	r19, Y+1	; 0x01
 1e0:	3f 93       	push	r19
 1e2:	88 e0       	ldi	r24, 0x08	; 8
 1e4:	92 e0       	ldi	r25, 0x02	; 2
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	1f 92       	push	r1
 1ec:	1f 92       	push	r1
 1ee:	75 d1       	rcall	.+746    	; 0x4da <lcdWriteText>
 1f0:	1f 93       	push	r17
        lcdWriteText(0,12,"%4d",inAdcHall2);
 1f2:	0f 93       	push	r16
 1f4:	7f 92       	push	r7
 1f6:	6f 92       	push	r6
 1f8:	3f 92       	push	r3
 1fa:	1f 92       	push	r1
 1fc:	6e d1       	rcall	.+732    	; 0x4da <lcdWriteText>
 1fe:	9f 92       	push	r9
        lcdWriteText(1,0,"mv:  %4d",inHall1_mv);  
 200:	8f 92       	push	r8
 202:	81 e1       	ldi	r24, 0x11	; 17
 204:	92 e0       	ldi	r25, 0x02	; 2
 206:	9f 93       	push	r25
 208:	8f 93       	push	r24
 20a:	1f 92       	push	r1
 20c:	2f 92       	push	r2
 20e:	65 d1       	rcall	.+714    	; 0x4da <lcdWriteText>
 210:	df 92       	push	r13
        lcdWriteText(1,12,"%4d",inHall2_mv); 
 212:	cf 92       	push	r12
 214:	7f 92       	push	r7
 216:	6f 92       	push	r6
 218:	3f 92       	push	r3
 21a:	2f 92       	push	r2
 21c:	5e d1       	rcall	.+700    	; 0x4da <lcdWriteText>
 21e:	5f 92       	push	r5
        lcdWriteText(2,0,"Gauss:%4d",outgausshall1);
 220:	4f 92       	push	r4
 222:	8a e1       	ldi	r24, 0x1A	; 26
 224:	92 e0       	ldi	r25, 0x02	; 2
 226:	9f 93       	push	r25
 228:	8f 93       	push	r24
 22a:	1f 92       	push	r1
 22c:	32 e0       	ldi	r19, 0x02	; 2
 22e:	3f 93       	push	r19
 230:	54 d1       	rcall	.+680    	; 0x4da <lcdWriteText>
 232:	4c 81       	ldd	r20, Y+4	; 0x04
        lcdWriteText(2,12,"%4d",outgausshall2 );
 234:	4f 93       	push	r20
 236:	8b 81       	ldd	r24, Y+3	; 0x03
 238:	8f 93       	push	r24
 23a:	7f 92       	push	r7
 23c:	6f 92       	push	r6
 23e:	3f 92       	push	r3
 240:	92 e0       	ldi	r25, 0x02	; 2
 242:	9f 93       	push	r25
 244:	4a d1       	rcall	.+660    	; 0x4da <lcdWriteText>
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	f8 94       	cli
        lcdWriteText(3,0,"uT: %6d",uT1 );
 24a:	de bf       	out	0x3e, r29	; 62
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	cd bf       	out	0x3d, r28	; 61
 250:	34 e6       	ldi	r19, 0x64	; 100
 252:	34 9d       	mul	r19, r4
 254:	c0 01       	movw	r24, r0
 256:	35 9d       	mul	r19, r5
 258:	90 0d       	add	r25, r0
 25a:	11 24       	eor	r1, r1
 25c:	9f 93       	push	r25
 25e:	8f 93       	push	r24
 260:	84 e2       	ldi	r24, 0x24	; 36
 262:	92 e0       	ldi	r25, 0x02	; 2
 264:	9f 93       	push	r25
 266:	8f 93       	push	r24
 268:	1f 92       	push	r1
 26a:	33 e0       	ldi	r19, 0x03	; 3
 26c:	3f 93       	push	r19
 26e:	35 d1       	rcall	.+618    	; 0x4da <lcdWriteText>
 270:	44 e6       	ldi	r20, 0x64	; 100
 272:	2b 81       	ldd	r18, Y+3	; 0x03
        lcdWriteText(3,12,"%6d",uT2 );
 274:	3c 81       	ldd	r19, Y+4	; 0x04
 276:	42 9f       	mul	r20, r18
 278:	c0 01       	movw	r24, r0
 27a:	43 9f       	mul	r20, r19
 27c:	90 0d       	add	r25, r0
 27e:	11 24       	eor	r1, r1
 280:	9f 93       	push	r25
 282:	8f 93       	push	r24
 284:	88 e2       	ldi	r24, 0x28	; 40
 286:	92 e0       	ldi	r25, 0x02	; 2
 288:	9f 93       	push	r25
 28a:	8f 93       	push	r24
 28c:	3f 92       	push	r3
 28e:	33 e0       	ldi	r19, 0x03	; 3
 290:	3f 93       	push	r19
 292:	23 d1       	rcall	.+582    	; 0x4da <lcdWriteText>
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	f8 94       	cli
 298:	de bf       	out	0x3e, r29	; 62
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	cd bf       	out	0x3d, r28	; 61
 29e:	56 cf       	rjmp	.-340    	; 0x14c <main+0x28>

000002a0 <ledWriteAll>:
 2a0:	82 b9       	out	0x02, r24	; 2
 2a2:	95 b9       	out	0x05, r25	; 5
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position f√ºr das n√§chste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das n√§chste Zeichen richten
    }
}
 2a4:	08 95       	ret

000002a6 <startSystemTimeMs>:
 2a6:	83 e0       	ldi	r24, 0x03	; 3
 2a8:	84 bd       	out	0x24, r24	; 36
 2aa:	8b e0       	ldi	r24, 0x0B	; 11
 2ac:	85 bd       	out	0x25, r24	; 37
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 2b4:	89 ef       	ldi	r24, 0xF9	; 249
 2b6:	87 bd       	out	0x27, r24	; 39
 2b8:	08 95       	ret

000002ba <initAdc>:
 2ba:	11 ba       	out	0x11, r1	; 17
 2bc:	10 ba       	out	0x10, r1	; 16
 2be:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 2c2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 2c6:	80 e4       	ldi	r24, 0x40	; 64
 2c8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 2cc:	8f e0       	ldi	r24, 0x0F	; 15
 2ce:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 2d8:	ea e7       	ldi	r30, 0x7A	; 122
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	87 ea       	ldi	r24, 0xA7	; 167
 2de:	80 83       	st	Z, r24
 2e0:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 2e4:	80 81       	ld	r24, Z
 2e6:	80 64       	ori	r24, 0x40	; 64
 2e8:	80 83       	st	Z, r24
 2ea:	80 81       	ld	r24, Z
 2ec:	84 ff       	sbrs	r24, 4
 2ee:	fd cf       	rjmp	.-6      	; 0x2ea <initAdc+0x30>
 2f0:	ea e7       	ldi	r30, 0x7A	; 122
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	8f 7e       	andi	r24, 0xEF	; 239
 2f8:	80 83       	st	Z, r24
 2fa:	08 95       	ret

000002fc <adcRead>:
 2fc:	90 e4       	ldi	r25, 0x40	; 64
 2fe:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 302:	88 30       	cpi	r24, 0x08	; 8
 304:	60 f0       	brcs	.+24     	; 0x31e <adcRead+0x22>
 306:	ec e7       	ldi	r30, 0x7C	; 124
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	90 81       	ld	r25, Z
 30c:	88 50       	subi	r24, 0x08	; 8
 30e:	89 2b       	or	r24, r25
 310:	80 83       	st	Z, r24
 312:	eb e7       	ldi	r30, 0x7B	; 123
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	80 81       	ld	r24, Z
 318:	88 61       	ori	r24, 0x18	; 24
 31a:	80 83       	st	Z, r24
 31c:	0a c0       	rjmp	.+20     	; 0x332 <adcRead+0x36>
 31e:	ec e7       	ldi	r30, 0x7C	; 124
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	90 81       	ld	r25, Z
 324:	89 2b       	or	r24, r25
 326:	80 83       	st	Z, r24
 328:	eb e7       	ldi	r30, 0x7B	; 123
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	87 7e       	andi	r24, 0xE7	; 231
 330:	80 83       	st	Z, r24
 332:	ea e7       	ldi	r30, 0x7A	; 122
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	80 81       	ld	r24, Z
 338:	80 64       	ori	r24, 0x40	; 64
 33a:	80 83       	st	Z, r24
 33c:	80 81       	ld	r24, Z
 33e:	84 ff       	sbrs	r24, 4
 340:	fd cf       	rjmp	.-6      	; 0x33c <adcRead+0x40>
 342:	8f ea       	ldi	r24, 0xAF	; 175
 344:	94 e0       	ldi	r25, 0x04	; 4
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <adcRead+0x4a>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <adcRead+0x50>
 34c:	00 00       	nop
 34e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
 352:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
 356:	ea e7       	ldi	r30, 0x7A	; 122
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	90 81       	ld	r25, Z
 35c:	9f 7e       	andi	r25, 0xEF	; 239
 35e:	90 83       	st	Z, r25
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	92 2b       	or	r25, r18
 364:	08 95       	ret

00000366 <rgbWrite>:
 366:	2f ef       	ldi	r18, 0xFF	; 255
 368:	33 e0       	ldi	r19, 0x03	; 3
 36a:	f9 01       	movw	r30, r18
 36c:	e8 1b       	sub	r30, r24
 36e:	f9 0b       	sbc	r31, r25
 370:	c9 01       	movw	r24, r18
 372:	86 1b       	sub	r24, r22
 374:	97 0b       	sbc	r25, r23
 376:	24 1b       	sub	r18, r20
 378:	35 0b       	sbc	r19, r21
 37a:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 37e:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 382:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 386:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 38a:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 38e:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 392:	08 95       	ret

00000394 <initRgb>:
 394:	8e ef       	ldi	r24, 0xFE	; 254
 396:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 39a:	8b e1       	ldi	r24, 0x1B	; 27
 39c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 3a0:	83 e0       	ldi	r24, 0x03	; 3
 3a2:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 3a6:	8f ef       	ldi	r24, 0xFF	; 255
 3a8:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 3ac:	40 e0       	ldi	r20, 0x00	; 0
 3ae:	50 e0       	ldi	r21, 0x00	; 0
 3b0:	60 e0       	ldi	r22, 0x00	; 0
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	d6 cf       	rjmp	.-84     	; 0x366 <rgbWrite>
 3ba:	08 95       	ret

000003bc <lcdSid>:
 3bc:	88 23       	and	r24, r24
 3be:	11 f0       	breq	.+4      	; 0x3c4 <lcdSid+0x8>
 3c0:	a0 9a       	sbi	0x14, 0	; 20
 3c2:	08 95       	ret
 3c4:	a0 98       	cbi	0x14, 0	; 20
 3c6:	08 95       	ret

000003c8 <lcdSclk>:
 3c8:	88 23       	and	r24, r24
 3ca:	11 f0       	breq	.+4      	; 0x3d0 <lcdSclk+0x8>
 3cc:	a1 9a       	sbi	0x14, 1	; 20
 3ce:	08 95       	ret
 3d0:	a1 98       	cbi	0x14, 1	; 20
 3d2:	08 95       	ret

000003d4 <lcdLight>:
 3d4:	81 11       	cpse	r24, r1
 3d6:	04 c0       	rjmp	.+8      	; 0x3e0 <lcdLight+0xc>
 3d8:	84 b5       	in	r24, 0x24	; 36
 3da:	8f 7d       	andi	r24, 0xDF	; 223
 3dc:	84 bd       	out	0x24, r24	; 36
 3de:	08 95       	ret
 3e0:	94 b5       	in	r25, 0x24	; 36
 3e2:	90 62       	ori	r25, 0x20	; 32
 3e4:	94 bd       	out	0x24, r25	; 36
 3e6:	88 bd       	out	0x28, r24	; 40
 3e8:	08 95       	ret

000003ea <writeLcdF>:
 3ea:	ef 92       	push	r14
 3ec:	ff 92       	push	r15
 3ee:	0f 93       	push	r16
 3f0:	1f 93       	push	r17
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	7c 01       	movw	r14, r24
 3f8:	eb 01       	movw	r28, r22
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	df df       	rcall	.-66     	; 0x3bc <lcdSid>
 3fe:	05 e0       	ldi	r16, 0x05	; 5
 400:	10 e0       	ldi	r17, 0x00	; 0
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	e1 df       	rcall	.-62     	; 0x3c8 <lcdSclk>
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	df df       	rcall	.-66     	; 0x3c8 <lcdSclk>
 40a:	01 50       	subi	r16, 0x01	; 1
 40c:	11 09       	sbc	r17, r1
 40e:	c9 f7       	brne	.-14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	d4 df       	rcall	.-88     	; 0x3bc <lcdSid>
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	d8 df       	rcall	.-80     	; 0x3c8 <lcdSclk>
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	d6 df       	rcall	.-84     	; 0x3c8 <lcdSclk>
 41c:	83 e4       	ldi	r24, 0x43	; 67
 41e:	e8 16       	cp	r14, r24
 420:	f1 04       	cpc	r15, r1
 422:	19 f4       	brne	.+6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	ca df       	rcall	.-108    	; 0x3bc <lcdSid>
 428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	c7 df       	rcall	.-114    	; 0x3bc <lcdSid>
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	cb df       	rcall	.-106    	; 0x3c8 <lcdSclk>
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	c9 df       	rcall	.-110    	; 0x3c8 <lcdSclk>
 436:	80 e0       	ldi	r24, 0x00	; 0
 438:	c1 df       	rcall	.-126    	; 0x3bc <lcdSid>
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	c5 df       	rcall	.-118    	; 0x3c8 <lcdSclk>
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	c3 df       	rcall	.-122    	; 0x3c8 <lcdSclk>
 442:	04 e0       	ldi	r16, 0x04	; 4
 444:	10 e0       	ldi	r17, 0x00	; 0
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	bf df       	rcall	.-130    	; 0x3c8 <lcdSclk>
 44a:	c0 ff       	sbrs	r28, 0
 44c:	03 c0       	rjmp	.+6      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	b5 df       	rcall	.-150    	; 0x3bc <lcdSid>
 452:	02 c0       	rjmp	.+4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	b2 df       	rcall	.-156    	; 0x3bc <lcdSid>
 458:	d6 95       	lsr	r29
 45a:	c7 95       	ror	r28
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	b4 df       	rcall	.-152    	; 0x3c8 <lcdSclk>
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	b2 df       	rcall	.-156    	; 0x3c8 <lcdSclk>
 464:	01 50       	subi	r16, 0x01	; 1
 466:	11 09       	sbc	r17, r1
 468:	71 f7       	brne	.-36     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	a7 df       	rcall	.-178    	; 0x3bc <lcdSid>
 46e:	04 e0       	ldi	r16, 0x04	; 4
 470:	10 e0       	ldi	r17, 0x00	; 0
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	a9 df       	rcall	.-174    	; 0x3c8 <lcdSclk>
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	a7 df       	rcall	.-178    	; 0x3c8 <lcdSclk>
 47a:	01 50       	subi	r16, 0x01	; 1
 47c:	11 09       	sbc	r17, r1
 47e:	c9 f7       	brne	.-14     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 480:	04 e0       	ldi	r16, 0x04	; 4
 482:	10 e0       	ldi	r17, 0x00	; 0
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	a0 df       	rcall	.-192    	; 0x3c8 <lcdSclk>
 488:	c0 ff       	sbrs	r28, 0
 48a:	03 c0       	rjmp	.+6      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	96 df       	rcall	.-212    	; 0x3bc <lcdSid>
 490:	02 c0       	rjmp	.+4      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 492:	80 e0       	ldi	r24, 0x00	; 0
 494:	93 df       	rcall	.-218    	; 0x3bc <lcdSid>
 496:	d6 95       	lsr	r29
 498:	c7 95       	ror	r28
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	95 df       	rcall	.-214    	; 0x3c8 <lcdSclk>
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	93 df       	rcall	.-218    	; 0x3c8 <lcdSclk>
 4a2:	01 50       	subi	r16, 0x01	; 1
 4a4:	11 09       	sbc	r17, r1
 4a6:	71 f7       	brne	.-36     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	88 df       	rcall	.-240    	; 0x3bc <lcdSid>
 4ac:	c4 e0       	ldi	r28, 0x04	; 4
 4ae:	d0 e0       	ldi	r29, 0x00	; 0
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	8a df       	rcall	.-236    	; 0x3c8 <lcdSclk>
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	88 df       	rcall	.-240    	; 0x3c8 <lcdSclk>
 4b8:	21 97       	sbiw	r28, 0x01	; 1
 4ba:	d1 f7       	brne	.-12     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	7e df       	rcall	.-260    	; 0x3bc <lcdSid>
 4c0:	87 ec       	ldi	r24, 0xC7	; 199
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	01 97       	sbiw	r24, 0x01	; 1
 4c6:	f1 f7       	brne	.-4      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4c8:	00 c0       	rjmp	.+0      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4ca:	00 00       	nop
 4cc:	df 91       	pop	r29
 4ce:	cf 91       	pop	r28
 4d0:	1f 91       	pop	r17
 4d2:	0f 91       	pop	r16
 4d4:	ff 90       	pop	r15
 4d6:	ef 90       	pop	r14
 4d8:	08 95       	ret

000004da <lcdWriteText>:
 4da:	1f 93       	push	r17
 4dc:	cf 93       	push	r28
 4de:	df 93       	push	r29
 4e0:	cd b7       	in	r28, 0x3d	; 61
 4e2:	de b7       	in	r29, 0x3e	; 62
 4e4:	65 97       	sbiw	r28, 0x15	; 21
 4e6:	0f b6       	in	r0, 0x3f	; 63
 4e8:	f8 94       	cli
 4ea:	de bf       	out	0x3e, r29	; 62
 4ec:	0f be       	out	0x3f, r0	; 63
 4ee:	cd bf       	out	0x3d, r28	; 61
 4f0:	9e 01       	movw	r18, r28
 4f2:	20 5e       	subi	r18, 0xE0	; 224
 4f4:	3f 4f       	sbci	r19, 0xFF	; 255
 4f6:	4e 8d       	ldd	r20, Y+30	; 0x1e
 4f8:	5f 8d       	ldd	r21, Y+31	; 0x1f
 4fa:	65 e1       	ldi	r22, 0x15	; 21
 4fc:	70 e0       	ldi	r23, 0x00	; 0
 4fe:	ce 01       	movw	r24, r28
 500:	01 96       	adiw	r24, 0x01	; 1
 502:	92 d2       	rcall	.+1316   	; 0xa28 <vsnprintf>
 504:	6d 8d       	ldd	r22, Y+29	; 0x1d
 506:	8c 8d       	ldd	r24, Y+28	; 0x1c
 508:	90 e2       	ldi	r25, 0x20	; 32
 50a:	89 9f       	mul	r24, r25
 50c:	60 0d       	add	r22, r0
 50e:	11 24       	eor	r1, r1
 510:	60 68       	ori	r22, 0x80	; 128
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	83 e4       	ldi	r24, 0x43	; 67
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	68 df       	rcall	.-304    	; 0x3ea <writeLcdF>
 51a:	69 81       	ldd	r22, Y+1	; 0x01
 51c:	66 23       	and	r22, r22
 51e:	79 f0       	breq	.+30     	; 0x53e <lcdWriteText+0x64>
 520:	10 e0       	ldi	r17, 0x00	; 0
 522:	1f 5f       	subi	r17, 0xFF	; 255
 524:	70 e0       	ldi	r23, 0x00	; 0
 526:	84 e4       	ldi	r24, 0x44	; 68
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	5f df       	rcall	.-322    	; 0x3ea <writeLcdF>
 52c:	e1 e0       	ldi	r30, 0x01	; 1
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	ec 0f       	add	r30, r28
 532:	fd 1f       	adc	r31, r29
 534:	e1 0f       	add	r30, r17
 536:	f1 1d       	adc	r31, r1
 538:	60 81       	ld	r22, Z
 53a:	61 11       	cpse	r22, r1
 53c:	f2 cf       	rjmp	.-28     	; 0x522 <lcdWriteText+0x48>
 53e:	65 96       	adiw	r28, 0x15	; 21
 540:	0f b6       	in	r0, 0x3f	; 63
 542:	f8 94       	cli
 544:	de bf       	out	0x3e, r29	; 62
 546:	0f be       	out	0x3f, r0	; 63
 548:	cd bf       	out	0x3d, r28	; 61
 54a:	df 91       	pop	r29
 54c:	cf 91       	pop	r28
 54e:	1f 91       	pop	r17
 550:	08 95       	ret

00000552 <lcdClear>:
 552:	61 e0       	ldi	r22, 0x01	; 1
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	83 e4       	ldi	r24, 0x43	; 67
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	47 df       	rcall	.-370    	; 0x3ea <writeLcdF>
 55c:	8f e3       	ldi	r24, 0x3F	; 63
 55e:	9f e1       	ldi	r25, 0x1F	; 31
 560:	01 97       	sbiw	r24, 0x01	; 1
 562:	f1 f7       	brne	.-4      	; 0x560 <lcdClear+0xe>
 564:	00 c0       	rjmp	.+0      	; 0x566 <lcdClear+0x14>
 566:	00 00       	nop
 568:	84 e5       	ldi	r24, 0x54	; 84
 56a:	92 e0       	ldi	r25, 0x02	; 2
 56c:	9f 93       	push	r25
 56e:	8f 93       	push	r24
 570:	1f 92       	push	r1
 572:	1f 92       	push	r1
 574:	b2 df       	rcall	.-156    	; 0x4da <lcdWriteText>
 576:	0f 90       	pop	r0
 578:	0f 90       	pop	r0
 57a:	0f 90       	pop	r0
 57c:	0f 90       	pop	r0
 57e:	08 95       	ret

00000580 <initLcd>:
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	22 df       	rcall	.-444    	; 0x3c8 <lcdSclk>
 584:	80 e0       	ldi	r24, 0x00	; 0
 586:	1a df       	rcall	.-460    	; 0x3bc <lcdSid>
 588:	64 e3       	ldi	r22, 0x34	; 52
 58a:	70 e0       	ldi	r23, 0x00	; 0
 58c:	83 e4       	ldi	r24, 0x43	; 67
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	2c df       	rcall	.-424    	; 0x3ea <writeLcdF>
 592:	69 e0       	ldi	r22, 0x09	; 9
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	83 e4       	ldi	r24, 0x43	; 67
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	27 df       	rcall	.-434    	; 0x3ea <writeLcdF>
 59c:	60 e3       	ldi	r22, 0x30	; 48
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	83 e4       	ldi	r24, 0x43	; 67
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	22 df       	rcall	.-444    	; 0x3ea <writeLcdF>
 5a6:	6c e0       	ldi	r22, 0x0C	; 12
 5a8:	70 e0       	ldi	r23, 0x00	; 0
 5aa:	83 e4       	ldi	r24, 0x43	; 67
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	1d df       	rcall	.-454    	; 0x3ea <writeLcdF>
 5b0:	d0 df       	rcall	.-96     	; 0x552 <lcdClear>
 5b2:	67 e0       	ldi	r22, 0x07	; 7
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	83 e4       	ldi	r24, 0x43	; 67
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	17 df       	rcall	.-466    	; 0x3ea <writeLcdF>
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	0a cf       	rjmp	.-492    	; 0x3d4 <lcdLight>
 5c0:	08 95       	ret

000005c2 <initBoard>:
 5c2:	4f 92       	push	r4
 5c4:	5f 92       	push	r5
 5c6:	6f 92       	push	r6
 5c8:	7f 92       	push	r7
 5ca:	8f 92       	push	r8
 5cc:	9f 92       	push	r9
 5ce:	af 92       	push	r10
 5d0:	bf 92       	push	r11
 5d2:	cf 92       	push	r12
 5d4:	df 92       	push	r13
 5d6:	ef 92       	push	r14
 5d8:	ff 92       	push	r15
 5da:	0f 93       	push	r16
 5dc:	1f 93       	push	r17
 5de:	cf 93       	push	r28
 5e0:	df 93       	push	r29
 5e2:	c8 2f       	mov	r28, r24
 5e4:	85 b7       	in	r24, 0x35	; 53
 5e6:	85 bf       	out	0x35, r24	; 53
 5e8:	12 b8       	out	0x02, r1	; 2
 5ea:	8f ef       	ldi	r24, 0xFF	; 255
 5ec:	81 b9       	out	0x01, r24	; 1
 5ee:	15 b8       	out	0x05, r1	; 5
 5f0:	84 b9       	out	0x04, r24	; 4
 5f2:	88 b9       	out	0x08, r24	; 8
 5f4:	17 b8       	out	0x07, r1	; 7
 5f6:	8b b9       	out	0x0b, r24	; 11
 5f8:	1a b8       	out	0x0a, r1	; 10
 5fa:	8e b9       	out	0x0e, r24	; 14
 5fc:	1d b8       	out	0x0d, r1	; 13
 5fe:	72 98       	cbi	0x0e, 2	; 14
 600:	11 ba       	out	0x11, r1	; 17
 602:	10 ba       	out	0x10, r1	; 16
 604:	94 e0       	ldi	r25, 0x04	; 4
 606:	94 bb       	out	0x14, r25	; 20
 608:	93 b3       	in	r25, 0x13	; 19
 60a:	93 60       	ori	r25, 0x03	; 3
 60c:	93 bb       	out	0x13, r25	; 19
 60e:	9d 9a       	sbi	0x13, 5	; 19
 610:	97 ec       	ldi	r25, 0xC7	; 199
 612:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 616:	98 e3       	ldi	r25, 0x38	; 56
 618:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 61c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 620:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 624:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 628:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 62c:	8c e3       	ldi	r24, 0x3C	; 60
 62e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 632:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 636:	78 94       	sei
 638:	36 de       	rcall	.-916    	; 0x2a6 <startSystemTimeMs>
 63a:	a2 df       	rcall	.-188    	; 0x580 <initLcd>
 63c:	3e de       	rcall	.-900    	; 0x2ba <initAdc>
 63e:	aa de       	rcall	.-684    	; 0x394 <initRgb>
 640:	cc 23       	and	r28, r28
 642:	09 f4       	brne	.+2      	; 0x646 <initBoard+0x84>
 644:	b8 c0       	rjmp	.+368    	; 0x7b6 <initBoard+0x1f4>
 646:	8f ef       	ldi	r24, 0xFF	; 255
 648:	c5 de       	rcall	.-630    	; 0x3d4 <lcdLight>
 64a:	40 e0       	ldi	r20, 0x00	; 0
 64c:	50 e0       	ldi	r21, 0x00	; 0
 64e:	6f ef       	ldi	r22, 0xFF	; 255
 650:	73 e0       	ldi	r23, 0x03	; 3
 652:	80 e0       	ldi	r24, 0x00	; 0
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	87 de       	rcall	.-754    	; 0x366 <rgbWrite>
 658:	81 e4       	ldi	r24, 0x41	; 65
 65a:	92 e0       	ldi	r25, 0x02	; 2
 65c:	9f 93       	push	r25
 65e:	8f 93       	push	r24
 660:	1f 92       	push	r1
 662:	1f 92       	push	r1
 664:	3a df       	rcall	.-396    	; 0x4da <lcdWriteText>
 666:	86 e5       	ldi	r24, 0x56	; 86
 668:	92 e0       	ldi	r25, 0x02	; 2
 66a:	9f 93       	push	r25
 66c:	8f 93       	push	r24
 66e:	1f 92       	push	r1
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	8f 93       	push	r24
 674:	32 df       	rcall	.-412    	; 0x4da <lcdWriteText>
 676:	8c e2       	ldi	r24, 0x2C	; 44
 678:	92 e0       	ldi	r25, 0x02	; 2
 67a:	9f 93       	push	r25
 67c:	8f 93       	push	r24
 67e:	1f 92       	push	r1
 680:	82 e0       	ldi	r24, 0x02	; 2
 682:	8f 93       	push	r24
 684:	2a df       	rcall	.-428    	; 0x4da <lcdWriteText>
 686:	8b e6       	ldi	r24, 0x6B	; 107
 688:	92 e0       	ldi	r25, 0x02	; 2
 68a:	9f 93       	push	r25
 68c:	8f 93       	push	r24
 68e:	1f 92       	push	r1
 690:	83 e0       	ldi	r24, 0x03	; 3
 692:	8f 93       	push	r24
 694:	22 df       	rcall	.-444    	; 0x4da <lcdWriteText>
 696:	8d b7       	in	r24, 0x3d	; 61
 698:	9e b7       	in	r25, 0x3e	; 62
 69a:	40 96       	adiw	r24, 0x10	; 16
 69c:	0f b6       	in	r0, 0x3f	; 63
 69e:	f8 94       	cli
 6a0:	9e bf       	out	0x3e, r25	; 62
 6a2:	0f be       	out	0x3f, r0	; 63
 6a4:	8d bf       	out	0x3d, r24	; 61
 6a6:	88 24       	eor	r8, r8
 6a8:	83 94       	inc	r8
 6aa:	c0 e0       	ldi	r28, 0x00	; 0
 6ac:	71 2c       	mov	r7, r1
 6ae:	99 24       	eor	r9, r9
 6b0:	93 94       	inc	r9
 6b2:	d0 e0       	ldi	r29, 0x00	; 0
 6b4:	cc 24       	eor	r12, r12
 6b6:	c3 94       	inc	r12
 6b8:	d1 2c       	mov	r13, r1
 6ba:	e1 2c       	mov	r14, r1
 6bc:	68 94       	set
 6be:	ff 24       	eor	r15, r15
 6c0:	f7 f8       	bld	r15, 7
 6c2:	66 24       	eor	r6, r6
 6c4:	63 94       	inc	r6
 6c6:	51 2c       	mov	r5, r1
 6c8:	09 e0       	ldi	r16, 0x09	; 9
 6ca:	11 e0       	ldi	r17, 0x01	; 1
 6cc:	0f 2e       	mov	r0, r31
 6ce:	f0 e8       	ldi	r31, 0x80	; 128
 6d0:	af 2e       	mov	r10, r31
 6d2:	f2 e0       	ldi	r31, 0x02	; 2
 6d4:	bf 2e       	mov	r11, r31
 6d6:	f0 2d       	mov	r31, r0
 6d8:	0f 2e       	mov	r0, r31
 6da:	f3 e0       	ldi	r31, 0x03	; 3
 6dc:	4f 2e       	mov	r4, r31
 6de:	f0 2d       	mov	r31, r0
 6e0:	99 20       	and	r9, r9
 6e2:	49 f0       	breq	.+18     	; 0x6f6 <initBoard+0x134>
 6e4:	c7 01       	movw	r24, r14
 6e6:	0d 2e       	mov	r0, r29
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <initBoard+0x12c>
 6ea:	96 95       	lsr	r25
 6ec:	87 95       	ror	r24
 6ee:	0a 94       	dec	r0
 6f0:	e2 f7       	brpl	.-8      	; 0x6ea <initBoard+0x128>
 6f2:	d6 dd       	rcall	.-1108   	; 0x2a0 <ledWriteAll>
 6f4:	08 c0       	rjmp	.+16     	; 0x706 <initBoard+0x144>
 6f6:	c6 01       	movw	r24, r12
 6f8:	0d 2e       	mov	r0, r29
 6fa:	02 c0       	rjmp	.+4      	; 0x700 <initBoard+0x13e>
 6fc:	88 0f       	add	r24, r24
 6fe:	99 1f       	adc	r25, r25
 700:	0a 94       	dec	r0
 702:	e2 f7       	brpl	.-8      	; 0x6fc <initBoard+0x13a>
 704:	cd dd       	rcall	.-1126   	; 0x2a0 <ledWriteAll>
 706:	df 5f       	subi	r29, 0xFF	; 255
 708:	d1 31       	cpi	r29, 0x11	; 17
 70a:	28 f0       	brcs	.+10     	; 0x716 <initBoard+0x154>
 70c:	86 2d       	mov	r24, r6
 70e:	91 10       	cpse	r9, r1
 710:	85 2d       	mov	r24, r5
 712:	98 2e       	mov	r9, r24
 714:	d0 e0       	ldi	r29, 0x00	; 0
 716:	88 20       	and	r8, r8
 718:	11 f0       	breq	.+4      	; 0x71e <initBoard+0x15c>
 71a:	ce 5f       	subi	r28, 0xFE	; 254
 71c:	01 c0       	rjmp	.+2      	; 0x720 <initBoard+0x15e>
 71e:	c2 50       	subi	r28, 0x02	; 2
 720:	8c 2f       	mov	r24, r28
 722:	58 de       	rcall	.-848    	; 0x3d4 <lcdLight>
 724:	ce 3f       	cpi	r28, 0xFE	; 254
 726:	21 f0       	breq	.+8      	; 0x730 <initBoard+0x16e>
 728:	c8 37       	cpi	r28, 0x78	; 120
 72a:	19 f4       	brne	.+6      	; 0x732 <initBoard+0x170>
 72c:	86 2c       	mov	r8, r6
 72e:	01 c0       	rjmp	.+2      	; 0x732 <initBoard+0x170>
 730:	85 2c       	mov	r8, r5
 732:	71 10       	cpse	r7, r1
 734:	3b c0       	rjmp	.+118    	; 0x7ac <initBoard+0x1ea>
 736:	f8 01       	movw	r30, r16
 738:	80 81       	ld	r24, Z
 73a:	83 7c       	andi	r24, 0xC3	; 195
 73c:	91 f0       	breq	.+36     	; 0x762 <initBoard+0x1a0>
 73e:	40 e0       	ldi	r20, 0x00	; 0
 740:	50 e0       	ldi	r21, 0x00	; 0
 742:	66 e2       	ldi	r22, 0x26	; 38
 744:	72 e0       	ldi	r23, 0x02	; 2
 746:	8f ef       	ldi	r24, 0xFF	; 255
 748:	93 e0       	ldi	r25, 0x03	; 3
 74a:	0d de       	rcall	.-998    	; 0x366 <rgbWrite>
 74c:	bf 92       	push	r11
 74e:	af 92       	push	r10
 750:	1f 92       	push	r1
 752:	4f 92       	push	r4
 754:	c2 de       	rcall	.-636    	; 0x4da <lcdWriteText>
 756:	0f 90       	pop	r0
 758:	0f 90       	pop	r0
 75a:	0f 90       	pop	r0
 75c:	0f 90       	pop	r0
 75e:	76 2c       	mov	r7, r6
 760:	25 c0       	rjmp	.+74     	; 0x7ac <initBoard+0x1ea>
 762:	8f ef       	ldi	r24, 0xFF	; 255
 764:	9c e7       	ldi	r25, 0x7C	; 124
 766:	01 97       	sbiw	r24, 0x01	; 1
 768:	f1 f7       	brne	.-4      	; 0x766 <initBoard+0x1a4>
 76a:	00 c0       	rjmp	.+0      	; 0x76c <initBoard+0x1aa>
 76c:	00 00       	nop
 76e:	b8 cf       	rjmp	.-144    	; 0x6e0 <initBoard+0x11e>
 770:	f0 de       	rcall	.-544    	; 0x552 <lcdClear>
 772:	80 e0       	ldi	r24, 0x00	; 0
 774:	2f de       	rcall	.-930    	; 0x3d4 <lcdLight>
 776:	80 e0       	ldi	r24, 0x00	; 0
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	92 dd       	rcall	.-1244   	; 0x2a0 <ledWriteAll>
 77c:	40 e0       	ldi	r20, 0x00	; 0
 77e:	50 e0       	ldi	r21, 0x00	; 0
 780:	60 e0       	ldi	r22, 0x00	; 0
 782:	70 e0       	ldi	r23, 0x00	; 0
 784:	80 e0       	ldi	r24, 0x00	; 0
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	ee dd       	rcall	.-1060   	; 0x366 <rgbWrite>
 78a:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <systemTimeMs>
 78e:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <systemTimeMs+0x1>
 792:	10 92 9f 02 	sts	0x029F, r1	; 0x80029f <systemTimeMs+0x2>
 796:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <systemTimeMs+0x3>
 79a:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <systemTimeMs+0x4>
 79e:	10 92 a2 02 	sts	0x02A2, r1	; 0x8002a2 <systemTimeMs+0x5>
 7a2:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <systemTimeMs+0x6>
 7a6:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <systemTimeMs+0x7>
 7aa:	05 c0       	rjmp	.+10     	; 0x7b6 <initBoard+0x1f4>
 7ac:	f8 01       	movw	r30, r16
 7ae:	80 81       	ld	r24, Z
 7b0:	83 7c       	andi	r24, 0xC3	; 195
 7b2:	b9 f6       	brne	.-82     	; 0x762 <initBoard+0x1a0>
 7b4:	dd cf       	rjmp	.-70     	; 0x770 <initBoard+0x1ae>
 7b6:	df 91       	pop	r29
 7b8:	cf 91       	pop	r28
 7ba:	1f 91       	pop	r17
 7bc:	0f 91       	pop	r16
 7be:	ff 90       	pop	r15
 7c0:	ef 90       	pop	r14
 7c2:	df 90       	pop	r13
 7c4:	cf 90       	pop	r12
 7c6:	bf 90       	pop	r11
 7c8:	af 90       	pop	r10
 7ca:	9f 90       	pop	r9
 7cc:	8f 90       	pop	r8
 7ce:	7f 90       	pop	r7
 7d0:	6f 90       	pop	r6
 7d2:	5f 90       	pop	r5
 7d4:	4f 90       	pop	r4
 7d6:	08 95       	ret

000007d8 <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 7d8:	cf 93       	push	r28
 7da:	df 93       	push	r29
 7dc:	cd b7       	in	r28, 0x3d	; 61
 7de:	de b7       	in	r29, 0x3e	; 62
 7e0:	28 97       	sbiw	r28, 0x08	; 8
 7e2:	0f b6       	in	r0, 0x3f	; 63
 7e4:	f8 94       	cli
 7e6:	de bf       	out	0x3e, r29	; 62
 7e8:	0f be       	out	0x3f, r0	; 63
 7ea:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 7ec:	88 e0       	ldi	r24, 0x08	; 8
 7ee:	e0 e0       	ldi	r30, 0x00	; 0
 7f0:	f2 e0       	ldi	r31, 0x02	; 2
 7f2:	de 01       	movw	r26, r28
 7f4:	11 96       	adiw	r26, 0x01	; 1
 7f6:	01 90       	ld	r0, Z+
 7f8:	0d 92       	st	X+, r0
 7fa:	8a 95       	dec	r24
 7fc:	e1 f7       	brne	.-8      	; 0x7f6 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 7fe:	e5 e0       	ldi	r30, 0x05	; 5
 800:	f1 e0       	ldi	r31, 0x01	; 1
 802:	80 81       	ld	r24, Z
 804:	8f 7b       	andi	r24, 0xBF	; 191
 806:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 808:	e0 91 9a 02 	lds	r30, 0x029A	; 0x80029a <Zeilen_Nr.2731>
 80c:	f0 91 9b 02 	lds	r31, 0x029B	; 0x80029b <Zeilen_Nr.2731+0x1>
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	8c 0f       	add	r24, r28
 816:	9d 1f       	adc	r25, r29
 818:	e8 0f       	add	r30, r24
 81a:	f9 1f       	adc	r31, r25
 81c:	80 81       	ld	r24, Z
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <__data_end+0x1>
 824:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <__data_end>
 828:	a6 e1       	ldi	r26, 0x16	; 22
 82a:	b3 e0       	ldi	r27, 0x03	; 3
 82c:	26 ea       	ldi	r18, 0xA6	; 166
 82e:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 830:	e5 e0       	ldi	r30, 0x05	; 5
 832:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und √ºberp√ºfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 834:	5e 91       	ld	r21, -X
 836:	4e 91       	ld	r20, -X
 838:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <__data_end>
 83c:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <__data_end+0x1>
 840:	84 23       	and	r24, r20
 842:	95 23       	and	r25, r21
 844:	89 2b       	or	r24, r25
 846:	21 f0       	breq	.+8      	; 0x850 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 848:	80 81       	ld	r24, Z
 84a:	80 62       	ori	r24, 0x20	; 32
 84c:	80 83       	st	Z, r24
 84e:	03 c0       	rjmp	.+6      	; 0x856 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 850:	80 81       	ld	r24, Z
 852:	8f 7d       	andi	r24, 0xDF	; 223
 854:	80 83       	st	Z, r24
        }
        CLOCK_1;
 856:	80 81       	ld	r24, Z
 858:	80 61       	ori	r24, 0x10	; 16
 85a:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals √ºbernommen
 85c:	80 81       	ld	r24, Z
 85e:	8f 7e       	andi	r24, 0xEF	; 239
 860:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und √ºberp√ºfen, ob Bit gesetzt ist
 862:	a2 17       	cp	r26, r18
 864:	b3 07       	cpc	r27, r19
 866:	31 f7       	brne	.-52     	; 0x834 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals √ºbernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 868:	e5 e0       	ldi	r30, 0x05	; 5
 86a:	f1 e0       	ldi	r31, 0x01	; 1
 86c:	80 81       	ld	r24, Z
 86e:	87 7f       	andi	r24, 0xF7	; 247
 870:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 872:	80 81       	ld	r24, Z
 874:	88 7f       	andi	r24, 0xF8	; 248
 876:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gew√ºnschte Zeile einstellen
 878:	90 81       	ld	r25, Z
 87a:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <Zeilen_Nr.2731>
 87e:	89 2b       	or	r24, r25
 880:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 882:	80 81       	ld	r24, Z
 884:	80 64       	ori	r24, 0x40	; 64
 886:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 888:	80 81       	ld	r24, Z
 88a:	88 60       	ori	r24, 0x08	; 8
 88c:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 88e:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <Zeilen_Nr.2731>
 892:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <Zeilen_Nr.2731+0x1>
 896:	87 30       	cpi	r24, 0x07	; 7
 898:	91 05       	cpc	r25, r1
 89a:	30 f4       	brcc	.+12     	; 0x8a8 <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 89c:	01 96       	adiw	r24, 0x01	; 1
 89e:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <Zeilen_Nr.2731+0x1>
 8a2:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <Zeilen_Nr.2731>
 8a6:	07 c0       	rjmp	.+14     	; 0x8b6 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 8a8:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <Zeilen_Nr.2731+0x1>
 8ac:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <Zeilen_Nr.2731>
        writeTextFinished = 1;
 8b0:	81 e0       	ldi	r24, 0x01	; 1
 8b2:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <writeTextFinished>
    }
    
 8b6:	28 96       	adiw	r28, 0x08	; 8
 8b8:	0f b6       	in	r0, 0x3f	; 63
 8ba:	f8 94       	cli
 8bc:	de bf       	out	0x3e, r29	; 62
 8be:	0f be       	out	0x3f, r0	; 63
 8c0:	cd bf       	out	0x3d, r28	; 61
 8c2:	df 91       	pop	r29
 8c4:	cf 91       	pop	r28
 8c6:	08 95       	ret

000008c8 <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 8c8:	1f 92       	push	r1
 8ca:	0f 92       	push	r0
 8cc:	0f b6       	in	r0, 0x3f	; 63
 8ce:	0f 92       	push	r0
 8d0:	11 24       	eor	r1, r1
 8d2:	0b b6       	in	r0, 0x3b	; 59
 8d4:	0f 92       	push	r0
 8d6:	2f 93       	push	r18
 8d8:	3f 93       	push	r19
 8da:	4f 93       	push	r20
 8dc:	5f 93       	push	r21
 8de:	6f 93       	push	r22
 8e0:	7f 93       	push	r23
 8e2:	8f 93       	push	r24
 8e4:	9f 93       	push	r25
 8e6:	af 93       	push	r26
 8e8:	bf 93       	push	r27
 8ea:	ef 93       	push	r30
 8ec:	ff 93       	push	r31
    systemTimeMs += 1;
 8ee:	20 91 9d 02 	lds	r18, 0x029D	; 0x80029d <systemTimeMs>
 8f2:	30 91 9e 02 	lds	r19, 0x029E	; 0x80029e <systemTimeMs+0x1>
 8f6:	40 91 9f 02 	lds	r20, 0x029F	; 0x80029f <systemTimeMs+0x2>
 8fa:	50 91 a0 02 	lds	r21, 0x02A0	; 0x8002a0 <systemTimeMs+0x3>
 8fe:	60 91 a1 02 	lds	r22, 0x02A1	; 0x8002a1 <systemTimeMs+0x4>
 902:	70 91 a2 02 	lds	r23, 0x02A2	; 0x8002a2 <systemTimeMs+0x5>
 906:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <systemTimeMs+0x6>
 90a:	90 91 a4 02 	lds	r25, 0x02A4	; 0x8002a4 <systemTimeMs+0x7>
 90e:	a1 e0       	ldi	r26, 0x01	; 1
 910:	6b d0       	rcall	.+214    	; 0x9e8 <__adddi3_s8>
 912:	20 93 9d 02 	sts	0x029D, r18	; 0x80029d <systemTimeMs>
 916:	30 93 9e 02 	sts	0x029E, r19	; 0x80029e <systemTimeMs+0x1>
 91a:	40 93 9f 02 	sts	0x029F, r20	; 0x80029f <systemTimeMs+0x2>
 91e:	50 93 a0 02 	sts	0x02A0, r21	; 0x8002a0 <systemTimeMs+0x3>
 922:	60 93 a1 02 	sts	0x02A1, r22	; 0x8002a1 <systemTimeMs+0x4>
 926:	70 93 a2 02 	sts	0x02A2, r23	; 0x8002a2 <systemTimeMs+0x5>
 92a:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <systemTimeMs+0x6>
 92e:	90 93 a4 02 	sts	0x02A4, r25	; 0x8002a4 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 932:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <matrixRunning>
 936:	81 11       	cpse	r24, r1
 938:	4f df       	rcall	.-354    	; 0x7d8 <matrixWriteNextLine>
}
 93a:	ff 91       	pop	r31
 93c:	ef 91       	pop	r30
 93e:	bf 91       	pop	r27
 940:	af 91       	pop	r26
 942:	9f 91       	pop	r25
 944:	8f 91       	pop	r24
 946:	7f 91       	pop	r23
 948:	6f 91       	pop	r22
 94a:	5f 91       	pop	r21
 94c:	4f 91       	pop	r20
 94e:	3f 91       	pop	r19
 950:	2f 91       	pop	r18
 952:	0f 90       	pop	r0
 954:	0b be       	out	0x3b, r0	; 59
 956:	0f 90       	pop	r0
 958:	0f be       	out	0x3f, r0	; 63
 95a:	0f 90       	pop	r0
 95c:	1f 90       	pop	r1
 95e:	18 95       	reti

00000960 <__divmodhi4>:
 960:	97 fb       	bst	r25, 7
 962:	07 2e       	mov	r0, r23
 964:	16 f4       	brtc	.+4      	; 0x96a <__divmodhi4+0xa>
 966:	00 94       	com	r0
 968:	06 d0       	rcall	.+12     	; 0x976 <__divmodhi4_neg1>
 96a:	77 fd       	sbrc	r23, 7
 96c:	08 d0       	rcall	.+16     	; 0x97e <__divmodhi4_neg2>
 96e:	48 d0       	rcall	.+144    	; 0xa00 <__udivmodhi4>
 970:	07 fc       	sbrc	r0, 7
 972:	05 d0       	rcall	.+10     	; 0x97e <__divmodhi4_neg2>
 974:	3e f4       	brtc	.+14     	; 0x984 <__divmodhi4_exit>

00000976 <__divmodhi4_neg1>:
 976:	90 95       	com	r25
 978:	81 95       	neg	r24
 97a:	9f 4f       	sbci	r25, 0xFF	; 255
 97c:	08 95       	ret

0000097e <__divmodhi4_neg2>:
 97e:	70 95       	com	r23
 980:	61 95       	neg	r22
 982:	7f 4f       	sbci	r23, 0xFF	; 255

00000984 <__divmodhi4_exit>:
 984:	08 95       	ret

00000986 <__udivmodsi4>:
 986:	a1 e2       	ldi	r26, 0x21	; 33
 988:	1a 2e       	mov	r1, r26
 98a:	aa 1b       	sub	r26, r26
 98c:	bb 1b       	sub	r27, r27
 98e:	fd 01       	movw	r30, r26
 990:	0d c0       	rjmp	.+26     	; 0x9ac <__udivmodsi4_ep>

00000992 <__udivmodsi4_loop>:
 992:	aa 1f       	adc	r26, r26
 994:	bb 1f       	adc	r27, r27
 996:	ee 1f       	adc	r30, r30
 998:	ff 1f       	adc	r31, r31
 99a:	a2 17       	cp	r26, r18
 99c:	b3 07       	cpc	r27, r19
 99e:	e4 07       	cpc	r30, r20
 9a0:	f5 07       	cpc	r31, r21
 9a2:	20 f0       	brcs	.+8      	; 0x9ac <__udivmodsi4_ep>
 9a4:	a2 1b       	sub	r26, r18
 9a6:	b3 0b       	sbc	r27, r19
 9a8:	e4 0b       	sbc	r30, r20
 9aa:	f5 0b       	sbc	r31, r21

000009ac <__udivmodsi4_ep>:
 9ac:	66 1f       	adc	r22, r22
 9ae:	77 1f       	adc	r23, r23
 9b0:	88 1f       	adc	r24, r24
 9b2:	99 1f       	adc	r25, r25
 9b4:	1a 94       	dec	r1
 9b6:	69 f7       	brne	.-38     	; 0x992 <__udivmodsi4_loop>
 9b8:	60 95       	com	r22
 9ba:	70 95       	com	r23
 9bc:	80 95       	com	r24
 9be:	90 95       	com	r25
 9c0:	9b 01       	movw	r18, r22
 9c2:	ac 01       	movw	r20, r24
 9c4:	bd 01       	movw	r22, r26
 9c6:	cf 01       	movw	r24, r30
 9c8:	08 95       	ret

000009ca <__umulhisi3>:
 9ca:	a2 9f       	mul	r26, r18
 9cc:	b0 01       	movw	r22, r0
 9ce:	b3 9f       	mul	r27, r19
 9d0:	c0 01       	movw	r24, r0
 9d2:	a3 9f       	mul	r26, r19
 9d4:	70 0d       	add	r23, r0
 9d6:	81 1d       	adc	r24, r1
 9d8:	11 24       	eor	r1, r1
 9da:	91 1d       	adc	r25, r1
 9dc:	b2 9f       	mul	r27, r18
 9de:	70 0d       	add	r23, r0
 9e0:	81 1d       	adc	r24, r1
 9e2:	11 24       	eor	r1, r1
 9e4:	91 1d       	adc	r25, r1
 9e6:	08 95       	ret

000009e8 <__adddi3_s8>:
 9e8:	00 24       	eor	r0, r0
 9ea:	a7 fd       	sbrc	r26, 7
 9ec:	00 94       	com	r0
 9ee:	2a 0f       	add	r18, r26
 9f0:	30 1d       	adc	r19, r0
 9f2:	40 1d       	adc	r20, r0
 9f4:	50 1d       	adc	r21, r0
 9f6:	60 1d       	adc	r22, r0
 9f8:	70 1d       	adc	r23, r0
 9fa:	80 1d       	adc	r24, r0
 9fc:	90 1d       	adc	r25, r0
 9fe:	08 95       	ret

00000a00 <__udivmodhi4>:
 a00:	aa 1b       	sub	r26, r26
 a02:	bb 1b       	sub	r27, r27
 a04:	51 e1       	ldi	r21, 0x11	; 17
 a06:	07 c0       	rjmp	.+14     	; 0xa16 <__udivmodhi4_ep>

00000a08 <__udivmodhi4_loop>:
 a08:	aa 1f       	adc	r26, r26
 a0a:	bb 1f       	adc	r27, r27
 a0c:	a6 17       	cp	r26, r22
 a0e:	b7 07       	cpc	r27, r23
 a10:	10 f0       	brcs	.+4      	; 0xa16 <__udivmodhi4_ep>
 a12:	a6 1b       	sub	r26, r22
 a14:	b7 0b       	sbc	r27, r23

00000a16 <__udivmodhi4_ep>:
 a16:	88 1f       	adc	r24, r24
 a18:	99 1f       	adc	r25, r25
 a1a:	5a 95       	dec	r21
 a1c:	a9 f7       	brne	.-22     	; 0xa08 <__udivmodhi4_loop>
 a1e:	80 95       	com	r24
 a20:	90 95       	com	r25
 a22:	bc 01       	movw	r22, r24
 a24:	cd 01       	movw	r24, r26
 a26:	08 95       	ret

00000a28 <vsnprintf>:
 a28:	0f 93       	push	r16
 a2a:	1f 93       	push	r17
 a2c:	cf 93       	push	r28
 a2e:	df 93       	push	r29
 a30:	cd b7       	in	r28, 0x3d	; 61
 a32:	de b7       	in	r29, 0x3e	; 62
 a34:	2e 97       	sbiw	r28, 0x0e	; 14
 a36:	0f b6       	in	r0, 0x3f	; 63
 a38:	f8 94       	cli
 a3a:	de bf       	out	0x3e, r29	; 62
 a3c:	0f be       	out	0x3f, r0	; 63
 a3e:	cd bf       	out	0x3d, r28	; 61
 a40:	8c 01       	movw	r16, r24
 a42:	fa 01       	movw	r30, r20
 a44:	86 e0       	ldi	r24, 0x06	; 6
 a46:	8c 83       	std	Y+4, r24	; 0x04
 a48:	1a 83       	std	Y+2, r17	; 0x02
 a4a:	09 83       	std	Y+1, r16	; 0x01
 a4c:	77 ff       	sbrs	r23, 7
 a4e:	02 c0       	rjmp	.+4      	; 0xa54 <vsnprintf+0x2c>
 a50:	60 e0       	ldi	r22, 0x00	; 0
 a52:	70 e8       	ldi	r23, 0x80	; 128
 a54:	cb 01       	movw	r24, r22
 a56:	01 97       	sbiw	r24, 0x01	; 1
 a58:	9e 83       	std	Y+6, r25	; 0x06
 a5a:	8d 83       	std	Y+5, r24	; 0x05
 a5c:	a9 01       	movw	r20, r18
 a5e:	bf 01       	movw	r22, r30
 a60:	ce 01       	movw	r24, r28
 a62:	01 96       	adiw	r24, 0x01	; 1
 a64:	19 d0       	rcall	.+50     	; 0xa98 <vfprintf>
 a66:	4d 81       	ldd	r20, Y+5	; 0x05
 a68:	5e 81       	ldd	r21, Y+6	; 0x06
 a6a:	57 fd       	sbrc	r21, 7
 a6c:	0a c0       	rjmp	.+20     	; 0xa82 <vsnprintf+0x5a>
 a6e:	2f 81       	ldd	r18, Y+7	; 0x07
 a70:	38 85       	ldd	r19, Y+8	; 0x08
 a72:	42 17       	cp	r20, r18
 a74:	53 07       	cpc	r21, r19
 a76:	0c f4       	brge	.+2      	; 0xa7a <vsnprintf+0x52>
 a78:	9a 01       	movw	r18, r20
 a7a:	f8 01       	movw	r30, r16
 a7c:	e2 0f       	add	r30, r18
 a7e:	f3 1f       	adc	r31, r19
 a80:	10 82       	st	Z, r1
 a82:	2e 96       	adiw	r28, 0x0e	; 14
 a84:	0f b6       	in	r0, 0x3f	; 63
 a86:	f8 94       	cli
 a88:	de bf       	out	0x3e, r29	; 62
 a8a:	0f be       	out	0x3f, r0	; 63
 a8c:	cd bf       	out	0x3d, r28	; 61
 a8e:	df 91       	pop	r29
 a90:	cf 91       	pop	r28
 a92:	1f 91       	pop	r17
 a94:	0f 91       	pop	r16
 a96:	08 95       	ret

00000a98 <vfprintf>:
 a98:	2f 92       	push	r2
 a9a:	3f 92       	push	r3
 a9c:	4f 92       	push	r4
 a9e:	5f 92       	push	r5
 aa0:	6f 92       	push	r6
 aa2:	7f 92       	push	r7
 aa4:	8f 92       	push	r8
 aa6:	9f 92       	push	r9
 aa8:	af 92       	push	r10
 aaa:	bf 92       	push	r11
 aac:	cf 92       	push	r12
 aae:	df 92       	push	r13
 ab0:	ef 92       	push	r14
 ab2:	ff 92       	push	r15
 ab4:	0f 93       	push	r16
 ab6:	1f 93       	push	r17
 ab8:	cf 93       	push	r28
 aba:	df 93       	push	r29
 abc:	cd b7       	in	r28, 0x3d	; 61
 abe:	de b7       	in	r29, 0x3e	; 62
 ac0:	2b 97       	sbiw	r28, 0x0b	; 11
 ac2:	0f b6       	in	r0, 0x3f	; 63
 ac4:	f8 94       	cli
 ac6:	de bf       	out	0x3e, r29	; 62
 ac8:	0f be       	out	0x3f, r0	; 63
 aca:	cd bf       	out	0x3d, r28	; 61
 acc:	6c 01       	movw	r12, r24
 ace:	7b 01       	movw	r14, r22
 ad0:	8a 01       	movw	r16, r20
 ad2:	fc 01       	movw	r30, r24
 ad4:	17 82       	std	Z+7, r1	; 0x07
 ad6:	16 82       	std	Z+6, r1	; 0x06
 ad8:	83 81       	ldd	r24, Z+3	; 0x03
 ada:	81 ff       	sbrs	r24, 1
 adc:	bf c1       	rjmp	.+894    	; 0xe5c <vfprintf+0x3c4>
 ade:	ce 01       	movw	r24, r28
 ae0:	01 96       	adiw	r24, 0x01	; 1
 ae2:	3c 01       	movw	r6, r24
 ae4:	f6 01       	movw	r30, r12
 ae6:	93 81       	ldd	r25, Z+3	; 0x03
 ae8:	f7 01       	movw	r30, r14
 aea:	93 fd       	sbrc	r25, 3
 aec:	85 91       	lpm	r24, Z+
 aee:	93 ff       	sbrs	r25, 3
 af0:	81 91       	ld	r24, Z+
 af2:	7f 01       	movw	r14, r30
 af4:	88 23       	and	r24, r24
 af6:	09 f4       	brne	.+2      	; 0xafa <vfprintf+0x62>
 af8:	ad c1       	rjmp	.+858    	; 0xe54 <vfprintf+0x3bc>
 afa:	85 32       	cpi	r24, 0x25	; 37
 afc:	39 f4       	brne	.+14     	; 0xb0c <vfprintf+0x74>
 afe:	93 fd       	sbrc	r25, 3
 b00:	85 91       	lpm	r24, Z+
 b02:	93 ff       	sbrs	r25, 3
 b04:	81 91       	ld	r24, Z+
 b06:	7f 01       	movw	r14, r30
 b08:	85 32       	cpi	r24, 0x25	; 37
 b0a:	21 f4       	brne	.+8      	; 0xb14 <vfprintf+0x7c>
 b0c:	b6 01       	movw	r22, r12
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	d6 d1       	rcall	.+940    	; 0xebe <fputc>
 b12:	e8 cf       	rjmp	.-48     	; 0xae4 <vfprintf+0x4c>
 b14:	91 2c       	mov	r9, r1
 b16:	21 2c       	mov	r2, r1
 b18:	31 2c       	mov	r3, r1
 b1a:	ff e1       	ldi	r31, 0x1F	; 31
 b1c:	f3 15       	cp	r31, r3
 b1e:	d8 f0       	brcs	.+54     	; 0xb56 <vfprintf+0xbe>
 b20:	8b 32       	cpi	r24, 0x2B	; 43
 b22:	79 f0       	breq	.+30     	; 0xb42 <vfprintf+0xaa>
 b24:	38 f4       	brcc	.+14     	; 0xb34 <vfprintf+0x9c>
 b26:	80 32       	cpi	r24, 0x20	; 32
 b28:	79 f0       	breq	.+30     	; 0xb48 <vfprintf+0xb0>
 b2a:	83 32       	cpi	r24, 0x23	; 35
 b2c:	a1 f4       	brne	.+40     	; 0xb56 <vfprintf+0xbe>
 b2e:	23 2d       	mov	r18, r3
 b30:	20 61       	ori	r18, 0x10	; 16
 b32:	1d c0       	rjmp	.+58     	; 0xb6e <vfprintf+0xd6>
 b34:	8d 32       	cpi	r24, 0x2D	; 45
 b36:	61 f0       	breq	.+24     	; 0xb50 <vfprintf+0xb8>
 b38:	80 33       	cpi	r24, 0x30	; 48
 b3a:	69 f4       	brne	.+26     	; 0xb56 <vfprintf+0xbe>
 b3c:	23 2d       	mov	r18, r3
 b3e:	21 60       	ori	r18, 0x01	; 1
 b40:	16 c0       	rjmp	.+44     	; 0xb6e <vfprintf+0xd6>
 b42:	83 2d       	mov	r24, r3
 b44:	82 60       	ori	r24, 0x02	; 2
 b46:	38 2e       	mov	r3, r24
 b48:	e3 2d       	mov	r30, r3
 b4a:	e4 60       	ori	r30, 0x04	; 4
 b4c:	3e 2e       	mov	r3, r30
 b4e:	2a c0       	rjmp	.+84     	; 0xba4 <vfprintf+0x10c>
 b50:	f3 2d       	mov	r31, r3
 b52:	f8 60       	ori	r31, 0x08	; 8
 b54:	1d c0       	rjmp	.+58     	; 0xb90 <vfprintf+0xf8>
 b56:	37 fc       	sbrc	r3, 7
 b58:	2d c0       	rjmp	.+90     	; 0xbb4 <vfprintf+0x11c>
 b5a:	20 ed       	ldi	r18, 0xD0	; 208
 b5c:	28 0f       	add	r18, r24
 b5e:	2a 30       	cpi	r18, 0x0A	; 10
 b60:	40 f0       	brcs	.+16     	; 0xb72 <vfprintf+0xda>
 b62:	8e 32       	cpi	r24, 0x2E	; 46
 b64:	b9 f4       	brne	.+46     	; 0xb94 <vfprintf+0xfc>
 b66:	36 fc       	sbrc	r3, 6
 b68:	75 c1       	rjmp	.+746    	; 0xe54 <vfprintf+0x3bc>
 b6a:	23 2d       	mov	r18, r3
 b6c:	20 64       	ori	r18, 0x40	; 64
 b6e:	32 2e       	mov	r3, r18
 b70:	19 c0       	rjmp	.+50     	; 0xba4 <vfprintf+0x10c>
 b72:	36 fe       	sbrs	r3, 6
 b74:	06 c0       	rjmp	.+12     	; 0xb82 <vfprintf+0xea>
 b76:	8a e0       	ldi	r24, 0x0A	; 10
 b78:	98 9e       	mul	r9, r24
 b7a:	20 0d       	add	r18, r0
 b7c:	11 24       	eor	r1, r1
 b7e:	92 2e       	mov	r9, r18
 b80:	11 c0       	rjmp	.+34     	; 0xba4 <vfprintf+0x10c>
 b82:	ea e0       	ldi	r30, 0x0A	; 10
 b84:	2e 9e       	mul	r2, r30
 b86:	20 0d       	add	r18, r0
 b88:	11 24       	eor	r1, r1
 b8a:	22 2e       	mov	r2, r18
 b8c:	f3 2d       	mov	r31, r3
 b8e:	f0 62       	ori	r31, 0x20	; 32
 b90:	3f 2e       	mov	r3, r31
 b92:	08 c0       	rjmp	.+16     	; 0xba4 <vfprintf+0x10c>
 b94:	8c 36       	cpi	r24, 0x6C	; 108
 b96:	21 f4       	brne	.+8      	; 0xba0 <vfprintf+0x108>
 b98:	83 2d       	mov	r24, r3
 b9a:	80 68       	ori	r24, 0x80	; 128
 b9c:	38 2e       	mov	r3, r24
 b9e:	02 c0       	rjmp	.+4      	; 0xba4 <vfprintf+0x10c>
 ba0:	88 36       	cpi	r24, 0x68	; 104
 ba2:	41 f4       	brne	.+16     	; 0xbb4 <vfprintf+0x11c>
 ba4:	f7 01       	movw	r30, r14
 ba6:	93 fd       	sbrc	r25, 3
 ba8:	85 91       	lpm	r24, Z+
 baa:	93 ff       	sbrs	r25, 3
 bac:	81 91       	ld	r24, Z+
 bae:	7f 01       	movw	r14, r30
 bb0:	81 11       	cpse	r24, r1
 bb2:	b3 cf       	rjmp	.-154    	; 0xb1a <vfprintf+0x82>
 bb4:	98 2f       	mov	r25, r24
 bb6:	9f 7d       	andi	r25, 0xDF	; 223
 bb8:	95 54       	subi	r25, 0x45	; 69
 bba:	93 30       	cpi	r25, 0x03	; 3
 bbc:	28 f4       	brcc	.+10     	; 0xbc8 <vfprintf+0x130>
 bbe:	0c 5f       	subi	r16, 0xFC	; 252
 bc0:	1f 4f       	sbci	r17, 0xFF	; 255
 bc2:	9f e3       	ldi	r25, 0x3F	; 63
 bc4:	99 83       	std	Y+1, r25	; 0x01
 bc6:	0d c0       	rjmp	.+26     	; 0xbe2 <vfprintf+0x14a>
 bc8:	83 36       	cpi	r24, 0x63	; 99
 bca:	31 f0       	breq	.+12     	; 0xbd8 <vfprintf+0x140>
 bcc:	83 37       	cpi	r24, 0x73	; 115
 bce:	71 f0       	breq	.+28     	; 0xbec <vfprintf+0x154>
 bd0:	83 35       	cpi	r24, 0x53	; 83
 bd2:	09 f0       	breq	.+2      	; 0xbd6 <vfprintf+0x13e>
 bd4:	55 c0       	rjmp	.+170    	; 0xc80 <vfprintf+0x1e8>
 bd6:	20 c0       	rjmp	.+64     	; 0xc18 <vfprintf+0x180>
 bd8:	f8 01       	movw	r30, r16
 bda:	80 81       	ld	r24, Z
 bdc:	89 83       	std	Y+1, r24	; 0x01
 bde:	0e 5f       	subi	r16, 0xFE	; 254
 be0:	1f 4f       	sbci	r17, 0xFF	; 255
 be2:	88 24       	eor	r8, r8
 be4:	83 94       	inc	r8
 be6:	91 2c       	mov	r9, r1
 be8:	53 01       	movw	r10, r6
 bea:	12 c0       	rjmp	.+36     	; 0xc10 <vfprintf+0x178>
 bec:	28 01       	movw	r4, r16
 bee:	f2 e0       	ldi	r31, 0x02	; 2
 bf0:	4f 0e       	add	r4, r31
 bf2:	51 1c       	adc	r5, r1
 bf4:	f8 01       	movw	r30, r16
 bf6:	a0 80       	ld	r10, Z
 bf8:	b1 80       	ldd	r11, Z+1	; 0x01
 bfa:	36 fe       	sbrs	r3, 6
 bfc:	03 c0       	rjmp	.+6      	; 0xc04 <vfprintf+0x16c>
 bfe:	69 2d       	mov	r22, r9
 c00:	70 e0       	ldi	r23, 0x00	; 0
 c02:	02 c0       	rjmp	.+4      	; 0xc08 <vfprintf+0x170>
 c04:	6f ef       	ldi	r22, 0xFF	; 255
 c06:	7f ef       	ldi	r23, 0xFF	; 255
 c08:	c5 01       	movw	r24, r10
 c0a:	4e d1       	rcall	.+668    	; 0xea8 <strnlen>
 c0c:	4c 01       	movw	r8, r24
 c0e:	82 01       	movw	r16, r4
 c10:	f3 2d       	mov	r31, r3
 c12:	ff 77       	andi	r31, 0x7F	; 127
 c14:	3f 2e       	mov	r3, r31
 c16:	15 c0       	rjmp	.+42     	; 0xc42 <vfprintf+0x1aa>
 c18:	28 01       	movw	r4, r16
 c1a:	22 e0       	ldi	r18, 0x02	; 2
 c1c:	42 0e       	add	r4, r18
 c1e:	51 1c       	adc	r5, r1
 c20:	f8 01       	movw	r30, r16
 c22:	a0 80       	ld	r10, Z
 c24:	b1 80       	ldd	r11, Z+1	; 0x01
 c26:	36 fe       	sbrs	r3, 6
 c28:	03 c0       	rjmp	.+6      	; 0xc30 <vfprintf+0x198>
 c2a:	69 2d       	mov	r22, r9
 c2c:	70 e0       	ldi	r23, 0x00	; 0
 c2e:	02 c0       	rjmp	.+4      	; 0xc34 <vfprintf+0x19c>
 c30:	6f ef       	ldi	r22, 0xFF	; 255
 c32:	7f ef       	ldi	r23, 0xFF	; 255
 c34:	c5 01       	movw	r24, r10
 c36:	2d d1       	rcall	.+602    	; 0xe92 <strnlen_P>
 c38:	4c 01       	movw	r8, r24
 c3a:	f3 2d       	mov	r31, r3
 c3c:	f0 68       	ori	r31, 0x80	; 128
 c3e:	3f 2e       	mov	r3, r31
 c40:	82 01       	movw	r16, r4
 c42:	33 fc       	sbrc	r3, 3
 c44:	19 c0       	rjmp	.+50     	; 0xc78 <vfprintf+0x1e0>
 c46:	82 2d       	mov	r24, r2
 c48:	90 e0       	ldi	r25, 0x00	; 0
 c4a:	88 16       	cp	r8, r24
 c4c:	99 06       	cpc	r9, r25
 c4e:	a0 f4       	brcc	.+40     	; 0xc78 <vfprintf+0x1e0>
 c50:	b6 01       	movw	r22, r12
 c52:	80 e2       	ldi	r24, 0x20	; 32
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	33 d1       	rcall	.+614    	; 0xebe <fputc>
 c58:	2a 94       	dec	r2
 c5a:	f5 cf       	rjmp	.-22     	; 0xc46 <vfprintf+0x1ae>
 c5c:	f5 01       	movw	r30, r10
 c5e:	37 fc       	sbrc	r3, 7
 c60:	85 91       	lpm	r24, Z+
 c62:	37 fe       	sbrs	r3, 7
 c64:	81 91       	ld	r24, Z+
 c66:	5f 01       	movw	r10, r30
 c68:	b6 01       	movw	r22, r12
 c6a:	90 e0       	ldi	r25, 0x00	; 0
 c6c:	28 d1       	rcall	.+592    	; 0xebe <fputc>
 c6e:	21 10       	cpse	r2, r1
 c70:	2a 94       	dec	r2
 c72:	21 e0       	ldi	r18, 0x01	; 1
 c74:	82 1a       	sub	r8, r18
 c76:	91 08       	sbc	r9, r1
 c78:	81 14       	cp	r8, r1
 c7a:	91 04       	cpc	r9, r1
 c7c:	79 f7       	brne	.-34     	; 0xc5c <vfprintf+0x1c4>
 c7e:	e1 c0       	rjmp	.+450    	; 0xe42 <vfprintf+0x3aa>
 c80:	84 36       	cpi	r24, 0x64	; 100
 c82:	11 f0       	breq	.+4      	; 0xc88 <vfprintf+0x1f0>
 c84:	89 36       	cpi	r24, 0x69	; 105
 c86:	39 f5       	brne	.+78     	; 0xcd6 <vfprintf+0x23e>
 c88:	f8 01       	movw	r30, r16
 c8a:	37 fe       	sbrs	r3, 7
 c8c:	07 c0       	rjmp	.+14     	; 0xc9c <vfprintf+0x204>
 c8e:	60 81       	ld	r22, Z
 c90:	71 81       	ldd	r23, Z+1	; 0x01
 c92:	82 81       	ldd	r24, Z+2	; 0x02
 c94:	93 81       	ldd	r25, Z+3	; 0x03
 c96:	0c 5f       	subi	r16, 0xFC	; 252
 c98:	1f 4f       	sbci	r17, 0xFF	; 255
 c9a:	08 c0       	rjmp	.+16     	; 0xcac <vfprintf+0x214>
 c9c:	60 81       	ld	r22, Z
 c9e:	71 81       	ldd	r23, Z+1	; 0x01
 ca0:	07 2e       	mov	r0, r23
 ca2:	00 0c       	add	r0, r0
 ca4:	88 0b       	sbc	r24, r24
 ca6:	99 0b       	sbc	r25, r25
 ca8:	0e 5f       	subi	r16, 0xFE	; 254
 caa:	1f 4f       	sbci	r17, 0xFF	; 255
 cac:	f3 2d       	mov	r31, r3
 cae:	ff 76       	andi	r31, 0x6F	; 111
 cb0:	3f 2e       	mov	r3, r31
 cb2:	97 ff       	sbrs	r25, 7
 cb4:	09 c0       	rjmp	.+18     	; 0xcc8 <vfprintf+0x230>
 cb6:	90 95       	com	r25
 cb8:	80 95       	com	r24
 cba:	70 95       	com	r23
 cbc:	61 95       	neg	r22
 cbe:	7f 4f       	sbci	r23, 0xFF	; 255
 cc0:	8f 4f       	sbci	r24, 0xFF	; 255
 cc2:	9f 4f       	sbci	r25, 0xFF	; 255
 cc4:	f0 68       	ori	r31, 0x80	; 128
 cc6:	3f 2e       	mov	r3, r31
 cc8:	2a e0       	ldi	r18, 0x0A	; 10
 cca:	30 e0       	ldi	r19, 0x00	; 0
 ccc:	a3 01       	movw	r20, r6
 cce:	33 d1       	rcall	.+614    	; 0xf36 <__ultoa_invert>
 cd0:	88 2e       	mov	r8, r24
 cd2:	86 18       	sub	r8, r6
 cd4:	44 c0       	rjmp	.+136    	; 0xd5e <vfprintf+0x2c6>
 cd6:	85 37       	cpi	r24, 0x75	; 117
 cd8:	31 f4       	brne	.+12     	; 0xce6 <vfprintf+0x24e>
 cda:	23 2d       	mov	r18, r3
 cdc:	2f 7e       	andi	r18, 0xEF	; 239
 cde:	b2 2e       	mov	r11, r18
 ce0:	2a e0       	ldi	r18, 0x0A	; 10
 ce2:	30 e0       	ldi	r19, 0x00	; 0
 ce4:	25 c0       	rjmp	.+74     	; 0xd30 <vfprintf+0x298>
 ce6:	93 2d       	mov	r25, r3
 ce8:	99 7f       	andi	r25, 0xF9	; 249
 cea:	b9 2e       	mov	r11, r25
 cec:	8f 36       	cpi	r24, 0x6F	; 111
 cee:	c1 f0       	breq	.+48     	; 0xd20 <vfprintf+0x288>
 cf0:	18 f4       	brcc	.+6      	; 0xcf8 <vfprintf+0x260>
 cf2:	88 35       	cpi	r24, 0x58	; 88
 cf4:	79 f0       	breq	.+30     	; 0xd14 <vfprintf+0x27c>
 cf6:	ae c0       	rjmp	.+348    	; 0xe54 <vfprintf+0x3bc>
 cf8:	80 37       	cpi	r24, 0x70	; 112
 cfa:	19 f0       	breq	.+6      	; 0xd02 <vfprintf+0x26a>
 cfc:	88 37       	cpi	r24, 0x78	; 120
 cfe:	21 f0       	breq	.+8      	; 0xd08 <vfprintf+0x270>
 d00:	a9 c0       	rjmp	.+338    	; 0xe54 <vfprintf+0x3bc>
 d02:	e9 2f       	mov	r30, r25
 d04:	e0 61       	ori	r30, 0x10	; 16
 d06:	be 2e       	mov	r11, r30
 d08:	b4 fe       	sbrs	r11, 4
 d0a:	0d c0       	rjmp	.+26     	; 0xd26 <vfprintf+0x28e>
 d0c:	fb 2d       	mov	r31, r11
 d0e:	f4 60       	ori	r31, 0x04	; 4
 d10:	bf 2e       	mov	r11, r31
 d12:	09 c0       	rjmp	.+18     	; 0xd26 <vfprintf+0x28e>
 d14:	34 fe       	sbrs	r3, 4
 d16:	0a c0       	rjmp	.+20     	; 0xd2c <vfprintf+0x294>
 d18:	29 2f       	mov	r18, r25
 d1a:	26 60       	ori	r18, 0x06	; 6
 d1c:	b2 2e       	mov	r11, r18
 d1e:	06 c0       	rjmp	.+12     	; 0xd2c <vfprintf+0x294>
 d20:	28 e0       	ldi	r18, 0x08	; 8
 d22:	30 e0       	ldi	r19, 0x00	; 0
 d24:	05 c0       	rjmp	.+10     	; 0xd30 <vfprintf+0x298>
 d26:	20 e1       	ldi	r18, 0x10	; 16
 d28:	30 e0       	ldi	r19, 0x00	; 0
 d2a:	02 c0       	rjmp	.+4      	; 0xd30 <vfprintf+0x298>
 d2c:	20 e1       	ldi	r18, 0x10	; 16
 d2e:	32 e0       	ldi	r19, 0x02	; 2
 d30:	f8 01       	movw	r30, r16
 d32:	b7 fe       	sbrs	r11, 7
 d34:	07 c0       	rjmp	.+14     	; 0xd44 <vfprintf+0x2ac>
 d36:	60 81       	ld	r22, Z
 d38:	71 81       	ldd	r23, Z+1	; 0x01
 d3a:	82 81       	ldd	r24, Z+2	; 0x02
 d3c:	93 81       	ldd	r25, Z+3	; 0x03
 d3e:	0c 5f       	subi	r16, 0xFC	; 252
 d40:	1f 4f       	sbci	r17, 0xFF	; 255
 d42:	06 c0       	rjmp	.+12     	; 0xd50 <vfprintf+0x2b8>
 d44:	60 81       	ld	r22, Z
 d46:	71 81       	ldd	r23, Z+1	; 0x01
 d48:	80 e0       	ldi	r24, 0x00	; 0
 d4a:	90 e0       	ldi	r25, 0x00	; 0
 d4c:	0e 5f       	subi	r16, 0xFE	; 254
 d4e:	1f 4f       	sbci	r17, 0xFF	; 255
 d50:	a3 01       	movw	r20, r6
 d52:	f1 d0       	rcall	.+482    	; 0xf36 <__ultoa_invert>
 d54:	88 2e       	mov	r8, r24
 d56:	86 18       	sub	r8, r6
 d58:	fb 2d       	mov	r31, r11
 d5a:	ff 77       	andi	r31, 0x7F	; 127
 d5c:	3f 2e       	mov	r3, r31
 d5e:	36 fe       	sbrs	r3, 6
 d60:	0d c0       	rjmp	.+26     	; 0xd7c <vfprintf+0x2e4>
 d62:	23 2d       	mov	r18, r3
 d64:	2e 7f       	andi	r18, 0xFE	; 254
 d66:	a2 2e       	mov	r10, r18
 d68:	89 14       	cp	r8, r9
 d6a:	58 f4       	brcc	.+22     	; 0xd82 <vfprintf+0x2ea>
 d6c:	34 fe       	sbrs	r3, 4
 d6e:	0b c0       	rjmp	.+22     	; 0xd86 <vfprintf+0x2ee>
 d70:	32 fc       	sbrc	r3, 2
 d72:	09 c0       	rjmp	.+18     	; 0xd86 <vfprintf+0x2ee>
 d74:	83 2d       	mov	r24, r3
 d76:	8e 7e       	andi	r24, 0xEE	; 238
 d78:	a8 2e       	mov	r10, r24
 d7a:	05 c0       	rjmp	.+10     	; 0xd86 <vfprintf+0x2ee>
 d7c:	b8 2c       	mov	r11, r8
 d7e:	a3 2c       	mov	r10, r3
 d80:	03 c0       	rjmp	.+6      	; 0xd88 <vfprintf+0x2f0>
 d82:	b8 2c       	mov	r11, r8
 d84:	01 c0       	rjmp	.+2      	; 0xd88 <vfprintf+0x2f0>
 d86:	b9 2c       	mov	r11, r9
 d88:	a4 fe       	sbrs	r10, 4
 d8a:	0f c0       	rjmp	.+30     	; 0xdaa <vfprintf+0x312>
 d8c:	fe 01       	movw	r30, r28
 d8e:	e8 0d       	add	r30, r8
 d90:	f1 1d       	adc	r31, r1
 d92:	80 81       	ld	r24, Z
 d94:	80 33       	cpi	r24, 0x30	; 48
 d96:	21 f4       	brne	.+8      	; 0xda0 <vfprintf+0x308>
 d98:	9a 2d       	mov	r25, r10
 d9a:	99 7e       	andi	r25, 0xE9	; 233
 d9c:	a9 2e       	mov	r10, r25
 d9e:	09 c0       	rjmp	.+18     	; 0xdb2 <vfprintf+0x31a>
 da0:	a2 fe       	sbrs	r10, 2
 da2:	06 c0       	rjmp	.+12     	; 0xdb0 <vfprintf+0x318>
 da4:	b3 94       	inc	r11
 da6:	b3 94       	inc	r11
 da8:	04 c0       	rjmp	.+8      	; 0xdb2 <vfprintf+0x31a>
 daa:	8a 2d       	mov	r24, r10
 dac:	86 78       	andi	r24, 0x86	; 134
 dae:	09 f0       	breq	.+2      	; 0xdb2 <vfprintf+0x31a>
 db0:	b3 94       	inc	r11
 db2:	a3 fc       	sbrc	r10, 3
 db4:	10 c0       	rjmp	.+32     	; 0xdd6 <vfprintf+0x33e>
 db6:	a0 fe       	sbrs	r10, 0
 db8:	06 c0       	rjmp	.+12     	; 0xdc6 <vfprintf+0x32e>
 dba:	b2 14       	cp	r11, r2
 dbc:	80 f4       	brcc	.+32     	; 0xdde <vfprintf+0x346>
 dbe:	28 0c       	add	r2, r8
 dc0:	92 2c       	mov	r9, r2
 dc2:	9b 18       	sub	r9, r11
 dc4:	0d c0       	rjmp	.+26     	; 0xde0 <vfprintf+0x348>
 dc6:	b2 14       	cp	r11, r2
 dc8:	58 f4       	brcc	.+22     	; 0xde0 <vfprintf+0x348>
 dca:	b6 01       	movw	r22, r12
 dcc:	80 e2       	ldi	r24, 0x20	; 32
 dce:	90 e0       	ldi	r25, 0x00	; 0
 dd0:	76 d0       	rcall	.+236    	; 0xebe <fputc>
 dd2:	b3 94       	inc	r11
 dd4:	f8 cf       	rjmp	.-16     	; 0xdc6 <vfprintf+0x32e>
 dd6:	b2 14       	cp	r11, r2
 dd8:	18 f4       	brcc	.+6      	; 0xde0 <vfprintf+0x348>
 dda:	2b 18       	sub	r2, r11
 ddc:	02 c0       	rjmp	.+4      	; 0xde2 <vfprintf+0x34a>
 dde:	98 2c       	mov	r9, r8
 de0:	21 2c       	mov	r2, r1
 de2:	a4 fe       	sbrs	r10, 4
 de4:	0f c0       	rjmp	.+30     	; 0xe04 <vfprintf+0x36c>
 de6:	b6 01       	movw	r22, r12
 de8:	80 e3       	ldi	r24, 0x30	; 48
 dea:	90 e0       	ldi	r25, 0x00	; 0
 dec:	68 d0       	rcall	.+208    	; 0xebe <fputc>
 dee:	a2 fe       	sbrs	r10, 2
 df0:	16 c0       	rjmp	.+44     	; 0xe1e <vfprintf+0x386>
 df2:	a1 fc       	sbrc	r10, 1
 df4:	03 c0       	rjmp	.+6      	; 0xdfc <vfprintf+0x364>
 df6:	88 e7       	ldi	r24, 0x78	; 120
 df8:	90 e0       	ldi	r25, 0x00	; 0
 dfa:	02 c0       	rjmp	.+4      	; 0xe00 <vfprintf+0x368>
 dfc:	88 e5       	ldi	r24, 0x58	; 88
 dfe:	90 e0       	ldi	r25, 0x00	; 0
 e00:	b6 01       	movw	r22, r12
 e02:	0c c0       	rjmp	.+24     	; 0xe1c <vfprintf+0x384>
 e04:	8a 2d       	mov	r24, r10
 e06:	86 78       	andi	r24, 0x86	; 134
 e08:	51 f0       	breq	.+20     	; 0xe1e <vfprintf+0x386>
 e0a:	a1 fe       	sbrs	r10, 1
 e0c:	02 c0       	rjmp	.+4      	; 0xe12 <vfprintf+0x37a>
 e0e:	8b e2       	ldi	r24, 0x2B	; 43
 e10:	01 c0       	rjmp	.+2      	; 0xe14 <vfprintf+0x37c>
 e12:	80 e2       	ldi	r24, 0x20	; 32
 e14:	a7 fc       	sbrc	r10, 7
 e16:	8d e2       	ldi	r24, 0x2D	; 45
 e18:	b6 01       	movw	r22, r12
 e1a:	90 e0       	ldi	r25, 0x00	; 0
 e1c:	50 d0       	rcall	.+160    	; 0xebe <fputc>
 e1e:	89 14       	cp	r8, r9
 e20:	30 f4       	brcc	.+12     	; 0xe2e <vfprintf+0x396>
 e22:	b6 01       	movw	r22, r12
 e24:	80 e3       	ldi	r24, 0x30	; 48
 e26:	90 e0       	ldi	r25, 0x00	; 0
 e28:	4a d0       	rcall	.+148    	; 0xebe <fputc>
 e2a:	9a 94       	dec	r9
 e2c:	f8 cf       	rjmp	.-16     	; 0xe1e <vfprintf+0x386>
 e2e:	8a 94       	dec	r8
 e30:	f3 01       	movw	r30, r6
 e32:	e8 0d       	add	r30, r8
 e34:	f1 1d       	adc	r31, r1
 e36:	80 81       	ld	r24, Z
 e38:	b6 01       	movw	r22, r12
 e3a:	90 e0       	ldi	r25, 0x00	; 0
 e3c:	40 d0       	rcall	.+128    	; 0xebe <fputc>
 e3e:	81 10       	cpse	r8, r1
 e40:	f6 cf       	rjmp	.-20     	; 0xe2e <vfprintf+0x396>
 e42:	22 20       	and	r2, r2
 e44:	09 f4       	brne	.+2      	; 0xe48 <vfprintf+0x3b0>
 e46:	4e ce       	rjmp	.-868    	; 0xae4 <vfprintf+0x4c>
 e48:	b6 01       	movw	r22, r12
 e4a:	80 e2       	ldi	r24, 0x20	; 32
 e4c:	90 e0       	ldi	r25, 0x00	; 0
 e4e:	37 d0       	rcall	.+110    	; 0xebe <fputc>
 e50:	2a 94       	dec	r2
 e52:	f7 cf       	rjmp	.-18     	; 0xe42 <vfprintf+0x3aa>
 e54:	f6 01       	movw	r30, r12
 e56:	86 81       	ldd	r24, Z+6	; 0x06
 e58:	97 81       	ldd	r25, Z+7	; 0x07
 e5a:	02 c0       	rjmp	.+4      	; 0xe60 <vfprintf+0x3c8>
 e5c:	8f ef       	ldi	r24, 0xFF	; 255
 e5e:	9f ef       	ldi	r25, 0xFF	; 255
 e60:	2b 96       	adiw	r28, 0x0b	; 11
 e62:	0f b6       	in	r0, 0x3f	; 63
 e64:	f8 94       	cli
 e66:	de bf       	out	0x3e, r29	; 62
 e68:	0f be       	out	0x3f, r0	; 63
 e6a:	cd bf       	out	0x3d, r28	; 61
 e6c:	df 91       	pop	r29
 e6e:	cf 91       	pop	r28
 e70:	1f 91       	pop	r17
 e72:	0f 91       	pop	r16
 e74:	ff 90       	pop	r15
 e76:	ef 90       	pop	r14
 e78:	df 90       	pop	r13
 e7a:	cf 90       	pop	r12
 e7c:	bf 90       	pop	r11
 e7e:	af 90       	pop	r10
 e80:	9f 90       	pop	r9
 e82:	8f 90       	pop	r8
 e84:	7f 90       	pop	r7
 e86:	6f 90       	pop	r6
 e88:	5f 90       	pop	r5
 e8a:	4f 90       	pop	r4
 e8c:	3f 90       	pop	r3
 e8e:	2f 90       	pop	r2
 e90:	08 95       	ret

00000e92 <strnlen_P>:
 e92:	fc 01       	movw	r30, r24
 e94:	05 90       	lpm	r0, Z+
 e96:	61 50       	subi	r22, 0x01	; 1
 e98:	70 40       	sbci	r23, 0x00	; 0
 e9a:	01 10       	cpse	r0, r1
 e9c:	d8 f7       	brcc	.-10     	; 0xe94 <strnlen_P+0x2>
 e9e:	80 95       	com	r24
 ea0:	90 95       	com	r25
 ea2:	8e 0f       	add	r24, r30
 ea4:	9f 1f       	adc	r25, r31
 ea6:	08 95       	ret

00000ea8 <strnlen>:
 ea8:	fc 01       	movw	r30, r24
 eaa:	61 50       	subi	r22, 0x01	; 1
 eac:	70 40       	sbci	r23, 0x00	; 0
 eae:	01 90       	ld	r0, Z+
 eb0:	01 10       	cpse	r0, r1
 eb2:	d8 f7       	brcc	.-10     	; 0xeaa <strnlen+0x2>
 eb4:	80 95       	com	r24
 eb6:	90 95       	com	r25
 eb8:	8e 0f       	add	r24, r30
 eba:	9f 1f       	adc	r25, r31
 ebc:	08 95       	ret

00000ebe <fputc>:
 ebe:	0f 93       	push	r16
 ec0:	1f 93       	push	r17
 ec2:	cf 93       	push	r28
 ec4:	df 93       	push	r29
 ec6:	fb 01       	movw	r30, r22
 ec8:	23 81       	ldd	r18, Z+3	; 0x03
 eca:	21 fd       	sbrc	r18, 1
 ecc:	03 c0       	rjmp	.+6      	; 0xed4 <fputc+0x16>
 ece:	8f ef       	ldi	r24, 0xFF	; 255
 ed0:	9f ef       	ldi	r25, 0xFF	; 255
 ed2:	2c c0       	rjmp	.+88     	; 0xf2c <fputc+0x6e>
 ed4:	22 ff       	sbrs	r18, 2
 ed6:	16 c0       	rjmp	.+44     	; 0xf04 <fputc+0x46>
 ed8:	46 81       	ldd	r20, Z+6	; 0x06
 eda:	57 81       	ldd	r21, Z+7	; 0x07
 edc:	24 81       	ldd	r18, Z+4	; 0x04
 ede:	35 81       	ldd	r19, Z+5	; 0x05
 ee0:	42 17       	cp	r20, r18
 ee2:	53 07       	cpc	r21, r19
 ee4:	44 f4       	brge	.+16     	; 0xef6 <fputc+0x38>
 ee6:	a0 81       	ld	r26, Z
 ee8:	b1 81       	ldd	r27, Z+1	; 0x01
 eea:	9d 01       	movw	r18, r26
 eec:	2f 5f       	subi	r18, 0xFF	; 255
 eee:	3f 4f       	sbci	r19, 0xFF	; 255
 ef0:	31 83       	std	Z+1, r19	; 0x01
 ef2:	20 83       	st	Z, r18
 ef4:	8c 93       	st	X, r24
 ef6:	26 81       	ldd	r18, Z+6	; 0x06
 ef8:	37 81       	ldd	r19, Z+7	; 0x07
 efa:	2f 5f       	subi	r18, 0xFF	; 255
 efc:	3f 4f       	sbci	r19, 0xFF	; 255
 efe:	37 83       	std	Z+7, r19	; 0x07
 f00:	26 83       	std	Z+6, r18	; 0x06
 f02:	14 c0       	rjmp	.+40     	; 0xf2c <fputc+0x6e>
 f04:	8b 01       	movw	r16, r22
 f06:	ec 01       	movw	r28, r24
 f08:	fb 01       	movw	r30, r22
 f0a:	00 84       	ldd	r0, Z+8	; 0x08
 f0c:	f1 85       	ldd	r31, Z+9	; 0x09
 f0e:	e0 2d       	mov	r30, r0
 f10:	19 95       	eicall
 f12:	89 2b       	or	r24, r25
 f14:	e1 f6       	brne	.-72     	; 0xece <fputc+0x10>
 f16:	d8 01       	movw	r26, r16
 f18:	16 96       	adiw	r26, 0x06	; 6
 f1a:	8d 91       	ld	r24, X+
 f1c:	9c 91       	ld	r25, X
 f1e:	17 97       	sbiw	r26, 0x07	; 7
 f20:	01 96       	adiw	r24, 0x01	; 1
 f22:	17 96       	adiw	r26, 0x07	; 7
 f24:	9c 93       	st	X, r25
 f26:	8e 93       	st	-X, r24
 f28:	16 97       	sbiw	r26, 0x06	; 6
 f2a:	ce 01       	movw	r24, r28
 f2c:	df 91       	pop	r29
 f2e:	cf 91       	pop	r28
 f30:	1f 91       	pop	r17
 f32:	0f 91       	pop	r16
 f34:	08 95       	ret

00000f36 <__ultoa_invert>:
 f36:	fa 01       	movw	r30, r20
 f38:	aa 27       	eor	r26, r26
 f3a:	28 30       	cpi	r18, 0x08	; 8
 f3c:	51 f1       	breq	.+84     	; 0xf92 <__ultoa_invert+0x5c>
 f3e:	20 31       	cpi	r18, 0x10	; 16
 f40:	81 f1       	breq	.+96     	; 0xfa2 <__ultoa_invert+0x6c>
 f42:	e8 94       	clt
 f44:	6f 93       	push	r22
 f46:	6e 7f       	andi	r22, 0xFE	; 254
 f48:	6e 5f       	subi	r22, 0xFE	; 254
 f4a:	7f 4f       	sbci	r23, 0xFF	; 255
 f4c:	8f 4f       	sbci	r24, 0xFF	; 255
 f4e:	9f 4f       	sbci	r25, 0xFF	; 255
 f50:	af 4f       	sbci	r26, 0xFF	; 255
 f52:	b1 e0       	ldi	r27, 0x01	; 1
 f54:	3e d0       	rcall	.+124    	; 0xfd2 <__ultoa_invert+0x9c>
 f56:	b4 e0       	ldi	r27, 0x04	; 4
 f58:	3c d0       	rcall	.+120    	; 0xfd2 <__ultoa_invert+0x9c>
 f5a:	67 0f       	add	r22, r23
 f5c:	78 1f       	adc	r23, r24
 f5e:	89 1f       	adc	r24, r25
 f60:	9a 1f       	adc	r25, r26
 f62:	a1 1d       	adc	r26, r1
 f64:	68 0f       	add	r22, r24
 f66:	79 1f       	adc	r23, r25
 f68:	8a 1f       	adc	r24, r26
 f6a:	91 1d       	adc	r25, r1
 f6c:	a1 1d       	adc	r26, r1
 f6e:	6a 0f       	add	r22, r26
 f70:	71 1d       	adc	r23, r1
 f72:	81 1d       	adc	r24, r1
 f74:	91 1d       	adc	r25, r1
 f76:	a1 1d       	adc	r26, r1
 f78:	20 d0       	rcall	.+64     	; 0xfba <__ultoa_invert+0x84>
 f7a:	09 f4       	brne	.+2      	; 0xf7e <__ultoa_invert+0x48>
 f7c:	68 94       	set
 f7e:	3f 91       	pop	r19
 f80:	2a e0       	ldi	r18, 0x0A	; 10
 f82:	26 9f       	mul	r18, r22
 f84:	11 24       	eor	r1, r1
 f86:	30 19       	sub	r19, r0
 f88:	30 5d       	subi	r19, 0xD0	; 208
 f8a:	31 93       	st	Z+, r19
 f8c:	de f6       	brtc	.-74     	; 0xf44 <__ultoa_invert+0xe>
 f8e:	cf 01       	movw	r24, r30
 f90:	08 95       	ret
 f92:	46 2f       	mov	r20, r22
 f94:	47 70       	andi	r20, 0x07	; 7
 f96:	40 5d       	subi	r20, 0xD0	; 208
 f98:	41 93       	st	Z+, r20
 f9a:	b3 e0       	ldi	r27, 0x03	; 3
 f9c:	0f d0       	rcall	.+30     	; 0xfbc <__ultoa_invert+0x86>
 f9e:	c9 f7       	brne	.-14     	; 0xf92 <__ultoa_invert+0x5c>
 fa0:	f6 cf       	rjmp	.-20     	; 0xf8e <__ultoa_invert+0x58>
 fa2:	46 2f       	mov	r20, r22
 fa4:	4f 70       	andi	r20, 0x0F	; 15
 fa6:	40 5d       	subi	r20, 0xD0	; 208
 fa8:	4a 33       	cpi	r20, 0x3A	; 58
 faa:	18 f0       	brcs	.+6      	; 0xfb2 <__ultoa_invert+0x7c>
 fac:	49 5d       	subi	r20, 0xD9	; 217
 fae:	31 fd       	sbrc	r19, 1
 fb0:	40 52       	subi	r20, 0x20	; 32
 fb2:	41 93       	st	Z+, r20
 fb4:	02 d0       	rcall	.+4      	; 0xfba <__ultoa_invert+0x84>
 fb6:	a9 f7       	brne	.-22     	; 0xfa2 <__ultoa_invert+0x6c>
 fb8:	ea cf       	rjmp	.-44     	; 0xf8e <__ultoa_invert+0x58>
 fba:	b4 e0       	ldi	r27, 0x04	; 4
 fbc:	a6 95       	lsr	r26
 fbe:	97 95       	ror	r25
 fc0:	87 95       	ror	r24
 fc2:	77 95       	ror	r23
 fc4:	67 95       	ror	r22
 fc6:	ba 95       	dec	r27
 fc8:	c9 f7       	brne	.-14     	; 0xfbc <__ultoa_invert+0x86>
 fca:	00 97       	sbiw	r24, 0x00	; 0
 fcc:	61 05       	cpc	r22, r1
 fce:	71 05       	cpc	r23, r1
 fd0:	08 95       	ret
 fd2:	9b 01       	movw	r18, r22
 fd4:	ac 01       	movw	r20, r24
 fd6:	0a 2e       	mov	r0, r26
 fd8:	06 94       	lsr	r0
 fda:	57 95       	ror	r21
 fdc:	47 95       	ror	r20
 fde:	37 95       	ror	r19
 fe0:	27 95       	ror	r18
 fe2:	ba 95       	dec	r27
 fe4:	c9 f7       	brne	.-14     	; 0xfd8 <__ultoa_invert+0xa2>
 fe6:	62 0f       	add	r22, r18
 fe8:	73 1f       	adc	r23, r19
 fea:	84 1f       	adc	r24, r20
 fec:	95 1f       	adc	r25, r21
 fee:	a0 1d       	adc	r26, r0
 ff0:	08 95       	ret

00000ff2 <_exit>:
 ff2:	f8 94       	cli

00000ff4 <__stop_program>:
 ff4:	ff cf       	rjmp	.-2      	; 0xff4 <__stop_program>
