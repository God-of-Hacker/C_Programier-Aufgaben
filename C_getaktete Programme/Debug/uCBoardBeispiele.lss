
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800200  00000edc  00000f70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000edc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800274  00800274  00000fe4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fe4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001040  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00001080  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002709  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001014  00000000  00000000  00003969  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001537  00000000  00000000  0000497d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  00005eb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cae  00000000  00000000  0000651c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e6a  00000000  00000000  000071ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  00009034  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	00 c4       	rjmp	.+2048   	; 0x85e <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec ed       	ldi	r30, 0xDC	; 220
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 37       	cpi	r26, 0x74	; 116
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e7       	ldi	r26, 0x74	; 116
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 3f       	cpi	r26, 0xF2	; 242
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	db c6       	rjmp	.+3510   	; 0xed8 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
   uint16_t schalter = 0;
   uint16_t LedAusgabe = 0;
   uint64_t stopuhr_ms = 0; 
    
    //Initialisieren
    initBoard(0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	18 d2       	rcall	.+1072   	; 0x558 <initBoard>
//Hauptprogramm
int main(void)
{
    //Variablen
    
   uint16_t i = 0;
 128:	c0 e0       	ldi	r28, 0x00	; 0
    
    //Unendlichschlaufe
    while(1)
    {
        //Eingabe------------------------------------------------------------------
       schalter = switchReadAll() & 0b00000111;
 12a:	d0 e0       	ldi	r29, 0x00	; 0
 12c:	ba d0       	rcall	.+372    	; 0x2a2 <switchReadAll>
 12e:	87 70       	andi	r24, 0x07	; 7
 130:	90 e0       	ldi	r25, 0x00	; 0
        
        //Verarbeitung-------------------------------------------------------------
      
   if ( schalter == 0)
 132:	00 97       	sbiw	r24, 0x00	; 0
 134:	99 f4       	brne	.+38     	; 0x15c <main+0x38>
   {
      // if (stopuhr_ms <=100)
       {
           ledWriteAll(LED_MUSTER+i);
 136:	21 96       	adiw	r28, 0x01	; 1
 138:	ce 01       	movw	r24, r28
 13a:	b0 d0       	rcall	.+352    	; 0x29c <ledWriteAll>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13c:	2f ef       	ldi	r18, 0xFF	; 255
 13e:	31 ee       	ldi	r19, 0xE1	; 225
 140:	84 e0       	ldi	r24, 0x04	; 4
 142:	21 50       	subi	r18, 0x01	; 1
 144:	30 40       	sbci	r19, 0x00	; 0
 146:	80 40       	sbci	r24, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0x1e>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0x28>
 14c:	00 00       	nop
           i = i + SCHRITT_LAENGE;
           _delay_ms(100);
           if (i>=16)
 14e:	c0 31       	cpi	r28, 0x10	; 16
 150:	d1 05       	cpc	r29, r1
 152:	08 f4       	brcc	.+2      	; 0x156 <main+0x32>
 154:	99 c0       	rjmp	.+306    	; 0x288 <main+0x164>
           {
               i = START_POSITION;
 156:	c0 e0       	ldi	r28, 0x00	; 0
 158:	d0 e0       	ldi	r29, 0x00	; 0
 15a:	96 c0       	rjmp	.+300    	; 0x288 <main+0x164>
          //     stopuhr_ms = 0;
          // }
       }
       
   } 
   else if (schalter == 1)
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	91 05       	cpc	r25, r1
   {
      // if ((stopuhr_ms <=200))
       {
           ledWriteAll(LED_MUSTER+i);
 160:	99 f4       	brne	.+38     	; 0x188 <main+0x64>
 162:	21 96       	adiw	r28, 0x01	; 1
 164:	ce 01       	movw	r24, r28
 166:	9a d0       	rcall	.+308    	; 0x29c <ledWriteAll>
 168:	9f ef       	ldi	r25, 0xFF	; 255
 16a:	23 ec       	ldi	r18, 0xC3	; 195
 16c:	39 e0       	ldi	r19, 0x09	; 9
 16e:	91 50       	subi	r25, 0x01	; 1
 170:	20 40       	sbci	r18, 0x00	; 0
 172:	30 40       	sbci	r19, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0x4a>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0x54>
 178:	00 00       	nop
            i = i + SCHRITT_LAENGE;
         _delay_ms(200);
         if (i>=16)
 17a:	c0 31       	cpi	r28, 0x10	; 16
 17c:	d1 05       	cpc	r29, r1
 17e:	08 f4       	brcc	.+2      	; 0x182 <main+0x5e>
 180:	83 c0       	rjmp	.+262    	; 0x288 <main+0x164>
       {
           i = START_POSITION;
 182:	c0 e0       	ldi	r28, 0x00	; 0
 184:	d0 e0       	ldi	r29, 0x00	; 0
 186:	80 c0       	rjmp	.+256    	; 0x288 <main+0x164>
        //     stopuhr_ms = 0;
        // }
       }
       
   }
   else if (schalter == 2)
 188:	82 30       	cpi	r24, 0x02	; 2
 18a:	91 05       	cpc	r25, r1
   {
       //if (stopuhr_ms <=500)
       {
           ledWriteAll(LED_MUSTER+i);
 18c:	99 f4       	brne	.+38     	; 0x1b4 <main+0x90>
 18e:	21 96       	adiw	r28, 0x01	; 1
 190:	ce 01       	movw	r24, r28
 192:	84 d0       	rcall	.+264    	; 0x29c <ledWriteAll>
 194:	8f ef       	ldi	r24, 0xFF	; 255
 196:	99 e6       	ldi	r25, 0x69	; 105
 198:	28 e1       	ldi	r18, 0x18	; 24
 19a:	81 50       	subi	r24, 0x01	; 1
 19c:	90 40       	sbci	r25, 0x00	; 0
 19e:	20 40       	sbci	r18, 0x00	; 0
 1a0:	e1 f7       	brne	.-8      	; 0x19a <main+0x76>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0x80>
 1a4:	00 00       	nop
           i = i + SCHRITT_LAENGE;
          _delay_ms(500);
           if (i>=16)
 1a6:	c0 31       	cpi	r28, 0x10	; 16
 1a8:	d1 05       	cpc	r29, r1
 1aa:	08 f4       	brcc	.+2      	; 0x1ae <main+0x8a>
 1ac:	6d c0       	rjmp	.+218    	; 0x288 <main+0x164>
           {
               i = START_POSITION;
 1ae:	c0 e0       	ldi	r28, 0x00	; 0
 1b0:	d0 e0       	ldi	r29, 0x00	; 0
 1b2:	6a c0       	rjmp	.+212    	; 0x288 <main+0x164>
            //     stopuhr_ms = 0;
            // }
       }
       
   }
   else if (schalter == 3)
 1b4:	83 30       	cpi	r24, 0x03	; 3
 1b6:	91 05       	cpc	r25, r1
   {
    //   if (stopuhr_ms <=1000)
       {
           ledWriteAll(LED_MUSTER+i);
 1b8:	99 f4       	brne	.+38     	; 0x1e0 <main+0xbc>
 1ba:	21 96       	adiw	r28, 0x01	; 1
 1bc:	ce 01       	movw	r24, r28
 1be:	6e d0       	rcall	.+220    	; 0x29c <ledWriteAll>
 1c0:	3f ef       	ldi	r19, 0xFF	; 255
 1c2:	83 ed       	ldi	r24, 0xD3	; 211
 1c4:	90 e3       	ldi	r25, 0x30	; 48
 1c6:	31 50       	subi	r19, 0x01	; 1
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0xa2>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0xac>
 1d0:	00 00       	nop
           i = i + SCHRITT_LAENGE;
           _delay_ms(1000);
           if (i>=16)
 1d2:	c0 31       	cpi	r28, 0x10	; 16
 1d4:	d1 05       	cpc	r29, r1
 1d6:	08 f4       	brcc	.+2      	; 0x1da <main+0xb6>
 1d8:	57 c0       	rjmp	.+174    	; 0x288 <main+0x164>
           {
               i = START_POSITION;
 1da:	c0 e0       	ldi	r28, 0x00	; 0
 1dc:	d0 e0       	ldi	r29, 0x00	; 0
            //     stopuhr_ms = 0;
            // }
       }
       
   }
 else if (schalter == 4)
 1de:	54 c0       	rjmp	.+168    	; 0x288 <main+0x164>
 1e0:	84 30       	cpi	r24, 0x04	; 4
 1e2:	91 05       	cpc	r25, r1
 {
    // if (stopuhr_ms <=1500)
     {
         ledWriteAll(LED_MUSTER+i);
 1e4:	99 f4       	brne	.+38     	; 0x20c <main+0xe8>
 1e6:	21 96       	adiw	r28, 0x01	; 1
 1e8:	ce 01       	movw	r24, r28
 1ea:	58 d0       	rcall	.+176    	; 0x29c <ledWriteAll>
 1ec:	2f ef       	ldi	r18, 0xFF	; 255
 1ee:	3d e3       	ldi	r19, 0x3D	; 61
 1f0:	89 e4       	ldi	r24, 0x49	; 73
 1f2:	21 50       	subi	r18, 0x01	; 1
 1f4:	30 40       	sbci	r19, 0x00	; 0
 1f6:	80 40       	sbci	r24, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0xce>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0xd8>
 1fc:	00 00       	nop
     i = i + SCHRITT_LAENGE;
     _delay_ms(1500);
     if (i>=16)
 1fe:	c0 31       	cpi	r28, 0x10	; 16
 200:	d1 05       	cpc	r29, r1
 202:	08 f4       	brcc	.+2      	; 0x206 <main+0xe2>
 204:	41 c0       	rjmp	.+130    	; 0x288 <main+0x164>
     {
         i = START_POSITION;
 206:	c0 e0       	ldi	r28, 0x00	; 0
 208:	d0 e0       	ldi	r29, 0x00	; 0
      //     stopuhr_ms = 0;
      // }
     }
    
 }
 else if (schalter == 5)
 20a:	3e c0       	rjmp	.+124    	; 0x288 <main+0x164>
 20c:	85 30       	cpi	r24, 0x05	; 5
 20e:	91 05       	cpc	r25, r1
 {
    // if (stopuhr_ms <=2000)
     {
          ledWriteAll(LED_MUSTER+i);
 210:	91 f4       	brne	.+36     	; 0x236 <main+0x112>
 212:	21 96       	adiw	r28, 0x01	; 1
 214:	ce 01       	movw	r24, r28
 216:	42 d0       	rcall	.+132    	; 0x29c <ledWriteAll>
 218:	9f ef       	ldi	r25, 0xFF	; 255
 21a:	27 ea       	ldi	r18, 0xA7	; 167
 21c:	31 e6       	ldi	r19, 0x61	; 97
 21e:	91 50       	subi	r25, 0x01	; 1
 220:	20 40       	sbci	r18, 0x00	; 0
 222:	30 40       	sbci	r19, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <main+0xfa>
 226:	00 c0       	rjmp	.+0      	; 0x228 <main+0x104>
 228:	00 00       	nop
          i = i + SCHRITT_LAENGE;
          _delay_ms(2000);
          if (i>=16)
 22a:	c0 31       	cpi	r28, 0x10	; 16
 22c:	d1 05       	cpc	r29, r1
 22e:	60 f1       	brcs	.+88     	; 0x288 <main+0x164>
          {
              i = START_POSITION;
 230:	c0 e0       	ldi	r28, 0x00	; 0
 232:	d0 e0       	ldi	r29, 0x00	; 0
           //     stopuhr_ms = 0;
           // }
     }
    
 }     
 else if (schalter == 6)
 234:	29 c0       	rjmp	.+82     	; 0x288 <main+0x164>
 236:	86 30       	cpi	r24, 0x06	; 6
 238:	91 05       	cpc	r25, r1
 {
   // if (stopuhr_ms <=5000)
    {
       ledWriteAll(LED_MUSTER+i);
 23a:	91 f4       	brne	.+36     	; 0x260 <main+0x13c>
 23c:	21 96       	adiw	r28, 0x01	; 1
 23e:	ce 01       	movw	r24, r28
 240:	2d d0       	rcall	.+90     	; 0x29c <ledWriteAll>
 242:	8f ef       	ldi	r24, 0xFF	; 255
 244:	93 e2       	ldi	r25, 0x23	; 35
 246:	24 ef       	ldi	r18, 0xF4	; 244
 248:	81 50       	subi	r24, 0x01	; 1
 24a:	90 40       	sbci	r25, 0x00	; 0
 24c:	20 40       	sbci	r18, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x124>
 250:	00 c0       	rjmp	.+0      	; 0x252 <main+0x12e>
 252:	00 00       	nop
       i = i + SCHRITT_LAENGE;
       _delay_ms(5000);
       if (i>=16)
 254:	c0 31       	cpi	r28, 0x10	; 16
 256:	d1 05       	cpc	r29, r1
       {
           i = START_POSITION;
 258:	b8 f0       	brcs	.+46     	; 0x288 <main+0x164>
 25a:	c0 e0       	ldi	r28, 0x00	; 0
 25c:	d0 e0       	ldi	r29, 0x00	; 0
        //     stopuhr_ms = 0;
        // }
    }
     
 }    
 else if (schalter == 7)
 25e:	14 c0       	rjmp	.+40     	; 0x288 <main+0x164>
 260:	07 97       	sbiw	r24, 0x07	; 7
 {
    // if (stopuhr_ms <=10000)
     {
         ledWriteAll(LED_MUSTER+i);
 262:	91 f4       	brne	.+36     	; 0x288 <main+0x164>
 264:	21 96       	adiw	r28, 0x01	; 1
 266:	ce 01       	movw	r24, r28
 268:	19 d0       	rcall	.+50     	; 0x29c <ledWriteAll>
 26a:	3a ea       	ldi	r19, 0xAA	; 170
 26c:	86 ee       	ldi	r24, 0xE6	; 230
 26e:	96 e9       	ldi	r25, 0x96	; 150
 270:	21 e0       	ldi	r18, 0x01	; 1
 272:	31 50       	subi	r19, 0x01	; 1
 274:	80 40       	sbci	r24, 0x00	; 0
 276:	90 40       	sbci	r25, 0x00	; 0
 278:	20 40       	sbci	r18, 0x00	; 0
 27a:	d9 f7       	brne	.-10     	; 0x272 <main+0x14e>
 27c:	00 00       	nop
         i = i + SCHRITT_LAENGE;
         _delay_ms(10000);
         if (i>=16)
 27e:	c0 31       	cpi	r28, 0x10	; 16
 280:	d1 05       	cpc	r29, r1
 282:	10 f0       	brcs	.+4      	; 0x288 <main+0x164>
         {
             i = START_POSITION;
 284:	c0 e0       	ldi	r28, 0x00	; 0
 286:	d0 e0       	ldi	r29, 0x00	; 0
 288:	3f ef       	ldi	r19, 0xFF	; 255
 28a:	80 e7       	ldi	r24, 0x70	; 112
 28c:	92 e0       	ldi	r25, 0x02	; 2
 28e:	31 50       	subi	r19, 0x01	; 1
 290:	80 40       	sbci	r24, 0x00	; 0
 292:	90 40       	sbci	r25, 0x00	; 0
 294:	e1 f7       	brne	.-8      	; 0x28e <main+0x16a>
 296:	00 c0       	rjmp	.+0      	; 0x298 <main+0x174>
 298:	00 00       	nop
        _delay_ms(SYSTEMTAKT);
        stopuhr_ms = stopuhr_ms + SYSTEMTAKT;
      
        
           
    }
 29a:	48 cf       	rjmp	.-368    	; 0x12c <main+0x8>

0000029c <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position für das nächste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das nächste Zeichen richten
    }
}
 29c:	82 b9       	out	0x02, r24	; 2
 29e:	95 b9       	out	0x05, r25	; 5
 2a0:	08 95       	ret

000002a2 <switchReadAll>:
 2a2:	86 b1       	in	r24, 0x06	; 6
 2a4:	08 95       	ret

000002a6 <startSystemTimeMs>:
 2a6:	83 e0       	ldi	r24, 0x03	; 3
 2a8:	84 bd       	out	0x24, r24	; 36
 2aa:	8b e0       	ldi	r24, 0x0B	; 11
 2ac:	85 bd       	out	0x25, r24	; 37
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 2b4:	89 ef       	ldi	r24, 0xF9	; 249
 2b6:	87 bd       	out	0x27, r24	; 39
 2b8:	08 95       	ret

000002ba <initAdc>:
 2ba:	11 ba       	out	0x11, r1	; 17
 2bc:	10 ba       	out	0x10, r1	; 16
 2be:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 2c2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 2c6:	80 e4       	ldi	r24, 0x40	; 64
 2c8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 2cc:	8f e0       	ldi	r24, 0x0F	; 15
 2ce:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 2d8:	ea e7       	ldi	r30, 0x7A	; 122
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	87 ea       	ldi	r24, 0xA7	; 167
 2de:	80 83       	st	Z, r24
 2e0:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 2e4:	80 81       	ld	r24, Z
 2e6:	80 64       	ori	r24, 0x40	; 64
 2e8:	80 83       	st	Z, r24
 2ea:	80 81       	ld	r24, Z
 2ec:	84 ff       	sbrs	r24, 4
 2ee:	fd cf       	rjmp	.-6      	; 0x2ea <initAdc+0x30>
 2f0:	ea e7       	ldi	r30, 0x7A	; 122
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	8f 7e       	andi	r24, 0xEF	; 239
 2f8:	80 83       	st	Z, r24
 2fa:	08 95       	ret

000002fc <rgbWrite>:
 2fc:	2f ef       	ldi	r18, 0xFF	; 255
 2fe:	33 e0       	ldi	r19, 0x03	; 3
 300:	f9 01       	movw	r30, r18
 302:	e8 1b       	sub	r30, r24
 304:	f9 0b       	sbc	r31, r25
 306:	c9 01       	movw	r24, r18
 308:	86 1b       	sub	r24, r22
 30a:	97 0b       	sbc	r25, r23
 30c:	24 1b       	sub	r18, r20
 30e:	35 0b       	sbc	r19, r21
 310:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 314:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 318:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 31c:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 320:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 324:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 328:	08 95       	ret

0000032a <initRgb>:
 32a:	8e ef       	ldi	r24, 0xFE	; 254
 32c:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 330:	8b e1       	ldi	r24, 0x1B	; 27
 332:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 336:	83 e0       	ldi	r24, 0x03	; 3
 338:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 33c:	8f ef       	ldi	r24, 0xFF	; 255
 33e:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 342:	40 e0       	ldi	r20, 0x00	; 0
 344:	50 e0       	ldi	r21, 0x00	; 0
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	d6 cf       	rjmp	.-84     	; 0x2fc <rgbWrite>
 350:	08 95       	ret

00000352 <lcdSid>:
 352:	88 23       	and	r24, r24
 354:	11 f0       	breq	.+4      	; 0x35a <lcdSid+0x8>
 356:	a0 9a       	sbi	0x14, 0	; 20
 358:	08 95       	ret
 35a:	a0 98       	cbi	0x14, 0	; 20
 35c:	08 95       	ret

0000035e <lcdSclk>:
 35e:	88 23       	and	r24, r24
 360:	11 f0       	breq	.+4      	; 0x366 <lcdSclk+0x8>
 362:	a1 9a       	sbi	0x14, 1	; 20
 364:	08 95       	ret
 366:	a1 98       	cbi	0x14, 1	; 20
 368:	08 95       	ret

0000036a <lcdLight>:
 36a:	81 11       	cpse	r24, r1
 36c:	04 c0       	rjmp	.+8      	; 0x376 <lcdLight+0xc>
 36e:	84 b5       	in	r24, 0x24	; 36
 370:	8f 7d       	andi	r24, 0xDF	; 223
 372:	84 bd       	out	0x24, r24	; 36
 374:	08 95       	ret
 376:	94 b5       	in	r25, 0x24	; 36
 378:	90 62       	ori	r25, 0x20	; 32
 37a:	94 bd       	out	0x24, r25	; 36
 37c:	88 bd       	out	0x28, r24	; 40
 37e:	08 95       	ret

00000380 <writeLcdF>:
 380:	ef 92       	push	r14
 382:	ff 92       	push	r15
 384:	0f 93       	push	r16
 386:	1f 93       	push	r17
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	7c 01       	movw	r14, r24
 38e:	eb 01       	movw	r28, r22
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	df df       	rcall	.-66     	; 0x352 <lcdSid>
 394:	05 e0       	ldi	r16, 0x05	; 5
 396:	10 e0       	ldi	r17, 0x00	; 0
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	e1 df       	rcall	.-62     	; 0x35e <lcdSclk>
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	df df       	rcall	.-66     	; 0x35e <lcdSclk>
 3a0:	01 50       	subi	r16, 0x01	; 1
 3a2:	11 09       	sbc	r17, r1
 3a4:	c9 f7       	brne	.-14     	; 0x398 <writeLcdF+0x18>
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	d4 df       	rcall	.-88     	; 0x352 <lcdSid>
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	d8 df       	rcall	.-80     	; 0x35e <lcdSclk>
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	d6 df       	rcall	.-84     	; 0x35e <lcdSclk>
 3b2:	83 e4       	ldi	r24, 0x43	; 67
 3b4:	e8 16       	cp	r14, r24
 3b6:	f1 04       	cpc	r15, r1
 3b8:	19 f4       	brne	.+6      	; 0x3c0 <writeLcdF+0x40>
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	ca df       	rcall	.-108    	; 0x352 <lcdSid>
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <writeLcdF+0x44>
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	c7 df       	rcall	.-114    	; 0x352 <lcdSid>
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	cb df       	rcall	.-106    	; 0x35e <lcdSclk>
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	c9 df       	rcall	.-110    	; 0x35e <lcdSclk>
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	c1 df       	rcall	.-126    	; 0x352 <lcdSid>
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	c5 df       	rcall	.-118    	; 0x35e <lcdSclk>
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	c3 df       	rcall	.-122    	; 0x35e <lcdSclk>
 3d8:	04 e0       	ldi	r16, 0x04	; 4
 3da:	10 e0       	ldi	r17, 0x00	; 0
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	bf df       	rcall	.-130    	; 0x35e <lcdSclk>
 3e0:	c0 ff       	sbrs	r28, 0
 3e2:	03 c0       	rjmp	.+6      	; 0x3ea <writeLcdF+0x6a>
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	b5 df       	rcall	.-150    	; 0x352 <lcdSid>
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <writeLcdF+0x6e>
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	b2 df       	rcall	.-156    	; 0x352 <lcdSid>
 3ee:	d6 95       	lsr	r29
 3f0:	c7 95       	ror	r28
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	b4 df       	rcall	.-152    	; 0x35e <lcdSclk>
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	b2 df       	rcall	.-156    	; 0x35e <lcdSclk>
 3fa:	01 50       	subi	r16, 0x01	; 1
 3fc:	11 09       	sbc	r17, r1
 3fe:	71 f7       	brne	.-36     	; 0x3dc <writeLcdF+0x5c>
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	a7 df       	rcall	.-178    	; 0x352 <lcdSid>
 404:	04 e0       	ldi	r16, 0x04	; 4
 406:	10 e0       	ldi	r17, 0x00	; 0
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	a9 df       	rcall	.-174    	; 0x35e <lcdSclk>
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	a7 df       	rcall	.-178    	; 0x35e <lcdSclk>
 410:	01 50       	subi	r16, 0x01	; 1
 412:	11 09       	sbc	r17, r1
 414:	c9 f7       	brne	.-14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 416:	04 e0       	ldi	r16, 0x04	; 4
 418:	10 e0       	ldi	r17, 0x00	; 0
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	a0 df       	rcall	.-192    	; 0x35e <lcdSclk>
 41e:	c0 ff       	sbrs	r28, 0
 420:	03 c0       	rjmp	.+6      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	96 df       	rcall	.-212    	; 0x352 <lcdSid>
 426:	02 c0       	rjmp	.+4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 428:	80 e0       	ldi	r24, 0x00	; 0
 42a:	93 df       	rcall	.-218    	; 0x352 <lcdSid>
 42c:	d6 95       	lsr	r29
 42e:	c7 95       	ror	r28
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	95 df       	rcall	.-214    	; 0x35e <lcdSclk>
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	93 df       	rcall	.-218    	; 0x35e <lcdSclk>
 438:	01 50       	subi	r16, 0x01	; 1
 43a:	11 09       	sbc	r17, r1
 43c:	71 f7       	brne	.-36     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 43e:	80 e0       	ldi	r24, 0x00	; 0
 440:	88 df       	rcall	.-240    	; 0x352 <lcdSid>
 442:	c4 e0       	ldi	r28, 0x04	; 4
 444:	d0 e0       	ldi	r29, 0x00	; 0
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	8a df       	rcall	.-236    	; 0x35e <lcdSclk>
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	88 df       	rcall	.-240    	; 0x35e <lcdSclk>
 44e:	21 97       	sbiw	r28, 0x01	; 1
 450:	d1 f7       	brne	.-12     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	7e df       	rcall	.-260    	; 0x352 <lcdSid>
 456:	87 ec       	ldi	r24, 0xC7	; 199
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 460:	00 00       	nop
 462:	df 91       	pop	r29
 464:	cf 91       	pop	r28
 466:	1f 91       	pop	r17
 468:	0f 91       	pop	r16
 46a:	ff 90       	pop	r15
 46c:	ef 90       	pop	r14
 46e:	08 95       	ret

00000470 <lcdWriteText>:
 470:	1f 93       	push	r17
 472:	cf 93       	push	r28
 474:	df 93       	push	r29
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
 47a:	65 97       	sbiw	r28, 0x15	; 21
 47c:	0f b6       	in	r0, 0x3f	; 63
 47e:	f8 94       	cli
 480:	de bf       	out	0x3e, r29	; 62
 482:	0f be       	out	0x3f, r0	; 63
 484:	cd bf       	out	0x3d, r28	; 61
 486:	9e 01       	movw	r18, r28
 488:	20 5e       	subi	r18, 0xE0	; 224
 48a:	3f 4f       	sbci	r19, 0xFF	; 255
 48c:	4e 8d       	ldd	r20, Y+30	; 0x1e
 48e:	5f 8d       	ldd	r21, Y+31	; 0x1f
 490:	65 e1       	ldi	r22, 0x15	; 21
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	ce 01       	movw	r24, r28
 496:	01 96       	adiw	r24, 0x01	; 1
 498:	3a d2       	rcall	.+1140   	; 0x90e <vsnprintf>
 49a:	6d 8d       	ldd	r22, Y+29	; 0x1d
 49c:	8c 8d       	ldd	r24, Y+28	; 0x1c
 49e:	90 e2       	ldi	r25, 0x20	; 32
 4a0:	89 9f       	mul	r24, r25
 4a2:	60 0d       	add	r22, r0
 4a4:	11 24       	eor	r1, r1
 4a6:	60 68       	ori	r22, 0x80	; 128
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	83 e4       	ldi	r24, 0x43	; 67
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	68 df       	rcall	.-304    	; 0x380 <writeLcdF>
 4b0:	69 81       	ldd	r22, Y+1	; 0x01
 4b2:	66 23       	and	r22, r22
 4b4:	79 f0       	breq	.+30     	; 0x4d4 <lcdWriteText+0x64>
 4b6:	10 e0       	ldi	r17, 0x00	; 0
 4b8:	1f 5f       	subi	r17, 0xFF	; 255
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	84 e4       	ldi	r24, 0x44	; 68
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	5f df       	rcall	.-322    	; 0x380 <writeLcdF>
 4c2:	e1 e0       	ldi	r30, 0x01	; 1
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	ec 0f       	add	r30, r28
 4c8:	fd 1f       	adc	r31, r29
 4ca:	e1 0f       	add	r30, r17
 4cc:	f1 1d       	adc	r31, r1
 4ce:	60 81       	ld	r22, Z
 4d0:	61 11       	cpse	r22, r1
 4d2:	f2 cf       	rjmp	.-28     	; 0x4b8 <lcdWriteText+0x48>
 4d4:	65 96       	adiw	r28, 0x15	; 21
 4d6:	0f b6       	in	r0, 0x3f	; 63
 4d8:	f8 94       	cli
 4da:	de bf       	out	0x3e, r29	; 62
 4dc:	0f be       	out	0x3f, r0	; 63
 4de:	cd bf       	out	0x3d, r28	; 61
 4e0:	df 91       	pop	r29
 4e2:	cf 91       	pop	r28
 4e4:	1f 91       	pop	r17
 4e6:	08 95       	ret

000004e8 <lcdClear>:
 4e8:	61 e0       	ldi	r22, 0x01	; 1
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	83 e4       	ldi	r24, 0x43	; 67
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	47 df       	rcall	.-370    	; 0x380 <writeLcdF>
 4f2:	8f e3       	ldi	r24, 0x3F	; 63
 4f4:	9f e1       	ldi	r25, 0x1F	; 31
 4f6:	01 97       	sbiw	r24, 0x01	; 1
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <lcdClear+0xe>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <lcdClear+0x14>
 4fc:	00 00       	nop
 4fe:	80 e3       	ldi	r24, 0x30	; 48
 500:	92 e0       	ldi	r25, 0x02	; 2
 502:	9f 93       	push	r25
 504:	8f 93       	push	r24
 506:	1f 92       	push	r1
 508:	1f 92       	push	r1
 50a:	b2 df       	rcall	.-156    	; 0x470 <lcdWriteText>
 50c:	0f 90       	pop	r0
 50e:	0f 90       	pop	r0
 510:	0f 90       	pop	r0
 512:	0f 90       	pop	r0
 514:	08 95       	ret

00000516 <initLcd>:
 516:	81 e0       	ldi	r24, 0x01	; 1
 518:	22 df       	rcall	.-444    	; 0x35e <lcdSclk>
 51a:	80 e0       	ldi	r24, 0x00	; 0
 51c:	1a df       	rcall	.-460    	; 0x352 <lcdSid>
 51e:	64 e3       	ldi	r22, 0x34	; 52
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	83 e4       	ldi	r24, 0x43	; 67
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	2c df       	rcall	.-424    	; 0x380 <writeLcdF>
 528:	69 e0       	ldi	r22, 0x09	; 9
 52a:	70 e0       	ldi	r23, 0x00	; 0
 52c:	83 e4       	ldi	r24, 0x43	; 67
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	27 df       	rcall	.-434    	; 0x380 <writeLcdF>
 532:	60 e3       	ldi	r22, 0x30	; 48
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	83 e4       	ldi	r24, 0x43	; 67
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	22 df       	rcall	.-444    	; 0x380 <writeLcdF>
 53c:	6c e0       	ldi	r22, 0x0C	; 12
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	83 e4       	ldi	r24, 0x43	; 67
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	1d df       	rcall	.-454    	; 0x380 <writeLcdF>
 546:	d0 df       	rcall	.-96     	; 0x4e8 <lcdClear>
 548:	67 e0       	ldi	r22, 0x07	; 7
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	83 e4       	ldi	r24, 0x43	; 67
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	17 df       	rcall	.-466    	; 0x380 <writeLcdF>
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	0a cf       	rjmp	.-492    	; 0x36a <lcdLight>
 556:	08 95       	ret

00000558 <initBoard>:
 558:	4f 92       	push	r4
 55a:	5f 92       	push	r5
 55c:	6f 92       	push	r6
 55e:	7f 92       	push	r7
 560:	8f 92       	push	r8
 562:	9f 92       	push	r9
 564:	af 92       	push	r10
 566:	bf 92       	push	r11
 568:	cf 92       	push	r12
 56a:	df 92       	push	r13
 56c:	ef 92       	push	r14
 56e:	ff 92       	push	r15
 570:	0f 93       	push	r16
 572:	1f 93       	push	r17
 574:	cf 93       	push	r28
 576:	df 93       	push	r29
 578:	c8 2f       	mov	r28, r24
 57a:	85 b7       	in	r24, 0x35	; 53
 57c:	85 bf       	out	0x35, r24	; 53
 57e:	12 b8       	out	0x02, r1	; 2
 580:	8f ef       	ldi	r24, 0xFF	; 255
 582:	81 b9       	out	0x01, r24	; 1
 584:	15 b8       	out	0x05, r1	; 5
 586:	84 b9       	out	0x04, r24	; 4
 588:	88 b9       	out	0x08, r24	; 8
 58a:	17 b8       	out	0x07, r1	; 7
 58c:	8b b9       	out	0x0b, r24	; 11
 58e:	1a b8       	out	0x0a, r1	; 10
 590:	8e b9       	out	0x0e, r24	; 14
 592:	1d b8       	out	0x0d, r1	; 13
 594:	72 98       	cbi	0x0e, 2	; 14
 596:	11 ba       	out	0x11, r1	; 17
 598:	10 ba       	out	0x10, r1	; 16
 59a:	94 e0       	ldi	r25, 0x04	; 4
 59c:	94 bb       	out	0x14, r25	; 20
 59e:	93 b3       	in	r25, 0x13	; 19
 5a0:	93 60       	ori	r25, 0x03	; 3
 5a2:	93 bb       	out	0x13, r25	; 19
 5a4:	9d 9a       	sbi	0x13, 5	; 19
 5a6:	97 ec       	ldi	r25, 0xC7	; 199
 5a8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 5ac:	98 e3       	ldi	r25, 0x38	; 56
 5ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 5b2:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 5b6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 5ba:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 5be:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 5c2:	8c e3       	ldi	r24, 0x3C	; 60
 5c4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 5c8:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 5cc:	78 94       	sei
 5ce:	6b de       	rcall	.-810    	; 0x2a6 <startSystemTimeMs>
 5d0:	a2 df       	rcall	.-188    	; 0x516 <initLcd>
 5d2:	73 de       	rcall	.-794    	; 0x2ba <initAdc>
 5d4:	aa de       	rcall	.-684    	; 0x32a <initRgb>
 5d6:	cc 23       	and	r28, r28
 5d8:	09 f4       	brne	.+2      	; 0x5dc <initBoard+0x84>
 5da:	b8 c0       	rjmp	.+368    	; 0x74c <initBoard+0x1f4>
 5dc:	8f ef       	ldi	r24, 0xFF	; 255
 5de:	c5 de       	rcall	.-630    	; 0x36a <lcdLight>
 5e0:	40 e0       	ldi	r20, 0x00	; 0
 5e2:	50 e0       	ldi	r21, 0x00	; 0
 5e4:	6f ef       	ldi	r22, 0xFF	; 255
 5e6:	73 e0       	ldi	r23, 0x03	; 3
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	87 de       	rcall	.-754    	; 0x2fc <rgbWrite>
 5ee:	8d e1       	ldi	r24, 0x1D	; 29
 5f0:	92 e0       	ldi	r25, 0x02	; 2
 5f2:	9f 93       	push	r25
 5f4:	8f 93       	push	r24
 5f6:	1f 92       	push	r1
 5f8:	1f 92       	push	r1
 5fa:	3a df       	rcall	.-396    	; 0x470 <lcdWriteText>
 5fc:	82 e3       	ldi	r24, 0x32	; 50
 5fe:	92 e0       	ldi	r25, 0x02	; 2
 600:	9f 93       	push	r25
 602:	8f 93       	push	r24
 604:	1f 92       	push	r1
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	8f 93       	push	r24
 60a:	32 df       	rcall	.-412    	; 0x470 <lcdWriteText>
 60c:	88 e0       	ldi	r24, 0x08	; 8
 60e:	92 e0       	ldi	r25, 0x02	; 2
 610:	9f 93       	push	r25
 612:	8f 93       	push	r24
 614:	1f 92       	push	r1
 616:	82 e0       	ldi	r24, 0x02	; 2
 618:	8f 93       	push	r24
 61a:	2a df       	rcall	.-428    	; 0x470 <lcdWriteText>
 61c:	87 e4       	ldi	r24, 0x47	; 71
 61e:	92 e0       	ldi	r25, 0x02	; 2
 620:	9f 93       	push	r25
 622:	8f 93       	push	r24
 624:	1f 92       	push	r1
 626:	83 e0       	ldi	r24, 0x03	; 3
 628:	8f 93       	push	r24
 62a:	22 df       	rcall	.-444    	; 0x470 <lcdWriteText>
 62c:	8d b7       	in	r24, 0x3d	; 61
 62e:	9e b7       	in	r25, 0x3e	; 62
 630:	40 96       	adiw	r24, 0x10	; 16
 632:	0f b6       	in	r0, 0x3f	; 63
 634:	f8 94       	cli
 636:	9e bf       	out	0x3e, r25	; 62
 638:	0f be       	out	0x3f, r0	; 63
 63a:	8d bf       	out	0x3d, r24	; 61
 63c:	88 24       	eor	r8, r8
 63e:	83 94       	inc	r8
 640:	c0 e0       	ldi	r28, 0x00	; 0
 642:	71 2c       	mov	r7, r1
 644:	99 24       	eor	r9, r9
 646:	93 94       	inc	r9
 648:	d0 e0       	ldi	r29, 0x00	; 0
 64a:	cc 24       	eor	r12, r12
 64c:	c3 94       	inc	r12
 64e:	d1 2c       	mov	r13, r1
 650:	e1 2c       	mov	r14, r1
 652:	68 94       	set
 654:	ff 24       	eor	r15, r15
 656:	f7 f8       	bld	r15, 7
 658:	66 24       	eor	r6, r6
 65a:	63 94       	inc	r6
 65c:	51 2c       	mov	r5, r1
 65e:	09 e0       	ldi	r16, 0x09	; 9
 660:	11 e0       	ldi	r17, 0x01	; 1
 662:	0f 2e       	mov	r0, r31
 664:	fc e5       	ldi	r31, 0x5C	; 92
 666:	af 2e       	mov	r10, r31
 668:	f2 e0       	ldi	r31, 0x02	; 2
 66a:	bf 2e       	mov	r11, r31
 66c:	f0 2d       	mov	r31, r0
 66e:	0f 2e       	mov	r0, r31
 670:	f3 e0       	ldi	r31, 0x03	; 3
 672:	4f 2e       	mov	r4, r31
 674:	f0 2d       	mov	r31, r0
 676:	99 20       	and	r9, r9
 678:	49 f0       	breq	.+18     	; 0x68c <initBoard+0x134>
 67a:	c7 01       	movw	r24, r14
 67c:	0d 2e       	mov	r0, r29
 67e:	02 c0       	rjmp	.+4      	; 0x684 <initBoard+0x12c>
 680:	96 95       	lsr	r25
 682:	87 95       	ror	r24
 684:	0a 94       	dec	r0
 686:	e2 f7       	brpl	.-8      	; 0x680 <initBoard+0x128>
 688:	09 de       	rcall	.-1006   	; 0x29c <ledWriteAll>
 68a:	08 c0       	rjmp	.+16     	; 0x69c <initBoard+0x144>
 68c:	c6 01       	movw	r24, r12
 68e:	0d 2e       	mov	r0, r29
 690:	02 c0       	rjmp	.+4      	; 0x696 <initBoard+0x13e>
 692:	88 0f       	add	r24, r24
 694:	99 1f       	adc	r25, r25
 696:	0a 94       	dec	r0
 698:	e2 f7       	brpl	.-8      	; 0x692 <initBoard+0x13a>
 69a:	00 de       	rcall	.-1024   	; 0x29c <ledWriteAll>
 69c:	df 5f       	subi	r29, 0xFF	; 255
 69e:	d1 31       	cpi	r29, 0x11	; 17
 6a0:	28 f0       	brcs	.+10     	; 0x6ac <initBoard+0x154>
 6a2:	86 2d       	mov	r24, r6
 6a4:	91 10       	cpse	r9, r1
 6a6:	85 2d       	mov	r24, r5
 6a8:	98 2e       	mov	r9, r24
 6aa:	d0 e0       	ldi	r29, 0x00	; 0
 6ac:	88 20       	and	r8, r8
 6ae:	11 f0       	breq	.+4      	; 0x6b4 <initBoard+0x15c>
 6b0:	ce 5f       	subi	r28, 0xFE	; 254
 6b2:	01 c0       	rjmp	.+2      	; 0x6b6 <initBoard+0x15e>
 6b4:	c2 50       	subi	r28, 0x02	; 2
 6b6:	8c 2f       	mov	r24, r28
 6b8:	58 de       	rcall	.-848    	; 0x36a <lcdLight>
 6ba:	ce 3f       	cpi	r28, 0xFE	; 254
 6bc:	21 f0       	breq	.+8      	; 0x6c6 <initBoard+0x16e>
 6be:	c8 37       	cpi	r28, 0x78	; 120
 6c0:	19 f4       	brne	.+6      	; 0x6c8 <initBoard+0x170>
 6c2:	86 2c       	mov	r8, r6
 6c4:	01 c0       	rjmp	.+2      	; 0x6c8 <initBoard+0x170>
 6c6:	85 2c       	mov	r8, r5
 6c8:	71 10       	cpse	r7, r1
 6ca:	3b c0       	rjmp	.+118    	; 0x742 <initBoard+0x1ea>
 6cc:	f8 01       	movw	r30, r16
 6ce:	80 81       	ld	r24, Z
 6d0:	83 7c       	andi	r24, 0xC3	; 195
 6d2:	91 f0       	breq	.+36     	; 0x6f8 <initBoard+0x1a0>
 6d4:	40 e0       	ldi	r20, 0x00	; 0
 6d6:	50 e0       	ldi	r21, 0x00	; 0
 6d8:	66 e2       	ldi	r22, 0x26	; 38
 6da:	72 e0       	ldi	r23, 0x02	; 2
 6dc:	8f ef       	ldi	r24, 0xFF	; 255
 6de:	93 e0       	ldi	r25, 0x03	; 3
 6e0:	0d de       	rcall	.-998    	; 0x2fc <rgbWrite>
 6e2:	bf 92       	push	r11
 6e4:	af 92       	push	r10
 6e6:	1f 92       	push	r1
 6e8:	4f 92       	push	r4
 6ea:	c2 de       	rcall	.-636    	; 0x470 <lcdWriteText>
 6ec:	0f 90       	pop	r0
 6ee:	0f 90       	pop	r0
 6f0:	0f 90       	pop	r0
 6f2:	0f 90       	pop	r0
 6f4:	76 2c       	mov	r7, r6
 6f6:	25 c0       	rjmp	.+74     	; 0x742 <initBoard+0x1ea>
 6f8:	8f ef       	ldi	r24, 0xFF	; 255
 6fa:	9c e7       	ldi	r25, 0x7C	; 124
 6fc:	01 97       	sbiw	r24, 0x01	; 1
 6fe:	f1 f7       	brne	.-4      	; 0x6fc <initBoard+0x1a4>
 700:	00 c0       	rjmp	.+0      	; 0x702 <initBoard+0x1aa>
 702:	00 00       	nop
 704:	b8 cf       	rjmp	.-144    	; 0x676 <initBoard+0x11e>
 706:	f0 de       	rcall	.-544    	; 0x4e8 <lcdClear>
 708:	80 e0       	ldi	r24, 0x00	; 0
 70a:	2f de       	rcall	.-930    	; 0x36a <lcdLight>
 70c:	80 e0       	ldi	r24, 0x00	; 0
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	c5 dd       	rcall	.-1142   	; 0x29c <ledWriteAll>
 712:	40 e0       	ldi	r20, 0x00	; 0
 714:	50 e0       	ldi	r21, 0x00	; 0
 716:	60 e0       	ldi	r22, 0x00	; 0
 718:	70 e0       	ldi	r23, 0x00	; 0
 71a:	80 e0       	ldi	r24, 0x00	; 0
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	ee dd       	rcall	.-1060   	; 0x2fc <rgbWrite>
 720:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <systemTimeMs>
 724:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <systemTimeMs+0x1>
 728:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <systemTimeMs+0x2>
 72c:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <systemTimeMs+0x3>
 730:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <systemTimeMs+0x4>
 734:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <systemTimeMs+0x5>
 738:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <systemTimeMs+0x6>
 73c:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <systemTimeMs+0x7>
 740:	05 c0       	rjmp	.+10     	; 0x74c <initBoard+0x1f4>
 742:	f8 01       	movw	r30, r16
 744:	80 81       	ld	r24, Z
 746:	83 7c       	andi	r24, 0xC3	; 195
 748:	b9 f6       	brne	.-82     	; 0x6f8 <initBoard+0x1a0>
 74a:	dd cf       	rjmp	.-70     	; 0x706 <initBoard+0x1ae>
 74c:	df 91       	pop	r29
 74e:	cf 91       	pop	r28
 750:	1f 91       	pop	r17
 752:	0f 91       	pop	r16
 754:	ff 90       	pop	r15
 756:	ef 90       	pop	r14
 758:	df 90       	pop	r13
 75a:	cf 90       	pop	r12
 75c:	bf 90       	pop	r11
 75e:	af 90       	pop	r10
 760:	9f 90       	pop	r9
 762:	8f 90       	pop	r8
 764:	7f 90       	pop	r7
 766:	6f 90       	pop	r6
 768:	5f 90       	pop	r5
 76a:	4f 90       	pop	r4
 76c:	08 95       	ret

0000076e <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 76e:	cf 93       	push	r28
 770:	df 93       	push	r29
 772:	cd b7       	in	r28, 0x3d	; 61
 774:	de b7       	in	r29, 0x3e	; 62
 776:	28 97       	sbiw	r28, 0x08	; 8
 778:	0f b6       	in	r0, 0x3f	; 63
 77a:	f8 94       	cli
 77c:	de bf       	out	0x3e, r29	; 62
 77e:	0f be       	out	0x3f, r0	; 63
 780:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 782:	88 e0       	ldi	r24, 0x08	; 8
 784:	e0 e0       	ldi	r30, 0x00	; 0
 786:	f2 e0       	ldi	r31, 0x02	; 2
 788:	de 01       	movw	r26, r28
 78a:	11 96       	adiw	r26, 0x01	; 1
 78c:	01 90       	ld	r0, Z+
 78e:	0d 92       	st	X+, r0
 790:	8a 95       	dec	r24
 792:	e1 f7       	brne	.-8      	; 0x78c <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 794:	e5 e0       	ldi	r30, 0x05	; 5
 796:	f1 e0       	ldi	r31, 0x01	; 1
 798:	80 81       	ld	r24, Z
 79a:	8f 7b       	andi	r24, 0xBF	; 191
 79c:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 79e:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 7a2:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	8c 0f       	add	r24, r28
 7ac:	9d 1f       	adc	r25, r29
 7ae:	e8 0f       	add	r30, r24
 7b0:	f9 1f       	adc	r31, r25
 7b2:	80 81       	ld	r24, Z
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <__data_end+0x1>
 7ba:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <__data_end>
 7be:	a2 ef       	ldi	r26, 0xF2	; 242
 7c0:	b2 e0       	ldi	r27, 0x02	; 2
 7c2:	22 e8       	ldi	r18, 0x82	; 130
 7c4:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7c6:	e5 e0       	ldi	r30, 0x05	; 5
 7c8:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 7ca:	5e 91       	ld	r21, -X
 7cc:	4e 91       	ld	r20, -X
 7ce:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
 7d2:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <__data_end+0x1>
 7d6:	84 23       	and	r24, r20
 7d8:	95 23       	and	r25, r21
 7da:	89 2b       	or	r24, r25
 7dc:	21 f0       	breq	.+8      	; 0x7e6 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 7de:	80 81       	ld	r24, Z
 7e0:	80 62       	ori	r24, 0x20	; 32
 7e2:	80 83       	st	Z, r24
 7e4:	03 c0       	rjmp	.+6      	; 0x7ec <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 7e6:	80 81       	ld	r24, Z
 7e8:	8f 7d       	andi	r24, 0xDF	; 223
 7ea:	80 83       	st	Z, r24
        }
        CLOCK_1;
 7ec:	80 81       	ld	r24, Z
 7ee:	80 61       	ori	r24, 0x10	; 16
 7f0:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
 7f2:	80 81       	ld	r24, Z
 7f4:	8f 7e       	andi	r24, 0xEF	; 239
 7f6:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und überpüfen, ob Bit gesetzt ist
 7f8:	a2 17       	cp	r26, r18
 7fa:	b3 07       	cpc	r27, r19
 7fc:	31 f7       	brne	.-52     	; 0x7ca <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals übernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 7fe:	e5 e0       	ldi	r30, 0x05	; 5
 800:	f1 e0       	ldi	r31, 0x01	; 1
 802:	80 81       	ld	r24, Z
 804:	87 7f       	andi	r24, 0xF7	; 247
 806:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 808:	80 81       	ld	r24, Z
 80a:	88 7f       	andi	r24, 0xF8	; 248
 80c:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gewünschte Zeile einstellen
 80e:	90 81       	ld	r25, Z
 810:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 814:	89 2b       	or	r24, r25
 816:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 818:	80 81       	ld	r24, Z
 81a:	80 64       	ori	r24, 0x40	; 64
 81c:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 81e:	80 81       	ld	r24, Z
 820:	88 60       	ori	r24, 0x08	; 8
 822:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 824:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <Zeilen_Nr.2725>
 828:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <Zeilen_Nr.2725+0x1>
 82c:	87 30       	cpi	r24, 0x07	; 7
 82e:	91 05       	cpc	r25, r1
 830:	30 f4       	brcc	.+12     	; 0x83e <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 832:	01 96       	adiw	r24, 0x01	; 1
 834:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <Zeilen_Nr.2725+0x1>
 838:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <Zeilen_Nr.2725>
 83c:	07 c0       	rjmp	.+14     	; 0x84c <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 83e:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <Zeilen_Nr.2725+0x1>
 842:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <Zeilen_Nr.2725>
        writeTextFinished = 1;
 846:	81 e0       	ldi	r24, 0x01	; 1
 848:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <writeTextFinished>
    }
    
 84c:	28 96       	adiw	r28, 0x08	; 8
 84e:	0f b6       	in	r0, 0x3f	; 63
 850:	f8 94       	cli
 852:	de bf       	out	0x3e, r29	; 62
 854:	0f be       	out	0x3f, r0	; 63
 856:	cd bf       	out	0x3d, r28	; 61
 858:	df 91       	pop	r29
 85a:	cf 91       	pop	r28
 85c:	08 95       	ret

0000085e <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 85e:	1f 92       	push	r1
 860:	0f 92       	push	r0
 862:	0f b6       	in	r0, 0x3f	; 63
 864:	0f 92       	push	r0
 866:	11 24       	eor	r1, r1
 868:	0b b6       	in	r0, 0x3b	; 59
 86a:	0f 92       	push	r0
 86c:	2f 93       	push	r18
 86e:	3f 93       	push	r19
 870:	4f 93       	push	r20
 872:	5f 93       	push	r21
 874:	6f 93       	push	r22
 876:	7f 93       	push	r23
 878:	8f 93       	push	r24
 87a:	9f 93       	push	r25
 87c:	af 93       	push	r26
 87e:	bf 93       	push	r27
 880:	ef 93       	push	r30
 882:	ff 93       	push	r31
    systemTimeMs += 1;
 884:	20 91 79 02 	lds	r18, 0x0279	; 0x800279 <systemTimeMs>
 888:	30 91 7a 02 	lds	r19, 0x027A	; 0x80027a <systemTimeMs+0x1>
 88c:	40 91 7b 02 	lds	r20, 0x027B	; 0x80027b <systemTimeMs+0x2>
 890:	50 91 7c 02 	lds	r21, 0x027C	; 0x80027c <systemTimeMs+0x3>
 894:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <systemTimeMs+0x4>
 898:	70 91 7e 02 	lds	r23, 0x027E	; 0x80027e <systemTimeMs+0x5>
 89c:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <systemTimeMs+0x6>
 8a0:	90 91 80 02 	lds	r25, 0x0280	; 0x800280 <systemTimeMs+0x7>
 8a4:	a1 e0       	ldi	r26, 0x01	; 1
 8a6:	27 d0       	rcall	.+78     	; 0x8f6 <__adddi3_s8>
 8a8:	20 93 79 02 	sts	0x0279, r18	; 0x800279 <systemTimeMs>
 8ac:	30 93 7a 02 	sts	0x027A, r19	; 0x80027a <systemTimeMs+0x1>
 8b0:	40 93 7b 02 	sts	0x027B, r20	; 0x80027b <systemTimeMs+0x2>
 8b4:	50 93 7c 02 	sts	0x027C, r21	; 0x80027c <systemTimeMs+0x3>
 8b8:	60 93 7d 02 	sts	0x027D, r22	; 0x80027d <systemTimeMs+0x4>
 8bc:	70 93 7e 02 	sts	0x027E, r23	; 0x80027e <systemTimeMs+0x5>
 8c0:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <systemTimeMs+0x6>
 8c4:	90 93 80 02 	sts	0x0280, r25	; 0x800280 <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 8c8:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <matrixRunning>
 8cc:	81 11       	cpse	r24, r1
 8ce:	4f df       	rcall	.-354    	; 0x76e <matrixWriteNextLine>
}
 8d0:	ff 91       	pop	r31
 8d2:	ef 91       	pop	r30
 8d4:	bf 91       	pop	r27
 8d6:	af 91       	pop	r26
 8d8:	9f 91       	pop	r25
 8da:	8f 91       	pop	r24
 8dc:	7f 91       	pop	r23
 8de:	6f 91       	pop	r22
 8e0:	5f 91       	pop	r21
 8e2:	4f 91       	pop	r20
 8e4:	3f 91       	pop	r19
 8e6:	2f 91       	pop	r18
 8e8:	0f 90       	pop	r0
 8ea:	0b be       	out	0x3b, r0	; 59
 8ec:	0f 90       	pop	r0
 8ee:	0f be       	out	0x3f, r0	; 63
 8f0:	0f 90       	pop	r0
 8f2:	1f 90       	pop	r1
 8f4:	18 95       	reti

000008f6 <__adddi3_s8>:
 8f6:	00 24       	eor	r0, r0
 8f8:	a7 fd       	sbrc	r26, 7
 8fa:	00 94       	com	r0
 8fc:	2a 0f       	add	r18, r26
 8fe:	30 1d       	adc	r19, r0
 900:	40 1d       	adc	r20, r0
 902:	50 1d       	adc	r21, r0
 904:	60 1d       	adc	r22, r0
 906:	70 1d       	adc	r23, r0
 908:	80 1d       	adc	r24, r0
 90a:	90 1d       	adc	r25, r0
 90c:	08 95       	ret

0000090e <vsnprintf>:
 90e:	0f 93       	push	r16
 910:	1f 93       	push	r17
 912:	cf 93       	push	r28
 914:	df 93       	push	r29
 916:	cd b7       	in	r28, 0x3d	; 61
 918:	de b7       	in	r29, 0x3e	; 62
 91a:	2e 97       	sbiw	r28, 0x0e	; 14
 91c:	0f b6       	in	r0, 0x3f	; 63
 91e:	f8 94       	cli
 920:	de bf       	out	0x3e, r29	; 62
 922:	0f be       	out	0x3f, r0	; 63
 924:	cd bf       	out	0x3d, r28	; 61
 926:	8c 01       	movw	r16, r24
 928:	fa 01       	movw	r30, r20
 92a:	86 e0       	ldi	r24, 0x06	; 6
 92c:	8c 83       	std	Y+4, r24	; 0x04
 92e:	1a 83       	std	Y+2, r17	; 0x02
 930:	09 83       	std	Y+1, r16	; 0x01
 932:	77 ff       	sbrs	r23, 7
 934:	02 c0       	rjmp	.+4      	; 0x93a <vsnprintf+0x2c>
 936:	60 e0       	ldi	r22, 0x00	; 0
 938:	70 e8       	ldi	r23, 0x80	; 128
 93a:	cb 01       	movw	r24, r22
 93c:	01 97       	sbiw	r24, 0x01	; 1
 93e:	9e 83       	std	Y+6, r25	; 0x06
 940:	8d 83       	std	Y+5, r24	; 0x05
 942:	a9 01       	movw	r20, r18
 944:	bf 01       	movw	r22, r30
 946:	ce 01       	movw	r24, r28
 948:	01 96       	adiw	r24, 0x01	; 1
 94a:	19 d0       	rcall	.+50     	; 0x97e <vfprintf>
 94c:	4d 81       	ldd	r20, Y+5	; 0x05
 94e:	5e 81       	ldd	r21, Y+6	; 0x06
 950:	57 fd       	sbrc	r21, 7
 952:	0a c0       	rjmp	.+20     	; 0x968 <vsnprintf+0x5a>
 954:	2f 81       	ldd	r18, Y+7	; 0x07
 956:	38 85       	ldd	r19, Y+8	; 0x08
 958:	42 17       	cp	r20, r18
 95a:	53 07       	cpc	r21, r19
 95c:	0c f4       	brge	.+2      	; 0x960 <vsnprintf+0x52>
 95e:	9a 01       	movw	r18, r20
 960:	f8 01       	movw	r30, r16
 962:	e2 0f       	add	r30, r18
 964:	f3 1f       	adc	r31, r19
 966:	10 82       	st	Z, r1
 968:	2e 96       	adiw	r28, 0x0e	; 14
 96a:	0f b6       	in	r0, 0x3f	; 63
 96c:	f8 94       	cli
 96e:	de bf       	out	0x3e, r29	; 62
 970:	0f be       	out	0x3f, r0	; 63
 972:	cd bf       	out	0x3d, r28	; 61
 974:	df 91       	pop	r29
 976:	cf 91       	pop	r28
 978:	1f 91       	pop	r17
 97a:	0f 91       	pop	r16
 97c:	08 95       	ret

0000097e <vfprintf>:
 97e:	2f 92       	push	r2
 980:	3f 92       	push	r3
 982:	4f 92       	push	r4
 984:	5f 92       	push	r5
 986:	6f 92       	push	r6
 988:	7f 92       	push	r7
 98a:	8f 92       	push	r8
 98c:	9f 92       	push	r9
 98e:	af 92       	push	r10
 990:	bf 92       	push	r11
 992:	cf 92       	push	r12
 994:	df 92       	push	r13
 996:	ef 92       	push	r14
 998:	ff 92       	push	r15
 99a:	0f 93       	push	r16
 99c:	1f 93       	push	r17
 99e:	cf 93       	push	r28
 9a0:	df 93       	push	r29
 9a2:	cd b7       	in	r28, 0x3d	; 61
 9a4:	de b7       	in	r29, 0x3e	; 62
 9a6:	2b 97       	sbiw	r28, 0x0b	; 11
 9a8:	0f b6       	in	r0, 0x3f	; 63
 9aa:	f8 94       	cli
 9ac:	de bf       	out	0x3e, r29	; 62
 9ae:	0f be       	out	0x3f, r0	; 63
 9b0:	cd bf       	out	0x3d, r28	; 61
 9b2:	6c 01       	movw	r12, r24
 9b4:	7b 01       	movw	r14, r22
 9b6:	8a 01       	movw	r16, r20
 9b8:	fc 01       	movw	r30, r24
 9ba:	17 82       	std	Z+7, r1	; 0x07
 9bc:	16 82       	std	Z+6, r1	; 0x06
 9be:	83 81       	ldd	r24, Z+3	; 0x03
 9c0:	81 ff       	sbrs	r24, 1
 9c2:	bf c1       	rjmp	.+894    	; 0xd42 <vfprintf+0x3c4>
 9c4:	ce 01       	movw	r24, r28
 9c6:	01 96       	adiw	r24, 0x01	; 1
 9c8:	3c 01       	movw	r6, r24
 9ca:	f6 01       	movw	r30, r12
 9cc:	93 81       	ldd	r25, Z+3	; 0x03
 9ce:	f7 01       	movw	r30, r14
 9d0:	93 fd       	sbrc	r25, 3
 9d2:	85 91       	lpm	r24, Z+
 9d4:	93 ff       	sbrs	r25, 3
 9d6:	81 91       	ld	r24, Z+
 9d8:	7f 01       	movw	r14, r30
 9da:	88 23       	and	r24, r24
 9dc:	09 f4       	brne	.+2      	; 0x9e0 <vfprintf+0x62>
 9de:	ad c1       	rjmp	.+858    	; 0xd3a <vfprintf+0x3bc>
 9e0:	85 32       	cpi	r24, 0x25	; 37
 9e2:	39 f4       	brne	.+14     	; 0x9f2 <vfprintf+0x74>
 9e4:	93 fd       	sbrc	r25, 3
 9e6:	85 91       	lpm	r24, Z+
 9e8:	93 ff       	sbrs	r25, 3
 9ea:	81 91       	ld	r24, Z+
 9ec:	7f 01       	movw	r14, r30
 9ee:	85 32       	cpi	r24, 0x25	; 37
 9f0:	21 f4       	brne	.+8      	; 0x9fa <vfprintf+0x7c>
 9f2:	b6 01       	movw	r22, r12
 9f4:	90 e0       	ldi	r25, 0x00	; 0
 9f6:	d6 d1       	rcall	.+940    	; 0xda4 <fputc>
 9f8:	e8 cf       	rjmp	.-48     	; 0x9ca <vfprintf+0x4c>
 9fa:	91 2c       	mov	r9, r1
 9fc:	21 2c       	mov	r2, r1
 9fe:	31 2c       	mov	r3, r1
 a00:	ff e1       	ldi	r31, 0x1F	; 31
 a02:	f3 15       	cp	r31, r3
 a04:	d8 f0       	brcs	.+54     	; 0xa3c <vfprintf+0xbe>
 a06:	8b 32       	cpi	r24, 0x2B	; 43
 a08:	79 f0       	breq	.+30     	; 0xa28 <vfprintf+0xaa>
 a0a:	38 f4       	brcc	.+14     	; 0xa1a <vfprintf+0x9c>
 a0c:	80 32       	cpi	r24, 0x20	; 32
 a0e:	79 f0       	breq	.+30     	; 0xa2e <vfprintf+0xb0>
 a10:	83 32       	cpi	r24, 0x23	; 35
 a12:	a1 f4       	brne	.+40     	; 0xa3c <vfprintf+0xbe>
 a14:	23 2d       	mov	r18, r3
 a16:	20 61       	ori	r18, 0x10	; 16
 a18:	1d c0       	rjmp	.+58     	; 0xa54 <vfprintf+0xd6>
 a1a:	8d 32       	cpi	r24, 0x2D	; 45
 a1c:	61 f0       	breq	.+24     	; 0xa36 <vfprintf+0xb8>
 a1e:	80 33       	cpi	r24, 0x30	; 48
 a20:	69 f4       	brne	.+26     	; 0xa3c <vfprintf+0xbe>
 a22:	23 2d       	mov	r18, r3
 a24:	21 60       	ori	r18, 0x01	; 1
 a26:	16 c0       	rjmp	.+44     	; 0xa54 <vfprintf+0xd6>
 a28:	83 2d       	mov	r24, r3
 a2a:	82 60       	ori	r24, 0x02	; 2
 a2c:	38 2e       	mov	r3, r24
 a2e:	e3 2d       	mov	r30, r3
 a30:	e4 60       	ori	r30, 0x04	; 4
 a32:	3e 2e       	mov	r3, r30
 a34:	2a c0       	rjmp	.+84     	; 0xa8a <vfprintf+0x10c>
 a36:	f3 2d       	mov	r31, r3
 a38:	f8 60       	ori	r31, 0x08	; 8
 a3a:	1d c0       	rjmp	.+58     	; 0xa76 <vfprintf+0xf8>
 a3c:	37 fc       	sbrc	r3, 7
 a3e:	2d c0       	rjmp	.+90     	; 0xa9a <vfprintf+0x11c>
 a40:	20 ed       	ldi	r18, 0xD0	; 208
 a42:	28 0f       	add	r18, r24
 a44:	2a 30       	cpi	r18, 0x0A	; 10
 a46:	40 f0       	brcs	.+16     	; 0xa58 <vfprintf+0xda>
 a48:	8e 32       	cpi	r24, 0x2E	; 46
 a4a:	b9 f4       	brne	.+46     	; 0xa7a <vfprintf+0xfc>
 a4c:	36 fc       	sbrc	r3, 6
 a4e:	75 c1       	rjmp	.+746    	; 0xd3a <vfprintf+0x3bc>
 a50:	23 2d       	mov	r18, r3
 a52:	20 64       	ori	r18, 0x40	; 64
 a54:	32 2e       	mov	r3, r18
 a56:	19 c0       	rjmp	.+50     	; 0xa8a <vfprintf+0x10c>
 a58:	36 fe       	sbrs	r3, 6
 a5a:	06 c0       	rjmp	.+12     	; 0xa68 <vfprintf+0xea>
 a5c:	8a e0       	ldi	r24, 0x0A	; 10
 a5e:	98 9e       	mul	r9, r24
 a60:	20 0d       	add	r18, r0
 a62:	11 24       	eor	r1, r1
 a64:	92 2e       	mov	r9, r18
 a66:	11 c0       	rjmp	.+34     	; 0xa8a <vfprintf+0x10c>
 a68:	ea e0       	ldi	r30, 0x0A	; 10
 a6a:	2e 9e       	mul	r2, r30
 a6c:	20 0d       	add	r18, r0
 a6e:	11 24       	eor	r1, r1
 a70:	22 2e       	mov	r2, r18
 a72:	f3 2d       	mov	r31, r3
 a74:	f0 62       	ori	r31, 0x20	; 32
 a76:	3f 2e       	mov	r3, r31
 a78:	08 c0       	rjmp	.+16     	; 0xa8a <vfprintf+0x10c>
 a7a:	8c 36       	cpi	r24, 0x6C	; 108
 a7c:	21 f4       	brne	.+8      	; 0xa86 <vfprintf+0x108>
 a7e:	83 2d       	mov	r24, r3
 a80:	80 68       	ori	r24, 0x80	; 128
 a82:	38 2e       	mov	r3, r24
 a84:	02 c0       	rjmp	.+4      	; 0xa8a <vfprintf+0x10c>
 a86:	88 36       	cpi	r24, 0x68	; 104
 a88:	41 f4       	brne	.+16     	; 0xa9a <vfprintf+0x11c>
 a8a:	f7 01       	movw	r30, r14
 a8c:	93 fd       	sbrc	r25, 3
 a8e:	85 91       	lpm	r24, Z+
 a90:	93 ff       	sbrs	r25, 3
 a92:	81 91       	ld	r24, Z+
 a94:	7f 01       	movw	r14, r30
 a96:	81 11       	cpse	r24, r1
 a98:	b3 cf       	rjmp	.-154    	; 0xa00 <vfprintf+0x82>
 a9a:	98 2f       	mov	r25, r24
 a9c:	9f 7d       	andi	r25, 0xDF	; 223
 a9e:	95 54       	subi	r25, 0x45	; 69
 aa0:	93 30       	cpi	r25, 0x03	; 3
 aa2:	28 f4       	brcc	.+10     	; 0xaae <vfprintf+0x130>
 aa4:	0c 5f       	subi	r16, 0xFC	; 252
 aa6:	1f 4f       	sbci	r17, 0xFF	; 255
 aa8:	9f e3       	ldi	r25, 0x3F	; 63
 aaa:	99 83       	std	Y+1, r25	; 0x01
 aac:	0d c0       	rjmp	.+26     	; 0xac8 <vfprintf+0x14a>
 aae:	83 36       	cpi	r24, 0x63	; 99
 ab0:	31 f0       	breq	.+12     	; 0xabe <vfprintf+0x140>
 ab2:	83 37       	cpi	r24, 0x73	; 115
 ab4:	71 f0       	breq	.+28     	; 0xad2 <vfprintf+0x154>
 ab6:	83 35       	cpi	r24, 0x53	; 83
 ab8:	09 f0       	breq	.+2      	; 0xabc <vfprintf+0x13e>
 aba:	55 c0       	rjmp	.+170    	; 0xb66 <vfprintf+0x1e8>
 abc:	20 c0       	rjmp	.+64     	; 0xafe <vfprintf+0x180>
 abe:	f8 01       	movw	r30, r16
 ac0:	80 81       	ld	r24, Z
 ac2:	89 83       	std	Y+1, r24	; 0x01
 ac4:	0e 5f       	subi	r16, 0xFE	; 254
 ac6:	1f 4f       	sbci	r17, 0xFF	; 255
 ac8:	88 24       	eor	r8, r8
 aca:	83 94       	inc	r8
 acc:	91 2c       	mov	r9, r1
 ace:	53 01       	movw	r10, r6
 ad0:	12 c0       	rjmp	.+36     	; 0xaf6 <vfprintf+0x178>
 ad2:	28 01       	movw	r4, r16
 ad4:	f2 e0       	ldi	r31, 0x02	; 2
 ad6:	4f 0e       	add	r4, r31
 ad8:	51 1c       	adc	r5, r1
 ada:	f8 01       	movw	r30, r16
 adc:	a0 80       	ld	r10, Z
 ade:	b1 80       	ldd	r11, Z+1	; 0x01
 ae0:	36 fe       	sbrs	r3, 6
 ae2:	03 c0       	rjmp	.+6      	; 0xaea <vfprintf+0x16c>
 ae4:	69 2d       	mov	r22, r9
 ae6:	70 e0       	ldi	r23, 0x00	; 0
 ae8:	02 c0       	rjmp	.+4      	; 0xaee <vfprintf+0x170>
 aea:	6f ef       	ldi	r22, 0xFF	; 255
 aec:	7f ef       	ldi	r23, 0xFF	; 255
 aee:	c5 01       	movw	r24, r10
 af0:	4e d1       	rcall	.+668    	; 0xd8e <strnlen>
 af2:	4c 01       	movw	r8, r24
 af4:	82 01       	movw	r16, r4
 af6:	f3 2d       	mov	r31, r3
 af8:	ff 77       	andi	r31, 0x7F	; 127
 afa:	3f 2e       	mov	r3, r31
 afc:	15 c0       	rjmp	.+42     	; 0xb28 <vfprintf+0x1aa>
 afe:	28 01       	movw	r4, r16
 b00:	22 e0       	ldi	r18, 0x02	; 2
 b02:	42 0e       	add	r4, r18
 b04:	51 1c       	adc	r5, r1
 b06:	f8 01       	movw	r30, r16
 b08:	a0 80       	ld	r10, Z
 b0a:	b1 80       	ldd	r11, Z+1	; 0x01
 b0c:	36 fe       	sbrs	r3, 6
 b0e:	03 c0       	rjmp	.+6      	; 0xb16 <vfprintf+0x198>
 b10:	69 2d       	mov	r22, r9
 b12:	70 e0       	ldi	r23, 0x00	; 0
 b14:	02 c0       	rjmp	.+4      	; 0xb1a <vfprintf+0x19c>
 b16:	6f ef       	ldi	r22, 0xFF	; 255
 b18:	7f ef       	ldi	r23, 0xFF	; 255
 b1a:	c5 01       	movw	r24, r10
 b1c:	2d d1       	rcall	.+602    	; 0xd78 <strnlen_P>
 b1e:	4c 01       	movw	r8, r24
 b20:	f3 2d       	mov	r31, r3
 b22:	f0 68       	ori	r31, 0x80	; 128
 b24:	3f 2e       	mov	r3, r31
 b26:	82 01       	movw	r16, r4
 b28:	33 fc       	sbrc	r3, 3
 b2a:	19 c0       	rjmp	.+50     	; 0xb5e <vfprintf+0x1e0>
 b2c:	82 2d       	mov	r24, r2
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	88 16       	cp	r8, r24
 b32:	99 06       	cpc	r9, r25
 b34:	a0 f4       	brcc	.+40     	; 0xb5e <vfprintf+0x1e0>
 b36:	b6 01       	movw	r22, r12
 b38:	80 e2       	ldi	r24, 0x20	; 32
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	33 d1       	rcall	.+614    	; 0xda4 <fputc>
 b3e:	2a 94       	dec	r2
 b40:	f5 cf       	rjmp	.-22     	; 0xb2c <vfprintf+0x1ae>
 b42:	f5 01       	movw	r30, r10
 b44:	37 fc       	sbrc	r3, 7
 b46:	85 91       	lpm	r24, Z+
 b48:	37 fe       	sbrs	r3, 7
 b4a:	81 91       	ld	r24, Z+
 b4c:	5f 01       	movw	r10, r30
 b4e:	b6 01       	movw	r22, r12
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	28 d1       	rcall	.+592    	; 0xda4 <fputc>
 b54:	21 10       	cpse	r2, r1
 b56:	2a 94       	dec	r2
 b58:	21 e0       	ldi	r18, 0x01	; 1
 b5a:	82 1a       	sub	r8, r18
 b5c:	91 08       	sbc	r9, r1
 b5e:	81 14       	cp	r8, r1
 b60:	91 04       	cpc	r9, r1
 b62:	79 f7       	brne	.-34     	; 0xb42 <vfprintf+0x1c4>
 b64:	e1 c0       	rjmp	.+450    	; 0xd28 <vfprintf+0x3aa>
 b66:	84 36       	cpi	r24, 0x64	; 100
 b68:	11 f0       	breq	.+4      	; 0xb6e <vfprintf+0x1f0>
 b6a:	89 36       	cpi	r24, 0x69	; 105
 b6c:	39 f5       	brne	.+78     	; 0xbbc <vfprintf+0x23e>
 b6e:	f8 01       	movw	r30, r16
 b70:	37 fe       	sbrs	r3, 7
 b72:	07 c0       	rjmp	.+14     	; 0xb82 <vfprintf+0x204>
 b74:	60 81       	ld	r22, Z
 b76:	71 81       	ldd	r23, Z+1	; 0x01
 b78:	82 81       	ldd	r24, Z+2	; 0x02
 b7a:	93 81       	ldd	r25, Z+3	; 0x03
 b7c:	0c 5f       	subi	r16, 0xFC	; 252
 b7e:	1f 4f       	sbci	r17, 0xFF	; 255
 b80:	08 c0       	rjmp	.+16     	; 0xb92 <vfprintf+0x214>
 b82:	60 81       	ld	r22, Z
 b84:	71 81       	ldd	r23, Z+1	; 0x01
 b86:	07 2e       	mov	r0, r23
 b88:	00 0c       	add	r0, r0
 b8a:	88 0b       	sbc	r24, r24
 b8c:	99 0b       	sbc	r25, r25
 b8e:	0e 5f       	subi	r16, 0xFE	; 254
 b90:	1f 4f       	sbci	r17, 0xFF	; 255
 b92:	f3 2d       	mov	r31, r3
 b94:	ff 76       	andi	r31, 0x6F	; 111
 b96:	3f 2e       	mov	r3, r31
 b98:	97 ff       	sbrs	r25, 7
 b9a:	09 c0       	rjmp	.+18     	; 0xbae <vfprintf+0x230>
 b9c:	90 95       	com	r25
 b9e:	80 95       	com	r24
 ba0:	70 95       	com	r23
 ba2:	61 95       	neg	r22
 ba4:	7f 4f       	sbci	r23, 0xFF	; 255
 ba6:	8f 4f       	sbci	r24, 0xFF	; 255
 ba8:	9f 4f       	sbci	r25, 0xFF	; 255
 baa:	f0 68       	ori	r31, 0x80	; 128
 bac:	3f 2e       	mov	r3, r31
 bae:	2a e0       	ldi	r18, 0x0A	; 10
 bb0:	30 e0       	ldi	r19, 0x00	; 0
 bb2:	a3 01       	movw	r20, r6
 bb4:	33 d1       	rcall	.+614    	; 0xe1c <__ultoa_invert>
 bb6:	88 2e       	mov	r8, r24
 bb8:	86 18       	sub	r8, r6
 bba:	44 c0       	rjmp	.+136    	; 0xc44 <vfprintf+0x2c6>
 bbc:	85 37       	cpi	r24, 0x75	; 117
 bbe:	31 f4       	brne	.+12     	; 0xbcc <vfprintf+0x24e>
 bc0:	23 2d       	mov	r18, r3
 bc2:	2f 7e       	andi	r18, 0xEF	; 239
 bc4:	b2 2e       	mov	r11, r18
 bc6:	2a e0       	ldi	r18, 0x0A	; 10
 bc8:	30 e0       	ldi	r19, 0x00	; 0
 bca:	25 c0       	rjmp	.+74     	; 0xc16 <vfprintf+0x298>
 bcc:	93 2d       	mov	r25, r3
 bce:	99 7f       	andi	r25, 0xF9	; 249
 bd0:	b9 2e       	mov	r11, r25
 bd2:	8f 36       	cpi	r24, 0x6F	; 111
 bd4:	c1 f0       	breq	.+48     	; 0xc06 <vfprintf+0x288>
 bd6:	18 f4       	brcc	.+6      	; 0xbde <vfprintf+0x260>
 bd8:	88 35       	cpi	r24, 0x58	; 88
 bda:	79 f0       	breq	.+30     	; 0xbfa <vfprintf+0x27c>
 bdc:	ae c0       	rjmp	.+348    	; 0xd3a <vfprintf+0x3bc>
 bde:	80 37       	cpi	r24, 0x70	; 112
 be0:	19 f0       	breq	.+6      	; 0xbe8 <vfprintf+0x26a>
 be2:	88 37       	cpi	r24, 0x78	; 120
 be4:	21 f0       	breq	.+8      	; 0xbee <vfprintf+0x270>
 be6:	a9 c0       	rjmp	.+338    	; 0xd3a <vfprintf+0x3bc>
 be8:	e9 2f       	mov	r30, r25
 bea:	e0 61       	ori	r30, 0x10	; 16
 bec:	be 2e       	mov	r11, r30
 bee:	b4 fe       	sbrs	r11, 4
 bf0:	0d c0       	rjmp	.+26     	; 0xc0c <vfprintf+0x28e>
 bf2:	fb 2d       	mov	r31, r11
 bf4:	f4 60       	ori	r31, 0x04	; 4
 bf6:	bf 2e       	mov	r11, r31
 bf8:	09 c0       	rjmp	.+18     	; 0xc0c <vfprintf+0x28e>
 bfa:	34 fe       	sbrs	r3, 4
 bfc:	0a c0       	rjmp	.+20     	; 0xc12 <vfprintf+0x294>
 bfe:	29 2f       	mov	r18, r25
 c00:	26 60       	ori	r18, 0x06	; 6
 c02:	b2 2e       	mov	r11, r18
 c04:	06 c0       	rjmp	.+12     	; 0xc12 <vfprintf+0x294>
 c06:	28 e0       	ldi	r18, 0x08	; 8
 c08:	30 e0       	ldi	r19, 0x00	; 0
 c0a:	05 c0       	rjmp	.+10     	; 0xc16 <vfprintf+0x298>
 c0c:	20 e1       	ldi	r18, 0x10	; 16
 c0e:	30 e0       	ldi	r19, 0x00	; 0
 c10:	02 c0       	rjmp	.+4      	; 0xc16 <vfprintf+0x298>
 c12:	20 e1       	ldi	r18, 0x10	; 16
 c14:	32 e0       	ldi	r19, 0x02	; 2
 c16:	f8 01       	movw	r30, r16
 c18:	b7 fe       	sbrs	r11, 7
 c1a:	07 c0       	rjmp	.+14     	; 0xc2a <vfprintf+0x2ac>
 c1c:	60 81       	ld	r22, Z
 c1e:	71 81       	ldd	r23, Z+1	; 0x01
 c20:	82 81       	ldd	r24, Z+2	; 0x02
 c22:	93 81       	ldd	r25, Z+3	; 0x03
 c24:	0c 5f       	subi	r16, 0xFC	; 252
 c26:	1f 4f       	sbci	r17, 0xFF	; 255
 c28:	06 c0       	rjmp	.+12     	; 0xc36 <vfprintf+0x2b8>
 c2a:	60 81       	ld	r22, Z
 c2c:	71 81       	ldd	r23, Z+1	; 0x01
 c2e:	80 e0       	ldi	r24, 0x00	; 0
 c30:	90 e0       	ldi	r25, 0x00	; 0
 c32:	0e 5f       	subi	r16, 0xFE	; 254
 c34:	1f 4f       	sbci	r17, 0xFF	; 255
 c36:	a3 01       	movw	r20, r6
 c38:	f1 d0       	rcall	.+482    	; 0xe1c <__ultoa_invert>
 c3a:	88 2e       	mov	r8, r24
 c3c:	86 18       	sub	r8, r6
 c3e:	fb 2d       	mov	r31, r11
 c40:	ff 77       	andi	r31, 0x7F	; 127
 c42:	3f 2e       	mov	r3, r31
 c44:	36 fe       	sbrs	r3, 6
 c46:	0d c0       	rjmp	.+26     	; 0xc62 <vfprintf+0x2e4>
 c48:	23 2d       	mov	r18, r3
 c4a:	2e 7f       	andi	r18, 0xFE	; 254
 c4c:	a2 2e       	mov	r10, r18
 c4e:	89 14       	cp	r8, r9
 c50:	58 f4       	brcc	.+22     	; 0xc68 <vfprintf+0x2ea>
 c52:	34 fe       	sbrs	r3, 4
 c54:	0b c0       	rjmp	.+22     	; 0xc6c <vfprintf+0x2ee>
 c56:	32 fc       	sbrc	r3, 2
 c58:	09 c0       	rjmp	.+18     	; 0xc6c <vfprintf+0x2ee>
 c5a:	83 2d       	mov	r24, r3
 c5c:	8e 7e       	andi	r24, 0xEE	; 238
 c5e:	a8 2e       	mov	r10, r24
 c60:	05 c0       	rjmp	.+10     	; 0xc6c <vfprintf+0x2ee>
 c62:	b8 2c       	mov	r11, r8
 c64:	a3 2c       	mov	r10, r3
 c66:	03 c0       	rjmp	.+6      	; 0xc6e <vfprintf+0x2f0>
 c68:	b8 2c       	mov	r11, r8
 c6a:	01 c0       	rjmp	.+2      	; 0xc6e <vfprintf+0x2f0>
 c6c:	b9 2c       	mov	r11, r9
 c6e:	a4 fe       	sbrs	r10, 4
 c70:	0f c0       	rjmp	.+30     	; 0xc90 <vfprintf+0x312>
 c72:	fe 01       	movw	r30, r28
 c74:	e8 0d       	add	r30, r8
 c76:	f1 1d       	adc	r31, r1
 c78:	80 81       	ld	r24, Z
 c7a:	80 33       	cpi	r24, 0x30	; 48
 c7c:	21 f4       	brne	.+8      	; 0xc86 <vfprintf+0x308>
 c7e:	9a 2d       	mov	r25, r10
 c80:	99 7e       	andi	r25, 0xE9	; 233
 c82:	a9 2e       	mov	r10, r25
 c84:	09 c0       	rjmp	.+18     	; 0xc98 <vfprintf+0x31a>
 c86:	a2 fe       	sbrs	r10, 2
 c88:	06 c0       	rjmp	.+12     	; 0xc96 <vfprintf+0x318>
 c8a:	b3 94       	inc	r11
 c8c:	b3 94       	inc	r11
 c8e:	04 c0       	rjmp	.+8      	; 0xc98 <vfprintf+0x31a>
 c90:	8a 2d       	mov	r24, r10
 c92:	86 78       	andi	r24, 0x86	; 134
 c94:	09 f0       	breq	.+2      	; 0xc98 <vfprintf+0x31a>
 c96:	b3 94       	inc	r11
 c98:	a3 fc       	sbrc	r10, 3
 c9a:	10 c0       	rjmp	.+32     	; 0xcbc <vfprintf+0x33e>
 c9c:	a0 fe       	sbrs	r10, 0
 c9e:	06 c0       	rjmp	.+12     	; 0xcac <vfprintf+0x32e>
 ca0:	b2 14       	cp	r11, r2
 ca2:	80 f4       	brcc	.+32     	; 0xcc4 <vfprintf+0x346>
 ca4:	28 0c       	add	r2, r8
 ca6:	92 2c       	mov	r9, r2
 ca8:	9b 18       	sub	r9, r11
 caa:	0d c0       	rjmp	.+26     	; 0xcc6 <vfprintf+0x348>
 cac:	b2 14       	cp	r11, r2
 cae:	58 f4       	brcc	.+22     	; 0xcc6 <vfprintf+0x348>
 cb0:	b6 01       	movw	r22, r12
 cb2:	80 e2       	ldi	r24, 0x20	; 32
 cb4:	90 e0       	ldi	r25, 0x00	; 0
 cb6:	76 d0       	rcall	.+236    	; 0xda4 <fputc>
 cb8:	b3 94       	inc	r11
 cba:	f8 cf       	rjmp	.-16     	; 0xcac <vfprintf+0x32e>
 cbc:	b2 14       	cp	r11, r2
 cbe:	18 f4       	brcc	.+6      	; 0xcc6 <vfprintf+0x348>
 cc0:	2b 18       	sub	r2, r11
 cc2:	02 c0       	rjmp	.+4      	; 0xcc8 <vfprintf+0x34a>
 cc4:	98 2c       	mov	r9, r8
 cc6:	21 2c       	mov	r2, r1
 cc8:	a4 fe       	sbrs	r10, 4
 cca:	0f c0       	rjmp	.+30     	; 0xcea <vfprintf+0x36c>
 ccc:	b6 01       	movw	r22, r12
 cce:	80 e3       	ldi	r24, 0x30	; 48
 cd0:	90 e0       	ldi	r25, 0x00	; 0
 cd2:	68 d0       	rcall	.+208    	; 0xda4 <fputc>
 cd4:	a2 fe       	sbrs	r10, 2
 cd6:	16 c0       	rjmp	.+44     	; 0xd04 <vfprintf+0x386>
 cd8:	a1 fc       	sbrc	r10, 1
 cda:	03 c0       	rjmp	.+6      	; 0xce2 <vfprintf+0x364>
 cdc:	88 e7       	ldi	r24, 0x78	; 120
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	02 c0       	rjmp	.+4      	; 0xce6 <vfprintf+0x368>
 ce2:	88 e5       	ldi	r24, 0x58	; 88
 ce4:	90 e0       	ldi	r25, 0x00	; 0
 ce6:	b6 01       	movw	r22, r12
 ce8:	0c c0       	rjmp	.+24     	; 0xd02 <vfprintf+0x384>
 cea:	8a 2d       	mov	r24, r10
 cec:	86 78       	andi	r24, 0x86	; 134
 cee:	51 f0       	breq	.+20     	; 0xd04 <vfprintf+0x386>
 cf0:	a1 fe       	sbrs	r10, 1
 cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <vfprintf+0x37a>
 cf4:	8b e2       	ldi	r24, 0x2B	; 43
 cf6:	01 c0       	rjmp	.+2      	; 0xcfa <vfprintf+0x37c>
 cf8:	80 e2       	ldi	r24, 0x20	; 32
 cfa:	a7 fc       	sbrc	r10, 7
 cfc:	8d e2       	ldi	r24, 0x2D	; 45
 cfe:	b6 01       	movw	r22, r12
 d00:	90 e0       	ldi	r25, 0x00	; 0
 d02:	50 d0       	rcall	.+160    	; 0xda4 <fputc>
 d04:	89 14       	cp	r8, r9
 d06:	30 f4       	brcc	.+12     	; 0xd14 <vfprintf+0x396>
 d08:	b6 01       	movw	r22, r12
 d0a:	80 e3       	ldi	r24, 0x30	; 48
 d0c:	90 e0       	ldi	r25, 0x00	; 0
 d0e:	4a d0       	rcall	.+148    	; 0xda4 <fputc>
 d10:	9a 94       	dec	r9
 d12:	f8 cf       	rjmp	.-16     	; 0xd04 <vfprintf+0x386>
 d14:	8a 94       	dec	r8
 d16:	f3 01       	movw	r30, r6
 d18:	e8 0d       	add	r30, r8
 d1a:	f1 1d       	adc	r31, r1
 d1c:	80 81       	ld	r24, Z
 d1e:	b6 01       	movw	r22, r12
 d20:	90 e0       	ldi	r25, 0x00	; 0
 d22:	40 d0       	rcall	.+128    	; 0xda4 <fputc>
 d24:	81 10       	cpse	r8, r1
 d26:	f6 cf       	rjmp	.-20     	; 0xd14 <vfprintf+0x396>
 d28:	22 20       	and	r2, r2
 d2a:	09 f4       	brne	.+2      	; 0xd2e <vfprintf+0x3b0>
 d2c:	4e ce       	rjmp	.-868    	; 0x9ca <vfprintf+0x4c>
 d2e:	b6 01       	movw	r22, r12
 d30:	80 e2       	ldi	r24, 0x20	; 32
 d32:	90 e0       	ldi	r25, 0x00	; 0
 d34:	37 d0       	rcall	.+110    	; 0xda4 <fputc>
 d36:	2a 94       	dec	r2
 d38:	f7 cf       	rjmp	.-18     	; 0xd28 <vfprintf+0x3aa>
 d3a:	f6 01       	movw	r30, r12
 d3c:	86 81       	ldd	r24, Z+6	; 0x06
 d3e:	97 81       	ldd	r25, Z+7	; 0x07
 d40:	02 c0       	rjmp	.+4      	; 0xd46 <vfprintf+0x3c8>
 d42:	8f ef       	ldi	r24, 0xFF	; 255
 d44:	9f ef       	ldi	r25, 0xFF	; 255
 d46:	2b 96       	adiw	r28, 0x0b	; 11
 d48:	0f b6       	in	r0, 0x3f	; 63
 d4a:	f8 94       	cli
 d4c:	de bf       	out	0x3e, r29	; 62
 d4e:	0f be       	out	0x3f, r0	; 63
 d50:	cd bf       	out	0x3d, r28	; 61
 d52:	df 91       	pop	r29
 d54:	cf 91       	pop	r28
 d56:	1f 91       	pop	r17
 d58:	0f 91       	pop	r16
 d5a:	ff 90       	pop	r15
 d5c:	ef 90       	pop	r14
 d5e:	df 90       	pop	r13
 d60:	cf 90       	pop	r12
 d62:	bf 90       	pop	r11
 d64:	af 90       	pop	r10
 d66:	9f 90       	pop	r9
 d68:	8f 90       	pop	r8
 d6a:	7f 90       	pop	r7
 d6c:	6f 90       	pop	r6
 d6e:	5f 90       	pop	r5
 d70:	4f 90       	pop	r4
 d72:	3f 90       	pop	r3
 d74:	2f 90       	pop	r2
 d76:	08 95       	ret

00000d78 <strnlen_P>:
 d78:	fc 01       	movw	r30, r24
 d7a:	05 90       	lpm	r0, Z+
 d7c:	61 50       	subi	r22, 0x01	; 1
 d7e:	70 40       	sbci	r23, 0x00	; 0
 d80:	01 10       	cpse	r0, r1
 d82:	d8 f7       	brcc	.-10     	; 0xd7a <strnlen_P+0x2>
 d84:	80 95       	com	r24
 d86:	90 95       	com	r25
 d88:	8e 0f       	add	r24, r30
 d8a:	9f 1f       	adc	r25, r31
 d8c:	08 95       	ret

00000d8e <strnlen>:
 d8e:	fc 01       	movw	r30, r24
 d90:	61 50       	subi	r22, 0x01	; 1
 d92:	70 40       	sbci	r23, 0x00	; 0
 d94:	01 90       	ld	r0, Z+
 d96:	01 10       	cpse	r0, r1
 d98:	d8 f7       	brcc	.-10     	; 0xd90 <strnlen+0x2>
 d9a:	80 95       	com	r24
 d9c:	90 95       	com	r25
 d9e:	8e 0f       	add	r24, r30
 da0:	9f 1f       	adc	r25, r31
 da2:	08 95       	ret

00000da4 <fputc>:
 da4:	0f 93       	push	r16
 da6:	1f 93       	push	r17
 da8:	cf 93       	push	r28
 daa:	df 93       	push	r29
 dac:	fb 01       	movw	r30, r22
 dae:	23 81       	ldd	r18, Z+3	; 0x03
 db0:	21 fd       	sbrc	r18, 1
 db2:	03 c0       	rjmp	.+6      	; 0xdba <fputc+0x16>
 db4:	8f ef       	ldi	r24, 0xFF	; 255
 db6:	9f ef       	ldi	r25, 0xFF	; 255
 db8:	2c c0       	rjmp	.+88     	; 0xe12 <fputc+0x6e>
 dba:	22 ff       	sbrs	r18, 2
 dbc:	16 c0       	rjmp	.+44     	; 0xdea <fputc+0x46>
 dbe:	46 81       	ldd	r20, Z+6	; 0x06
 dc0:	57 81       	ldd	r21, Z+7	; 0x07
 dc2:	24 81       	ldd	r18, Z+4	; 0x04
 dc4:	35 81       	ldd	r19, Z+5	; 0x05
 dc6:	42 17       	cp	r20, r18
 dc8:	53 07       	cpc	r21, r19
 dca:	44 f4       	brge	.+16     	; 0xddc <fputc+0x38>
 dcc:	a0 81       	ld	r26, Z
 dce:	b1 81       	ldd	r27, Z+1	; 0x01
 dd0:	9d 01       	movw	r18, r26
 dd2:	2f 5f       	subi	r18, 0xFF	; 255
 dd4:	3f 4f       	sbci	r19, 0xFF	; 255
 dd6:	31 83       	std	Z+1, r19	; 0x01
 dd8:	20 83       	st	Z, r18
 dda:	8c 93       	st	X, r24
 ddc:	26 81       	ldd	r18, Z+6	; 0x06
 dde:	37 81       	ldd	r19, Z+7	; 0x07
 de0:	2f 5f       	subi	r18, 0xFF	; 255
 de2:	3f 4f       	sbci	r19, 0xFF	; 255
 de4:	37 83       	std	Z+7, r19	; 0x07
 de6:	26 83       	std	Z+6, r18	; 0x06
 de8:	14 c0       	rjmp	.+40     	; 0xe12 <fputc+0x6e>
 dea:	8b 01       	movw	r16, r22
 dec:	ec 01       	movw	r28, r24
 dee:	fb 01       	movw	r30, r22
 df0:	00 84       	ldd	r0, Z+8	; 0x08
 df2:	f1 85       	ldd	r31, Z+9	; 0x09
 df4:	e0 2d       	mov	r30, r0
 df6:	19 95       	eicall
 df8:	89 2b       	or	r24, r25
 dfa:	e1 f6       	brne	.-72     	; 0xdb4 <fputc+0x10>
 dfc:	d8 01       	movw	r26, r16
 dfe:	16 96       	adiw	r26, 0x06	; 6
 e00:	8d 91       	ld	r24, X+
 e02:	9c 91       	ld	r25, X
 e04:	17 97       	sbiw	r26, 0x07	; 7
 e06:	01 96       	adiw	r24, 0x01	; 1
 e08:	17 96       	adiw	r26, 0x07	; 7
 e0a:	9c 93       	st	X, r25
 e0c:	8e 93       	st	-X, r24
 e0e:	16 97       	sbiw	r26, 0x06	; 6
 e10:	ce 01       	movw	r24, r28
 e12:	df 91       	pop	r29
 e14:	cf 91       	pop	r28
 e16:	1f 91       	pop	r17
 e18:	0f 91       	pop	r16
 e1a:	08 95       	ret

00000e1c <__ultoa_invert>:
 e1c:	fa 01       	movw	r30, r20
 e1e:	aa 27       	eor	r26, r26
 e20:	28 30       	cpi	r18, 0x08	; 8
 e22:	51 f1       	breq	.+84     	; 0xe78 <__ultoa_invert+0x5c>
 e24:	20 31       	cpi	r18, 0x10	; 16
 e26:	81 f1       	breq	.+96     	; 0xe88 <__ultoa_invert+0x6c>
 e28:	e8 94       	clt
 e2a:	6f 93       	push	r22
 e2c:	6e 7f       	andi	r22, 0xFE	; 254
 e2e:	6e 5f       	subi	r22, 0xFE	; 254
 e30:	7f 4f       	sbci	r23, 0xFF	; 255
 e32:	8f 4f       	sbci	r24, 0xFF	; 255
 e34:	9f 4f       	sbci	r25, 0xFF	; 255
 e36:	af 4f       	sbci	r26, 0xFF	; 255
 e38:	b1 e0       	ldi	r27, 0x01	; 1
 e3a:	3e d0       	rcall	.+124    	; 0xeb8 <__ultoa_invert+0x9c>
 e3c:	b4 e0       	ldi	r27, 0x04	; 4
 e3e:	3c d0       	rcall	.+120    	; 0xeb8 <__ultoa_invert+0x9c>
 e40:	67 0f       	add	r22, r23
 e42:	78 1f       	adc	r23, r24
 e44:	89 1f       	adc	r24, r25
 e46:	9a 1f       	adc	r25, r26
 e48:	a1 1d       	adc	r26, r1
 e4a:	68 0f       	add	r22, r24
 e4c:	79 1f       	adc	r23, r25
 e4e:	8a 1f       	adc	r24, r26
 e50:	91 1d       	adc	r25, r1
 e52:	a1 1d       	adc	r26, r1
 e54:	6a 0f       	add	r22, r26
 e56:	71 1d       	adc	r23, r1
 e58:	81 1d       	adc	r24, r1
 e5a:	91 1d       	adc	r25, r1
 e5c:	a1 1d       	adc	r26, r1
 e5e:	20 d0       	rcall	.+64     	; 0xea0 <__ultoa_invert+0x84>
 e60:	09 f4       	brne	.+2      	; 0xe64 <__ultoa_invert+0x48>
 e62:	68 94       	set
 e64:	3f 91       	pop	r19
 e66:	2a e0       	ldi	r18, 0x0A	; 10
 e68:	26 9f       	mul	r18, r22
 e6a:	11 24       	eor	r1, r1
 e6c:	30 19       	sub	r19, r0
 e6e:	30 5d       	subi	r19, 0xD0	; 208
 e70:	31 93       	st	Z+, r19
 e72:	de f6       	brtc	.-74     	; 0xe2a <__ultoa_invert+0xe>
 e74:	cf 01       	movw	r24, r30
 e76:	08 95       	ret
 e78:	46 2f       	mov	r20, r22
 e7a:	47 70       	andi	r20, 0x07	; 7
 e7c:	40 5d       	subi	r20, 0xD0	; 208
 e7e:	41 93       	st	Z+, r20
 e80:	b3 e0       	ldi	r27, 0x03	; 3
 e82:	0f d0       	rcall	.+30     	; 0xea2 <__ultoa_invert+0x86>
 e84:	c9 f7       	brne	.-14     	; 0xe78 <__ultoa_invert+0x5c>
 e86:	f6 cf       	rjmp	.-20     	; 0xe74 <__ultoa_invert+0x58>
 e88:	46 2f       	mov	r20, r22
 e8a:	4f 70       	andi	r20, 0x0F	; 15
 e8c:	40 5d       	subi	r20, 0xD0	; 208
 e8e:	4a 33       	cpi	r20, 0x3A	; 58
 e90:	18 f0       	brcs	.+6      	; 0xe98 <__ultoa_invert+0x7c>
 e92:	49 5d       	subi	r20, 0xD9	; 217
 e94:	31 fd       	sbrc	r19, 1
 e96:	40 52       	subi	r20, 0x20	; 32
 e98:	41 93       	st	Z+, r20
 e9a:	02 d0       	rcall	.+4      	; 0xea0 <__ultoa_invert+0x84>
 e9c:	a9 f7       	brne	.-22     	; 0xe88 <__ultoa_invert+0x6c>
 e9e:	ea cf       	rjmp	.-44     	; 0xe74 <__ultoa_invert+0x58>
 ea0:	b4 e0       	ldi	r27, 0x04	; 4
 ea2:	a6 95       	lsr	r26
 ea4:	97 95       	ror	r25
 ea6:	87 95       	ror	r24
 ea8:	77 95       	ror	r23
 eaa:	67 95       	ror	r22
 eac:	ba 95       	dec	r27
 eae:	c9 f7       	brne	.-14     	; 0xea2 <__ultoa_invert+0x86>
 eb0:	00 97       	sbiw	r24, 0x00	; 0
 eb2:	61 05       	cpc	r22, r1
 eb4:	71 05       	cpc	r23, r1
 eb6:	08 95       	ret
 eb8:	9b 01       	movw	r18, r22
 eba:	ac 01       	movw	r20, r24
 ebc:	0a 2e       	mov	r0, r26
 ebe:	06 94       	lsr	r0
 ec0:	57 95       	ror	r21
 ec2:	47 95       	ror	r20
 ec4:	37 95       	ror	r19
 ec6:	27 95       	ror	r18
 ec8:	ba 95       	dec	r27
 eca:	c9 f7       	brne	.-14     	; 0xebe <__ultoa_invert+0xa2>
 ecc:	62 0f       	add	r22, r18
 ece:	73 1f       	adc	r23, r19
 ed0:	84 1f       	adc	r24, r20
 ed2:	95 1f       	adc	r25, r21
 ed4:	a0 1d       	adc	r26, r0
 ed6:	08 95       	ret

00000ed8 <_exit>:
 ed8:	f8 94       	cli

00000eda <__stop_program>:
 eda:	ff cf       	rjmp	.-2      	; 0xeda <__stop_program>
