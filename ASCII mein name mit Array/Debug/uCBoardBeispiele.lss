
uCBoardBeispiele.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008e  00800200  00000df8  00000e8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000df8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  0080028e  0080028e  00000f1a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f1a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00000fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002458  00000000  00000000  000011a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fdd  00000000  00000000  000035f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001405  00000000  00000000  000045d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  000059dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cdd  00000000  00000000  00006064  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a69  00000000  00000000  00006d41  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  000087aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	8e c3       	rjmp	.+1820   	; 0x77a <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 ef       	ldi	r30, 0xF8	; 248
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 38       	cpi	r26, 0x8E	; 142
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ae e8       	ldi	r26, 0x8E	; 142
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 30       	cpi	r26, 0x0C	; 12
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	69 c6       	rjmp	.+3282   	; 0xdf4 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
//uC-Board-Treiber hinzuf√ºgen
#include "ucBoardDriver.h"

//Hauptprogramm
int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	27 97       	sbiw	r28, 0x07	; 7
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
    //Variablen
    char meinName[] = {70, 105, 108, 109, 111, 110, 0};
    char meinName2[] = {'F', 'i', 'l', 'm', 'o', 'n',0};
    char meinName3[] = "Filmon";
 138:	87 e0       	ldi	r24, 0x07	; 7
 13a:	ec e1       	ldi	r30, 0x1C	; 28
 13c:	f2 e0       	ldi	r31, 0x02	; 2
 13e:	de 01       	movw	r26, r28
 140:	11 96       	adiw	r26, 0x01	; 1
 142:	01 90       	ld	r0, Z+
 144:	0d 92       	st	X+, r0
 146:	8a 95       	dec	r24
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0x1e>
    uint16_t length = 0;
    //Initialisieren
    initBoard(1);
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	93 d1       	rcall	.+806    	; 0x474 <initBoard>
        {
            length =length + 1;
        }
        
        //Ausgabe------------------------------------------------------------------
        lcdWriteText(1,0,"text: %s", meinName3);
 14e:	ce 01       	movw	r24, r28
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	5c 01       	movw	r10, r24
 154:	0f 2e       	mov	r0, r31
 156:	f8 e0       	ldi	r31, 0x08	; 8
 158:	cf 2e       	mov	r12, r31
 15a:	f2 e0       	ldi	r31, 0x02	; 2
 15c:	df 2e       	mov	r13, r31
 15e:	f0 2d       	mov	r31, r0
 160:	88 24       	eor	r8, r8
 162:	83 94       	inc	r8
        lcdWriteText(2,0,"length: %u", length);
 164:	0f 2e       	mov	r0, r31
 166:	f1 e1       	ldi	r31, 0x11	; 17
 168:	ef 2e       	mov	r14, r31
 16a:	f2 e0       	ldi	r31, 0x02	; 2
 16c:	ff 2e       	mov	r15, r31
 16e:	f0 2d       	mov	r31, r0
 170:	68 94       	set
 172:	99 24       	eor	r9, r9
 174:	91 f8       	bld	r9, 1
    {
        //Eingabe------------------------------------------------------------------
        
        //Verarbeitung-------------------------------------------------------------
        length= 0;
        for (uint16_t i=0;meinName3[i]!=0; i=i+1)
 176:	89 81       	ldd	r24, Y+1	; 0x01
 178:	88 23       	and	r24, r24
 17a:	51 f0       	breq	.+20     	; 0x190 <main+0x6c>
 17c:	fe 01       	movw	r30, r28
 17e:	32 96       	adiw	r30, 0x02	; 2
 180:	00 e0       	ldi	r16, 0x00	; 0
 182:	10 e0       	ldi	r17, 0x00	; 0
        {
            length =length + 1;
 184:	0f 5f       	subi	r16, 0xFF	; 255
 186:	1f 4f       	sbci	r17, 0xFF	; 255
    {
        //Eingabe------------------------------------------------------------------
        
        //Verarbeitung-------------------------------------------------------------
        length= 0;
        for (uint16_t i=0;meinName3[i]!=0; i=i+1)
 188:	81 91       	ld	r24, Z+
 18a:	81 11       	cpse	r24, r1
 18c:	fb cf       	rjmp	.-10     	; 0x184 <main+0x60>
 18e:	02 c0       	rjmp	.+4      	; 0x194 <main+0x70>
    while(1)
    {
        //Eingabe------------------------------------------------------------------
        
        //Verarbeitung-------------------------------------------------------------
        length= 0;
 190:	00 e0       	ldi	r16, 0x00	; 0
 192:	10 e0       	ldi	r17, 0x00	; 0
        {
            length =length + 1;
        }
        
        //Ausgabe------------------------------------------------------------------
        lcdWriteText(1,0,"text: %s", meinName3);
 194:	bf 92       	push	r11
 196:	af 92       	push	r10
 198:	df 92       	push	r13
 19a:	cf 92       	push	r12
 19c:	1f 92       	push	r1
 19e:	8f 92       	push	r8
 1a0:	f5 d0       	rcall	.+490    	; 0x38c <lcdWriteText>
        lcdWriteText(2,0,"length: %u", length);
 1a2:	1f 93       	push	r17
 1a4:	0f 93       	push	r16
 1a6:	ff 92       	push	r15
 1a8:	ef 92       	push	r14
 1aa:	1f 92       	push	r1
 1ac:	9f 92       	push	r9
 1ae:	ee d0       	rcall	.+476    	; 0x38c <lcdWriteText>
    }
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	f8 94       	cli
 1b4:	de bf       	out	0x3e, r29	; 62
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	cd bf       	out	0x3d, r28	; 61
 1ba:	dd cf       	rjmp	.-70     	; 0x176 <main+0x52>

000001bc <ledWriteAll>:
            }
        }
        matrix_buffer_pos += breite + Zeichenabstand;           // Position f√ºr das n√§chste Zeichen berechnen
        str_p++;                                                // Zeichen-Zeiger auf das n√§chste Zeichen richten
    }
}
 1bc:	82 b9       	out	0x02, r24	; 2
 1be:	95 b9       	out	0x05, r25	; 5
 1c0:	08 95       	ret

000001c2 <startSystemTimeMs>:
 1c2:	83 e0       	ldi	r24, 0x03	; 3
 1c4:	84 bd       	out	0x24, r24	; 36
 1c6:	8b e0       	ldi	r24, 0x0B	; 11
 1c8:	85 bd       	out	0x25, r24	; 37
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
 1d0:	89 ef       	ldi	r24, 0xF9	; 249
 1d2:	87 bd       	out	0x27, r24	; 39
 1d4:	08 95       	ret

000001d6 <initAdc>:
 1d6:	11 ba       	out	0x11, r1	; 17
 1d8:	10 ba       	out	0x10, r1	; 16
 1da:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 1de:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 1e2:	80 e4       	ldi	r24, 0x40	; 64
 1e4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
 1e8:	8f e0       	ldi	r24, 0x0F	; 15
 1ea:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
 1ee:	8f ef       	ldi	r24, 0xFF	; 255
 1f0:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
 1f4:	ea e7       	ldi	r30, 0x7A	; 122
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	87 ea       	ldi	r24, 0xA7	; 167
 1fa:	80 83       	st	Z, r24
 1fc:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
 200:	80 81       	ld	r24, Z
 202:	80 64       	ori	r24, 0x40	; 64
 204:	80 83       	st	Z, r24
 206:	80 81       	ld	r24, Z
 208:	84 ff       	sbrs	r24, 4
 20a:	fd cf       	rjmp	.-6      	; 0x206 <initAdc+0x30>
 20c:	ea e7       	ldi	r30, 0x7A	; 122
 20e:	f0 e0       	ldi	r31, 0x00	; 0
 210:	80 81       	ld	r24, Z
 212:	8f 7e       	andi	r24, 0xEF	; 239
 214:	80 83       	st	Z, r24
 216:	08 95       	ret

00000218 <rgbWrite>:
 218:	2f ef       	ldi	r18, 0xFF	; 255
 21a:	33 e0       	ldi	r19, 0x03	; 3
 21c:	f9 01       	movw	r30, r18
 21e:	e8 1b       	sub	r30, r24
 220:	f9 0b       	sbc	r31, r25
 222:	c9 01       	movw	r24, r18
 224:	86 1b       	sub	r24, r22
 226:	97 0b       	sbc	r25, r23
 228:	24 1b       	sub	r18, r20
 22a:	35 0b       	sbc	r19, r21
 22c:	f0 93 a9 00 	sts	0x00A9, r31	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 230:	e0 93 a8 00 	sts	0x00A8, r30	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 234:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 238:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 23c:	30 93 ad 00 	sts	0x00AD, r19	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 240:	20 93 ac 00 	sts	0x00AC, r18	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 244:	08 95       	ret

00000246 <initRgb>:
 246:	8e ef       	ldi	r24, 0xFE	; 254
 248:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
 24c:	8b e1       	ldi	r24, 0x1B	; 27
 24e:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>
 252:	83 e0       	ldi	r24, 0x03	; 3
 254:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
 258:	8f ef       	ldi	r24, 0xFF	; 255
 25a:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	50 e0       	ldi	r21, 0x00	; 0
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	70 e0       	ldi	r23, 0x00	; 0
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	d6 cf       	rjmp	.-84     	; 0x218 <rgbWrite>
 26c:	08 95       	ret

0000026e <lcdSid>:
 26e:	88 23       	and	r24, r24
 270:	11 f0       	breq	.+4      	; 0x276 <lcdSid+0x8>
 272:	a0 9a       	sbi	0x14, 0	; 20
 274:	08 95       	ret
 276:	a0 98       	cbi	0x14, 0	; 20
 278:	08 95       	ret

0000027a <lcdSclk>:
 27a:	88 23       	and	r24, r24
 27c:	11 f0       	breq	.+4      	; 0x282 <lcdSclk+0x8>
 27e:	a1 9a       	sbi	0x14, 1	; 20
 280:	08 95       	ret
 282:	a1 98       	cbi	0x14, 1	; 20
 284:	08 95       	ret

00000286 <lcdLight>:
 286:	81 11       	cpse	r24, r1
 288:	04 c0       	rjmp	.+8      	; 0x292 <lcdLight+0xc>
 28a:	84 b5       	in	r24, 0x24	; 36
 28c:	8f 7d       	andi	r24, 0xDF	; 223
 28e:	84 bd       	out	0x24, r24	; 36
 290:	08 95       	ret
 292:	94 b5       	in	r25, 0x24	; 36
 294:	90 62       	ori	r25, 0x20	; 32
 296:	94 bd       	out	0x24, r25	; 36
 298:	88 bd       	out	0x28, r24	; 40
 29a:	08 95       	ret

0000029c <writeLcdF>:
 29c:	ef 92       	push	r14
 29e:	ff 92       	push	r15
 2a0:	0f 93       	push	r16
 2a2:	1f 93       	push	r17
 2a4:	cf 93       	push	r28
 2a6:	df 93       	push	r29
 2a8:	7c 01       	movw	r14, r24
 2aa:	eb 01       	movw	r28, r22
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	df df       	rcall	.-66     	; 0x26e <lcdSid>
 2b0:	05 e0       	ldi	r16, 0x05	; 5
 2b2:	10 e0       	ldi	r17, 0x00	; 0
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	e1 df       	rcall	.-62     	; 0x27a <lcdSclk>
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	df df       	rcall	.-66     	; 0x27a <lcdSclk>
 2bc:	01 50       	subi	r16, 0x01	; 1
 2be:	11 09       	sbc	r17, r1
 2c0:	c9 f7       	brne	.-14     	; 0x2b4 <writeLcdF+0x18>
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	d4 df       	rcall	.-88     	; 0x26e <lcdSid>
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	d8 df       	rcall	.-80     	; 0x27a <lcdSclk>
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	d6 df       	rcall	.-84     	; 0x27a <lcdSclk>
 2ce:	83 e4       	ldi	r24, 0x43	; 67
 2d0:	e8 16       	cp	r14, r24
 2d2:	f1 04       	cpc	r15, r1
 2d4:	19 f4       	brne	.+6      	; 0x2dc <writeLcdF+0x40>
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	ca df       	rcall	.-108    	; 0x26e <lcdSid>
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <writeLcdF+0x44>
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	c7 df       	rcall	.-114    	; 0x26e <lcdSid>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	cb df       	rcall	.-106    	; 0x27a <lcdSclk>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	c9 df       	rcall	.-110    	; 0x27a <lcdSclk>
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	c1 df       	rcall	.-126    	; 0x26e <lcdSid>
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	c5 df       	rcall	.-118    	; 0x27a <lcdSclk>
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	c3 df       	rcall	.-122    	; 0x27a <lcdSclk>
 2f4:	04 e0       	ldi	r16, 0x04	; 4
 2f6:	10 e0       	ldi	r17, 0x00	; 0
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	bf df       	rcall	.-130    	; 0x27a <lcdSclk>
 2fc:	c0 ff       	sbrs	r28, 0
 2fe:	03 c0       	rjmp	.+6      	; 0x306 <writeLcdF+0x6a>
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	b5 df       	rcall	.-150    	; 0x26e <lcdSid>
 304:	02 c0       	rjmp	.+4      	; 0x30a <writeLcdF+0x6e>
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	b2 df       	rcall	.-156    	; 0x26e <lcdSid>
 30a:	d6 95       	lsr	r29
 30c:	c7 95       	ror	r28
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	b4 df       	rcall	.-152    	; 0x27a <lcdSclk>
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	b2 df       	rcall	.-156    	; 0x27a <lcdSclk>
 316:	01 50       	subi	r16, 0x01	; 1
 318:	11 09       	sbc	r17, r1
 31a:	71 f7       	brne	.-36     	; 0x2f8 <writeLcdF+0x5c>
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	a7 df       	rcall	.-178    	; 0x26e <lcdSid>
 320:	04 e0       	ldi	r16, 0x04	; 4
 322:	10 e0       	ldi	r17, 0x00	; 0
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	a9 df       	rcall	.-174    	; 0x27a <lcdSclk>
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	a7 df       	rcall	.-178    	; 0x27a <lcdSclk>
 32c:	01 50       	subi	r16, 0x01	; 1
 32e:	11 09       	sbc	r17, r1
 330:	c9 f7       	brne	.-14     	; 0x324 <writeLcdF+0x88>
 332:	04 e0       	ldi	r16, 0x04	; 4
 334:	10 e0       	ldi	r17, 0x00	; 0
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	a0 df       	rcall	.-192    	; 0x27a <lcdSclk>
 33a:	c0 ff       	sbrs	r28, 0
 33c:	03 c0       	rjmp	.+6      	; 0x344 <writeLcdF+0xa8>
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	96 df       	rcall	.-212    	; 0x26e <lcdSid>
 342:	02 c0       	rjmp	.+4      	; 0x348 <writeLcdF+0xac>
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	93 df       	rcall	.-218    	; 0x26e <lcdSid>
 348:	d6 95       	lsr	r29
 34a:	c7 95       	ror	r28
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	95 df       	rcall	.-214    	; 0x27a <lcdSclk>
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	93 df       	rcall	.-218    	; 0x27a <lcdSclk>
 354:	01 50       	subi	r16, 0x01	; 1
 356:	11 09       	sbc	r17, r1
 358:	71 f7       	brne	.-36     	; 0x336 <writeLcdF+0x9a>
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	88 df       	rcall	.-240    	; 0x26e <lcdSid>
 35e:	c4 e0       	ldi	r28, 0x04	; 4
 360:	d0 e0       	ldi	r29, 0x00	; 0
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	8a df       	rcall	.-236    	; 0x27a <lcdSclk>
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	88 df       	rcall	.-240    	; 0x27a <lcdSclk>
 36a:	21 97       	sbiw	r28, 0x01	; 1
 36c:	d1 f7       	brne	.-12     	; 0x362 <writeLcdF+0xc6>
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	7e df       	rcall	.-260    	; 0x26e <lcdSid>
 372:	87 ec       	ldi	r24, 0xC7	; 199
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	01 97       	sbiw	r24, 0x01	; 1
 378:	f1 f7       	brne	.-4      	; 0x376 <writeLcdF+0xda>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <writeLcdF+0xe0>
 37c:	00 00       	nop
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	1f 91       	pop	r17
 384:	0f 91       	pop	r16
 386:	ff 90       	pop	r15
 388:	ef 90       	pop	r14
 38a:	08 95       	ret

0000038c <lcdWriteText>:
 38c:	1f 93       	push	r17
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	cd b7       	in	r28, 0x3d	; 61
 394:	de b7       	in	r29, 0x3e	; 62
 396:	65 97       	sbiw	r28, 0x15	; 21
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	f8 94       	cli
 39c:	de bf       	out	0x3e, r29	; 62
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	cd bf       	out	0x3d, r28	; 61
 3a2:	9e 01       	movw	r18, r28
 3a4:	20 5e       	subi	r18, 0xE0	; 224
 3a6:	3f 4f       	sbci	r19, 0xFF	; 255
 3a8:	4e 8d       	ldd	r20, Y+30	; 0x1e
 3aa:	5f 8d       	ldd	r21, Y+31	; 0x1f
 3ac:	65 e1       	ldi	r22, 0x15	; 21
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	ce 01       	movw	r24, r28
 3b2:	01 96       	adiw	r24, 0x01	; 1
 3b4:	3a d2       	rcall	.+1140   	; 0x82a <vsnprintf>
 3b6:	6d 8d       	ldd	r22, Y+29	; 0x1d
 3b8:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3ba:	90 e2       	ldi	r25, 0x20	; 32
 3bc:	89 9f       	mul	r24, r25
 3be:	60 0d       	add	r22, r0
 3c0:	11 24       	eor	r1, r1
 3c2:	60 68       	ori	r22, 0x80	; 128
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	83 e4       	ldi	r24, 0x43	; 67
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	68 df       	rcall	.-304    	; 0x29c <writeLcdF>
 3cc:	69 81       	ldd	r22, Y+1	; 0x01
 3ce:	66 23       	and	r22, r22
 3d0:	79 f0       	breq	.+30     	; 0x3f0 <lcdWriteText+0x64>
 3d2:	10 e0       	ldi	r17, 0x00	; 0
 3d4:	1f 5f       	subi	r17, 0xFF	; 255
 3d6:	70 e0       	ldi	r23, 0x00	; 0
 3d8:	84 e4       	ldi	r24, 0x44	; 68
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	5f df       	rcall	.-322    	; 0x29c <writeLcdF>
 3de:	e1 e0       	ldi	r30, 0x01	; 1
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	ec 0f       	add	r30, r28
 3e4:	fd 1f       	adc	r31, r29
 3e6:	e1 0f       	add	r30, r17
 3e8:	f1 1d       	adc	r31, r1
 3ea:	60 81       	ld	r22, Z
 3ec:	61 11       	cpse	r22, r1
 3ee:	f2 cf       	rjmp	.-28     	; 0x3d4 <lcdWriteText+0x48>
 3f0:	65 96       	adiw	r28, 0x15	; 21
 3f2:	0f b6       	in	r0, 0x3f	; 63
 3f4:	f8 94       	cli
 3f6:	de bf       	out	0x3e, r29	; 62
 3f8:	0f be       	out	0x3f, r0	; 63
 3fa:	cd bf       	out	0x3d, r28	; 61
 3fc:	df 91       	pop	r29
 3fe:	cf 91       	pop	r28
 400:	1f 91       	pop	r17
 402:	08 95       	ret

00000404 <lcdClear>:
 404:	61 e0       	ldi	r22, 0x01	; 1
 406:	70 e0       	ldi	r23, 0x00	; 0
 408:	83 e4       	ldi	r24, 0x43	; 67
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	47 df       	rcall	.-370    	; 0x29c <writeLcdF>
 40e:	8f e3       	ldi	r24, 0x3F	; 63
 410:	9f e1       	ldi	r25, 0x1F	; 31
 412:	01 97       	sbiw	r24, 0x01	; 1
 414:	f1 f7       	brne	.-4      	; 0x412 <lcdClear+0xe>
 416:	00 c0       	rjmp	.+0      	; 0x418 <lcdClear+0x14>
 418:	00 00       	nop
 41a:	8b e4       	ldi	r24, 0x4B	; 75
 41c:	92 e0       	ldi	r25, 0x02	; 2
 41e:	9f 93       	push	r25
 420:	8f 93       	push	r24
 422:	1f 92       	push	r1
 424:	1f 92       	push	r1
 426:	b2 df       	rcall	.-156    	; 0x38c <lcdWriteText>
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	0f 90       	pop	r0
 430:	08 95       	ret

00000432 <initLcd>:
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	22 df       	rcall	.-444    	; 0x27a <lcdSclk>
 436:	80 e0       	ldi	r24, 0x00	; 0
 438:	1a df       	rcall	.-460    	; 0x26e <lcdSid>
 43a:	64 e3       	ldi	r22, 0x34	; 52
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	83 e4       	ldi	r24, 0x43	; 67
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	2c df       	rcall	.-424    	; 0x29c <writeLcdF>
 444:	69 e0       	ldi	r22, 0x09	; 9
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	83 e4       	ldi	r24, 0x43	; 67
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	27 df       	rcall	.-434    	; 0x29c <writeLcdF>
 44e:	60 e3       	ldi	r22, 0x30	; 48
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	83 e4       	ldi	r24, 0x43	; 67
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	22 df       	rcall	.-444    	; 0x29c <writeLcdF>
 458:	6c e0       	ldi	r22, 0x0C	; 12
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	83 e4       	ldi	r24, 0x43	; 67
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	1d df       	rcall	.-454    	; 0x29c <writeLcdF>
 462:	d0 df       	rcall	.-96     	; 0x404 <lcdClear>
 464:	67 e0       	ldi	r22, 0x07	; 7
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	83 e4       	ldi	r24, 0x43	; 67
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	17 df       	rcall	.-466    	; 0x29c <writeLcdF>
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	0a cf       	rjmp	.-492    	; 0x286 <lcdLight>
 472:	08 95       	ret

00000474 <initBoard>:
 474:	4f 92       	push	r4
 476:	5f 92       	push	r5
 478:	6f 92       	push	r6
 47a:	7f 92       	push	r7
 47c:	8f 92       	push	r8
 47e:	9f 92       	push	r9
 480:	af 92       	push	r10
 482:	bf 92       	push	r11
 484:	cf 92       	push	r12
 486:	df 92       	push	r13
 488:	ef 92       	push	r14
 48a:	ff 92       	push	r15
 48c:	0f 93       	push	r16
 48e:	1f 93       	push	r17
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	c8 2f       	mov	r28, r24
 496:	85 b7       	in	r24, 0x35	; 53
 498:	85 bf       	out	0x35, r24	; 53
 49a:	12 b8       	out	0x02, r1	; 2
 49c:	8f ef       	ldi	r24, 0xFF	; 255
 49e:	81 b9       	out	0x01, r24	; 1
 4a0:	15 b8       	out	0x05, r1	; 5
 4a2:	84 b9       	out	0x04, r24	; 4
 4a4:	88 b9       	out	0x08, r24	; 8
 4a6:	17 b8       	out	0x07, r1	; 7
 4a8:	8b b9       	out	0x0b, r24	; 11
 4aa:	1a b8       	out	0x0a, r1	; 10
 4ac:	8e b9       	out	0x0e, r24	; 14
 4ae:	1d b8       	out	0x0d, r1	; 13
 4b0:	72 98       	cbi	0x0e, 2	; 14
 4b2:	11 ba       	out	0x11, r1	; 17
 4b4:	10 ba       	out	0x10, r1	; 16
 4b6:	94 e0       	ldi	r25, 0x04	; 4
 4b8:	94 bb       	out	0x14, r25	; 20
 4ba:	93 b3       	in	r25, 0x13	; 19
 4bc:	93 60       	ori	r25, 0x03	; 3
 4be:	93 bb       	out	0x13, r25	; 19
 4c0:	9d 9a       	sbi	0x13, 5	; 19
 4c2:	97 ec       	ldi	r25, 0xC7	; 199
 4c4:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 4c8:	98 e3       	ldi	r25, 0x38	; 56
 4ca:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 4ce:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
 4d2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
 4d6:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
 4da:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
 4de:	8c e3       	ldi	r24, 0x3C	; 60
 4e0:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 4e4:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 4e8:	78 94       	sei
 4ea:	6b de       	rcall	.-810    	; 0x1c2 <startSystemTimeMs>
 4ec:	a2 df       	rcall	.-188    	; 0x432 <initLcd>
 4ee:	73 de       	rcall	.-794    	; 0x1d6 <initAdc>
 4f0:	aa de       	rcall	.-684    	; 0x246 <initRgb>
 4f2:	cc 23       	and	r28, r28
 4f4:	09 f4       	brne	.+2      	; 0x4f8 <initBoard+0x84>
 4f6:	b8 c0       	rjmp	.+368    	; 0x668 <initBoard+0x1f4>
 4f8:	8f ef       	ldi	r24, 0xFF	; 255
 4fa:	c5 de       	rcall	.-630    	; 0x286 <lcdLight>
 4fc:	40 e0       	ldi	r20, 0x00	; 0
 4fe:	50 e0       	ldi	r21, 0x00	; 0
 500:	6f ef       	ldi	r22, 0xFF	; 255
 502:	73 e0       	ldi	r23, 0x03	; 3
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	87 de       	rcall	.-754    	; 0x218 <rgbWrite>
 50a:	88 e3       	ldi	r24, 0x38	; 56
 50c:	92 e0       	ldi	r25, 0x02	; 2
 50e:	9f 93       	push	r25
 510:	8f 93       	push	r24
 512:	1f 92       	push	r1
 514:	1f 92       	push	r1
 516:	3a df       	rcall	.-396    	; 0x38c <lcdWriteText>
 518:	8d e4       	ldi	r24, 0x4D	; 77
 51a:	92 e0       	ldi	r25, 0x02	; 2
 51c:	9f 93       	push	r25
 51e:	8f 93       	push	r24
 520:	1f 92       	push	r1
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	8f 93       	push	r24
 526:	32 df       	rcall	.-412    	; 0x38c <lcdWriteText>
 528:	83 e2       	ldi	r24, 0x23	; 35
 52a:	92 e0       	ldi	r25, 0x02	; 2
 52c:	9f 93       	push	r25
 52e:	8f 93       	push	r24
 530:	1f 92       	push	r1
 532:	82 e0       	ldi	r24, 0x02	; 2
 534:	8f 93       	push	r24
 536:	2a df       	rcall	.-428    	; 0x38c <lcdWriteText>
 538:	82 e6       	ldi	r24, 0x62	; 98
 53a:	92 e0       	ldi	r25, 0x02	; 2
 53c:	9f 93       	push	r25
 53e:	8f 93       	push	r24
 540:	1f 92       	push	r1
 542:	83 e0       	ldi	r24, 0x03	; 3
 544:	8f 93       	push	r24
 546:	22 df       	rcall	.-444    	; 0x38c <lcdWriteText>
 548:	8d b7       	in	r24, 0x3d	; 61
 54a:	9e b7       	in	r25, 0x3e	; 62
 54c:	40 96       	adiw	r24, 0x10	; 16
 54e:	0f b6       	in	r0, 0x3f	; 63
 550:	f8 94       	cli
 552:	9e bf       	out	0x3e, r25	; 62
 554:	0f be       	out	0x3f, r0	; 63
 556:	8d bf       	out	0x3d, r24	; 61
 558:	88 24       	eor	r8, r8
 55a:	83 94       	inc	r8
 55c:	c0 e0       	ldi	r28, 0x00	; 0
 55e:	71 2c       	mov	r7, r1
 560:	99 24       	eor	r9, r9
 562:	93 94       	inc	r9
 564:	d0 e0       	ldi	r29, 0x00	; 0
 566:	cc 24       	eor	r12, r12
 568:	c3 94       	inc	r12
 56a:	d1 2c       	mov	r13, r1
 56c:	e1 2c       	mov	r14, r1
 56e:	68 94       	set
 570:	ff 24       	eor	r15, r15
 572:	f7 f8       	bld	r15, 7
 574:	66 24       	eor	r6, r6
 576:	63 94       	inc	r6
 578:	51 2c       	mov	r5, r1
 57a:	09 e0       	ldi	r16, 0x09	; 9
 57c:	11 e0       	ldi	r17, 0x01	; 1
 57e:	0f 2e       	mov	r0, r31
 580:	f7 e7       	ldi	r31, 0x77	; 119
 582:	af 2e       	mov	r10, r31
 584:	f2 e0       	ldi	r31, 0x02	; 2
 586:	bf 2e       	mov	r11, r31
 588:	f0 2d       	mov	r31, r0
 58a:	0f 2e       	mov	r0, r31
 58c:	f3 e0       	ldi	r31, 0x03	; 3
 58e:	4f 2e       	mov	r4, r31
 590:	f0 2d       	mov	r31, r0
 592:	99 20       	and	r9, r9
 594:	49 f0       	breq	.+18     	; 0x5a8 <initBoard+0x134>
 596:	c7 01       	movw	r24, r14
 598:	0d 2e       	mov	r0, r29
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <initBoard+0x12c>
 59c:	96 95       	lsr	r25
 59e:	87 95       	ror	r24
 5a0:	0a 94       	dec	r0
 5a2:	e2 f7       	brpl	.-8      	; 0x59c <initBoard+0x128>
 5a4:	0b de       	rcall	.-1002   	; 0x1bc <ledWriteAll>
 5a6:	08 c0       	rjmp	.+16     	; 0x5b8 <initBoard+0x144>
 5a8:	c6 01       	movw	r24, r12
 5aa:	0d 2e       	mov	r0, r29
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <initBoard+0x13e>
 5ae:	88 0f       	add	r24, r24
 5b0:	99 1f       	adc	r25, r25
 5b2:	0a 94       	dec	r0
 5b4:	e2 f7       	brpl	.-8      	; 0x5ae <initBoard+0x13a>
 5b6:	02 de       	rcall	.-1020   	; 0x1bc <ledWriteAll>
 5b8:	df 5f       	subi	r29, 0xFF	; 255
 5ba:	d1 31       	cpi	r29, 0x11	; 17
 5bc:	28 f0       	brcs	.+10     	; 0x5c8 <initBoard+0x154>
 5be:	86 2d       	mov	r24, r6
 5c0:	91 10       	cpse	r9, r1
 5c2:	85 2d       	mov	r24, r5
 5c4:	98 2e       	mov	r9, r24
 5c6:	d0 e0       	ldi	r29, 0x00	; 0
 5c8:	88 20       	and	r8, r8
 5ca:	11 f0       	breq	.+4      	; 0x5d0 <initBoard+0x15c>
 5cc:	ce 5f       	subi	r28, 0xFE	; 254
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <initBoard+0x15e>
 5d0:	c2 50       	subi	r28, 0x02	; 2
 5d2:	8c 2f       	mov	r24, r28
 5d4:	58 de       	rcall	.-848    	; 0x286 <lcdLight>
 5d6:	ce 3f       	cpi	r28, 0xFE	; 254
 5d8:	21 f0       	breq	.+8      	; 0x5e2 <initBoard+0x16e>
 5da:	c8 37       	cpi	r28, 0x78	; 120
 5dc:	19 f4       	brne	.+6      	; 0x5e4 <initBoard+0x170>
 5de:	86 2c       	mov	r8, r6
 5e0:	01 c0       	rjmp	.+2      	; 0x5e4 <initBoard+0x170>
 5e2:	85 2c       	mov	r8, r5
 5e4:	71 10       	cpse	r7, r1
 5e6:	3b c0       	rjmp	.+118    	; 0x65e <initBoard+0x1ea>
 5e8:	f8 01       	movw	r30, r16
 5ea:	80 81       	ld	r24, Z
 5ec:	83 7c       	andi	r24, 0xC3	; 195
 5ee:	91 f0       	breq	.+36     	; 0x614 <initBoard+0x1a0>
 5f0:	40 e0       	ldi	r20, 0x00	; 0
 5f2:	50 e0       	ldi	r21, 0x00	; 0
 5f4:	66 e2       	ldi	r22, 0x26	; 38
 5f6:	72 e0       	ldi	r23, 0x02	; 2
 5f8:	8f ef       	ldi	r24, 0xFF	; 255
 5fa:	93 e0       	ldi	r25, 0x03	; 3
 5fc:	0d de       	rcall	.-998    	; 0x218 <rgbWrite>
 5fe:	bf 92       	push	r11
 600:	af 92       	push	r10
 602:	1f 92       	push	r1
 604:	4f 92       	push	r4
 606:	c2 de       	rcall	.-636    	; 0x38c <lcdWriteText>
 608:	0f 90       	pop	r0
 60a:	0f 90       	pop	r0
 60c:	0f 90       	pop	r0
 60e:	0f 90       	pop	r0
 610:	76 2c       	mov	r7, r6
 612:	25 c0       	rjmp	.+74     	; 0x65e <initBoard+0x1ea>
 614:	8f ef       	ldi	r24, 0xFF	; 255
 616:	9c e7       	ldi	r25, 0x7C	; 124
 618:	01 97       	sbiw	r24, 0x01	; 1
 61a:	f1 f7       	brne	.-4      	; 0x618 <initBoard+0x1a4>
 61c:	00 c0       	rjmp	.+0      	; 0x61e <initBoard+0x1aa>
 61e:	00 00       	nop
 620:	b8 cf       	rjmp	.-144    	; 0x592 <initBoard+0x11e>
 622:	f0 de       	rcall	.-544    	; 0x404 <lcdClear>
 624:	80 e0       	ldi	r24, 0x00	; 0
 626:	2f de       	rcall	.-930    	; 0x286 <lcdLight>
 628:	80 e0       	ldi	r24, 0x00	; 0
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	c7 dd       	rcall	.-1138   	; 0x1bc <ledWriteAll>
 62e:	40 e0       	ldi	r20, 0x00	; 0
 630:	50 e0       	ldi	r21, 0x00	; 0
 632:	60 e0       	ldi	r22, 0x00	; 0
 634:	70 e0       	ldi	r23, 0x00	; 0
 636:	80 e0       	ldi	r24, 0x00	; 0
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	ee dd       	rcall	.-1060   	; 0x218 <rgbWrite>
 63c:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <systemTimeMs>
 640:	10 92 94 02 	sts	0x0294, r1	; 0x800294 <systemTimeMs+0x1>
 644:	10 92 95 02 	sts	0x0295, r1	; 0x800295 <systemTimeMs+0x2>
 648:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <systemTimeMs+0x3>
 64c:	10 92 97 02 	sts	0x0297, r1	; 0x800297 <systemTimeMs+0x4>
 650:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <systemTimeMs+0x5>
 654:	10 92 99 02 	sts	0x0299, r1	; 0x800299 <systemTimeMs+0x6>
 658:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <systemTimeMs+0x7>
 65c:	05 c0       	rjmp	.+10     	; 0x668 <initBoard+0x1f4>
 65e:	f8 01       	movw	r30, r16
 660:	80 81       	ld	r24, Z
 662:	83 7c       	andi	r24, 0xC3	; 195
 664:	b9 f6       	brne	.-82     	; 0x614 <initBoard+0x1a0>
 666:	dd cf       	rjmp	.-70     	; 0x622 <initBoard+0x1ae>
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	1f 91       	pop	r17
 66e:	0f 91       	pop	r16
 670:	ff 90       	pop	r15
 672:	ef 90       	pop	r14
 674:	df 90       	pop	r13
 676:	cf 90       	pop	r12
 678:	bf 90       	pop	r11
 67a:	af 90       	pop	r10
 67c:	9f 90       	pop	r9
 67e:	8f 90       	pop	r8
 680:	7f 90       	pop	r7
 682:	6f 90       	pop	r6
 684:	5f 90       	pop	r5
 686:	4f 90       	pop	r4
 688:	08 95       	ret

0000068a <matrixWriteNextLine>:




void matrixWriteNextLine(void)
{
 68a:	cf 93       	push	r28
 68c:	df 93       	push	r29
 68e:	cd b7       	in	r28, 0x3d	; 61
 690:	de b7       	in	r29, 0x3e	; 62
 692:	28 97       	sbiw	r28, 0x08	; 8
 694:	0f b6       	in	r0, 0x3f	; 63
 696:	f8 94       	cli
 698:	de bf       	out	0x3e, r29	; 62
 69a:	0f be       	out	0x3f, r0	; 63
 69c:	cd bf       	out	0x3d, r28	; 61
    const  uint8_t Bit_Muster_Tab[8] = {1,2,4,8,16,32,64,128};
 69e:	88 e0       	ldi	r24, 0x08	; 8
 6a0:	e0 e0       	ldi	r30, 0x00	; 0
 6a2:	f2 e0       	ldi	r31, 0x02	; 2
 6a4:	de 01       	movw	r26, r28
 6a6:	11 96       	adiw	r26, 0x01	; 1
 6a8:	01 90       	ld	r0, Z+
 6aa:	0d 92       	st	X+, r0
 6ac:	8a 95       	dec	r24
 6ae:	e1 f7       	brne	.-8      	; 0x6a8 <matrixWriteNextLine+0x1e>
    static uint16_t Zeilen_Nr, Bit_Muster;
    uint8_t i;
    
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben
 6b0:	e5 e0       	ldi	r30, 0x05	; 5
 6b2:	f1 e0       	ldi	r31, 0x01	; 1
 6b4:	80 81       	ld	r24, Z
 6b6:	8f 7b       	andi	r24, 0xBF	; 191
 6b8:	80 83       	st	Z, r24

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
 6ba:	e0 91 90 02 	lds	r30, 0x0290	; 0x800290 <Zeilen_Nr.2731>
 6be:	f0 91 91 02 	lds	r31, 0x0291	; 0x800291 <Zeilen_Nr.2731+0x1>
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	8c 0f       	add	r24, r28
 6c8:	9d 1f       	adc	r25, r29
 6ca:	e8 0f       	add	r30, r24
 6cc:	f9 1f       	adc	r31, r25
 6ce:	80 81       	ld	r24, Z
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <__data_end+0x1>
 6d6:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <__data_end>
 6da:	ac e0       	ldi	r26, 0x0C	; 12
 6dc:	b3 e0       	ldi	r27, 0x03	; 3
 6de:	2c e9       	ldi	r18, 0x9C	; 156
 6e0:	32 e0       	ldi	r19, 0x02	; 2
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 6e2:	e5 e0       	ldi	r30, 0x05	; 5
 6e4:	f1 e0       	ldi	r31, 0x01	; 1
    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und √ºberp√ºfen, ob Bit gesetzt ist
    {                                       // Vergleicht Bit-Muster der aktuellen Zeile mit Daten in matrix[]
        if((matrix[Anzahl_Spalten-1- i] & Bit_Muster) != 0)     // Ist in matrix[] das entsprechende Bit gesetzt?
 6e6:	5e 91       	ld	r21, -X
 6e8:	4e 91       	ld	r20, -X
 6ea:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <__data_end>
 6ee:	90 91 8f 02 	lds	r25, 0x028F	; 0x80028f <__data_end+0x1>
 6f2:	84 23       	and	r24, r20
 6f4:	95 23       	and	r25, r21
 6f6:	89 2b       	or	r24, r25
 6f8:	21 f0       	breq	.+8      	; 0x702 <matrixWriteNextLine+0x78>
        { DATA_Modul_1_ON;                    //   JA:   ==> Datenbit "1" ins Schieberegister schreiben
 6fa:	80 81       	ld	r24, Z
 6fc:	80 62       	ori	r24, 0x20	; 32
 6fe:	80 83       	st	Z, r24
 700:	03 c0       	rjmp	.+6      	; 0x708 <matrixWriteNextLine+0x7e>
        }
        else
        { DATA_Modul_1_OFF;                   //   NEIN: ==> Datenbit "0" ins Schieberegister schreiben
 702:	80 81       	ld	r24, Z
 704:	8f 7d       	andi	r24, 0xDF	; 223
 706:	80 83       	st	Z, r24
        }
        CLOCK_1;
 708:	80 81       	ld	r24, Z
 70a:	80 61       	ori	r24, 0x10	; 16
 70c:	80 83       	st	Z, r24
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals √ºbernommen
 70e:	80 81       	ld	r24, Z
 710:	8f 7e       	andi	r24, 0xEF	; 239
 712:	80 83       	st	Z, r24
    STROBE_0;                             // Daten des Scheiberegisters nicht ins Latch schreiben

    Bit_Muster = Bit_Muster_Tab[Zeilen_Nr]; // Bitmuster aus Tabelle holen, um mit Daten in matrix[] zu vergleichen.
    
    // Alle Bits seriell ins Schieberegister hineinschreiben
    for(i=0; i<Anzahl_Spalten; i++)         // Alle Spalten durchgehen und √ºberp√ºfen, ob Bit gesetzt ist
 714:	a2 17       	cp	r26, r18
 716:	b3 07       	cpc	r27, r19
 718:	31 f7       	brne	.-52     	; 0x6e6 <matrixWriteNextLine+0x5c>
        }
        CLOCK_1;
        CLOCK_0;                            // Datenbit wird bei der negativen Flanke des Clock-Signals √ºbernommen
    }
    
    ENABLE_0;                                // +5V aller Zeilen abschalten
 71a:	e5 e0       	ldi	r30, 0x05	; 5
 71c:	f1 e0       	ldi	r31, 0x01	; 1
 71e:	80 81       	ld	r24, Z
 720:	87 7f       	andi	r24, 0xF7	; 247
 722:	80 83       	st	Z, r24
    PORTJ &= ~0x07;
 724:	80 81       	ld	r24, Z
 726:	88 7f       	andi	r24, 0xF8	; 248
 728:	80 83       	st	Z, r24
    PORTJ |= Zeilen_Nr;                     // gew√ºnschte Zeile einstellen
 72a:	90 81       	ld	r25, Z
 72c:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <Zeilen_Nr.2731>
 730:	89 2b       	or	r24, r25
 732:	80 83       	st	Z, r24
    STROBE_1;                             // Daten ins Latch schreiben
 734:	80 81       	ld	r24, Z
 736:	80 64       	ori	r24, 0x40	; 64
 738:	80 83       	st	Z, r24
    ENABLE_1;                             // +5V Speisung der eingestellten Zeile einschalten
 73a:	80 81       	ld	r24, Z
 73c:	88 60       	ori	r24, 0x08	; 8
 73e:	80 83       	st	Z, r24

    // Die Zeilen werden nacheinander eingeschaltet --> zyklisch 0,1,2,3,4,5,6,7, 0,1,2,3, ...
    if (Zeilen_Nr < 7)
 740:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <Zeilen_Nr.2731>
 744:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <Zeilen_Nr.2731+0x1>
 748:	87 30       	cpi	r24, 0x07	; 7
 74a:	91 05       	cpc	r25, r1
 74c:	30 f4       	brcc	.+12     	; 0x75a <matrixWriteNextLine+0xd0>
    {
        Zeilen_Nr++;
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <Zeilen_Nr.2731+0x1>
 754:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <Zeilen_Nr.2731>
 758:	07 c0       	rjmp	.+14     	; 0x768 <matrixWriteNextLine+0xde>
    }
    else
    {
        Zeilen_Nr = 0;
 75a:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <Zeilen_Nr.2731+0x1>
 75e:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <Zeilen_Nr.2731>
        writeTextFinished = 1;
 762:	81 e0       	ldi	r24, 0x01	; 1
 764:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <writeTextFinished>
    }
    
 768:	28 96       	adiw	r28, 0x08	; 8
 76a:	0f b6       	in	r0, 0x3f	; 63
 76c:	f8 94       	cli
 76e:	de bf       	out	0x3e, r29	; 62
 770:	0f be       	out	0x3f, r0	; 63
 772:	cd bf       	out	0x3d, r28	; 61
 774:	df 91       	pop	r29
 776:	cf 91       	pop	r28
 778:	08 95       	ret

0000077a <__vector_23>:
//--------------------------------------------------------------------------------------------
// Timer 0 Overflow Interrupt ->  Wird alle 1ms aufgerufen
//--------------------------------------------------------------------------------------------

ISR(TIMER0_OVF_vect)
{
 77a:	1f 92       	push	r1
 77c:	0f 92       	push	r0
 77e:	0f b6       	in	r0, 0x3f	; 63
 780:	0f 92       	push	r0
 782:	11 24       	eor	r1, r1
 784:	0b b6       	in	r0, 0x3b	; 59
 786:	0f 92       	push	r0
 788:	2f 93       	push	r18
 78a:	3f 93       	push	r19
 78c:	4f 93       	push	r20
 78e:	5f 93       	push	r21
 790:	6f 93       	push	r22
 792:	7f 93       	push	r23
 794:	8f 93       	push	r24
 796:	9f 93       	push	r25
 798:	af 93       	push	r26
 79a:	bf 93       	push	r27
 79c:	ef 93       	push	r30
 79e:	ff 93       	push	r31
    systemTimeMs += 1;
 7a0:	20 91 93 02 	lds	r18, 0x0293	; 0x800293 <systemTimeMs>
 7a4:	30 91 94 02 	lds	r19, 0x0294	; 0x800294 <systemTimeMs+0x1>
 7a8:	40 91 95 02 	lds	r20, 0x0295	; 0x800295 <systemTimeMs+0x2>
 7ac:	50 91 96 02 	lds	r21, 0x0296	; 0x800296 <systemTimeMs+0x3>
 7b0:	60 91 97 02 	lds	r22, 0x0297	; 0x800297 <systemTimeMs+0x4>
 7b4:	70 91 98 02 	lds	r23, 0x0298	; 0x800298 <systemTimeMs+0x5>
 7b8:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <systemTimeMs+0x6>
 7bc:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <systemTimeMs+0x7>
 7c0:	a1 e0       	ldi	r26, 0x01	; 1
 7c2:	27 d0       	rcall	.+78     	; 0x812 <__adddi3_s8>
 7c4:	20 93 93 02 	sts	0x0293, r18	; 0x800293 <systemTimeMs>
 7c8:	30 93 94 02 	sts	0x0294, r19	; 0x800294 <systemTimeMs+0x1>
 7cc:	40 93 95 02 	sts	0x0295, r20	; 0x800295 <systemTimeMs+0x2>
 7d0:	50 93 96 02 	sts	0x0296, r21	; 0x800296 <systemTimeMs+0x3>
 7d4:	60 93 97 02 	sts	0x0297, r22	; 0x800297 <systemTimeMs+0x4>
 7d8:	70 93 98 02 	sts	0x0298, r23	; 0x800298 <systemTimeMs+0x5>
 7dc:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <systemTimeMs+0x6>
 7e0:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <systemTimeMs+0x7>

    if(matrixRunning)matrixWriteNextLine();
 7e4:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <matrixRunning>
 7e8:	81 11       	cpse	r24, r1
 7ea:	4f df       	rcall	.-354    	; 0x68a <matrixWriteNextLine>
}
 7ec:	ff 91       	pop	r31
 7ee:	ef 91       	pop	r30
 7f0:	bf 91       	pop	r27
 7f2:	af 91       	pop	r26
 7f4:	9f 91       	pop	r25
 7f6:	8f 91       	pop	r24
 7f8:	7f 91       	pop	r23
 7fa:	6f 91       	pop	r22
 7fc:	5f 91       	pop	r21
 7fe:	4f 91       	pop	r20
 800:	3f 91       	pop	r19
 802:	2f 91       	pop	r18
 804:	0f 90       	pop	r0
 806:	0b be       	out	0x3b, r0	; 59
 808:	0f 90       	pop	r0
 80a:	0f be       	out	0x3f, r0	; 63
 80c:	0f 90       	pop	r0
 80e:	1f 90       	pop	r1
 810:	18 95       	reti

00000812 <__adddi3_s8>:
 812:	00 24       	eor	r0, r0
 814:	a7 fd       	sbrc	r26, 7
 816:	00 94       	com	r0
 818:	2a 0f       	add	r18, r26
 81a:	30 1d       	adc	r19, r0
 81c:	40 1d       	adc	r20, r0
 81e:	50 1d       	adc	r21, r0
 820:	60 1d       	adc	r22, r0
 822:	70 1d       	adc	r23, r0
 824:	80 1d       	adc	r24, r0
 826:	90 1d       	adc	r25, r0
 828:	08 95       	ret

0000082a <vsnprintf>:
 82a:	0f 93       	push	r16
 82c:	1f 93       	push	r17
 82e:	cf 93       	push	r28
 830:	df 93       	push	r29
 832:	cd b7       	in	r28, 0x3d	; 61
 834:	de b7       	in	r29, 0x3e	; 62
 836:	2e 97       	sbiw	r28, 0x0e	; 14
 838:	0f b6       	in	r0, 0x3f	; 63
 83a:	f8 94       	cli
 83c:	de bf       	out	0x3e, r29	; 62
 83e:	0f be       	out	0x3f, r0	; 63
 840:	cd bf       	out	0x3d, r28	; 61
 842:	8c 01       	movw	r16, r24
 844:	fa 01       	movw	r30, r20
 846:	86 e0       	ldi	r24, 0x06	; 6
 848:	8c 83       	std	Y+4, r24	; 0x04
 84a:	1a 83       	std	Y+2, r17	; 0x02
 84c:	09 83       	std	Y+1, r16	; 0x01
 84e:	77 ff       	sbrs	r23, 7
 850:	02 c0       	rjmp	.+4      	; 0x856 <vsnprintf+0x2c>
 852:	60 e0       	ldi	r22, 0x00	; 0
 854:	70 e8       	ldi	r23, 0x80	; 128
 856:	cb 01       	movw	r24, r22
 858:	01 97       	sbiw	r24, 0x01	; 1
 85a:	9e 83       	std	Y+6, r25	; 0x06
 85c:	8d 83       	std	Y+5, r24	; 0x05
 85e:	a9 01       	movw	r20, r18
 860:	bf 01       	movw	r22, r30
 862:	ce 01       	movw	r24, r28
 864:	01 96       	adiw	r24, 0x01	; 1
 866:	19 d0       	rcall	.+50     	; 0x89a <vfprintf>
 868:	4d 81       	ldd	r20, Y+5	; 0x05
 86a:	5e 81       	ldd	r21, Y+6	; 0x06
 86c:	57 fd       	sbrc	r21, 7
 86e:	0a c0       	rjmp	.+20     	; 0x884 <vsnprintf+0x5a>
 870:	2f 81       	ldd	r18, Y+7	; 0x07
 872:	38 85       	ldd	r19, Y+8	; 0x08
 874:	42 17       	cp	r20, r18
 876:	53 07       	cpc	r21, r19
 878:	0c f4       	brge	.+2      	; 0x87c <vsnprintf+0x52>
 87a:	9a 01       	movw	r18, r20
 87c:	f8 01       	movw	r30, r16
 87e:	e2 0f       	add	r30, r18
 880:	f3 1f       	adc	r31, r19
 882:	10 82       	st	Z, r1
 884:	2e 96       	adiw	r28, 0x0e	; 14
 886:	0f b6       	in	r0, 0x3f	; 63
 888:	f8 94       	cli
 88a:	de bf       	out	0x3e, r29	; 62
 88c:	0f be       	out	0x3f, r0	; 63
 88e:	cd bf       	out	0x3d, r28	; 61
 890:	df 91       	pop	r29
 892:	cf 91       	pop	r28
 894:	1f 91       	pop	r17
 896:	0f 91       	pop	r16
 898:	08 95       	ret

0000089a <vfprintf>:
 89a:	2f 92       	push	r2
 89c:	3f 92       	push	r3
 89e:	4f 92       	push	r4
 8a0:	5f 92       	push	r5
 8a2:	6f 92       	push	r6
 8a4:	7f 92       	push	r7
 8a6:	8f 92       	push	r8
 8a8:	9f 92       	push	r9
 8aa:	af 92       	push	r10
 8ac:	bf 92       	push	r11
 8ae:	cf 92       	push	r12
 8b0:	df 92       	push	r13
 8b2:	ef 92       	push	r14
 8b4:	ff 92       	push	r15
 8b6:	0f 93       	push	r16
 8b8:	1f 93       	push	r17
 8ba:	cf 93       	push	r28
 8bc:	df 93       	push	r29
 8be:	cd b7       	in	r28, 0x3d	; 61
 8c0:	de b7       	in	r29, 0x3e	; 62
 8c2:	2b 97       	sbiw	r28, 0x0b	; 11
 8c4:	0f b6       	in	r0, 0x3f	; 63
 8c6:	f8 94       	cli
 8c8:	de bf       	out	0x3e, r29	; 62
 8ca:	0f be       	out	0x3f, r0	; 63
 8cc:	cd bf       	out	0x3d, r28	; 61
 8ce:	6c 01       	movw	r12, r24
 8d0:	7b 01       	movw	r14, r22
 8d2:	8a 01       	movw	r16, r20
 8d4:	fc 01       	movw	r30, r24
 8d6:	17 82       	std	Z+7, r1	; 0x07
 8d8:	16 82       	std	Z+6, r1	; 0x06
 8da:	83 81       	ldd	r24, Z+3	; 0x03
 8dc:	81 ff       	sbrs	r24, 1
 8de:	bf c1       	rjmp	.+894    	; 0xc5e <vfprintf+0x3c4>
 8e0:	ce 01       	movw	r24, r28
 8e2:	01 96       	adiw	r24, 0x01	; 1
 8e4:	3c 01       	movw	r6, r24
 8e6:	f6 01       	movw	r30, r12
 8e8:	93 81       	ldd	r25, Z+3	; 0x03
 8ea:	f7 01       	movw	r30, r14
 8ec:	93 fd       	sbrc	r25, 3
 8ee:	85 91       	lpm	r24, Z+
 8f0:	93 ff       	sbrs	r25, 3
 8f2:	81 91       	ld	r24, Z+
 8f4:	7f 01       	movw	r14, r30
 8f6:	88 23       	and	r24, r24
 8f8:	09 f4       	brne	.+2      	; 0x8fc <vfprintf+0x62>
 8fa:	ad c1       	rjmp	.+858    	; 0xc56 <vfprintf+0x3bc>
 8fc:	85 32       	cpi	r24, 0x25	; 37
 8fe:	39 f4       	brne	.+14     	; 0x90e <vfprintf+0x74>
 900:	93 fd       	sbrc	r25, 3
 902:	85 91       	lpm	r24, Z+
 904:	93 ff       	sbrs	r25, 3
 906:	81 91       	ld	r24, Z+
 908:	7f 01       	movw	r14, r30
 90a:	85 32       	cpi	r24, 0x25	; 37
 90c:	21 f4       	brne	.+8      	; 0x916 <vfprintf+0x7c>
 90e:	b6 01       	movw	r22, r12
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	d6 d1       	rcall	.+940    	; 0xcc0 <fputc>
 914:	e8 cf       	rjmp	.-48     	; 0x8e6 <vfprintf+0x4c>
 916:	91 2c       	mov	r9, r1
 918:	21 2c       	mov	r2, r1
 91a:	31 2c       	mov	r3, r1
 91c:	ff e1       	ldi	r31, 0x1F	; 31
 91e:	f3 15       	cp	r31, r3
 920:	d8 f0       	brcs	.+54     	; 0x958 <vfprintf+0xbe>
 922:	8b 32       	cpi	r24, 0x2B	; 43
 924:	79 f0       	breq	.+30     	; 0x944 <vfprintf+0xaa>
 926:	38 f4       	brcc	.+14     	; 0x936 <vfprintf+0x9c>
 928:	80 32       	cpi	r24, 0x20	; 32
 92a:	79 f0       	breq	.+30     	; 0x94a <vfprintf+0xb0>
 92c:	83 32       	cpi	r24, 0x23	; 35
 92e:	a1 f4       	brne	.+40     	; 0x958 <vfprintf+0xbe>
 930:	23 2d       	mov	r18, r3
 932:	20 61       	ori	r18, 0x10	; 16
 934:	1d c0       	rjmp	.+58     	; 0x970 <vfprintf+0xd6>
 936:	8d 32       	cpi	r24, 0x2D	; 45
 938:	61 f0       	breq	.+24     	; 0x952 <vfprintf+0xb8>
 93a:	80 33       	cpi	r24, 0x30	; 48
 93c:	69 f4       	brne	.+26     	; 0x958 <vfprintf+0xbe>
 93e:	23 2d       	mov	r18, r3
 940:	21 60       	ori	r18, 0x01	; 1
 942:	16 c0       	rjmp	.+44     	; 0x970 <vfprintf+0xd6>
 944:	83 2d       	mov	r24, r3
 946:	82 60       	ori	r24, 0x02	; 2
 948:	38 2e       	mov	r3, r24
 94a:	e3 2d       	mov	r30, r3
 94c:	e4 60       	ori	r30, 0x04	; 4
 94e:	3e 2e       	mov	r3, r30
 950:	2a c0       	rjmp	.+84     	; 0x9a6 <vfprintf+0x10c>
 952:	f3 2d       	mov	r31, r3
 954:	f8 60       	ori	r31, 0x08	; 8
 956:	1d c0       	rjmp	.+58     	; 0x992 <vfprintf+0xf8>
 958:	37 fc       	sbrc	r3, 7
 95a:	2d c0       	rjmp	.+90     	; 0x9b6 <vfprintf+0x11c>
 95c:	20 ed       	ldi	r18, 0xD0	; 208
 95e:	28 0f       	add	r18, r24
 960:	2a 30       	cpi	r18, 0x0A	; 10
 962:	40 f0       	brcs	.+16     	; 0x974 <vfprintf+0xda>
 964:	8e 32       	cpi	r24, 0x2E	; 46
 966:	b9 f4       	brne	.+46     	; 0x996 <vfprintf+0xfc>
 968:	36 fc       	sbrc	r3, 6
 96a:	75 c1       	rjmp	.+746    	; 0xc56 <vfprintf+0x3bc>
 96c:	23 2d       	mov	r18, r3
 96e:	20 64       	ori	r18, 0x40	; 64
 970:	32 2e       	mov	r3, r18
 972:	19 c0       	rjmp	.+50     	; 0x9a6 <vfprintf+0x10c>
 974:	36 fe       	sbrs	r3, 6
 976:	06 c0       	rjmp	.+12     	; 0x984 <vfprintf+0xea>
 978:	8a e0       	ldi	r24, 0x0A	; 10
 97a:	98 9e       	mul	r9, r24
 97c:	20 0d       	add	r18, r0
 97e:	11 24       	eor	r1, r1
 980:	92 2e       	mov	r9, r18
 982:	11 c0       	rjmp	.+34     	; 0x9a6 <vfprintf+0x10c>
 984:	ea e0       	ldi	r30, 0x0A	; 10
 986:	2e 9e       	mul	r2, r30
 988:	20 0d       	add	r18, r0
 98a:	11 24       	eor	r1, r1
 98c:	22 2e       	mov	r2, r18
 98e:	f3 2d       	mov	r31, r3
 990:	f0 62       	ori	r31, 0x20	; 32
 992:	3f 2e       	mov	r3, r31
 994:	08 c0       	rjmp	.+16     	; 0x9a6 <vfprintf+0x10c>
 996:	8c 36       	cpi	r24, 0x6C	; 108
 998:	21 f4       	brne	.+8      	; 0x9a2 <vfprintf+0x108>
 99a:	83 2d       	mov	r24, r3
 99c:	80 68       	ori	r24, 0x80	; 128
 99e:	38 2e       	mov	r3, r24
 9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <vfprintf+0x10c>
 9a2:	88 36       	cpi	r24, 0x68	; 104
 9a4:	41 f4       	brne	.+16     	; 0x9b6 <vfprintf+0x11c>
 9a6:	f7 01       	movw	r30, r14
 9a8:	93 fd       	sbrc	r25, 3
 9aa:	85 91       	lpm	r24, Z+
 9ac:	93 ff       	sbrs	r25, 3
 9ae:	81 91       	ld	r24, Z+
 9b0:	7f 01       	movw	r14, r30
 9b2:	81 11       	cpse	r24, r1
 9b4:	b3 cf       	rjmp	.-154    	; 0x91c <vfprintf+0x82>
 9b6:	98 2f       	mov	r25, r24
 9b8:	9f 7d       	andi	r25, 0xDF	; 223
 9ba:	95 54       	subi	r25, 0x45	; 69
 9bc:	93 30       	cpi	r25, 0x03	; 3
 9be:	28 f4       	brcc	.+10     	; 0x9ca <vfprintf+0x130>
 9c0:	0c 5f       	subi	r16, 0xFC	; 252
 9c2:	1f 4f       	sbci	r17, 0xFF	; 255
 9c4:	9f e3       	ldi	r25, 0x3F	; 63
 9c6:	99 83       	std	Y+1, r25	; 0x01
 9c8:	0d c0       	rjmp	.+26     	; 0x9e4 <vfprintf+0x14a>
 9ca:	83 36       	cpi	r24, 0x63	; 99
 9cc:	31 f0       	breq	.+12     	; 0x9da <vfprintf+0x140>
 9ce:	83 37       	cpi	r24, 0x73	; 115
 9d0:	71 f0       	breq	.+28     	; 0x9ee <vfprintf+0x154>
 9d2:	83 35       	cpi	r24, 0x53	; 83
 9d4:	09 f0       	breq	.+2      	; 0x9d8 <vfprintf+0x13e>
 9d6:	55 c0       	rjmp	.+170    	; 0xa82 <vfprintf+0x1e8>
 9d8:	20 c0       	rjmp	.+64     	; 0xa1a <vfprintf+0x180>
 9da:	f8 01       	movw	r30, r16
 9dc:	80 81       	ld	r24, Z
 9de:	89 83       	std	Y+1, r24	; 0x01
 9e0:	0e 5f       	subi	r16, 0xFE	; 254
 9e2:	1f 4f       	sbci	r17, 0xFF	; 255
 9e4:	88 24       	eor	r8, r8
 9e6:	83 94       	inc	r8
 9e8:	91 2c       	mov	r9, r1
 9ea:	53 01       	movw	r10, r6
 9ec:	12 c0       	rjmp	.+36     	; 0xa12 <vfprintf+0x178>
 9ee:	28 01       	movw	r4, r16
 9f0:	f2 e0       	ldi	r31, 0x02	; 2
 9f2:	4f 0e       	add	r4, r31
 9f4:	51 1c       	adc	r5, r1
 9f6:	f8 01       	movw	r30, r16
 9f8:	a0 80       	ld	r10, Z
 9fa:	b1 80       	ldd	r11, Z+1	; 0x01
 9fc:	36 fe       	sbrs	r3, 6
 9fe:	03 c0       	rjmp	.+6      	; 0xa06 <vfprintf+0x16c>
 a00:	69 2d       	mov	r22, r9
 a02:	70 e0       	ldi	r23, 0x00	; 0
 a04:	02 c0       	rjmp	.+4      	; 0xa0a <vfprintf+0x170>
 a06:	6f ef       	ldi	r22, 0xFF	; 255
 a08:	7f ef       	ldi	r23, 0xFF	; 255
 a0a:	c5 01       	movw	r24, r10
 a0c:	4e d1       	rcall	.+668    	; 0xcaa <strnlen>
 a0e:	4c 01       	movw	r8, r24
 a10:	82 01       	movw	r16, r4
 a12:	f3 2d       	mov	r31, r3
 a14:	ff 77       	andi	r31, 0x7F	; 127
 a16:	3f 2e       	mov	r3, r31
 a18:	15 c0       	rjmp	.+42     	; 0xa44 <vfprintf+0x1aa>
 a1a:	28 01       	movw	r4, r16
 a1c:	22 e0       	ldi	r18, 0x02	; 2
 a1e:	42 0e       	add	r4, r18
 a20:	51 1c       	adc	r5, r1
 a22:	f8 01       	movw	r30, r16
 a24:	a0 80       	ld	r10, Z
 a26:	b1 80       	ldd	r11, Z+1	; 0x01
 a28:	36 fe       	sbrs	r3, 6
 a2a:	03 c0       	rjmp	.+6      	; 0xa32 <vfprintf+0x198>
 a2c:	69 2d       	mov	r22, r9
 a2e:	70 e0       	ldi	r23, 0x00	; 0
 a30:	02 c0       	rjmp	.+4      	; 0xa36 <vfprintf+0x19c>
 a32:	6f ef       	ldi	r22, 0xFF	; 255
 a34:	7f ef       	ldi	r23, 0xFF	; 255
 a36:	c5 01       	movw	r24, r10
 a38:	2d d1       	rcall	.+602    	; 0xc94 <strnlen_P>
 a3a:	4c 01       	movw	r8, r24
 a3c:	f3 2d       	mov	r31, r3
 a3e:	f0 68       	ori	r31, 0x80	; 128
 a40:	3f 2e       	mov	r3, r31
 a42:	82 01       	movw	r16, r4
 a44:	33 fc       	sbrc	r3, 3
 a46:	19 c0       	rjmp	.+50     	; 0xa7a <vfprintf+0x1e0>
 a48:	82 2d       	mov	r24, r2
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	88 16       	cp	r8, r24
 a4e:	99 06       	cpc	r9, r25
 a50:	a0 f4       	brcc	.+40     	; 0xa7a <vfprintf+0x1e0>
 a52:	b6 01       	movw	r22, r12
 a54:	80 e2       	ldi	r24, 0x20	; 32
 a56:	90 e0       	ldi	r25, 0x00	; 0
 a58:	33 d1       	rcall	.+614    	; 0xcc0 <fputc>
 a5a:	2a 94       	dec	r2
 a5c:	f5 cf       	rjmp	.-22     	; 0xa48 <vfprintf+0x1ae>
 a5e:	f5 01       	movw	r30, r10
 a60:	37 fc       	sbrc	r3, 7
 a62:	85 91       	lpm	r24, Z+
 a64:	37 fe       	sbrs	r3, 7
 a66:	81 91       	ld	r24, Z+
 a68:	5f 01       	movw	r10, r30
 a6a:	b6 01       	movw	r22, r12
 a6c:	90 e0       	ldi	r25, 0x00	; 0
 a6e:	28 d1       	rcall	.+592    	; 0xcc0 <fputc>
 a70:	21 10       	cpse	r2, r1
 a72:	2a 94       	dec	r2
 a74:	21 e0       	ldi	r18, 0x01	; 1
 a76:	82 1a       	sub	r8, r18
 a78:	91 08       	sbc	r9, r1
 a7a:	81 14       	cp	r8, r1
 a7c:	91 04       	cpc	r9, r1
 a7e:	79 f7       	brne	.-34     	; 0xa5e <vfprintf+0x1c4>
 a80:	e1 c0       	rjmp	.+450    	; 0xc44 <vfprintf+0x3aa>
 a82:	84 36       	cpi	r24, 0x64	; 100
 a84:	11 f0       	breq	.+4      	; 0xa8a <vfprintf+0x1f0>
 a86:	89 36       	cpi	r24, 0x69	; 105
 a88:	39 f5       	brne	.+78     	; 0xad8 <vfprintf+0x23e>
 a8a:	f8 01       	movw	r30, r16
 a8c:	37 fe       	sbrs	r3, 7
 a8e:	07 c0       	rjmp	.+14     	; 0xa9e <vfprintf+0x204>
 a90:	60 81       	ld	r22, Z
 a92:	71 81       	ldd	r23, Z+1	; 0x01
 a94:	82 81       	ldd	r24, Z+2	; 0x02
 a96:	93 81       	ldd	r25, Z+3	; 0x03
 a98:	0c 5f       	subi	r16, 0xFC	; 252
 a9a:	1f 4f       	sbci	r17, 0xFF	; 255
 a9c:	08 c0       	rjmp	.+16     	; 0xaae <vfprintf+0x214>
 a9e:	60 81       	ld	r22, Z
 aa0:	71 81       	ldd	r23, Z+1	; 0x01
 aa2:	07 2e       	mov	r0, r23
 aa4:	00 0c       	add	r0, r0
 aa6:	88 0b       	sbc	r24, r24
 aa8:	99 0b       	sbc	r25, r25
 aaa:	0e 5f       	subi	r16, 0xFE	; 254
 aac:	1f 4f       	sbci	r17, 0xFF	; 255
 aae:	f3 2d       	mov	r31, r3
 ab0:	ff 76       	andi	r31, 0x6F	; 111
 ab2:	3f 2e       	mov	r3, r31
 ab4:	97 ff       	sbrs	r25, 7
 ab6:	09 c0       	rjmp	.+18     	; 0xaca <vfprintf+0x230>
 ab8:	90 95       	com	r25
 aba:	80 95       	com	r24
 abc:	70 95       	com	r23
 abe:	61 95       	neg	r22
 ac0:	7f 4f       	sbci	r23, 0xFF	; 255
 ac2:	8f 4f       	sbci	r24, 0xFF	; 255
 ac4:	9f 4f       	sbci	r25, 0xFF	; 255
 ac6:	f0 68       	ori	r31, 0x80	; 128
 ac8:	3f 2e       	mov	r3, r31
 aca:	2a e0       	ldi	r18, 0x0A	; 10
 acc:	30 e0       	ldi	r19, 0x00	; 0
 ace:	a3 01       	movw	r20, r6
 ad0:	33 d1       	rcall	.+614    	; 0xd38 <__ultoa_invert>
 ad2:	88 2e       	mov	r8, r24
 ad4:	86 18       	sub	r8, r6
 ad6:	44 c0       	rjmp	.+136    	; 0xb60 <vfprintf+0x2c6>
 ad8:	85 37       	cpi	r24, 0x75	; 117
 ada:	31 f4       	brne	.+12     	; 0xae8 <vfprintf+0x24e>
 adc:	23 2d       	mov	r18, r3
 ade:	2f 7e       	andi	r18, 0xEF	; 239
 ae0:	b2 2e       	mov	r11, r18
 ae2:	2a e0       	ldi	r18, 0x0A	; 10
 ae4:	30 e0       	ldi	r19, 0x00	; 0
 ae6:	25 c0       	rjmp	.+74     	; 0xb32 <vfprintf+0x298>
 ae8:	93 2d       	mov	r25, r3
 aea:	99 7f       	andi	r25, 0xF9	; 249
 aec:	b9 2e       	mov	r11, r25
 aee:	8f 36       	cpi	r24, 0x6F	; 111
 af0:	c1 f0       	breq	.+48     	; 0xb22 <vfprintf+0x288>
 af2:	18 f4       	brcc	.+6      	; 0xafa <vfprintf+0x260>
 af4:	88 35       	cpi	r24, 0x58	; 88
 af6:	79 f0       	breq	.+30     	; 0xb16 <vfprintf+0x27c>
 af8:	ae c0       	rjmp	.+348    	; 0xc56 <vfprintf+0x3bc>
 afa:	80 37       	cpi	r24, 0x70	; 112
 afc:	19 f0       	breq	.+6      	; 0xb04 <vfprintf+0x26a>
 afe:	88 37       	cpi	r24, 0x78	; 120
 b00:	21 f0       	breq	.+8      	; 0xb0a <vfprintf+0x270>
 b02:	a9 c0       	rjmp	.+338    	; 0xc56 <vfprintf+0x3bc>
 b04:	e9 2f       	mov	r30, r25
 b06:	e0 61       	ori	r30, 0x10	; 16
 b08:	be 2e       	mov	r11, r30
 b0a:	b4 fe       	sbrs	r11, 4
 b0c:	0d c0       	rjmp	.+26     	; 0xb28 <vfprintf+0x28e>
 b0e:	fb 2d       	mov	r31, r11
 b10:	f4 60       	ori	r31, 0x04	; 4
 b12:	bf 2e       	mov	r11, r31
 b14:	09 c0       	rjmp	.+18     	; 0xb28 <vfprintf+0x28e>
 b16:	34 fe       	sbrs	r3, 4
 b18:	0a c0       	rjmp	.+20     	; 0xb2e <vfprintf+0x294>
 b1a:	29 2f       	mov	r18, r25
 b1c:	26 60       	ori	r18, 0x06	; 6
 b1e:	b2 2e       	mov	r11, r18
 b20:	06 c0       	rjmp	.+12     	; 0xb2e <vfprintf+0x294>
 b22:	28 e0       	ldi	r18, 0x08	; 8
 b24:	30 e0       	ldi	r19, 0x00	; 0
 b26:	05 c0       	rjmp	.+10     	; 0xb32 <vfprintf+0x298>
 b28:	20 e1       	ldi	r18, 0x10	; 16
 b2a:	30 e0       	ldi	r19, 0x00	; 0
 b2c:	02 c0       	rjmp	.+4      	; 0xb32 <vfprintf+0x298>
 b2e:	20 e1       	ldi	r18, 0x10	; 16
 b30:	32 e0       	ldi	r19, 0x02	; 2
 b32:	f8 01       	movw	r30, r16
 b34:	b7 fe       	sbrs	r11, 7
 b36:	07 c0       	rjmp	.+14     	; 0xb46 <vfprintf+0x2ac>
 b38:	60 81       	ld	r22, Z
 b3a:	71 81       	ldd	r23, Z+1	; 0x01
 b3c:	82 81       	ldd	r24, Z+2	; 0x02
 b3e:	93 81       	ldd	r25, Z+3	; 0x03
 b40:	0c 5f       	subi	r16, 0xFC	; 252
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	06 c0       	rjmp	.+12     	; 0xb52 <vfprintf+0x2b8>
 b46:	60 81       	ld	r22, Z
 b48:	71 81       	ldd	r23, Z+1	; 0x01
 b4a:	80 e0       	ldi	r24, 0x00	; 0
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	0e 5f       	subi	r16, 0xFE	; 254
 b50:	1f 4f       	sbci	r17, 0xFF	; 255
 b52:	a3 01       	movw	r20, r6
 b54:	f1 d0       	rcall	.+482    	; 0xd38 <__ultoa_invert>
 b56:	88 2e       	mov	r8, r24
 b58:	86 18       	sub	r8, r6
 b5a:	fb 2d       	mov	r31, r11
 b5c:	ff 77       	andi	r31, 0x7F	; 127
 b5e:	3f 2e       	mov	r3, r31
 b60:	36 fe       	sbrs	r3, 6
 b62:	0d c0       	rjmp	.+26     	; 0xb7e <vfprintf+0x2e4>
 b64:	23 2d       	mov	r18, r3
 b66:	2e 7f       	andi	r18, 0xFE	; 254
 b68:	a2 2e       	mov	r10, r18
 b6a:	89 14       	cp	r8, r9
 b6c:	58 f4       	brcc	.+22     	; 0xb84 <vfprintf+0x2ea>
 b6e:	34 fe       	sbrs	r3, 4
 b70:	0b c0       	rjmp	.+22     	; 0xb88 <vfprintf+0x2ee>
 b72:	32 fc       	sbrc	r3, 2
 b74:	09 c0       	rjmp	.+18     	; 0xb88 <vfprintf+0x2ee>
 b76:	83 2d       	mov	r24, r3
 b78:	8e 7e       	andi	r24, 0xEE	; 238
 b7a:	a8 2e       	mov	r10, r24
 b7c:	05 c0       	rjmp	.+10     	; 0xb88 <vfprintf+0x2ee>
 b7e:	b8 2c       	mov	r11, r8
 b80:	a3 2c       	mov	r10, r3
 b82:	03 c0       	rjmp	.+6      	; 0xb8a <vfprintf+0x2f0>
 b84:	b8 2c       	mov	r11, r8
 b86:	01 c0       	rjmp	.+2      	; 0xb8a <vfprintf+0x2f0>
 b88:	b9 2c       	mov	r11, r9
 b8a:	a4 fe       	sbrs	r10, 4
 b8c:	0f c0       	rjmp	.+30     	; 0xbac <vfprintf+0x312>
 b8e:	fe 01       	movw	r30, r28
 b90:	e8 0d       	add	r30, r8
 b92:	f1 1d       	adc	r31, r1
 b94:	80 81       	ld	r24, Z
 b96:	80 33       	cpi	r24, 0x30	; 48
 b98:	21 f4       	brne	.+8      	; 0xba2 <vfprintf+0x308>
 b9a:	9a 2d       	mov	r25, r10
 b9c:	99 7e       	andi	r25, 0xE9	; 233
 b9e:	a9 2e       	mov	r10, r25
 ba0:	09 c0       	rjmp	.+18     	; 0xbb4 <vfprintf+0x31a>
 ba2:	a2 fe       	sbrs	r10, 2
 ba4:	06 c0       	rjmp	.+12     	; 0xbb2 <vfprintf+0x318>
 ba6:	b3 94       	inc	r11
 ba8:	b3 94       	inc	r11
 baa:	04 c0       	rjmp	.+8      	; 0xbb4 <vfprintf+0x31a>
 bac:	8a 2d       	mov	r24, r10
 bae:	86 78       	andi	r24, 0x86	; 134
 bb0:	09 f0       	breq	.+2      	; 0xbb4 <vfprintf+0x31a>
 bb2:	b3 94       	inc	r11
 bb4:	a3 fc       	sbrc	r10, 3
 bb6:	10 c0       	rjmp	.+32     	; 0xbd8 <vfprintf+0x33e>
 bb8:	a0 fe       	sbrs	r10, 0
 bba:	06 c0       	rjmp	.+12     	; 0xbc8 <vfprintf+0x32e>
 bbc:	b2 14       	cp	r11, r2
 bbe:	80 f4       	brcc	.+32     	; 0xbe0 <vfprintf+0x346>
 bc0:	28 0c       	add	r2, r8
 bc2:	92 2c       	mov	r9, r2
 bc4:	9b 18       	sub	r9, r11
 bc6:	0d c0       	rjmp	.+26     	; 0xbe2 <vfprintf+0x348>
 bc8:	b2 14       	cp	r11, r2
 bca:	58 f4       	brcc	.+22     	; 0xbe2 <vfprintf+0x348>
 bcc:	b6 01       	movw	r22, r12
 bce:	80 e2       	ldi	r24, 0x20	; 32
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	76 d0       	rcall	.+236    	; 0xcc0 <fputc>
 bd4:	b3 94       	inc	r11
 bd6:	f8 cf       	rjmp	.-16     	; 0xbc8 <vfprintf+0x32e>
 bd8:	b2 14       	cp	r11, r2
 bda:	18 f4       	brcc	.+6      	; 0xbe2 <vfprintf+0x348>
 bdc:	2b 18       	sub	r2, r11
 bde:	02 c0       	rjmp	.+4      	; 0xbe4 <vfprintf+0x34a>
 be0:	98 2c       	mov	r9, r8
 be2:	21 2c       	mov	r2, r1
 be4:	a4 fe       	sbrs	r10, 4
 be6:	0f c0       	rjmp	.+30     	; 0xc06 <vfprintf+0x36c>
 be8:	b6 01       	movw	r22, r12
 bea:	80 e3       	ldi	r24, 0x30	; 48
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	68 d0       	rcall	.+208    	; 0xcc0 <fputc>
 bf0:	a2 fe       	sbrs	r10, 2
 bf2:	16 c0       	rjmp	.+44     	; 0xc20 <vfprintf+0x386>
 bf4:	a1 fc       	sbrc	r10, 1
 bf6:	03 c0       	rjmp	.+6      	; 0xbfe <vfprintf+0x364>
 bf8:	88 e7       	ldi	r24, 0x78	; 120
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	02 c0       	rjmp	.+4      	; 0xc02 <vfprintf+0x368>
 bfe:	88 e5       	ldi	r24, 0x58	; 88
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	b6 01       	movw	r22, r12
 c04:	0c c0       	rjmp	.+24     	; 0xc1e <vfprintf+0x384>
 c06:	8a 2d       	mov	r24, r10
 c08:	86 78       	andi	r24, 0x86	; 134
 c0a:	51 f0       	breq	.+20     	; 0xc20 <vfprintf+0x386>
 c0c:	a1 fe       	sbrs	r10, 1
 c0e:	02 c0       	rjmp	.+4      	; 0xc14 <vfprintf+0x37a>
 c10:	8b e2       	ldi	r24, 0x2B	; 43
 c12:	01 c0       	rjmp	.+2      	; 0xc16 <vfprintf+0x37c>
 c14:	80 e2       	ldi	r24, 0x20	; 32
 c16:	a7 fc       	sbrc	r10, 7
 c18:	8d e2       	ldi	r24, 0x2D	; 45
 c1a:	b6 01       	movw	r22, r12
 c1c:	90 e0       	ldi	r25, 0x00	; 0
 c1e:	50 d0       	rcall	.+160    	; 0xcc0 <fputc>
 c20:	89 14       	cp	r8, r9
 c22:	30 f4       	brcc	.+12     	; 0xc30 <vfprintf+0x396>
 c24:	b6 01       	movw	r22, r12
 c26:	80 e3       	ldi	r24, 0x30	; 48
 c28:	90 e0       	ldi	r25, 0x00	; 0
 c2a:	4a d0       	rcall	.+148    	; 0xcc0 <fputc>
 c2c:	9a 94       	dec	r9
 c2e:	f8 cf       	rjmp	.-16     	; 0xc20 <vfprintf+0x386>
 c30:	8a 94       	dec	r8
 c32:	f3 01       	movw	r30, r6
 c34:	e8 0d       	add	r30, r8
 c36:	f1 1d       	adc	r31, r1
 c38:	80 81       	ld	r24, Z
 c3a:	b6 01       	movw	r22, r12
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	40 d0       	rcall	.+128    	; 0xcc0 <fputc>
 c40:	81 10       	cpse	r8, r1
 c42:	f6 cf       	rjmp	.-20     	; 0xc30 <vfprintf+0x396>
 c44:	22 20       	and	r2, r2
 c46:	09 f4       	brne	.+2      	; 0xc4a <vfprintf+0x3b0>
 c48:	4e ce       	rjmp	.-868    	; 0x8e6 <vfprintf+0x4c>
 c4a:	b6 01       	movw	r22, r12
 c4c:	80 e2       	ldi	r24, 0x20	; 32
 c4e:	90 e0       	ldi	r25, 0x00	; 0
 c50:	37 d0       	rcall	.+110    	; 0xcc0 <fputc>
 c52:	2a 94       	dec	r2
 c54:	f7 cf       	rjmp	.-18     	; 0xc44 <vfprintf+0x3aa>
 c56:	f6 01       	movw	r30, r12
 c58:	86 81       	ldd	r24, Z+6	; 0x06
 c5a:	97 81       	ldd	r25, Z+7	; 0x07
 c5c:	02 c0       	rjmp	.+4      	; 0xc62 <vfprintf+0x3c8>
 c5e:	8f ef       	ldi	r24, 0xFF	; 255
 c60:	9f ef       	ldi	r25, 0xFF	; 255
 c62:	2b 96       	adiw	r28, 0x0b	; 11
 c64:	0f b6       	in	r0, 0x3f	; 63
 c66:	f8 94       	cli
 c68:	de bf       	out	0x3e, r29	; 62
 c6a:	0f be       	out	0x3f, r0	; 63
 c6c:	cd bf       	out	0x3d, r28	; 61
 c6e:	df 91       	pop	r29
 c70:	cf 91       	pop	r28
 c72:	1f 91       	pop	r17
 c74:	0f 91       	pop	r16
 c76:	ff 90       	pop	r15
 c78:	ef 90       	pop	r14
 c7a:	df 90       	pop	r13
 c7c:	cf 90       	pop	r12
 c7e:	bf 90       	pop	r11
 c80:	af 90       	pop	r10
 c82:	9f 90       	pop	r9
 c84:	8f 90       	pop	r8
 c86:	7f 90       	pop	r7
 c88:	6f 90       	pop	r6
 c8a:	5f 90       	pop	r5
 c8c:	4f 90       	pop	r4
 c8e:	3f 90       	pop	r3
 c90:	2f 90       	pop	r2
 c92:	08 95       	ret

00000c94 <strnlen_P>:
 c94:	fc 01       	movw	r30, r24
 c96:	05 90       	lpm	r0, Z+
 c98:	61 50       	subi	r22, 0x01	; 1
 c9a:	70 40       	sbci	r23, 0x00	; 0
 c9c:	01 10       	cpse	r0, r1
 c9e:	d8 f7       	brcc	.-10     	; 0xc96 <strnlen_P+0x2>
 ca0:	80 95       	com	r24
 ca2:	90 95       	com	r25
 ca4:	8e 0f       	add	r24, r30
 ca6:	9f 1f       	adc	r25, r31
 ca8:	08 95       	ret

00000caa <strnlen>:
 caa:	fc 01       	movw	r30, r24
 cac:	61 50       	subi	r22, 0x01	; 1
 cae:	70 40       	sbci	r23, 0x00	; 0
 cb0:	01 90       	ld	r0, Z+
 cb2:	01 10       	cpse	r0, r1
 cb4:	d8 f7       	brcc	.-10     	; 0xcac <strnlen+0x2>
 cb6:	80 95       	com	r24
 cb8:	90 95       	com	r25
 cba:	8e 0f       	add	r24, r30
 cbc:	9f 1f       	adc	r25, r31
 cbe:	08 95       	ret

00000cc0 <fputc>:
 cc0:	0f 93       	push	r16
 cc2:	1f 93       	push	r17
 cc4:	cf 93       	push	r28
 cc6:	df 93       	push	r29
 cc8:	fb 01       	movw	r30, r22
 cca:	23 81       	ldd	r18, Z+3	; 0x03
 ccc:	21 fd       	sbrc	r18, 1
 cce:	03 c0       	rjmp	.+6      	; 0xcd6 <fputc+0x16>
 cd0:	8f ef       	ldi	r24, 0xFF	; 255
 cd2:	9f ef       	ldi	r25, 0xFF	; 255
 cd4:	2c c0       	rjmp	.+88     	; 0xd2e <fputc+0x6e>
 cd6:	22 ff       	sbrs	r18, 2
 cd8:	16 c0       	rjmp	.+44     	; 0xd06 <fputc+0x46>
 cda:	46 81       	ldd	r20, Z+6	; 0x06
 cdc:	57 81       	ldd	r21, Z+7	; 0x07
 cde:	24 81       	ldd	r18, Z+4	; 0x04
 ce0:	35 81       	ldd	r19, Z+5	; 0x05
 ce2:	42 17       	cp	r20, r18
 ce4:	53 07       	cpc	r21, r19
 ce6:	44 f4       	brge	.+16     	; 0xcf8 <fputc+0x38>
 ce8:	a0 81       	ld	r26, Z
 cea:	b1 81       	ldd	r27, Z+1	; 0x01
 cec:	9d 01       	movw	r18, r26
 cee:	2f 5f       	subi	r18, 0xFF	; 255
 cf0:	3f 4f       	sbci	r19, 0xFF	; 255
 cf2:	31 83       	std	Z+1, r19	; 0x01
 cf4:	20 83       	st	Z, r18
 cf6:	8c 93       	st	X, r24
 cf8:	26 81       	ldd	r18, Z+6	; 0x06
 cfa:	37 81       	ldd	r19, Z+7	; 0x07
 cfc:	2f 5f       	subi	r18, 0xFF	; 255
 cfe:	3f 4f       	sbci	r19, 0xFF	; 255
 d00:	37 83       	std	Z+7, r19	; 0x07
 d02:	26 83       	std	Z+6, r18	; 0x06
 d04:	14 c0       	rjmp	.+40     	; 0xd2e <fputc+0x6e>
 d06:	8b 01       	movw	r16, r22
 d08:	ec 01       	movw	r28, r24
 d0a:	fb 01       	movw	r30, r22
 d0c:	00 84       	ldd	r0, Z+8	; 0x08
 d0e:	f1 85       	ldd	r31, Z+9	; 0x09
 d10:	e0 2d       	mov	r30, r0
 d12:	19 95       	eicall
 d14:	89 2b       	or	r24, r25
 d16:	e1 f6       	brne	.-72     	; 0xcd0 <fputc+0x10>
 d18:	d8 01       	movw	r26, r16
 d1a:	16 96       	adiw	r26, 0x06	; 6
 d1c:	8d 91       	ld	r24, X+
 d1e:	9c 91       	ld	r25, X
 d20:	17 97       	sbiw	r26, 0x07	; 7
 d22:	01 96       	adiw	r24, 0x01	; 1
 d24:	17 96       	adiw	r26, 0x07	; 7
 d26:	9c 93       	st	X, r25
 d28:	8e 93       	st	-X, r24
 d2a:	16 97       	sbiw	r26, 0x06	; 6
 d2c:	ce 01       	movw	r24, r28
 d2e:	df 91       	pop	r29
 d30:	cf 91       	pop	r28
 d32:	1f 91       	pop	r17
 d34:	0f 91       	pop	r16
 d36:	08 95       	ret

00000d38 <__ultoa_invert>:
 d38:	fa 01       	movw	r30, r20
 d3a:	aa 27       	eor	r26, r26
 d3c:	28 30       	cpi	r18, 0x08	; 8
 d3e:	51 f1       	breq	.+84     	; 0xd94 <__ultoa_invert+0x5c>
 d40:	20 31       	cpi	r18, 0x10	; 16
 d42:	81 f1       	breq	.+96     	; 0xda4 <__ultoa_invert+0x6c>
 d44:	e8 94       	clt
 d46:	6f 93       	push	r22
 d48:	6e 7f       	andi	r22, 0xFE	; 254
 d4a:	6e 5f       	subi	r22, 0xFE	; 254
 d4c:	7f 4f       	sbci	r23, 0xFF	; 255
 d4e:	8f 4f       	sbci	r24, 0xFF	; 255
 d50:	9f 4f       	sbci	r25, 0xFF	; 255
 d52:	af 4f       	sbci	r26, 0xFF	; 255
 d54:	b1 e0       	ldi	r27, 0x01	; 1
 d56:	3e d0       	rcall	.+124    	; 0xdd4 <__ultoa_invert+0x9c>
 d58:	b4 e0       	ldi	r27, 0x04	; 4
 d5a:	3c d0       	rcall	.+120    	; 0xdd4 <__ultoa_invert+0x9c>
 d5c:	67 0f       	add	r22, r23
 d5e:	78 1f       	adc	r23, r24
 d60:	89 1f       	adc	r24, r25
 d62:	9a 1f       	adc	r25, r26
 d64:	a1 1d       	adc	r26, r1
 d66:	68 0f       	add	r22, r24
 d68:	79 1f       	adc	r23, r25
 d6a:	8a 1f       	adc	r24, r26
 d6c:	91 1d       	adc	r25, r1
 d6e:	a1 1d       	adc	r26, r1
 d70:	6a 0f       	add	r22, r26
 d72:	71 1d       	adc	r23, r1
 d74:	81 1d       	adc	r24, r1
 d76:	91 1d       	adc	r25, r1
 d78:	a1 1d       	adc	r26, r1
 d7a:	20 d0       	rcall	.+64     	; 0xdbc <__ultoa_invert+0x84>
 d7c:	09 f4       	brne	.+2      	; 0xd80 <__ultoa_invert+0x48>
 d7e:	68 94       	set
 d80:	3f 91       	pop	r19
 d82:	2a e0       	ldi	r18, 0x0A	; 10
 d84:	26 9f       	mul	r18, r22
 d86:	11 24       	eor	r1, r1
 d88:	30 19       	sub	r19, r0
 d8a:	30 5d       	subi	r19, 0xD0	; 208
 d8c:	31 93       	st	Z+, r19
 d8e:	de f6       	brtc	.-74     	; 0xd46 <__ultoa_invert+0xe>
 d90:	cf 01       	movw	r24, r30
 d92:	08 95       	ret
 d94:	46 2f       	mov	r20, r22
 d96:	47 70       	andi	r20, 0x07	; 7
 d98:	40 5d       	subi	r20, 0xD0	; 208
 d9a:	41 93       	st	Z+, r20
 d9c:	b3 e0       	ldi	r27, 0x03	; 3
 d9e:	0f d0       	rcall	.+30     	; 0xdbe <__ultoa_invert+0x86>
 da0:	c9 f7       	brne	.-14     	; 0xd94 <__ultoa_invert+0x5c>
 da2:	f6 cf       	rjmp	.-20     	; 0xd90 <__ultoa_invert+0x58>
 da4:	46 2f       	mov	r20, r22
 da6:	4f 70       	andi	r20, 0x0F	; 15
 da8:	40 5d       	subi	r20, 0xD0	; 208
 daa:	4a 33       	cpi	r20, 0x3A	; 58
 dac:	18 f0       	brcs	.+6      	; 0xdb4 <__ultoa_invert+0x7c>
 dae:	49 5d       	subi	r20, 0xD9	; 217
 db0:	31 fd       	sbrc	r19, 1
 db2:	40 52       	subi	r20, 0x20	; 32
 db4:	41 93       	st	Z+, r20
 db6:	02 d0       	rcall	.+4      	; 0xdbc <__ultoa_invert+0x84>
 db8:	a9 f7       	brne	.-22     	; 0xda4 <__ultoa_invert+0x6c>
 dba:	ea cf       	rjmp	.-44     	; 0xd90 <__ultoa_invert+0x58>
 dbc:	b4 e0       	ldi	r27, 0x04	; 4
 dbe:	a6 95       	lsr	r26
 dc0:	97 95       	ror	r25
 dc2:	87 95       	ror	r24
 dc4:	77 95       	ror	r23
 dc6:	67 95       	ror	r22
 dc8:	ba 95       	dec	r27
 dca:	c9 f7       	brne	.-14     	; 0xdbe <__ultoa_invert+0x86>
 dcc:	00 97       	sbiw	r24, 0x00	; 0
 dce:	61 05       	cpc	r22, r1
 dd0:	71 05       	cpc	r23, r1
 dd2:	08 95       	ret
 dd4:	9b 01       	movw	r18, r22
 dd6:	ac 01       	movw	r20, r24
 dd8:	0a 2e       	mov	r0, r26
 dda:	06 94       	lsr	r0
 ddc:	57 95       	ror	r21
 dde:	47 95       	ror	r20
 de0:	37 95       	ror	r19
 de2:	27 95       	ror	r18
 de4:	ba 95       	dec	r27
 de6:	c9 f7       	brne	.-14     	; 0xdda <__ultoa_invert+0xa2>
 de8:	62 0f       	add	r22, r18
 dea:	73 1f       	adc	r23, r19
 dec:	84 1f       	adc	r24, r20
 dee:	95 1f       	adc	r25, r21
 df0:	a0 1d       	adc	r26, r0
 df2:	08 95       	ret

00000df4 <_exit>:
 df4:	f8 94       	cli

00000df6 <__stop_program>:
 df6:	ff cf       	rjmp	.-2      	; 0xdf6 <__stop_program>
